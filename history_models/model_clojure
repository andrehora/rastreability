SameType;true;org.clojure.runtime.Cons;org.clojure.runtime.Cons;d0aa19b1da4d796b3638c1dc8a43a314b9f62ff0;Sat Mar 25 21:05:04 2006 +0000
SameType;true;org.clojure.runtime.Symbol;org.clojure.runtime.Symbol;d0aa19b1da4d796b3638c1dc8a43a314b9f62ff0;Sat Mar 25 21:05:04 2006 +0000
SameType;true;org.clojure.runtime.AMap;org.clojure.runtime.AMap;428aa9c52d4cd274b0cfa3097e9661d76a7ea884;Mon Mar 27 12:43:50 2006 +0000
SameMethod;true;org.clojure.runtime.AMap#put(Symbol, Object);org.clojure.runtime.AMap#put(Symbol, Object);428aa9c52d4cd274b0cfa3097e9661d76a7ea884;Mon Mar 27 12:43:50 2006 +0000
SameType;true;org.clojure.runtime.Symbol;org.clojure.runtime.Symbol;f4f532eecf07fb55ba43a4fb5258b09a32a6bc3d;Mon Mar 27 12:51:24 2006 +0000
SameType;true;org.clojure.runtime.Symbol;org.clojure.runtime.Symbol;60d5204f86972c94429009b7e97f554ba8c49f36;Mon Mar 27 20:30:27 2006 +0000
SameType;true;org.clojure.runtime.RT;org.clojure.runtime.RT;578fb77842cedd3a294daaa33e411d0bb349b6d7;Tue Mar 28 15:46:32 2006 +0000
SameType;true;org.clojure.runtime.RT;org.clojure.runtime.RT;388d2be66c5726698355c46e92c93aec1e369ee0;Tue Mar 28 16:20:10 2006 +0000
SameType;true;org.clojure.runtime.DoubleNum;org.clojure.runtime.DoubleNum;25b705bd37d8290435b0d2b6ff6690cfa174ccac;Tue Mar 28 17:03:04 2006 +0000
SameType;true;org.clojure.runtime.Num;org.clojure.runtime.Num;25b705bd37d8290435b0d2b6ff6690cfa174ccac;Tue Mar 28 17:03:04 2006 +0000
SameType;true;org.clojure.runtime.RatioNum;org.clojure.runtime.RatioNum;25b705bd37d8290435b0d2b6ff6690cfa174ccac;Tue Mar 28 17:03:04 2006 +0000
SameType;true;org.clojure.runtime.Symbol;org.clojure.runtime.Symbol;47a27d3305ceeebf89ff567c579c50a6327eaa12;Wed Mar 29 15:52:21 2006 +0000
SameMethod;true;org.clojure.runtime.Symbol#getValue(ThreadLocalData);org.clojure.runtime.Symbol#getValue(ThreadLocalData);47a27d3305ceeebf89ff567c579c50a6327eaa12;Wed Mar 29 15:52:21 2006 +0000
SameType;true;org.clojure.runtime.Namespace;org.clojure.runtime.Namespace;933cc55593ea5daee64c35decd39eb2c54ee70db;Wed Mar 29 16:20:54 2006 +0000
SameMethod;true;org.clojure.runtime.Namespace#Namespace(String);org.clojure.runtime.Namespace#Namespace(String);933cc55593ea5daee64c35decd39eb2c54ee70db;Wed Mar 29 16:20:54 2006 +0000
SameMethod;true;org.clojure.runtime.Namespace#findOrCreate(String);org.clojure.runtime.Namespace#findOrCreate(String);933cc55593ea5daee64c35decd39eb2c54ee70db;Wed Mar 29 16:20:54 2006 +0000
SameType;true;org.clojure.runtime.Symbol;org.clojure.runtime.Symbol;a4fa32ace916b3bf55f4a9fbbfabf831d87244e3;Wed Mar 29 16:25:37 2006 +0000
RenameClass;true;org.clojure.runtime.Rational;org.clojure.runtime.RationalNum;ec6f1688589700561599e508f4813ffe11c4f065;Sun Apr 2 16:46:33 2006 +0000
SameType;true;org.clojure.runtime.IntegerNum;org.clojure.runtime.IntegerNum;ec6f1688589700561599e508f4813ffe11c4f065;Sun Apr 2 16:46:33 2006 +0000
SameType;true;org.clojure.runtime.RatioNum;org.clojure.runtime.RatioNum;ec6f1688589700561599e508f4813ffe11c4f065;Sun Apr 2 16:46:33 2006 +0000
SameType;true;org.clojure.runtime.Cons;org.clojure.runtime.Cons;b46c8d81cb7815d654e5cb77fa6f26edbd1d2944;Mon Apr 3 22:39:09 2006 +0000
SameType;true;org.clojure.runtime.RT;org.clojure.runtime.RT;b46c8d81cb7815d654e5cb77fa6f26edbd1d2944;Mon Apr 3 22:39:09 2006 +0000
SameType;true;org.clojure.runtime.AGenerator;org.clojure.runtime.AGenerator;c8c1b1b1a92e943e4527ef0c3a1089922421f2e5;Tue Apr 4 12:06:02 2006 +0000
SameType;true;org.clojure.runtime.Cons;org.clojure.runtime.Cons;c8c1b1b1a92e943e4527ef0c3a1089922421f2e5;Tue Apr 4 12:06:02 2006 +0000
SameType;true;org.clojure.runtime.RT;org.clojure.runtime.RT;c8c1b1b1a92e943e4527ef0c3a1089922421f2e5;Tue Apr 4 12:06:02 2006 +0000
SameMethod;true;org.clojure.runtime.RT#iter(Object);org.clojure.runtime.RT#iter(Object);c8c1b1b1a92e943e4527ef0c3a1089922421f2e5;Tue Apr 4 12:06:02 2006 +0000
SameType;true;org.clojure.tools.TypeDump;org.clojure.tools.TypeDump;167d6f3fb7a3961b1b7662e6343ff081e5a8f21f;Tue Apr 4 16:25:52 2006 +0000
SameMethod;true;org.clojure.tools.TypeDump#main(String[]);org.clojure.tools.TypeDump#main(String[]);167d6f3fb7a3961b1b7662e6343ff081e5a8f21f;Tue Apr 4 16:25:52 2006 +0000
SameMethod;true;org.clojure.tools.TypeDump#visitField(int, String, String, String, Object);org.clojure.tools.TypeDump#visitField(int, String, String, String, Object);167d6f3fb7a3961b1b7662e6343ff081e5a8f21f;Tue Apr 4 16:25:52 2006 +0000
SameMethod;true;org.clojure.tools.TypeDump#visitMethod(int, String, String, String, String[]);org.clojure.tools.TypeDump#visitMethod(int, String, String, String, String[]);167d6f3fb7a3961b1b7662e6343ff081e5a8f21f;Tue Apr 4 16:25:52 2006 +0000
SameType;true;org.clojure.tools.TypeDump;org.clojure.tools.TypeDump;8805afc2434bd40c4b91b00230b030a82197e6ab;Wed Apr 5 22:26:23 2006 +0000
SameMethod;true;org.clojure.tools.TypeDump#main(String[]);org.clojure.tools.TypeDump#main(String[]);8805afc2434bd40c4b91b00230b030a82197e6ab;Wed Apr 5 22:26:23 2006 +0000
SameMethod;true;org.clojure.tools.TypeDump#visit(int, int, String, String, String, String[]);org.clojure.tools.TypeDump#visit(int, int, String, String, String, String[]);8805afc2434bd40c4b91b00230b030a82197e6ab;Wed Apr 5 22:26:23 2006 +0000
SameMethod;true;org.clojure.tools.TypeDump#visitField(int, String, String, String, Object);org.clojure.tools.TypeDump#visitField(int, String, String, String, Object);8805afc2434bd40c4b91b00230b030a82197e6ab;Wed Apr 5 22:26:23 2006 +0000
SameMethod;true;org.clojure.tools.TypeDump#visitMethod(int, String, String, String, String[]);org.clojure.tools.TypeDump#visitMethod(int, String, String, String, String[]);8805afc2434bd40c4b91b00230b030a82197e6ab;Wed Apr 5 22:26:23 2006 +0000
SameMethod;true;org.clojure.tools.TypeDump#visitEnd();org.clojure.tools.TypeDump#visitEnd();8805afc2434bd40c4b91b00230b030a82197e6ab;Wed Apr 5 22:26:23 2006 +0000
MoveMethod;false;org.clojure.runtime.Symbol#invoke(ThreadLocalData, Object);org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object);165da010e2c81bab2128231384128b39b7c9a127;Wed Apr 19 20:06:08 2006 +0000
MoveMethod;false;org.clojure.runtime.Symbol#invoke(ThreadLocalData, Object, Object);org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object, Object);165da010e2c81bab2128231384128b39b7c9a127;Wed Apr 19 20:06:08 2006 +0000
MoveMethod;true;org.clojure.runtime.ThreadLocalData#pushDynamicBinding(Symbol, Object);org.clojure.runtime.Var#pushDynamicBinding(ThreadLocalData, Object);165da010e2c81bab2128231384128b39b7c9a127;Wed Apr 19 20:06:08 2006 +0000
MoveMethod;true;org.clojure.runtime.Namespace#intern(String);org.clojure.runtime.Symbol#intern(String);165da010e2c81bab2128231384128b39b7c9a127;Wed Apr 19 20:06:08 2006 +0000
MoveMethod;true;org.clojure.runtime.Symbol#getValue(ThreadLocalData);org.clojure.runtime.Var#getValue(ThreadLocalData);165da010e2c81bab2128231384128b39b7c9a127;Wed Apr 19 20:06:08 2006 +0000
MoveMethod;true;org.clojure.runtime.Symbol#setValue(ThreadLocalData, Object);org.clojure.runtime.Var#setValue(ThreadLocalData, Object);165da010e2c81bab2128231384128b39b7c9a127;Wed Apr 19 20:06:08 2006 +0000
MoveMethod;true;org.clojure.runtime.ThreadLocalData#popDynamicBinding(Symbol);org.clojure.runtime.Var#popDynamicBinding(ThreadLocalData);165da010e2c81bab2128231384128b39b7c9a127;Wed Apr 19 20:06:08 2006 +0000
MoveMethod;true;org.clojure.runtime.ThreadLocalData#getDynamicBinding(Symbol);org.clojure.runtime.Var#getDynamicBinding(ThreadLocalData);165da010e2c81bab2128231384128b39b7c9a127;Wed Apr 19 20:06:08 2006 +0000
ExtractMethod;true;org.clojure.runtime.Symbol#getValue(ThreadLocalData);org.clojure.runtime.Var#getBinding(ThreadLocalData);165da010e2c81bab2128231384128b39b7c9a127;Wed Apr 19 20:06:08 2006 +0000
ExtractMethod;true;org.clojure.runtime.Symbol#getValue(ThreadLocalData);org.clojure.runtime.Var#toString();165da010e2c81bab2128231384128b39b7c9a127;Wed Apr 19 20:06:08 2006 +0000
SameType;true;org.clojure.runtime.AMap;org.clojure.runtime.AMap;165da010e2c81bab2128231384128b39b7c9a127;Wed Apr 19 20:06:08 2006 +0000
SameType;true;org.clojure.runtime.Keyword;org.clojure.runtime.Keyword;165da010e2c81bab2128231384128b39b7c9a127;Wed Apr 19 20:06:08 2006 +0000
SameType;true;org.clojure.runtime.Namespace;org.clojure.runtime.Namespace;165da010e2c81bab2128231384128b39b7c9a127;Wed Apr 19 20:06:08 2006 +0000
SameType;true;org.clojure.runtime.RT;org.clojure.runtime.RT;165da010e2c81bab2128231384128b39b7c9a127;Wed Apr 19 20:06:08 2006 +0000
SameType;true;org.clojure.runtime.Symbol;org.clojure.runtime.Symbol;165da010e2c81bab2128231384128b39b7c9a127;Wed Apr 19 20:06:08 2006 +0000
SameMethod;true;org.clojure.runtime.Symbol#toString();org.clojure.runtime.Symbol#toString();165da010e2c81bab2128231384128b39b7c9a127;Wed Apr 19 20:06:08 2006 +0000
SameType;true;org.clojure.runtime.ThreadLocalData;org.clojure.runtime.ThreadLocalData;165da010e2c81bab2128231384128b39b7c9a127;Wed Apr 19 20:06:08 2006 +0000
SameType;true;org.clojure.runtime.Namespace;org.clojure.runtime.Namespace;73281d19c92649175644a7731107e80fc67c8318;Mon Apr 24 15:24:50 2006 +0000
SameType;true;org.clojure.runtime.Namespace;org.clojure.runtime.Namespace;cfe3120d4aabf604b6e6c4e51aec89497e9ab0c1;Mon Apr 24 15:28:55 2006 +0000
SameType;true;org.clojure.runtime.RT;org.clojure.runtime.RT;73a4030ef0568f5fc8938c137a71ac4e990a90d7;Mon May 1 19:19:34 2006 +0000
SameType;true;org.clojure.runtime.RT;org.clojure.runtime.RT;6758d50fecc5b042a3d880ca9bf0fe17014aec1a;Thu May 4 12:45:53 2006 +0000
SameType;true;org.clojure.runtime.RT;org.clojure.runtime.RT;b5867713b47e73335a0ced582741e6cae0769c0e;Fri May 5 19:35:42 2006 +0000
RenameMethod;true;org.clojure.runtime.RT#ch(char);org.clojure.runtime.RT#box(char);0df1d23f885720ff40bdccff6c4526f1fcdf2c5f;Sat May 6 15:16:42 2006 +0000
SameType;true;org.clojure.runtime.RT;org.clojure.runtime.RT;0df1d23f885720ff40bdccff6c4526f1fcdf2c5f;Sat May 6 15:16:42 2006 +0000
SameType;true;org.clojure.runtime.RT;org.clojure.runtime.RT;33b4807a6b917791ced34e31ed275997cd7998d2;Sat May 6 17:26:54 2006 +0000
SameType;true;org.clojure.runtime.Reflector;org.clojure.runtime.Reflector;33b4807a6b917791ced34e31ed275997cd7998d2;Sat May 6 17:26:54 2006 +0000
SameMethod;true;org.clojure.runtime.Reflector#invokeInstanceMember(String, Object);org.clojure.runtime.Reflector#invokeInstanceMember(String, Object);33b4807a6b917791ced34e31ed275997cd7998d2;Sat May 6 17:26:54 2006 +0000
SameMethod;true;org.clojure.runtime.Reflector#invokeInstanceMember(String, Object, Object);org.clojure.runtime.Reflector#invokeInstanceMember(String, Object, Object);33b4807a6b917791ced34e31ed275997cd7998d2;Sat May 6 17:26:54 2006 +0000
SameMethod;true;org.clojure.runtime.Reflector#invokeInstanceMember(String, Object, Object, Object);org.clojure.runtime.Reflector#invokeInstanceMember(String, Object, Object, Object);33b4807a6b917791ced34e31ed275997cd7998d2;Sat May 6 17:26:54 2006 +0000
SameMethod;true;org.clojure.runtime.Reflector#invokeInstanceMember(String, Object, Object, Object, Object);org.clojure.runtime.Reflector#invokeInstanceMember(String, Object, Object, Object, Object);33b4807a6b917791ced34e31ed275997cd7998d2;Sat May 6 17:26:54 2006 +0000
SameMethod;true;org.clojure.runtime.Reflector#invokeInstanceMember(String, Object, Object, Object, Object, Object);org.clojure.runtime.Reflector#invokeInstanceMember(String, Object, Object, Object, Object, Object);33b4807a6b917791ced34e31ed275997cd7998d2;Sat May 6 17:26:54 2006 +0000
SameMethod;true;org.clojure.runtime.Reflector#invokeInstanceMember(String, Object, Object, Object, Object, Object, Cons);org.clojure.runtime.Reflector#invokeInstanceMember(String, Object, Object, Object, Object, Object, Cons);33b4807a6b917791ced34e31ed275997cd7998d2;Sat May 6 17:26:54 2006 +0000
SameType;true;org.clojure.runtime.RT;org.clojure.runtime.RT;62a29c3018a808498bd522518703fc646e404a63;Mon May 8 12:58:33 2006 +0000
SameType;true;org.clojure.runtime.RT;org.clojure.runtime.RT;854ba93bc662517ef4a4bfb683b20bdfc35a2c96;Mon May 8 14:02:03 2006 +0000
SameType;true;org.clojure.runtime.Reflector;org.clojure.runtime.Reflector;cf9617cc1babdd110d99098d3c8ea1c7ee7f9e84;Mon May 8 14:45:13 2006 +0000
SameMethod;true;org.clojure.runtime.Reflector#getField(Class, String);org.clojure.runtime.Reflector#getField(Class, String);cf9617cc1babdd110d99098d3c8ea1c7ee7f9e84;Mon May 8 14:45:13 2006 +0000
ExtractMethod;true;org.clojure.runtime.Reflector#invokeInstanceMethod(String, Object, Object[]);org.clojure.runtime.Reflector#invokeMatchingMethod(List, Object, Object[]);dd69b27bae9fec5dadd3b57670d2f0c0a14349f1;Mon May 8 20:55:27 2006 +0000
SameType;true;org.clojure.runtime.Reflector;org.clojure.runtime.Reflector;dd69b27bae9fec5dadd3b57670d2f0c0a14349f1;Mon May 8 20:55:27 2006 +0000
SameMethod;true;org.clojure.runtime.Reflector#invokeInstanceMethod(String, Object, Object[]);org.clojure.runtime.Reflector#invokeInstanceMethod(String, Object, Object[]);dd69b27bae9fec5dadd3b57670d2f0c0a14349f1;Mon May 8 20:55:27 2006 +0000
SameMethod;true;org.clojure.runtime.Reflector#invokeInstanceMember(String, Object);org.clojure.runtime.Reflector#invokeInstanceMember(String, Object);dd69b27bae9fec5dadd3b57670d2f0c0a14349f1;Mon May 8 20:55:27 2006 +0000
SameMethod;true;org.clojure.runtime.Reflector#invokeInstanceMember(String, Object, Object);org.clojure.runtime.Reflector#invokeInstanceMember(String, Object, Object);dd69b27bae9fec5dadd3b57670d2f0c0a14349f1;Mon May 8 20:55:27 2006 +0000
SameType;true;org.clojure.runtime.Var;org.clojure.runtime.Var;da14d89c1936e9de6eacb9c12dd9e6a0d68a0829;Tue May 9 02:03:28 2006 +0000
SameMethod;true;org.clojure.runtime.Var#bind(Object);org.clojure.runtime.Var#bind(Object);da14d89c1936e9de6eacb9c12dd9e6a0d68a0829;Tue May 9 02:03:28 2006 +0000
SameType;true;org.clojure.runtime.Reflector;org.clojure.runtime.Reflector;03ede1f5cd8d7919edd3543385da36f985cd0c17;Tue May 9 12:34:37 2006 +0000
SameMethod;true;org.clojure.runtime.Reflector#invokeStaticMethod(String, String, Object[]);org.clojure.runtime.Reflector#invokeStaticMethod(String, String, Object[]);03ede1f5cd8d7919edd3543385da36f985cd0c17;Tue May 9 12:34:37 2006 +0000
SameType;true;org.clojure.runtime.RestFn1;org.clojure.runtime.RestFn1;68ad66f7b9bc3127ed8d4fee473d5748bfd7cbf5;Thu May 11 18:53:16 2006 +0000
SameMethod;true;org.clojure.runtime.RestFn1#applyTo(ThreadLocalData, Cons);org.clojure.runtime.RestFn1#applyTo(ThreadLocalData, Cons);68ad66f7b9bc3127ed8d4fee473d5748bfd7cbf5;Thu May 11 18:53:16 2006 +0000
SameType;true;org.clojure.runtime.RestFn2;org.clojure.runtime.RestFn2;68ad66f7b9bc3127ed8d4fee473d5748bfd7cbf5;Thu May 11 18:53:16 2006 +0000
SameMethod;true;org.clojure.runtime.RestFn2#applyTo(ThreadLocalData, Cons);org.clojure.runtime.RestFn2#applyTo(ThreadLocalData, Cons);68ad66f7b9bc3127ed8d4fee473d5748bfd7cbf5;Thu May 11 18:53:16 2006 +0000
SameType;true;org.clojure.runtime.RestFn3;org.clojure.runtime.RestFn3;68ad66f7b9bc3127ed8d4fee473d5748bfd7cbf5;Thu May 11 18:53:16 2006 +0000
SameMethod;true;org.clojure.runtime.RestFn3#applyTo(ThreadLocalData, Cons);org.clojure.runtime.RestFn3#applyTo(ThreadLocalData, Cons);68ad66f7b9bc3127ed8d4fee473d5748bfd7cbf5;Thu May 11 18:53:16 2006 +0000
SameType;true;org.clojure.runtime.RestFn4;org.clojure.runtime.RestFn4;68ad66f7b9bc3127ed8d4fee473d5748bfd7cbf5;Thu May 11 18:53:16 2006 +0000
SameMethod;true;org.clojure.runtime.RestFn4#applyTo(ThreadLocalData, Cons);org.clojure.runtime.RestFn4#applyTo(ThreadLocalData, Cons);68ad66f7b9bc3127ed8d4fee473d5748bfd7cbf5;Thu May 11 18:53:16 2006 +0000
SameType;true;org.clojure.runtime.RestFn5;org.clojure.runtime.RestFn5;68ad66f7b9bc3127ed8d4fee473d5748bfd7cbf5;Thu May 11 18:53:16 2006 +0000
SameMethod;true;org.clojure.runtime.RestFn5#applyTo(ThreadLocalData, Cons);org.clojure.runtime.RestFn5#applyTo(ThreadLocalData, Cons);68ad66f7b9bc3127ed8d4fee473d5748bfd7cbf5;Thu May 11 18:53:16 2006 +0000
SameType;true;org.clojure.runtime.Reflector;org.clojure.runtime.Reflector;b921a37aaa103373f4dcc61f7e0c0ea94b01a6d0;Thu May 11 20:11:09 2006 +0000
SameMethod;true;org.clojure.runtime.Reflector#invokeInstanceMethod(String, Object, Object[]);org.clojure.runtime.Reflector#invokeInstanceMethod(String, Object, Object[]);b921a37aaa103373f4dcc61f7e0c0ea94b01a6d0;Thu May 11 20:11:09 2006 +0000
SameMethod;true;org.clojure.runtime.Reflector#invokeMatchingMethod(List, Object, Object[]);org.clojure.runtime.Reflector#invokeMatchingMethod(List, Object, Object[]);b921a37aaa103373f4dcc61f7e0c0ea94b01a6d0;Thu May 11 20:11:09 2006 +0000
SameMethod;true;org.clojure.runtime.Reflector#getStaticField(String, String);org.clojure.runtime.Reflector#getStaticField(String, String);b921a37aaa103373f4dcc61f7e0c0ea94b01a6d0;Thu May 11 20:11:09 2006 +0000
SameMethod;true;org.clojure.runtime.Reflector#invokeInstanceMember(String, Object);org.clojure.runtime.Reflector#invokeInstanceMember(String, Object);b921a37aaa103373f4dcc61f7e0c0ea94b01a6d0;Thu May 11 20:11:09 2006 +0000
SameType;true;org.clojure.runtime.Accessor;org.clojure.runtime.Accessor;e852658ec0afc4b0ec4ba2c711e5174dee7e3024;Thu May 11 20:32:20 2006 +0000
SameMethod;true;org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object);org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object);e852658ec0afc4b0ec4ba2c711e5174dee7e3024;Thu May 11 20:32:20 2006 +0000
SameType;true;org.clojure.runtime.Keyword;org.clojure.runtime.Keyword;e852658ec0afc4b0ec4ba2c711e5174dee7e3024;Thu May 11 20:32:20 2006 +0000
SameMethod;true;org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object);org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object);e852658ec0afc4b0ec4ba2c711e5174dee7e3024;Thu May 11 20:32:20 2006 +0000
RenameMethod;true;org.clojure.runtime.RBSet#treeInsert(Node, Object);org.clojure.runtime.RBSet#add(Node, Object);13c410d343b4898d6cc17cda6b60d6776f50bd36;Mon May 22 00:04:09 2006 +0000
RenameMethod;true;org.clojure.runtime.RBSet#treeContains(Node, Object);org.clojure.runtime.RBSet#find(Object);13c410d343b4898d6cc17cda6b60d6776f50bd36;Mon May 22 00:04:09 2006 +0000
ExtractMethod;true;org.clojure.runtime.RBSet#treeContains(Node, Object);org.clojure.runtime.RBSet#compare(Object, Object);13c410d343b4898d6cc17cda6b60d6776f50bd36;Mon May 22 00:04:09 2006 +0000
SameType;true;org.clojure.runtime.RBSet;org.clojure.runtime.RBSet;13c410d343b4898d6cc17cda6b60d6776f50bd36;Mon May 22 00:04:09 2006 +0000
SameMethod;true;org.clojure.runtime.RBSet#contains(Object);org.clojure.runtime.RBSet#contains(Object);13c410d343b4898d6cc17cda6b60d6776f50bd36;Mon May 22 00:04:09 2006 +0000
SameMethod;true;org.clojure.runtime.RBSet#add(Object);org.clojure.runtime.RBSet#add(Object);13c410d343b4898d6cc17cda6b60d6776f50bd36;Mon May 22 00:04:09 2006 +0000
SameMethod;true;org.clojure.runtime.RBSet#leftBalance(Object, Node, Node);org.clojure.runtime.RBSet#leftBalance(Object, Node, Node);13c410d343b4898d6cc17cda6b60d6776f50bd36;Mon May 22 00:04:09 2006 +0000
SameMethod;true;org.clojure.runtime.RBSet#rightBalance(Object, Node, Node);org.clojure.runtime.RBSet#rightBalance(Object, Node, Node);13c410d343b4898d6cc17cda6b60d6776f50bd36;Mon May 22 00:04:09 2006 +0000
SameType;true;org.clojure.runtime.RBSet.Node;org.clojure.runtime.RBSet.Node;13c410d343b4898d6cc17cda6b60d6776f50bd36;Mon May 22 00:04:09 2006 +0000
SameType;true;org.clojure.runtime.RBSet.Red;org.clojure.runtime.RBSet.Red;13c410d343b4898d6cc17cda6b60d6776f50bd36;Mon May 22 00:04:09 2006 +0000
SameType;true;org.clojure.runtime.RBSet.Black;org.clojure.runtime.RBSet.Black;13c410d343b4898d6cc17cda6b60d6776f50bd36;Mon May 22 00:04:09 2006 +0000
RenameMethod;true;org.clojure.runtime.RBSet.Black#Black(Object, Node, Node);org.clojure.runtime.RBSet.Black#replace(Object, Object, Node, Node);7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
RenameMethod;true;org.clojure.runtime.RBSet.Red#Red(Object, Node, Node);org.clojure.runtime.RBSet.Red#replace(Object, Object, Node, Node);7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
ExtractMethod;true;org.clojure.runtime.RBSet#main(String[]);org.clojure.runtime.RBSet#keys();7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
ExtractMethod;true;org.clojure.runtime.RBSet#add(Object);org.clojure.runtime.RBSet#put(Object, Object);7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
ExtractMethod;true;org.clojure.runtime.RBSet#add(Node, Object);org.clojure.runtime.RBSet.Node#left();7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
ExtractMethod;true;org.clojure.runtime.RBSet#add(Node, Object);org.clojure.runtime.RBSet.Node#right();7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
InlineMethod;true;org.clojure.runtime.RBSet#red(Object, Node, Node);org.clojure.runtime.RBSet#add(Node, Object, Object, Box);7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
SameType;true;org.clojure.runtime.RBSet;org.clojure.runtime.RBSet;7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
SameMethod;true;org.clojure.runtime.RBSet#add(Object);org.clojure.runtime.RBSet#add(Object);7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
SameMethod;true;org.clojure.runtime.RBSet#min();org.clojure.runtime.RBSet#min();7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
SameMethod;true;org.clojure.runtime.RBSet#max();org.clojure.runtime.RBSet#max();7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
SameMethod;true;org.clojure.runtime.RBSet#depth(Node);org.clojure.runtime.RBSet#depth(Node);7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
SameMethod;true;org.clojure.runtime.RBSet#find(Object);org.clojure.runtime.RBSet#find(Object);7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
SameType;true;org.clojure.runtime.RBSet.Node;org.clojure.runtime.RBSet.Node;7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
SameType;true;org.clojure.runtime.RBSet.Black;org.clojure.runtime.RBSet.Black;7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
SameType;true;org.clojure.runtime.RBSet.Red;org.clojure.runtime.RBSet.Red;7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
SameType;true;org.clojure.runtime.RBSet.NodeIterator;org.clojure.runtime.RBSet.NodeIterator;7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
SameMethod;true;org.clojure.runtime.RBSet.NodeIterator#push(Node);org.clojure.runtime.RBSet.NodeIterator#push(Node);7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
SameMethod;true;org.clojure.runtime.RBSet.NodeIterator#next();org.clojure.runtime.RBSet.NodeIterator#next();7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
SameMethod;true;org.clojure.runtime.RBSet#main(String[]);org.clojure.runtime.RBSet#main(String[]);7e7516821258dd51e411b51a8851c54320f64dc3;Mon May 22 16:20:14 2006 +0000
ExtractMethod;true;org.clojure.runtime.RBSet#main(String[]);org.clojure.runtime.RBSet#maxKey();4770e052cc5df518e2d32632398e46abacb93524;Mon May 22 19:42:40 2006 +0000
ExtractMethod;true;org.clojure.runtime.RBSet#main(String[]);org.clojure.runtime.RBSet#minKey();4770e052cc5df518e2d32632398e46abacb93524;Mon May 22 19:42:40 2006 +0000
SameType;true;org.clojure.runtime.RBSet;org.clojure.runtime.RBSet;4770e052cc5df518e2d32632398e46abacb93524;Mon May 22 19:42:40 2006 +0000
SameMethod;true;org.clojure.runtime.RBSet#min();org.clojure.runtime.RBSet#min();4770e052cc5df518e2d32632398e46abacb93524;Mon May 22 19:42:40 2006 +0000
SameMethod;true;org.clojure.runtime.RBSet#max();org.clojure.runtime.RBSet#max();4770e052cc5df518e2d32632398e46abacb93524;Mon May 22 19:42:40 2006 +0000
SameType;true;org.clojure.runtime.RBSet.Node;org.clojure.runtime.RBSet.Node;4770e052cc5df518e2d32632398e46abacb93524;Mon May 22 19:42:40 2006 +0000
SameType;true;org.clojure.runtime.RBSet.Black;org.clojure.runtime.RBSet.Black;4770e052cc5df518e2d32632398e46abacb93524;Mon May 22 19:42:40 2006 +0000
SameType;true;org.clojure.runtime.RBSet.BlackVal;org.clojure.runtime.RBSet.BlackVal;4770e052cc5df518e2d32632398e46abacb93524;Mon May 22 19:42:40 2006 +0000
SameType;true;org.clojure.runtime.RBSet.BlackBranch;org.clojure.runtime.RBSet.BlackBranch;4770e052cc5df518e2d32632398e46abacb93524;Mon May 22 19:42:40 2006 +0000
SameType;true;org.clojure.runtime.RBSet.BlackBranchVal;org.clojure.runtime.RBSet.BlackBranchVal;4770e052cc5df518e2d32632398e46abacb93524;Mon May 22 19:42:40 2006 +0000
SameType;true;org.clojure.runtime.RBSet.Red;org.clojure.runtime.RBSet.Red;4770e052cc5df518e2d32632398e46abacb93524;Mon May 22 19:42:40 2006 +0000
SameMethod;true;org.clojure.runtime.RBSet#main(String[]);org.clojure.runtime.RBSet#main(String[]);4770e052cc5df518e2d32632398e46abacb93524;Mon May 22 19:42:40 2006 +0000
RenameClass;true;org.clojure.runtime.RBSet;org.clojure.runtime.RBTree;7c24c3779c837237925d14a0bf79df2876ae68ef;Mon May 22 21:10:44 2006 +0000
SameMethod;true;org.clojure.runtime.RBSet#put(Object, Object);org.clojure.runtime.RBTree#put(Object, Object);7c24c3779c837237925d14a0bf79df2876ae68ef;Mon May 22 21:10:44 2006 +0000
SameMethod;true;org.clojure.runtime.RBSet#remove(Object);org.clojure.runtime.RBTree#remove(Object);7c24c3779c837237925d14a0bf79df2876ae68ef;Mon May 22 21:10:44 2006 +0000
SameMethod;true;org.clojure.runtime.RBSet#main(String[]);org.clojure.runtime.RBTree#main(String[]);7c24c3779c837237925d14a0bf79df2876ae68ef;Mon May 22 21:10:44 2006 +0000
SameType;true;org.clojure.runtime.Symbol;org.clojure.runtime.Symbol;7b16ded965dfa76689d0235d4f1cf999a3f1c8a5;Tue May 23 17:41:46 2006 +0000
ExtractMethod;true;org.clojure.runtime.AFn#applyTo(ThreadLocalData, Cons);org.clojure.runtime.AFn#applyToHelper(IFn, ThreadLocalData, Cons);8800e169cf12df893fdd89c8e93edb36f8e5388e;Tue May 23 18:12:54 2006 +0000
SameType;true;org.clojure.runtime.AFn;org.clojure.runtime.AFn;8800e169cf12df893fdd89c8e93edb36f8e5388e;Tue May 23 18:12:54 2006 +0000
SameMethod;true;org.clojure.runtime.AFn#applyTo(ThreadLocalData, Cons);org.clojure.runtime.AFn#applyTo(ThreadLocalData, Cons);8800e169cf12df893fdd89c8e93edb36f8e5388e;Tue May 23 18:12:54 2006 +0000
SameType;true;org.clojure.runtime.AMap;org.clojure.runtime.AMap;8800e169cf12df893fdd89c8e93edb36f8e5388e;Tue May 23 18:12:54 2006 +0000
SameType;true;org.clojure.runtime.Accessor;org.clojure.runtime.Accessor;8800e169cf12df893fdd89c8e93edb36f8e5388e;Tue May 23 18:12:54 2006 +0000
SameMethod;true;org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object);org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object);8800e169cf12df893fdd89c8e93edb36f8e5388e;Tue May 23 18:12:54 2006 +0000
SameMethod;true;org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object, Object);org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object, Object);8800e169cf12df893fdd89c8e93edb36f8e5388e;Tue May 23 18:12:54 2006 +0000
SameType;true;org.clojure.runtime.Keyword;org.clojure.runtime.Keyword;8800e169cf12df893fdd89c8e93edb36f8e5388e;Tue May 23 18:12:54 2006 +0000
SameMethod;true;org.clojure.runtime.Keyword#Keyword(String);org.clojure.runtime.Keyword#Keyword(String);8800e169cf12df893fdd89c8e93edb36f8e5388e;Tue May 23 18:12:54 2006 +0000
SameType;true;org.clojure.runtime.Symbol;org.clojure.runtime.Symbol;8800e169cf12df893fdd89c8e93edb36f8e5388e;Tue May 23 18:12:54 2006 +0000
SameMethod;true;org.clojure.runtime.Symbol#intern(String);org.clojure.runtime.Symbol#intern(String);8800e169cf12df893fdd89c8e93edb36f8e5388e;Tue May 23 18:12:54 2006 +0000
SameType;true;org.clojure.runtime.Accessor;org.clojure.runtime.Accessor;494fd9c97ce10cbe481e2b35eafa3c044ea093ac;Tue May 23 21:01:35 2006 +0000
SameType;true;org.clojure.runtime.Namespace;org.clojure.runtime.Namespace;494fd9c97ce10cbe481e2b35eafa3c044ea093ac;Tue May 23 21:01:35 2006 +0000
SameType;true;org.clojure.runtime.Symbol;org.clojure.runtime.Symbol;494fd9c97ce10cbe481e2b35eafa3c044ea093ac;Tue May 23 21:01:35 2006 +0000
SameMethod;true;org.clojure.runtime.Symbol#intern(String);org.clojure.runtime.Symbol#intern(String);494fd9c97ce10cbe481e2b35eafa3c044ea093ac;Tue May 23 21:01:35 2006 +0000
RenameMethod;true;org.clojure.runtime.Namespace#internVar(String);org.clojure.runtime.Namespace#intern(Symbol);d65b16bde7ffb8caa020472cb7a88b03e128ee4f;Tue May 23 21:28:12 2006 +0000
SameType;true;org.clojure.runtime.Namespace;org.clojure.runtime.Namespace;d65b16bde7ffb8caa020472cb7a88b03e128ee4f;Tue May 23 21:28:12 2006 +0000
SameType;true;org.clojure.runtime.Var;org.clojure.runtime.Var;d65b16bde7ffb8caa020472cb7a88b03e128ee4f;Tue May 23 21:28:12 2006 +0000
SameMethod;true;org.clojure.runtime.Var#toString();org.clojure.runtime.Var#toString();d65b16bde7ffb8caa020472cb7a88b03e128ee4f;Tue May 23 21:28:12 2006 +0000
RenameMethod;true;org.clojure.runtime.Var#pushDynamicBinding(ThreadLocalData, Object);org.clojure.runtime.Var#establishDynamicBinding(ThreadLocalData, Object);1cd2547d56cd7f56c1149f27bd77142e3fc40b50;Tue May 23 22:11:23 2006 +0000
RenameMethod;true;org.clojure.runtime.Var#popDynamicBinding(ThreadLocalData);org.clojure.runtime.Var#restoreDynamicBinding(ThreadLocalData, Box);1cd2547d56cd7f56c1149f27bd77142e3fc40b50;Tue May 23 22:11:23 2006 +0000
SameType;true;org.clojure.runtime.Cons;org.clojure.runtime.Cons;1cd2547d56cd7f56c1149f27bd77142e3fc40b50;Tue May 23 22:11:23 2006 +0000
SameType;true;org.clojure.runtime.Var;org.clojure.runtime.Var;1cd2547d56cd7f56c1149f27bd77142e3fc40b50;Tue May 23 22:11:23 2006 +0000
SameMethod;true;org.clojure.runtime.Var#bind(Object);org.clojure.runtime.Var#bind(Object);1cd2547d56cd7f56c1149f27bd77142e3fc40b50;Tue May 23 22:11:23 2006 +0000
SameMethod;true;org.clojure.runtime.Var#getBinding(ThreadLocalData);org.clojure.runtime.Var#getBinding(ThreadLocalData);1cd2547d56cd7f56c1149f27bd77142e3fc40b50;Tue May 23 22:11:23 2006 +0000
SameMethod;true;org.clojure.runtime.Var#getValue(ThreadLocalData);org.clojure.runtime.Var#getValue(ThreadLocalData);1cd2547d56cd7f56c1149f27bd77142e3fc40b50;Tue May 23 22:11:23 2006 +0000
SameMethod;true;org.clojure.runtime.Var#setValue(ThreadLocalData, Object);org.clojure.runtime.Var#setValue(ThreadLocalData, Object);1cd2547d56cd7f56c1149f27bd77142e3fc40b50;Tue May 23 22:11:23 2006 +0000
SameMethod;true;org.clojure.runtime.Var#getDynamicBinding(ThreadLocalData);org.clojure.runtime.Var#getDynamicBinding(ThreadLocalData);1cd2547d56cd7f56c1149f27bd77142e3fc40b50;Tue May 23 22:11:23 2006 +0000
SameType;true;org.clojure.runtime.ThreadLocalData;org.clojure.runtime.ThreadLocalData;8b74fbd52683934c6dde25412c4d3ec86384da87;Wed May 31 11:49:41 2006 +0000
MoveMethod;true;org.clojure.runtime.TRef#commutate(ThreadLocalData, IFn);org.clojure.runtime.Transaction#commutate(ThreadLocalData, TRef, IFn);47bbbed7f23af23aa41e727c0909cdad09dbf4d6;Wed May 31 12:55:52 2006 +0000
MoveMethod;true;org.clojure.runtime.TRef#set(ThreadLocalData, Object);org.clojure.runtime.Transaction#set(ThreadLocalData, TRef, Object);47bbbed7f23af23aa41e727c0909cdad09dbf4d6;Wed May 31 12:55:52 2006 +0000
MoveMethod;true;org.clojure.runtime.TRef#touch(ThreadLocalData);org.clojure.runtime.Transaction#touch(ThreadLocalData, TRef);47bbbed7f23af23aa41e727c0909cdad09dbf4d6;Wed May 31 12:55:52 2006 +0000
MoveMethod;true;org.clojure.runtime.TRef#get(ThreadLocalData);org.clojure.runtime.Transaction#get(ThreadLocalData, TRef);47bbbed7f23af23aa41e727c0909cdad09dbf4d6;Wed May 31 12:55:52 2006 +0000
InlineMethod;true;org.clojure.runtime.Transaction#getLocks();org.clojure.runtime.Transaction#run(ThreadLocalData, IFn);47bbbed7f23af23aa41e727c0909cdad09dbf4d6;Wed May 31 12:55:52 2006 +0000
SameType;true;org.clojure.runtime.TRef;org.clojure.runtime.TRef;47bbbed7f23af23aa41e727c0909cdad09dbf4d6;Wed May 31 12:55:52 2006 +0000
SameType;true;org.clojure.runtime.TVal;org.clojure.runtime.TVal;47bbbed7f23af23aa41e727c0909cdad09dbf4d6;Wed May 31 12:55:52 2006 +0000
SameMethod;true;org.clojure.runtime.TVal#push(Object, Transaction.Info);org.clojure.runtime.TVal#push(Object, Transaction.Info);47bbbed7f23af23aa41e727c0909cdad09dbf4d6;Wed May 31 12:55:52 2006 +0000
SameType;true;org.clojure.runtime.Transaction;org.clojure.runtime.Transaction;47bbbed7f23af23aa41e727c0909cdad09dbf4d6;Wed May 31 12:55:52 2006 +0000
SameMethod;true;org.clojure.runtime.Transaction#runInTransaction(ThreadLocalData, IFn);org.clojure.runtime.Transaction#runInTransaction(ThreadLocalData, IFn);47bbbed7f23af23aa41e727c0909cdad09dbf4d6;Wed May 31 12:55:52 2006 +0000
SameMethod;true;org.clojure.runtime.Transaction#run(ThreadLocalData, IFn);org.clojure.runtime.Transaction#run(ThreadLocalData, IFn);47bbbed7f23af23aa41e727c0909cdad09dbf4d6;Wed May 31 12:55:52 2006 +0000
SameMethod;true;org.clojure.runtime.Transaction#reset();org.clojure.runtime.Transaction#reset();47bbbed7f23af23aa41e727c0909cdad09dbf4d6;Wed May 31 12:55:52 2006 +0000
SameMethod;true;org.clojure.runtime.Transaction#getCurrent(TRef);org.clojure.runtime.Transaction#getCurrent(TRef);47bbbed7f23af23aa41e727c0909cdad09dbf4d6;Wed May 31 12:55:52 2006 +0000
SameMethod;true;org.clojure.runtime.Transaction#set(TRef, Object);org.clojure.runtime.Transaction#set(TRef, Object);47bbbed7f23af23aa41e727c0909cdad09dbf4d6;Wed May 31 12:55:52 2006 +0000
SameMethod;true;org.clojure.runtime.Transaction#commutate(TRef, IFn);org.clojure.runtime.Transaction#commutate(TRef, IFn);47bbbed7f23af23aa41e727c0909cdad09dbf4d6;Wed May 31 12:55:52 2006 +0000
SameType;true;org.clojure.runtime.Symbol;org.clojure.runtime.Symbol;06bfce30df5fb0967138b19b46d9c435ff780a5e;Wed May 31 14:23:01 2006 +0000
SameMethod;true;org.clojure.runtime.Symbol#hashCode();org.clojure.runtime.Symbol#hashCode();06bfce30df5fb0967138b19b46d9c435ff780a5e;Wed May 31 14:23:01 2006 +0000
RenameClass;true;org.clojure.runtime.AMap;org.clojure.runtime.Obj;aaf41d731cc4baa7693cae8d09814a00cd0e6255;Wed May 31 17:08:06 2006 +0000
SameType;true;org.clojure.runtime.AFn;org.clojure.runtime.AFn;aaf41d731cc4baa7693cae8d09814a00cd0e6255;Wed May 31 17:08:06 2006 +0000
SameType;true;org.clojure.runtime.Cons;org.clojure.runtime.Cons;aaf41d731cc4baa7693cae8d09814a00cd0e6255;Wed May 31 17:08:06 2006 +0000
SameType;true;org.clojure.runtime.Keyword;org.clojure.runtime.Keyword;aaf41d731cc4baa7693cae8d09814a00cd0e6255;Wed May 31 17:08:06 2006 +0000
SameMethod;true;org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object);org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object);aaf41d731cc4baa7693cae8d09814a00cd0e6255;Wed May 31 17:08:06 2006 +0000
SameMethod;true;org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object, Object);org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object, Object);aaf41d731cc4baa7693cae8d09814a00cd0e6255;Wed May 31 17:08:06 2006 +0000
SameType;true;org.clojure.runtime.Symbol;org.clojure.runtime.Symbol;aaf41d731cc4baa7693cae8d09814a00cd0e6255;Wed May 31 17:08:06 2006 +0000
SameType;true;org.clojure.runtime.Obj;org.clojure.runtime.Obj;00d88b349cff1b49b8026add38bb62407232ce31;Wed May 31 19:40:11 2006 +0000
ExtractInterface;true;org.clojure.runtime.Obj;org.clojure.runtime.IObj;19d311642fa821d51365a551756146336c24a270;Wed May 31 19:45:49 2006 +0000
SameType;true;org.clojure.runtime.Keyword;org.clojure.runtime.Keyword;19d311642fa821d51365a551756146336c24a270;Wed May 31 19:45:49 2006 +0000
SameMethod;true;org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object);org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object);19d311642fa821d51365a551756146336c24a270;Wed May 31 19:45:49 2006 +0000
SameMethod;true;org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object, Object);org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object, Object);19d311642fa821d51365a551756146336c24a270;Wed May 31 19:45:49 2006 +0000
SameType;true;org.clojure.runtime.Obj;org.clojure.runtime.Obj;19d311642fa821d51365a551756146336c24a270;Wed May 31 19:45:49 2006 +0000
SameType;true;org.clojure.runtime.IObj;org.clojure.runtime.IObj;08e27be5bba0400b651ed7877e72ff48bbdd6ccc;Wed May 31 20:45:32 2006 +0000
SameType;true;org.clojure.runtime.Keyword;org.clojure.runtime.Keyword;08e27be5bba0400b651ed7877e72ff48bbdd6ccc;Wed May 31 20:45:32 2006 +0000
SameMethod;true;org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object);org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object);08e27be5bba0400b651ed7877e72ff48bbdd6ccc;Wed May 31 20:45:32 2006 +0000
SameMethod;true;org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object, Object);org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object, Object);08e27be5bba0400b651ed7877e72ff48bbdd6ccc;Wed May 31 20:45:32 2006 +0000
SameType;true;org.clojure.runtime.Obj;org.clojure.runtime.Obj;08e27be5bba0400b651ed7877e72ff48bbdd6ccc;Wed May 31 20:45:32 2006 +0000
SameType;true;org.clojure.runtime.RT;org.clojure.runtime.RT;11461aa4fd81e05305ec84ed8747666e3d165fb9;Fri Jun 2 02:21:52 2006 +0000
SameMethod;true;org.clojure.runtime.RT#box(char);org.clojure.runtime.RT#box(char);11461aa4fd81e05305ec84ed8747666e3d165fb9;Fri Jun 2 02:21:52 2006 +0000
SameType;true;org.clojure.runtime.PersistentArray;org.clojure.runtime.PersistentArray;f66c7a9b216cc652a88c56e7b0bb449341d04190;Fri Jun 2 19:40:50 2006 +0000
SameType;true;org.clojure.runtime.TVal;org.clojure.runtime.TVal;0f70b780b29908ef7d5088907413f10530e89a2f;Sat Jun 3 14:55:58 2006 +0000
SameMethod;true;org.clojure.runtime.TVal#push(Object, Transaction.Info);org.clojure.runtime.TVal#push(Object, Transaction.Info);0f70b780b29908ef7d5088907413f10530e89a2f;Sat Jun 3 14:55:58 2006 +0000
SameType;true;org.clojure.runtime.Cons;org.clojure.runtime.Cons;be2df160b1e5c916174262bc411dffa081eded99;Sat Jun 3 15:02:15 2006 +0000
SameType;true;org.clojure.runtime.RBTree;org.clojure.runtime.RBTree;be2df160b1e5c916174262bc411dffa081eded99;Sat Jun 3 15:02:15 2006 +0000
SameType;true;org.clojure.runtime.RT;org.clojure.runtime.RT;be2df160b1e5c916174262bc411dffa081eded99;Sat Jun 3 15:02:15 2006 +0000
SameMethod;true;org.clojure.runtime.RT#iter(Object);org.clojure.runtime.RT#iter(Object);be2df160b1e5c916174262bc411dffa081eded99;Sat Jun 3 15:02:15 2006 +0000
ExtractMethod;true;org.clojure.runtime.PersistentArray#get(int);org.clojure.runtime.PersistentArray#getEntry(int);9f0e5fc90b67ac32dd0516065af2ff82f9d9d3bf;Sat Jun 3 16:44:49 2006 +0000
SameType;true;org.clojure.runtime.PersistentArray;org.clojure.runtime.PersistentArray;9f0e5fc90b67ac32dd0516065af2ff82f9d9d3bf;Sat Jun 3 16:44:49 2006 +0000
SameType;true;org.clojure.runtime.PersistentArray.Master;org.clojure.runtime.PersistentArray.Master;9f0e5fc90b67ac32dd0516065af2ff82f9d9d3bf;Sat Jun 3 16:44:49 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray.Master#Master(int, Object);org.clojure.runtime.PersistentArray.Master#Master(int, Object);9f0e5fc90b67ac32dd0516065af2ff82f9d9d3bf;Sat Jun 3 16:44:49 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#get(int);org.clojure.runtime.PersistentArray#get(int);9f0e5fc90b67ac32dd0516065af2ff82f9d9d3bf;Sat Jun 3 16:44:49 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#doSet(int, Object);org.clojure.runtime.PersistentArray#doSet(int, Object);9f0e5fc90b67ac32dd0516065af2ff82f9d9d3bf;Sat Jun 3 16:44:49 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#getSetArray();org.clojure.runtime.PersistentArray#getSetArray();9f0e5fc90b67ac32dd0516065af2ff82f9d9d3bf;Sat Jun 3 16:44:49 2006 +0000
SameType;true;org.clojure.runtime.Accessor;org.clojure.runtime.Accessor;b27a6f72bd8802fa07fb74cdf1252a612f50cb33;Sat Jun 3 19:35:36 2006 +0000
SameMethod;true;org.clojure.runtime.Accessor#Accessor(String);org.clojure.runtime.Accessor#Accessor(String);b27a6f72bd8802fa07fb74cdf1252a612f50cb33;Sat Jun 3 19:35:36 2006 +0000
SameMethod;true;org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object);org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object);b27a6f72bd8802fa07fb74cdf1252a612f50cb33;Sat Jun 3 19:35:36 2006 +0000
SameMethod;true;org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object, Object);org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object, Object);b27a6f72bd8802fa07fb74cdf1252a612f50cb33;Sat Jun 3 19:35:36 2006 +0000
SameMethod;true;org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object, Object, Object);org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object, Object, Object);b27a6f72bd8802fa07fb74cdf1252a612f50cb33;Sat Jun 3 19:35:36 2006 +0000
SameMethod;true;org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object, Object, Object, Object);org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object, Object, Object, Object);b27a6f72bd8802fa07fb74cdf1252a612f50cb33;Sat Jun 3 19:35:36 2006 +0000
SameMethod;true;org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object, Object, Object, Object, Object);org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object, Object, Object, Object, Object);b27a6f72bd8802fa07fb74cdf1252a612f50cb33;Sat Jun 3 19:35:36 2006 +0000
SameMethod;true;org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object, Object, Object, Object, Object, Cons);org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object, Object, Object, Object, Object, Cons);b27a6f72bd8802fa07fb74cdf1252a612f50cb33;Sat Jun 3 19:35:36 2006 +0000
SameType;true;org.clojure.runtime.PersistentArray;org.clojure.runtime.PersistentArray;8e50dd7ed5a321d6fd2a1f8f0c9d0ef19fbed2f1;Mon Jun 5 13:28:15 2006 +0000
SameType;true;org.clojure.runtime.PersistentArray.Master;org.clojure.runtime.PersistentArray.Master;8e50dd7ed5a321d6fd2a1f8f0c9d0ef19fbed2f1;Mon Jun 5 13:28:15 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#PersistentArray(int, Object);org.clojure.runtime.PersistentArray#PersistentArray(int, Object);8e50dd7ed5a321d6fd2a1f8f0c9d0ef19fbed2f1;Mon Jun 5 13:28:15 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#resize(int);org.clojure.runtime.PersistentArray#resize(int);8e50dd7ed5a321d6fd2a1f8f0c9d0ef19fbed2f1;Mon Jun 5 13:28:15 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#set(int, Object);org.clojure.runtime.PersistentArray#set(int, Object);8e50dd7ed5a321d6fd2a1f8f0c9d0ef19fbed2f1;Mon Jun 5 13:28:15 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#main(String[]);org.clojure.runtime.PersistentArray#main(String[]);8e50dd7ed5a321d6fd2a1f8f0c9d0ef19fbed2f1;Mon Jun 5 13:28:15 2006 +0000
SameType;true;org.clojure.runtime.PersistentArray;org.clojure.runtime.PersistentArray;0eb8b48657c82fa2d301fef08180e51cddd3d3ff;Mon Jun 5 15:04:51 2006 +0000
SameType;true;org.clojure.runtime.PersistentArray.Master;org.clojure.runtime.PersistentArray.Master;0eb8b48657c82fa2d301fef08180e51cddd3d3ff;Mon Jun 5 15:04:51 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#PersistentArray(int, Object);org.clojure.runtime.PersistentArray#PersistentArray(int, Object);0eb8b48657c82fa2d301fef08180e51cddd3d3ff;Mon Jun 5 15:04:51 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#resize(int);org.clojure.runtime.PersistentArray#resize(int);0eb8b48657c82fa2d301fef08180e51cddd3d3ff;Mon Jun 5 15:04:51 2006 +0000
SameType;true;org.clojure.runtime.PersistentArray;org.clojure.runtime.PersistentArray;526f5470cfa19f27039e287434eb6d26a7671bdd;Mon Jun 5 17:25:36 2006 +0000
SameType;true;org.clojure.runtime.PersistentArray.Entry;org.clojure.runtime.PersistentArray.Entry;526f5470cfa19f27039e287434eb6d26a7671bdd;Mon Jun 5 17:25:36 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#resize(int);org.clojure.runtime.PersistentArray#resize(int);526f5470cfa19f27039e287434eb6d26a7671bdd;Mon Jun 5 17:25:36 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#getEntry(int);org.clojure.runtime.PersistentArray#getEntry(int);526f5470cfa19f27039e287434eb6d26a7671bdd;Mon Jun 5 17:25:36 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#doSet(int, Object);org.clojure.runtime.PersistentArray#doSet(int, Object);526f5470cfa19f27039e287434eb6d26a7671bdd;Mon Jun 5 17:25:36 2006 +0000
ExtractInterface;true;org.clojure.runtime.RBTree;org.clojure.runtime.IMap;30b28f18a3b17d7edc7cd8a694914f37d871b39c;Mon Jun 5 19:10:52 2006 +0000
ExtractInterface;true;org.clojure.runtime.RBTree.Node;org.clojure.runtime.IMapEntry;30b28f18a3b17d7edc7cd8a694914f37d871b39c;Mon Jun 5 19:10:52 2006 +0000
SameType;true;org.clojure.runtime.RBTree;org.clojure.runtime.RBTree;30b28f18a3b17d7edc7cd8a694914f37d871b39c;Mon Jun 5 19:10:52 2006 +0000
SameMethod;true;org.clojure.runtime.RBTree#RBTree(Comparator);org.clojure.runtime.RBTree#RBTree(Comparator);30b28f18a3b17d7edc7cd8a694914f37d871b39c;Mon Jun 5 19:10:52 2006 +0000
SameMethod;true;org.clojure.runtime.RBTree#put(Object, Object);org.clojure.runtime.RBTree#put(Object, Object);30b28f18a3b17d7edc7cd8a694914f37d871b39c;Mon Jun 5 19:10:52 2006 +0000
SameMethod;true;org.clojure.runtime.RBTree#remove(Object);org.clojure.runtime.RBTree#remove(Object);30b28f18a3b17d7edc7cd8a694914f37d871b39c;Mon Jun 5 19:10:52 2006 +0000
SameMethod;true;org.clojure.runtime.RBTree#RBTree(Comparator, Node, int);org.clojure.runtime.RBTree#RBTree(Comparator, Node, int);30b28f18a3b17d7edc7cd8a694914f37d871b39c;Mon Jun 5 19:10:52 2006 +0000
SameType;true;org.clojure.runtime.RBTree.Node;org.clojure.runtime.RBTree.Node;30b28f18a3b17d7edc7cd8a694914f37d871b39c;Mon Jun 5 19:10:52 2006 +0000
SameMethod;true;org.clojure.runtime.RBTree#main(String[]);org.clojure.runtime.RBTree#main(String[]);30b28f18a3b17d7edc7cd8a694914f37d871b39c;Mon Jun 5 19:10:52 2006 +0000
SameType;true;org.clojure.runtime.ArrayMap;org.clojure.runtime.ArrayMap;b61885dee76bfa7ae6f64c0ef620be5f2fdc8f64;Mon Jun 5 20:08:35 2006 +0000
SameMethod;true;org.clojure.runtime.ArrayMap#put(Object, Object);org.clojure.runtime.ArrayMap#put(Object, Object);b61885dee76bfa7ae6f64c0ef620be5f2fdc8f64;Mon Jun 5 20:08:35 2006 +0000
SameType;true;org.clojure.runtime.ArrayMap;org.clojure.runtime.ArrayMap;2c46259efd90f7c28a51cf7638f3dbbecc5f90a4;Tue Jun 6 01:31:35 2006 +0000
SameType;true;org.clojure.runtime.IMap;org.clojure.runtime.IMap;2c46259efd90f7c28a51cf7638f3dbbecc5f90a4;Tue Jun 6 01:31:35 2006 +0000
SameType;true;org.clojure.runtime.IdentityArrayMap;org.clojure.runtime.IdentityArrayMap;2c46259efd90f7c28a51cf7638f3dbbecc5f90a4;Tue Jun 6 01:31:35 2006 +0000
SameType;true;org.clojure.runtime.RBTree;org.clojure.runtime.RBTree;2c46259efd90f7c28a51cf7638f3dbbecc5f90a4;Tue Jun 6 01:31:35 2006 +0000
SameMethod;true;org.clojure.runtime.RBTree#main(String[]);org.clojure.runtime.RBTree#main(String[]);2c46259efd90f7c28a51cf7638f3dbbecc5f90a4;Tue Jun 6 01:31:35 2006 +0000
ExtractMethod;true;org.clojure.runtime.HashtableMap#doPut(int, Object, Object, PersistentArray);org.clojure.runtime.HashtableMap#createListMap(Object, Object);800a956ffed030dbce4ec2bf394a331ec6dbc83b;Tue Jun 6 15:35:19 2006 +0000
SameType;true;org.clojure.runtime.ArrayMap;org.clojure.runtime.ArrayMap;800a956ffed030dbce4ec2bf394a331ec6dbc83b;Tue Jun 6 15:35:19 2006 +0000
SameType;true;org.clojure.runtime.HashtableMap;org.clojure.runtime.HashtableMap;800a956ffed030dbce4ec2bf394a331ec6dbc83b;Tue Jun 6 15:35:19 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap#put(Object, Object);org.clojure.runtime.HashtableMap#put(Object, Object);800a956ffed030dbce4ec2bf394a331ec6dbc83b;Tue Jun 6 15:35:19 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap#doPut(int, Object, Object, PersistentArray);org.clojure.runtime.HashtableMap#doPut(int, Object, Object, PersistentArray);800a956ffed030dbce4ec2bf394a331ec6dbc83b;Tue Jun 6 15:35:19 2006 +0000
SameType;true;org.clojure.runtime.HashtableMap.Iter;org.clojure.runtime.HashtableMap.Iter;800a956ffed030dbce4ec2bf394a331ec6dbc83b;Tue Jun 6 15:35:19 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap.Iter#nextBucket();org.clojure.runtime.HashtableMap.Iter#nextBucket();800a956ffed030dbce4ec2bf394a331ec6dbc83b;Tue Jun 6 15:35:19 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap.Iter#hasNext();org.clojure.runtime.HashtableMap.Iter#hasNext();800a956ffed030dbce4ec2bf394a331ec6dbc83b;Tue Jun 6 15:35:19 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap.Iter#next();org.clojure.runtime.HashtableMap.Iter#next();800a956ffed030dbce4ec2bf394a331ec6dbc83b;Tue Jun 6 15:35:19 2006 +0000
MoveMethod;false;org.clojure.runtime.ListMap.Entry#key();org.clojure.runtime.ListMap.Link#key();380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
MoveMethod;false;org.clojure.runtime.ListMap.Entry#val();org.clojure.runtime.ListMap.Link#val();380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
MoveMethod;false;org.clojure.runtime.ListMap.EntryLink#rest();org.clojure.runtime.ListMap.Link#rest();380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
ExtractMethod;true;org.clojure.runtime.HashtableMap#createListMap(Object, Object);org.clojure.runtime.ListMap#create(Object, Object);380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameType;true;org.clojure.runtime.HashtableMap;org.clojure.runtime.HashtableMap;380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameType;true;org.clojure.runtime.HashtableMap.Iter;org.clojure.runtime.HashtableMap.Iter;380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap.Iter#nextBucket();org.clojure.runtime.HashtableMap.Iter#nextBucket();380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap.Iter#next();org.clojure.runtime.HashtableMap.Iter#next();380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap#createListMap(Object, Object);org.clojure.runtime.HashtableMap#createListMap(Object, Object);380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameType;true;org.clojure.runtime.ListMap;org.clojure.runtime.ListMap;380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.ListMap#count();org.clojure.runtime.ListMap#count();380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.ListMap#contains(Object);org.clojure.runtime.ListMap#contains(Object);380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.ListMap#find(Object);org.clojure.runtime.ListMap#find(Object);380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.ListMap#put(Object, Object);org.clojure.runtime.ListMap#put(Object, Object);380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.ListMap#remove(Object);org.clojure.runtime.ListMap#remove(Object);380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.ListMap#get(Object);org.clojure.runtime.ListMap#get(Object);380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.ListMap#capacity();org.clojure.runtime.ListMap#capacity();380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameType;true;org.clojure.runtime.ListMap.Iter;org.clojure.runtime.ListMap.Iter;380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.ListMap.Iter#hasNext();org.clojure.runtime.ListMap.Iter#hasNext();380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.ListMap.Iter#next();org.clojure.runtime.ListMap.Iter#next();380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.ListMap#iterator();org.clojure.runtime.ListMap#iterator();380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameType;true;org.clojure.runtime.PersistentArray;org.clojure.runtime.PersistentArray;380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameType;true;org.clojure.runtime.PersistentArray.Master;org.clojure.runtime.PersistentArray.Master;380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray.Master#Master(int, Object, float);org.clojure.runtime.PersistentArray.Master#Master(int, Object, float);380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#length();org.clojure.runtime.PersistentArray#length();380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#resize(int);org.clojure.runtime.PersistentArray#resize(int);380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#load();org.clojure.runtime.PersistentArray#load();380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#getEntry(int);org.clojure.runtime.PersistentArray#getEntry(int);380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#set(int, Object);org.clojure.runtime.PersistentArray#set(int, Object);380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#doSet(int, Object);org.clojure.runtime.PersistentArray#doSet(int, Object);380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#getSetArray();org.clojure.runtime.PersistentArray#getSetArray();380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArray#main(String[]);org.clojure.runtime.PersistentArray#main(String[]);380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameType;true;org.clojure.runtime.RBTree;org.clojure.runtime.RBTree;380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
SameMethod;true;org.clojure.runtime.RBTree#main(String[]);org.clojure.runtime.RBTree#main(String[]);380dab4620630c099e59e364371c8d64b7050916;Wed Jun 7 13:58:13 2006 +0000
ExtractMethod;true;org.clojure.runtime.ListMap.Link#remove(Object);org.clojure.runtime.ListMap.Link#create(Object, Object, ListMap);e26f6aee5713bfef08d8b68959672896b44bbd2d;Wed Jun 7 16:10:47 2006 +0000
ExtractMethod;true;org.clojure.runtime.ListMap.Link#put(Object, Object);org.clojure.runtime.ListMap.Link#create(Object, Object, ListMap);e26f6aee5713bfef08d8b68959672896b44bbd2d;Wed Jun 7 16:10:47 2006 +0000
SameType;true;org.clojure.runtime.ListMap;org.clojure.runtime.ListMap;e26f6aee5713bfef08d8b68959672896b44bbd2d;Wed Jun 7 16:10:47 2006 +0000
SameType;true;org.clojure.runtime.ListMap.Link;org.clojure.runtime.ListMap.Link;e26f6aee5713bfef08d8b68959672896b44bbd2d;Wed Jun 7 16:10:47 2006 +0000
SameMethod;true;org.clojure.runtime.ListMap.Link#put(Object, Object);org.clojure.runtime.ListMap.Link#put(Object, Object);e26f6aee5713bfef08d8b68959672896b44bbd2d;Wed Jun 7 16:10:47 2006 +0000
SameMethod;true;org.clojure.runtime.ListMap.Link#remove(Object);org.clojure.runtime.ListMap.Link#remove(Object);e26f6aee5713bfef08d8b68959672896b44bbd2d;Wed Jun 7 16:10:47 2006 +0000
SameType;true;org.clojure.runtime.PersistentHashMap;org.clojure.runtime.PersistentHashMap;e26f6aee5713bfef08d8b68959672896b44bbd2d;Wed Jun 7 16:10:47 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentHashMap#PersistentHashMap(int);org.clojure.runtime.PersistentHashMap#PersistentHashMap(int);e26f6aee5713bfef08d8b68959672896b44bbd2d;Wed Jun 7 16:10:47 2006 +0000
SameType;true;org.clojure.runtime.RBTree;org.clojure.runtime.RBTree;e26f6aee5713bfef08d8b68959672896b44bbd2d;Wed Jun 7 16:10:47 2006 +0000
SameMethod;true;org.clojure.runtime.RBTree#main(String[]);org.clojure.runtime.RBTree#main(String[]);e26f6aee5713bfef08d8b68959672896b44bbd2d;Wed Jun 7 16:10:47 2006 +0000
RenameClass;true;org.clojure.runtime.RBTree;org.clojure.runtime.PersistentTree;f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
RenameClass;true;org.clojure.runtime.ArrayMap;org.clojure.runtime.PersistentArrayMap;f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
RenameClass;true;org.clojure.runtime.HashtableMap;org.clojure.runtime.PersistentHashtableMap;f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
RenameClass;true;org.clojure.runtime.ListMap;org.clojure.runtime.PersistentListMap;f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
RenameClass;true;org.clojure.runtime.PersistentHashMap;org.clojure.runtime.PersistentHybridMap;f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
RenameClass;true;org.clojure.runtime.IMap;org.clojure.runtime.IPersistentMap;f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
RenameClass;true;org.clojure.runtime.IdentityArrayMap;org.clojure.runtime.PersistentIdentityArrayMap;f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
RenameClass;true;org.clojure.runtime.IdentityHashtableMap;org.clojure.runtime.PersistentIdentityHashtableMap;f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.ArrayMap#put(Object, Object);org.clojure.runtime.PersistentArrayMap#put(Object, Object);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.ArrayMap#remove(Object);org.clojure.runtime.PersistentArrayMap#remove(Object);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap#contains(Object);org.clojure.runtime.PersistentHashtableMap#contains(Object);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap#find(Object);org.clojure.runtime.PersistentHashtableMap#find(Object);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap#put(Object, Object);org.clojure.runtime.PersistentHashtableMap#put(Object, Object);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap#doPut(int, Object, Object, PersistentArray);org.clojure.runtime.PersistentHashtableMap#doPut(int, Object, Object, PersistentArray);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap#remove(Object);org.clojure.runtime.PersistentHashtableMap#remove(Object);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap#get(Object);org.clojure.runtime.PersistentHashtableMap#get(Object);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameType;true;org.clojure.runtime.HashtableMap.Iter;org.clojure.runtime.PersistentHashtableMap.Iter;f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap.Iter#nextBucket();org.clojure.runtime.PersistentHashtableMap.Iter#nextBucket();f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap.Iter#next();org.clojure.runtime.PersistentHashtableMap.Iter#next();f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap#entriesFor(Object);org.clojure.runtime.PersistentHashtableMap#entriesFor(Object);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap#create(int);org.clojure.runtime.PersistentHashtableMap#create(int);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap#create(int, PersistentArray);org.clojure.runtime.PersistentHashtableMap#create(int, PersistentArray);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap#create(int, PersistentArray, int);org.clojure.runtime.PersistentHashtableMap#create(int, PersistentArray, int);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap#createArrayMap(Object[]);org.clojure.runtime.PersistentHashtableMap#createArrayMap(Object[]);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.HashtableMap#createListMap(Object, Object);org.clojure.runtime.PersistentHashtableMap#createListMap(Object, Object);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentHashMap#put(Object, Object);org.clojure.runtime.PersistentHybridMap#put(Object, Object);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentHashMap#remove(Object);org.clojure.runtime.PersistentHybridMap#remove(Object);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentHashMap#createArrayMap(Object[]);org.clojure.runtime.PersistentHybridMap#createArrayMap(Object[]);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentHashMap#createArrayMap();org.clojure.runtime.PersistentHybridMap#createArrayMap();f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentHashMap#createHashtableMap(Object[]);org.clojure.runtime.PersistentHybridMap#createHashtableMap(Object[]);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentHashMap#createHashtableMap(int);org.clojure.runtime.PersistentHybridMap#createHashtableMap(int);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.IdentityHashtableMap#create(int);org.clojure.runtime.PersistentIdentityHashtableMap#create(int);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.IdentityHashtableMap#create(int, PersistentArray);org.clojure.runtime.PersistentIdentityHashtableMap#create(int, PersistentArray);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.IdentityHashtableMap#createArrayMap(Object[]);org.clojure.runtime.PersistentIdentityHashtableMap#createArrayMap(Object[]);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameType;true;org.clojure.runtime.ListMap.Iter;org.clojure.runtime.PersistentListMap.Iter;f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.ListMap.Iter#next();org.clojure.runtime.PersistentListMap.Iter#next();f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameType;true;org.clojure.runtime.ListMap.Tail;org.clojure.runtime.PersistentListMap.Tail;f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameType;true;org.clojure.runtime.ListMap.Link;org.clojure.runtime.PersistentListMap.Link;f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.ListMap.Link#remove(Object);org.clojure.runtime.PersistentListMap.Link#remove(Object);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.RBTree#put(Object, Object);org.clojure.runtime.PersistentTree#put(Object, Object);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.RBTree#remove(Object);org.clojure.runtime.PersistentTree#remove(Object);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.RBTree#main(String[]);org.clojure.runtime.PersistentTree#main(String[]);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameType;true;org.clojure.runtime.TObj;org.clojure.runtime.TObj;f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.TObj#TObj(ThreadLocalData);org.clojure.runtime.TObj#TObj(ThreadLocalData);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.TObj#put(ThreadLocalData, Comparable, Object);org.clojure.runtime.TObj#put(ThreadLocalData, Comparable, Object);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.TObj#get(ThreadLocalData, Comparable);org.clojure.runtime.TObj#get(ThreadLocalData, Comparable);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
SameMethod;true;org.clojure.runtime.TObj#has(ThreadLocalData, Comparable);org.clojure.runtime.TObj#has(ThreadLocalData, Comparable);f344502b48ebcf0546bf664de79049f5f4d573b9;Wed Jun 7 17:35:16 2006 +0000
MoveMethod;false;org.clojure.runtime.PersistentIdentityHashtableMap#createArrayMap(Object[]);org.clojure.runtime.PersistentHybridIdentityMap#createArrayMap(Object[]);1b7ed50694b64f33303145d1c78d8f07481a9560;Wed Jun 7 18:04:42 2006 +0000
MoveMethod;true;org.clojure.runtime.PersistentHashtableMap#createArrayMap(Object[]);org.clojure.runtime.PersistentHybridIdentityMap#createArrayMap(Object[]);1b7ed50694b64f33303145d1c78d8f07481a9560;Wed Jun 7 18:04:42 2006 +0000
SameType;true;org.clojure.runtime.PersistentHashtableMap;org.clojure.runtime.PersistentHashtableMap;1b7ed50694b64f33303145d1c78d8f07481a9560;Wed Jun 7 18:04:42 2006 +0000
SameType;true;org.clojure.runtime.PersistentHybridMap;org.clojure.runtime.PersistentHybridMap;1b7ed50694b64f33303145d1c78d8f07481a9560;Wed Jun 7 18:04:42 2006 +0000
SameType;true;org.clojure.runtime.PersistentIdentityHashtableMap;org.clojure.runtime.PersistentIdentityHashtableMap;1b7ed50694b64f33303145d1c78d8f07481a9560;Wed Jun 7 18:04:42 2006 +0000
RenameClass;true;org.clojure.runtime.PersistentIdentityListMap;org.clojure.runtime.PersistentListIdentityMap;75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
RenameClass;true;org.clojure.runtime.PersistentIdentityHashtableMap;org.clojure.runtime.PersistentHashtableIdentityMap;75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
RenameClass;true;org.clojure.runtime.PersistentIdentityArrayMap;org.clojure.runtime.PersistentArrayIdentityMap;75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
SameType;true;org.clojure.runtime.PersistentIdentityHashtableMap.Iter;org.clojure.runtime.PersistentHashtableIdentityMap.Iter;75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentIdentityHashtableMap.Iter#nextBucket();org.clojure.runtime.PersistentHashtableIdentityMap.Iter#nextBucket();75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentIdentityHashtableMap.Iter#next();org.clojure.runtime.PersistentHashtableIdentityMap.Iter#next();75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentIdentityHashtableMap#create(int);org.clojure.runtime.PersistentHashtableIdentityMap#create(int);75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentIdentityHashtableMap#create(int, PersistentArray);org.clojure.runtime.PersistentHashtableIdentityMap#create(int, PersistentArray);75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentIdentityHashtableMap#createListMap(Object, Object);org.clojure.runtime.PersistentHashtableIdentityMap#createListMap(Object, Object);75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
SameType;true;org.clojure.runtime.PersistentHybridIdentityMap;org.clojure.runtime.PersistentHybridIdentityMap;75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentHybridIdentityMap#createArrayMap(Object[]);org.clojure.runtime.PersistentHybridIdentityMap#createArrayMap(Object[]);75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentHybridIdentityMap#createArrayMap();org.clojure.runtime.PersistentHybridIdentityMap#createArrayMap();75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentHybridIdentityMap#createHashtableMap(Object[]);org.clojure.runtime.PersistentHybridIdentityMap#createHashtableMap(Object[]);75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentHybridIdentityMap#createHashtableMap(int);org.clojure.runtime.PersistentHybridIdentityMap#createHashtableMap(int);75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
SameType;true;org.clojure.runtime.PersistentIdentityListMap.Iter;org.clojure.runtime.PersistentListIdentityMap.Iter;75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentIdentityListMap.Iter#next();org.clojure.runtime.PersistentListIdentityMap.Iter#next();75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
SameType;true;org.clojure.runtime.PersistentIdentityListMap.Tail;org.clojure.runtime.PersistentListIdentityMap.Tail;75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
SameType;true;org.clojure.runtime.PersistentIdentityListMap.Link;org.clojure.runtime.PersistentListIdentityMap.Link;75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentIdentityListMap.Link#remove(Object);org.clojure.runtime.PersistentListIdentityMap.Link#remove(Object);75fea82cbfc2a2d1104bba264e3f3f3b51203735;Wed Jun 7 18:08:05 2006 +0000
SameType;true;org.clojure.runtime.PersistentHashtableIdentityMap;org.clojure.runtime.PersistentHashtableIdentityMap;3e18fcb60b00f869f74b112af5b5d90b9a9edba0;Wed Jun 7 21:02:02 2006 +0000
SameType;true;org.clojure.runtime.PersistentHashtableMap;org.clojure.runtime.PersistentHashtableMap;3e18fcb60b00f869f74b112af5b5d90b9a9edba0;Wed Jun 7 21:02:02 2006 +0000
SameType;true;org.clojure.runtime.PersistentTree;org.clojure.runtime.PersistentTree;3e18fcb60b00f869f74b112af5b5d90b9a9edba0;Wed Jun 7 21:02:02 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentTree#main(String[]);org.clojure.runtime.PersistentTree#main(String[]);3e18fcb60b00f869f74b112af5b5d90b9a9edba0;Wed Jun 7 21:02:02 2006 +0000
SameType;true;org.clojure.runtime.AFn;org.clojure.runtime.AFn;4f72b81de88948e149af93dd96406e4f519e15c6;Fri Jun 9 12:42:56 2006 +0000
SameType;true;org.clojure.runtime.Accessor;org.clojure.runtime.Accessor;4f72b81de88948e149af93dd96406e4f519e15c6;Fri Jun 9 12:42:56 2006 +0000
SameType;true;org.clojure.runtime.Cons;org.clojure.runtime.Cons;4f72b81de88948e149af93dd96406e4f519e15c6;Fri Jun 9 12:42:56 2006 +0000
SameType;true;org.clojure.runtime.IFn;org.clojure.runtime.IFn;4f72b81de88948e149af93dd96406e4f519e15c6;Fri Jun 9 12:42:56 2006 +0000
SameType;true;org.clojure.runtime.Keyword;org.clojure.runtime.Keyword;4f72b81de88948e149af93dd96406e4f519e15c6;Fri Jun 9 12:42:56 2006 +0000
SameType;true;org.clojure.runtime.RT;org.clojure.runtime.RT;4f72b81de88948e149af93dd96406e4f519e15c6;Fri Jun 9 12:42:56 2006 +0000
SameType;true;org.clojure.runtime.Reflector;org.clojure.runtime.Reflector;4f72b81de88948e149af93dd96406e4f519e15c6;Fri Jun 9 12:42:56 2006 +0000
SameType;true;org.clojure.runtime.RestFn0;org.clojure.runtime.RestFn0;4f72b81de88948e149af93dd96406e4f519e15c6;Fri Jun 9 12:42:56 2006 +0000
SameType;true;org.clojure.runtime.RestFn1;org.clojure.runtime.RestFn1;4f72b81de88948e149af93dd96406e4f519e15c6;Fri Jun 9 12:42:56 2006 +0000
SameType;true;org.clojure.runtime.RestFn2;org.clojure.runtime.RestFn2;4f72b81de88948e149af93dd96406e4f519e15c6;Fri Jun 9 12:42:56 2006 +0000
SameType;true;org.clojure.runtime.RestFn3;org.clojure.runtime.RestFn3;4f72b81de88948e149af93dd96406e4f519e15c6;Fri Jun 9 12:42:56 2006 +0000
SameType;true;org.clojure.runtime.RestFn4;org.clojure.runtime.RestFn4;4f72b81de88948e149af93dd96406e4f519e15c6;Fri Jun 9 12:42:56 2006 +0000
SameType;true;org.clojure.runtime.RestFn5;org.clojure.runtime.RestFn5;4f72b81de88948e149af93dd96406e4f519e15c6;Fri Jun 9 12:42:56 2006 +0000
SameType;true;org.clojure.runtime.Transaction;org.clojure.runtime.Transaction;4f72b81de88948e149af93dd96406e4f519e15c6;Fri Jun 9 12:42:56 2006 +0000
SameMethod;true;org.clojure.runtime.Transaction#run(ThreadLocalData, IFn);org.clojure.runtime.Transaction#run(ThreadLocalData, IFn);4f72b81de88948e149af93dd96406e4f519e15c6;Fri Jun 9 12:42:56 2006 +0000
SameMethod;true;org.clojure.runtime.Transaction#commutate(TRef, IFn);org.clojure.runtime.Transaction#commutate(TRef, IFn);4f72b81de88948e149af93dd96406e4f519e15c6;Fri Jun 9 12:42:56 2006 +0000
SameType;true;org.clojure.runtime.Var;org.clojure.runtime.Var;4f72b81de88948e149af93dd96406e4f519e15c6;Fri Jun 9 12:42:56 2006 +0000
RenameMethod;false;org.clojure.runtime.PersistentListIdentityMap#rest();org.clojure.runtime.PersistentListIdentityMap#next();abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
RenameMethod;false;org.clojure.runtime.PersistentListIdentityMap.Link#rest();org.clojure.runtime.PersistentListIdentityMap.Link#next();abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
RenameMethod;false;org.clojure.runtime.PersistentListIdentityMap.Tail#rest();org.clojure.runtime.PersistentListIdentityMap.Tail#next();abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
RenameMethod;false;org.clojure.runtime.PersistentListMap#rest();org.clojure.runtime.PersistentListMap#next();abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
RenameMethod;false;org.clojure.runtime.PersistentListMap.Link#rest();org.clojure.runtime.PersistentListMap.Link#next();abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
RenameMethod;false;org.clojure.runtime.PersistentListMap.Tail#rest();org.clojure.runtime.PersistentListMap.Tail#next();abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameType;true;org.clojure.runtime.PersistentHashtableIdentityMap;org.clojure.runtime.PersistentHashtableIdentityMap;abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameType;true;org.clojure.runtime.PersistentHashtableIdentityMap.Iter;org.clojure.runtime.PersistentHashtableIdentityMap.Iter;abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentHashtableIdentityMap.Iter#next();org.clojure.runtime.PersistentHashtableIdentityMap.Iter#next();abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameType;true;org.clojure.runtime.PersistentHashtableMap;org.clojure.runtime.PersistentHashtableMap;abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameType;true;org.clojure.runtime.PersistentHashtableMap.Iter;org.clojure.runtime.PersistentHashtableMap.Iter;abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentHashtableMap.Iter#next();org.clojure.runtime.PersistentHashtableMap.Iter#next();abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameType;true;org.clojure.runtime.PersistentListIdentityMap;org.clojure.runtime.PersistentListIdentityMap;abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameType;true;org.clojure.runtime.PersistentListIdentityMap.Iter;org.clojure.runtime.PersistentListIdentityMap.Iter;abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentListIdentityMap.Iter#next();org.clojure.runtime.PersistentListIdentityMap.Iter#next();abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameType;true;org.clojure.runtime.PersistentListIdentityMap.Tail;org.clojure.runtime.PersistentListIdentityMap.Tail;abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameType;true;org.clojure.runtime.PersistentListIdentityMap.Link;org.clojure.runtime.PersistentListIdentityMap.Link;abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentListIdentityMap.Link#Link(Object, Object, PersistentListIdentityMap);org.clojure.runtime.PersistentListIdentityMap.Link#Link(Object, Object, PersistentListIdentityMap);abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameType;true;org.clojure.runtime.PersistentListMap;org.clojure.runtime.PersistentListMap;abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameType;true;org.clojure.runtime.PersistentListMap.Iter;org.clojure.runtime.PersistentListMap.Iter;abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentListMap.Iter#next();org.clojure.runtime.PersistentListMap.Iter#next();abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameType;true;org.clojure.runtime.PersistentListMap.Tail;org.clojure.runtime.PersistentListMap.Tail;abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameType;true;org.clojure.runtime.PersistentListMap.Link;org.clojure.runtime.PersistentListMap.Link;abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentListMap.Link#Link(Object, Object, PersistentListMap);org.clojure.runtime.PersistentListMap.Link#Link(Object, Object, PersistentListMap);abb9f4e91313a368103e73f729de5792d3c5e435;Fri Jun 9 12:59:23 2006 +0000
SameType;true;org.clojure.runtime.PersistentListIdentityMap;org.clojure.runtime.PersistentListIdentityMap;e4e5b0612f3acbcd223e8a7c27510bf9a2dde856;Fri Jun 9 13:14:02 2006 +0000
SameType;true;org.clojure.runtime.PersistentListIdentityMap.Tail;org.clojure.runtime.PersistentListIdentityMap.Tail;e4e5b0612f3acbcd223e8a7c27510bf9a2dde856;Fri Jun 9 13:14:02 2006 +0000
SameType;true;org.clojure.runtime.PersistentListIdentityMap.Link;org.clojure.runtime.PersistentListIdentityMap.Link;e4e5b0612f3acbcd223e8a7c27510bf9a2dde856;Fri Jun 9 13:14:02 2006 +0000
SameType;true;org.clojure.runtime.PersistentListMap;org.clojure.runtime.PersistentListMap;e4e5b0612f3acbcd223e8a7c27510bf9a2dde856;Fri Jun 9 13:14:02 2006 +0000
SameType;true;org.clojure.runtime.PersistentListMap.Tail;org.clojure.runtime.PersistentListMap.Tail;e4e5b0612f3acbcd223e8a7c27510bf9a2dde856;Fri Jun 9 13:14:02 2006 +0000
SameType;true;org.clojure.runtime.PersistentListMap.Link;org.clojure.runtime.PersistentListMap.Link;e4e5b0612f3acbcd223e8a7c27510bf9a2dde856;Fri Jun 9 13:14:02 2006 +0000
SameType;true;org.clojure.runtime.PersistentArray;org.clojure.runtime.PersistentArray;7b244d43c7c52dfab7fef2d77073705aeac604cc;Fri Jun 9 13:24:23 2006 +0000
SameType;true;org.clojure.runtime.PersistentArray;org.clojure.runtime.PersistentArray;87682184c3a32b61485c3e587eab3f3daebaf1eb;Fri Jun 9 13:26:45 2006 +0000
SameType;true;org.clojure.runtime.PersistentArray.Seq;org.clojure.runtime.PersistentArray.Seq;87682184c3a32b61485c3e587eab3f3daebaf1eb;Fri Jun 9 13:26:45 2006 +0000
SameType;true;org.clojure.runtime.PersistentArrayMap;org.clojure.runtime.PersistentArrayMap;0b9144199c7ce0c05cb99227252106ab313a99e4;Fri Jun 9 14:46:21 2006 +0000
SameType;true;org.clojure.runtime.PersistentTree;org.clojure.runtime.PersistentTree;4b2bb1e90da439d7bed1527959baa0235b0b1bd7;Fri Jun 9 15:16:52 2006 +0000
SameType;true;org.clojure.runtime.IPersistentMap;org.clojure.runtime.IPersistentMap;18278e3602831bb711ef1c69b92466c4e9f485ec;Sat Jun 10 15:13:29 2006 +0000
SameType;true;org.clojure.runtime.PersistentHashtableMap;org.clojure.runtime.PersistentHashtableMap;18278e3602831bb711ef1c69b92466c4e9f485ec;Sat Jun 10 15:13:29 2006 +0000
SameType;true;org.clojure.runtime.PersistentHybridMap;org.clojure.runtime.PersistentHybridMap;18278e3602831bb711ef1c69b92466c4e9f485ec;Sat Jun 10 15:13:29 2006 +0000
SameType;true;org.clojure.runtime.ISeq;org.clojure.runtime.ISeq;37ac3ad43d5dd08fddcbe701c82d3f28ac8f6261;Sat Jun 10 17:40:26 2006 +0000
SameType;true;org.clojure.runtime.ISequential;org.clojure.runtime.ISequential;37ac3ad43d5dd08fddcbe701c82d3f28ac8f6261;Sat Jun 10 17:40:26 2006 +0000
SameType;true;org.clojure.runtime.PersistentArrayIdentityMap;org.clojure.runtime.PersistentArrayIdentityMap;37ac3ad43d5dd08fddcbe701c82d3f28ac8f6261;Sat Jun 10 17:40:26 2006 +0000
SameType;true;org.clojure.runtime.PersistentArrayMap;org.clojure.runtime.PersistentArrayMap;37ac3ad43d5dd08fddcbe701c82d3f28ac8f6261;Sat Jun 10 17:40:26 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentArrayMap#remove(Object);org.clojure.runtime.PersistentArrayMap#remove(Object);37ac3ad43d5dd08fddcbe701c82d3f28ac8f6261;Sat Jun 10 17:40:26 2006 +0000
SameType;true;org.clojure.runtime.PersistentHashtableMap;org.clojure.runtime.PersistentHashtableMap;37ac3ad43d5dd08fddcbe701c82d3f28ac8f6261;Sat Jun 10 17:40:26 2006 +0000
SameType;true;org.clojure.runtime.PersistentHashtableMap.Seq;org.clojure.runtime.PersistentHashtableMap.Seq;37ac3ad43d5dd08fddcbe701c82d3f28ac8f6261;Sat Jun 10 17:40:26 2006 +0000
SameType;true;org.clojure.runtime.PersistentHybridIdentityMap;org.clojure.runtime.PersistentHybridIdentityMap;37ac3ad43d5dd08fddcbe701c82d3f28ac8f6261;Sat Jun 10 17:40:26 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentHybridIdentityMap#createArrayMap();org.clojure.runtime.PersistentHybridIdentityMap#createArrayMap();37ac3ad43d5dd08fddcbe701c82d3f28ac8f6261;Sat Jun 10 17:40:26 2006 +0000
SameType;true;org.clojure.runtime.PersistentHybridMap;org.clojure.runtime.PersistentHybridMap;37ac3ad43d5dd08fddcbe701c82d3f28ac8f6261;Sat Jun 10 17:40:26 2006 +0000
SameMethod;true;org.clojure.runtime.PersistentHybridMap#createArrayMap();org.clojure.runtime.PersistentHybridMap#createArrayMap();37ac3ad43d5dd08fddcbe701c82d3f28ac8f6261;Sat Jun 10 17:40:26 2006 +0000
SameType;true;org.clojure.runtime.PersistentTree;org.clojure.runtime.PersistentTree;37ac3ad43d5dd08fddcbe701c82d3f28ac8f6261;Sat Jun 10 17:40:26 2006 +0000
SameType;true;org.clojure.runtime.PersistentTree.Seq;org.clojure.runtime.PersistentTree.Seq;37ac3ad43d5dd08fddcbe701c82d3f28ac8f6261;Sat Jun 10 17:40:26 2006 +0000
SameType;true;org.clojure.runtime.RT;org.clojure.runtime.RT;37ac3ad43d5dd08fddcbe701c82d3f28ac8f6261;Sat Jun 10 17:40:26 2006 +0000
RenameMethod;true;org.clojure.runtime.Transaction#commutate(ThreadLocalData, TRef, IFn);org.clojure.runtime.Transaction#commutate2(TRef, IFn);ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
RenameMethod;true;org.clojure.runtime.Transaction#set(ThreadLocalData, TRef, Object);org.clojure.runtime.Transaction#set2(TRef, Object);ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
RenameMethod;true;org.clojure.runtime.Transaction#touch(ThreadLocalData, TRef);org.clojure.runtime.Transaction#touch2(TRef);ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
RenameMethod;true;org.clojure.runtime.Transaction#get(ThreadLocalData, TRef);org.clojure.runtime.Transaction#get2(TRef);ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
SameType;true;org.clojure.runtime.AFn;org.clojure.runtime.AFn;ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
SameType;true;org.clojure.runtime.Accessor;org.clojure.runtime.Accessor;ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
SameType;true;org.clojure.runtime.IFn;org.clojure.runtime.IFn;ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
SameType;true;org.clojure.runtime.IObj;org.clojure.runtime.IObj;ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
SameType;true;org.clojure.runtime.Keyword;org.clojure.runtime.Keyword;ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
SameType;true;org.clojure.runtime.Obj;org.clojure.runtime.Obj;ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
SameType;true;org.clojure.runtime.RestFn0;org.clojure.runtime.RestFn0;ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
SameMethod;true;org.clojure.runtime.RestFn0#invoke(ThreadLocalData);org.clojure.runtime.RestFn0#invoke(ThreadLocalData);ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
SameType;true;org.clojure.runtime.RestFn1;org.clojure.runtime.RestFn1;ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
SameType;true;org.clojure.runtime.RestFn2;org.clojure.runtime.RestFn2;ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
SameType;true;org.clojure.runtime.RestFn3;org.clojure.runtime.RestFn3;ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
SameType;true;org.clojure.runtime.RestFn4;org.clojure.runtime.RestFn4;ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
SameType;true;org.clojure.runtime.TObj;org.clojure.runtime.TObj;ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
SameType;true;org.clojure.runtime.Transaction;org.clojure.runtime.Transaction;ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
SameType;true;org.clojure.runtime.Var;org.clojure.runtime.Var;ffa804456f68b721997a1a12fa98d8c9cb9d0079;Sat Jun 10 18:53:44 2006 +0000
SameType;true;org.clojure.runtime.RestFn5;org.clojure.runtime.RestFn5;dc5642e9d61e6a6099d3b9690ff3e40415d532c7;Sat Jun 10 18:55:54 2006 +0000
SameType;true;org.clojure.runtime.RT;org.clojure.runtime.RT;ac65dac6b044e965d244e78ee5f7d49a62440c92;Sat Jun 10 19:29:20 2006 +0000
SameType;true;org.clojure.runtime.ThreadLocalData;org.clojure.runtime.ThreadLocalData;ac65dac6b044e965d244e78ee5f7d49a62440c92;Sat Jun 10 19:29:20 2006 +0000
SameMethod;true;org.clojure.runtime.ThreadLocalData#getTransaction();org.clojure.runtime.ThreadLocalData#getTransaction();ac65dac6b044e965d244e78ee5f7d49a62440c92;Sat Jun 10 19:29:20 2006 +0000
SameType;true;org.clojure.runtime.Transaction;org.clojure.runtime.Transaction;ac65dac6b044e965d244e78ee5f7d49a62440c92;Sat Jun 10 19:29:20 2006 +0000
SameMethod;true;org.clojure.runtime.Transaction#tref(Object);org.clojure.runtime.Transaction#tref(Object);ac65dac6b044e965d244e78ee5f7d49a62440c92;Sat Jun 10 19:29:20 2006 +0000
SameMethod;true;org.clojure.runtime.Transaction#get2(TRef);org.clojure.runtime.Transaction#get2(TRef);ac65dac6b044e965d244e78ee5f7d49a62440c92;Sat Jun 10 19:29:20 2006 +0000
SameMethod;true;org.clojure.runtime.Transaction#set2(TRef, Object);org.clojure.runtime.Transaction#set2(TRef, Object);ac65dac6b044e965d244e78ee5f7d49a62440c92;Sat Jun 10 19:29:20 2006 +0000
SameMethod;true;org.clojure.runtime.Transaction#touch2(TRef);org.clojure.runtime.Transaction#touch2(TRef);ac65dac6b044e965d244e78ee5f7d49a62440c92;Sat Jun 10 19:29:20 2006 +0000
SameMethod;true;org.clojure.runtime.Transaction#commutate2(TRef, IFn);org.clojure.runtime.Transaction#commutate2(TRef, IFn);ac65dac6b044e965d244e78ee5f7d49a62440c92;Sat Jun 10 19:29:20 2006 +0000
SameType;true;org.clojure.runtime.BigNum;org.clojure.runtime.BigNum;fa698dcab12e029587f1b79f5b99cc4b1cd50a01;Sat Jun 10 21:18:14 2006 +0000
SameType;true;org.clojure.runtime.DoubleNum;org.clojure.runtime.DoubleNum;fa698dcab12e029587f1b79f5b99cc4b1cd50a01;Sat Jun 10 21:18:14 2006 +0000
SameType;true;org.clojure.runtime.FixNum;org.clojure.runtime.FixNum;fa698dcab12e029587f1b79f5b99cc4b1cd50a01;Sat Jun 10 21:18:14 2006 +0000
SameType;true;org.clojure.runtime.Num;org.clojure.runtime.Num;fa698dcab12e029587f1b79f5b99cc4b1cd50a01;Sat Jun 10 21:18:14 2006 +0000
SameType;true;org.clojure.runtime.RatioNum;org.clojure.runtime.RatioNum;fa698dcab12e029587f1b79f5b99cc4b1cd50a01;Sat Jun 10 21:18:14 2006 +0000
SameType;true;org.clojure.runtime.RestFn0;org.clojure.runtime.RestFn0;fa698dcab12e029587f1b79f5b99cc4b1cd50a01;Sat Jun 10 21:18:14 2006 +0000
SameType;true;org.clojure.runtime.Var;org.clojure.runtime.Var;fa698dcab12e029587f1b79f5b99cc4b1cd50a01;Sat Jun 10 21:18:14 2006 +0000
SameMethod;true;org.clojure.runtime.Var#bind(Object);org.clojure.runtime.Var#bind(Object);fa698dcab12e029587f1b79f5b99cc4b1cd50a01;Sat Jun 10 21:18:14 2006 +0000
MoveClass;false;org.clojure.runtime.AGenerator;clojure.runtime.AGenerator;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;false;org.clojure.runtime.Box;clojure.runtime.Box;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;false;org.clojure.runtime.FloatNum;clojure.runtime.FloatNum;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;false;org.clojure.runtime.IMapEntry;clojure.runtime.IMapEntry;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;false;org.clojure.runtime.Indexer;clojure.runtime.Indexer;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;false;org.clojure.runtime.IntegerNum;clojure.runtime.IntegerNum;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;false;org.clojure.runtime.Iter;clojure.runtime.Iter;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;false;org.clojure.runtime.IteratorIter;clojure.runtime.IteratorIter;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;false;org.clojure.runtime.LineNumberingPushbackReader;clojure.runtime.LineNumberingPushbackReader;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;false;org.clojure.runtime.Namespace;clojure.runtime.Namespace;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;false;org.clojure.runtime.RationalNum;clojure.runtime.RationalNum;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;false;org.clojure.runtime.RealNum;clojure.runtime.RealNum;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;false;org.clojure.runtime.Symbol;clojure.runtime.Symbol;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;false;org.clojure.runtime.TRef;clojure.runtime.TRef;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;false;org.clojure.runtime.TVal;clojure.runtime.TVal;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;true;org.clojure.runtime.Reflector;clojure.runtime.Reflector;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;true;org.clojure.runtime.Num;clojure.runtime.Num;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;true;org.clojure.runtime.FixNum;clojure.runtime.FixNum;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;true;org.clojure.runtime.RatioNum;clojure.runtime.RatioNum;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;true;org.clojure.runtime.DoubleNum;clojure.runtime.DoubleNum;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;true;org.clojure.runtime.BigNum;clojure.runtime.BigNum;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;true;org.clojure.runtime.PersistentArray;clojure.runtime.PersistentArray;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;true;org.clojure.runtime.Transaction;clojure.runtime.Transaction;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;true;org.clojure.runtime.Obj;clojure.runtime.Obj;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveAndRename Class;true;org.clojure.runtime.RestFn2;clojure.runtime.RestFn1;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveAndRename Class;true;org.clojure.runtime.RestFn1;clojure.runtime.RestFn2;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveAndRename Class;true;org.clojure.runtime.RestFn4;clojure.runtime.RestFn3;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveAndRename Class;true;org.clojure.runtime.RestFn5;clojure.runtime.RestFn4;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveAndRename Class;true;org.clojure.runtime.AFn;clojure.runtime.RestFn5;6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
RenameMethod;true;org.clojure.runtime.AFn#applyToHelper(IFn, ThreadLocalData, Cons);clojure.runtime.RestFn5#applyTo(ISeq);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
RenameMethod;true;org.clojure.runtime.Transaction#commutate(ThreadLocalData, TRef, IFn);clojure.runtime.Transaction#commutate2(TRef, IFn);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
RenameMethod;true;org.clojure.runtime.Transaction#set(ThreadLocalData, TRef, Object);clojure.runtime.Transaction#set2(TRef, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
RenameMethod;true;org.clojure.runtime.Transaction#touch(ThreadLocalData, TRef);clojure.runtime.Transaction#touch2(TRef);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
RenameMethod;true;org.clojure.runtime.Transaction#get(ThreadLocalData, TRef);clojure.runtime.Transaction#get2(TRef);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
PullU Method;false;org.clojure.runtime.AFn#invoke(ThreadLocalData);clojure.runtime.AFn#invoke();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
PullU Method;false;org.clojure.runtime.AFn#invoke(ThreadLocalData, Object);clojure.runtime.AFn#invoke();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
PullU Method;false;org.clojure.runtime.AFn#invoke(ThreadLocalData, Object, Object);clojure.runtime.AFn#invoke();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
PullU Method;false;org.clojure.runtime.AFn#invoke(ThreadLocalData, Object, Object, Object);clojure.runtime.AFn#invoke();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
PullU Method;false;org.clojure.runtime.AFn#invoke(ThreadLocalData, Object, Object, Object, Object);clojure.runtime.AFn#invoke();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
PullU Method;false;org.clojure.runtime.AFn#invoke(ThreadLocalData, Object, Object, Object, Object, Object);clojure.runtime.AFn#invoke();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
PullU Method;false;org.clojure.runtime.AFn#invoke(ThreadLocalData, Object, Object, Object, Object, Object, Cons);clojure.runtime.AFn#invoke();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
PullU Method;false;org.clojure.runtime.AFn#throwArity();clojure.runtime.AFn#throwArity();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
PullU Method;true;org.clojure.runtime.AFn#applyTo(ThreadLocalData, Cons);clojure.runtime.AFn#applyTo(ISeq);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.Accessor#invoke(ThreadLocalData);clojure.runtime.Accessor#invoke();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object);clojure.runtime.Accessor#invoke(Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object, Object);clojure.runtime.Accessor#invoke(Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object, Object, Object);clojure.runtime.Accessor#invoke(Object, Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object, Object, Object, Object);clojure.runtime.Accessor#invoke(Object, Object, Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object, Object, Object, Object, Object);clojure.runtime.Accessor#invoke(Object, Object, Object, Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.Accessor#invoke(ThreadLocalData, Object, Object, Object, Object, Object, Cons);clojure.runtime.Accessor#invoke(Object, Object, Object, Object, Object, ISeq);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.Keyword#invoke(ThreadLocalData);clojure.runtime.Accessor#invoke();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object, Object, Object);clojure.runtime.Accessor#invoke();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object, Object, Object, Object);clojure.runtime.Accessor#invoke();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object, Object, Object, Object, Object);clojure.runtime.Accessor#invoke();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object, Object, Object, Object, Object, Cons);clojure.runtime.Accessor#invoke();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#arrayToList(Object[]);clojure.runtime.RT#arrayToList(Object[]);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#booleanCast(Object);clojure.runtime.RT#booleanCast(Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#box(Object);clojure.runtime.RT#box(Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#box(boolean);clojure.runtime.RT#box(boolean);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#box(byte);clojure.runtime.RT#box(byte);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#box(char);clojure.runtime.RT#box(char);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#box(double);clojure.runtime.RT#box(double);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#box(float);clojure.runtime.RT#box(float);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#box(int);clojure.runtime.RT#box(int);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#box(long);clojure.runtime.RT#box(long);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#box(short);clojure.runtime.RT#box(short);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#byteCast(Object);clojure.runtime.RT#byteCast(Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#charCast(Object);clojure.runtime.RT#charCast(Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#cons(Object, Cons);clojure.runtime.RT#cons(Object, ISeq);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#doubleCast(Object);clojure.runtime.RT#doubleCast(Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#eq(Object, Object);clojure.runtime.RT#eq(Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#eql(Object, Object);clojure.runtime.RT#eql(Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#floatCast(Object);clojure.runtime.RT#floatCast(Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#getLineNumber(Reader);clojure.runtime.RT#getLineNumber(Reader);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#getLineNumberingReader(Reader);clojure.runtime.RT#getLineNumberingReader(Reader);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#intCast(Object);clojure.runtime.RT#intCast(Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#isLineNumberingReader(Reader);clojure.runtime.RT#isLineNumberingReader(Reader);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#iter(Object);clojure.runtime.RT#iter(Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#list();clojure.runtime.RT#list();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#list(Object);clojure.runtime.RT#list(Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#list(Object, Object);clojure.runtime.RT#list(Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#list(Object, Object, Object);clojure.runtime.RT#list(Object, Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#list(Object, Object, Object, Object);clojure.runtime.RT#list(Object, Object, Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#list(Object, Object, Object, Object, Object);clojure.runtime.RT#list(Object, Object, Object, Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#listStar(Object, Cons);clojure.runtime.RT#listStar(Object, ISeq);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#listStar(Object, Object, Cons);clojure.runtime.RT#listStar(Object, Object, ISeq);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#listStar(Object, Object, Object, Cons);clojure.runtime.RT#listStar(Object, Object, Object, ISeq);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#listStar(Object, Object, Object, Object, Cons);clojure.runtime.RT#listStar(Object, Object, Object, Object, ISeq);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#listStar(Object, Object, Object, Object, Object, Cons);clojure.runtime.RT#listStar(Object, Object, Object, Object, Object, ISeq);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#longCast(Object);clojure.runtime.RT#longCast(Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#peekChar(Reader);clojure.runtime.RT#peekChar(Reader);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#readChar(Reader);clojure.runtime.RT#readChar(Reader);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#readRet(int);clojure.runtime.RT#readRet(int);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.RT#shortCast(Object);clojure.runtime.RT#shortCast(Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;false;org.clojure.runtime.Var#toString();clojure.runtime.Var#toString();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.RestFn0#invoke(ThreadLocalData, Object, Object, Object, Object, Object, Cons);clojure.runtime.RestFn0#invoke(Object, Object, Object, Object, Object, ISeq);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.RestFn3#invoke(ThreadLocalData, Object, Object, Object, Object, Object, Cons);clojure.runtime.RestFn0#invoke(Object, Object, Object, Object, Object, ISeq);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.Var#invoke(ThreadLocalData, Object, Object, Object, Object, Object, Cons);clojure.runtime.Var#invoke(Object, Object, Object, Object, Object, ISeq);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object);clojure.runtime.Keyword#invoke(Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.RestFn0#invoke(ThreadLocalData, Object, Object, Object, Object, Object);clojure.runtime.RestFn0#invoke(Object, Object, Object, Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.RestFn3#invoke(ThreadLocalData, Object, Object, Object, Object, Object);clojure.runtime.RestFn0#invoke(Object, Object, Object, Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.Var#bind(Object);clojure.runtime.Var#bind(Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.Var#invoke(ThreadLocalData, Object, Object, Object, Object, Object);clojure.runtime.Var#invoke(Object, Object, Object, Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.RestFn0#invoke(ThreadLocalData, Object, Object, Object, Object);clojure.runtime.RestFn0#invoke(Object, Object, Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.RestFn3#invoke(ThreadLocalData, Object, Object, Object, Object);clojure.runtime.RestFn0#invoke(Object, Object, Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.RT#boundedLength(Cons, int);clojure.runtime.RT#boundedLength(ISeq, int);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.Var#invoke(ThreadLocalData, Object, Object, Object, Object);clojure.runtime.Var#invoke(Object, Object, Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.Keyword#invoke(ThreadLocalData, Object, Object);clojure.runtime.Keyword#invoke(Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.RestFn0#invoke(ThreadLocalData, Object, Object, Object);clojure.runtime.RestFn0#invoke(Object, Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.Var#invoke(ThreadLocalData, Object, Object, Object);clojure.runtime.Var#invoke(Object, Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.RT#length(Cons);clojure.runtime.RT#length(ISeq);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.Accessor#applyTo(ThreadLocalData, Cons);clojure.runtime.Accessor#applyTo(ISeq);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.Keyword#applyTo(ThreadLocalData, Cons);clojure.runtime.Accessor#applyTo(ISeq);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.Var#setValue(ThreadLocalData, Object);clojure.runtime.Var#setValue(Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.Var#getValue(ThreadLocalData);clojure.runtime.Var#getValue();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.RestFn0#invoke(ThreadLocalData, Object, Object);clojure.runtime.RestFn0#invoke(Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.RestFn1#invoke(ThreadLocalData, Object, Object);clojure.runtime.RestFn0#invoke(Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.Var#invoke(ThreadLocalData, Object, Object);clojure.runtime.Var#invoke(Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.RestFn0#invoke(ThreadLocalData, Object);clojure.runtime.RestFn0#invoke(Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.Var#invoke(ThreadLocalData);clojure.runtime.Var#invoke();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.Var#invoke(ThreadLocalData, Object);clojure.runtime.Var#invoke(Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.RestFn0#applyTo(ThreadLocalData, Cons);clojure.runtime.RestFn0#applyTo(ISeq);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.RestFn3#invoke(ThreadLocalData, Object, Object, Object);clojure.runtime.RestFn5#invoke(Object, Object, Object, Object, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.RestFn0#invoke(ThreadLocalData);clojure.runtime.RestFn0#invoke();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.Var#getBinding(ThreadLocalData);clojure.runtime.Var#getBinding();6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.TObj#put(ThreadLocalData, Comparable, Object);clojure.runtime.TObj#put(Comparable, Object);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.TObj#has(ThreadLocalData, Comparable);clojure.runtime.TObj#has(Comparable);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveMethod;true;org.clojure.runtime.TObj#get(ThreadLocalData, Comparable);clojure.runtime.TObj#get(Comparable);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
SameMethod;true;org.clojure.runtime.Transaction#commutate(TRef, IFn);clojure.runtime.Transaction#commutate(TRef, IFn);6aed462896af74c4a6e692147dcf8fab6b5b6cbd;Sun Jun 11 16:28:11 2006 +0000
MoveClass;false;clojure.runtime.AFn;clojure.lang.AFn;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.AGenerator;clojure.lang.AGenerator;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.Accessor;clojure.lang.Accessor;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.BigNum;clojure.lang.BigNum;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.Binding;clojure.lang.Binding;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.Box;clojure.lang.Box;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.Cons;clojure.lang.Cons;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.DoubleNum;clojure.lang.DoubleNum;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.FixNum;clojure.lang.FixNum;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.FloatNum;clojure.lang.FloatNum;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.FnSeq;clojure.lang.FnSeq;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.IFn;clojure.lang.IFn;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.IMapEntry;clojure.lang.IMapEntry;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.IObj;clojure.lang.IObj;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.IPersistentMap;clojure.lang.IPersistentMap;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.ISeq;clojure.lang.ISeq;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.ISequential;clojure.lang.ISequential;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.Indexer;clojure.lang.Indexer;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.IntegerNum;clojure.lang.IntegerNum;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.Iter;clojure.lang.Iter;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.IteratorIter;clojure.lang.IteratorIter;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.Keyword;clojure.lang.Keyword;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.LineNumberingPushbackReader;clojure.lang.LineNumberingPushbackReader;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.Namespace;clojure.lang.Namespace;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.Num;clojure.lang.Num;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.Obj;clojure.lang.Obj;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.PersistentArray;clojure.lang.PersistentArray;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.PersistentArrayIdentityMap;clojure.lang.PersistentArrayIdentityMap;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.PersistentArrayMap;clojure.lang.PersistentArrayMap;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.PersistentHashtableIdentityMap;clojure.lang.PersistentHashtableIdentityMap;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.PersistentHashtableMap;clojure.lang.PersistentHashtableMap;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.PersistentHybridIdentityMap;clojure.lang.PersistentHybridIdentityMap;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.PersistentHybridMap;clojure.lang.PersistentHybridMap;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.PersistentListIdentityMap;clojure.lang.PersistentListIdentityMap;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.PersistentListMap;clojure.lang.PersistentListMap;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.PersistentTree;clojure.lang.PersistentTree;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.RT;clojure.lang.RT;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.RatioNum;clojure.lang.RatioNum;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.RationalNum;clojure.lang.RationalNum;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.RealNum;clojure.lang.RealNum;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.Reflector;clojure.lang.Reflector;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.RestFn0;clojure.lang.RestFn0;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.RestFn1;clojure.lang.RestFn1;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.RestFn2;clojure.lang.RestFn2;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.RestFn3;clojure.lang.RestFn3;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.RestFn4;clojure.lang.RestFn4;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.RestFn5;clojure.lang.RestFn5;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.Symbol;clojure.lang.Symbol;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.TObj;clojure.lang.TObj;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.TRef;clojure.lang.TRef;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.TVal;clojure.lang.TVal;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.ThreadLocalData;clojure.lang.ThreadLocalData;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.Transaction;clojure.lang.Transaction;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
MoveClass;false;clojure.runtime.Var;clojure.lang.Var;63b40e8e3713954a366563594e548c9528008f45;Sun Jun 11 16:58:43 2006 +0000
SameType;true;clojure.lang.IObj;clojure.lang.IObj;48bd0825f45f2255d851ba0f3236a454f6178ae0;Sun Jun 11 21:07:38 2006 +0000
SameType;true;clojure.lang.Obj;clojure.lang.Obj;48bd0825f45f2255d851ba0f3236a454f6178ae0;Sun Jun 11 21:07:38 2006 +0000
SameType;true;clojure.lang.TObj;clojure.lang.TObj;48bd0825f45f2255d851ba0f3236a454f6178ae0;Sun Jun 11 21:07:38 2006 +0000
SameMethod;true;clojure.lang.TObj#TObj();clojure.lang.TObj#TObj();48bd0825f45f2255d851ba0f3236a454f6178ae0;Sun Jun 11 21:07:38 2006 +0000
SameType;true;clojure.lang.Transaction;clojure.lang.Transaction;48bd0825f45f2255d851ba0f3236a454f6178ae0;Sun Jun 11 21:07:38 2006 +0000
SameMethod;true;clojure.lang.Transaction#get2(TRef);clojure.lang.Transaction#get2(TRef);48bd0825f45f2255d851ba0f3236a454f6178ae0;Sun Jun 11 21:07:38 2006 +0000
ExtractMethod;false;clojure.lang.Transaction#commutate(TRef, IFn);clojure.lang.Transaction#doCommutate(TRef, IFn);f127034f649276cb1bcde4fea50e6be4637dd5d0;Sun Jun 11 21:17:18 2006 +0000
ExtractMethod;false;clojure.lang.Transaction#get(TRef);clojure.lang.Transaction#doGet(TRef);f127034f649276cb1bcde4fea50e6be4637dd5d0;Sun Jun 11 21:17:18 2006 +0000
ExtractMethod;false;clojure.lang.Transaction#set(TRef, Object);clojure.lang.Transaction#doSet(TRef, Object);f127034f649276cb1bcde4fea50e6be4637dd5d0;Sun Jun 11 21:17:18 2006 +0000
ExtractMethod;true;clojure.lang.Transaction#touch(TRef);clojure.lang.Transaction#doTouch(TRef);f127034f649276cb1bcde4fea50e6be4637dd5d0;Sun Jun 11 21:17:18 2006 +0000
SameType;true;clojure.lang.TObj;clojure.lang.TObj;f127034f649276cb1bcde4fea50e6be4637dd5d0;Sun Jun 11 21:17:18 2006 +0000
SameMethod;true;clojure.lang.TObj#put(Object, Object);clojure.lang.TObj#put(Object, Object);f127034f649276cb1bcde4fea50e6be4637dd5d0;Sun Jun 11 21:17:18 2006 +0000
SameMethod;true;clojure.lang.TObj#get(Object);clojure.lang.TObj#get(Object);f127034f649276cb1bcde4fea50e6be4637dd5d0;Sun Jun 11 21:17:18 2006 +0000
SameMethod;true;clojure.lang.TObj#has(Object);clojure.lang.TObj#has(Object);f127034f649276cb1bcde4fea50e6be4637dd5d0;Sun Jun 11 21:17:18 2006 +0000
SameMethod;true;clojure.lang.TObj#attrs();clojure.lang.TObj#attrs();f127034f649276cb1bcde4fea50e6be4637dd5d0;Sun Jun 11 21:17:18 2006 +0000
SameMethod;true;clojure.lang.TObj#remove(Object);clojure.lang.TObj#remove(Object);f127034f649276cb1bcde4fea50e6be4637dd5d0;Sun Jun 11 21:17:18 2006 +0000
SameType;true;clojure.lang.Transaction;clojure.lang.Transaction;f127034f649276cb1bcde4fea50e6be4637dd5d0;Sun Jun 11 21:17:18 2006 +0000
SameMethod;true;clojure.lang.Transaction#tref(Object);clojure.lang.Transaction#tref(Object);f127034f649276cb1bcde4fea50e6be4637dd5d0;Sun Jun 11 21:17:18 2006 +0000
SameMethod;true;clojure.lang.Transaction#get(TRef);clojure.lang.Transaction#get(TRef);f127034f649276cb1bcde4fea50e6be4637dd5d0;Sun Jun 11 21:17:18 2006 +0000
SameMethod;true;clojure.lang.Transaction#set(TRef, Object);clojure.lang.Transaction#set(TRef, Object);f127034f649276cb1bcde4fea50e6be4637dd5d0;Sun Jun 11 21:17:18 2006 +0000
SameMethod;true;clojure.lang.Transaction#touch(TRef);clojure.lang.Transaction#touch(TRef);f127034f649276cb1bcde4fea50e6be4637dd5d0;Sun Jun 11 21:17:18 2006 +0000
SameMethod;true;clojure.lang.Transaction#commutate(TRef, IFn);clojure.lang.Transaction#commutate(TRef, IFn);f127034f649276cb1bcde4fea50e6be4637dd5d0;Sun Jun 11 21:17:18 2006 +0000
RenameMethod;false;clojure.lang.Obj#get(Object);clojure.lang.Obj#getAttr(Object);a00179b2fb6cc09f87efbe8100fb17a7dd34a920;Mon Jun 12 15:01:43 2006 +0000
RenameMethod;false;clojure.lang.Obj#has(Object);clojure.lang.Obj#hasAttr(Object);a00179b2fb6cc09f87efbe8100fb17a7dd34a920;Mon Jun 12 15:01:43 2006 +0000
RenameMethod;false;clojure.lang.Obj#put(Object, Object);clojure.lang.Obj#putAttr(Object, Object);a00179b2fb6cc09f87efbe8100fb17a7dd34a920;Mon Jun 12 15:01:43 2006 +0000
RenameMethod;false;clojure.lang.Obj#remove(Object);clojure.lang.Obj#removeAttr(Object);a00179b2fb6cc09f87efbe8100fb17a7dd34a920;Mon Jun 12 15:01:43 2006 +0000
RenameMethod;false;clojure.lang.TObj#get(Object);clojure.lang.TObj#getAttr(Object);a00179b2fb6cc09f87efbe8100fb17a7dd34a920;Mon Jun 12 15:01:43 2006 +0000
RenameMethod;false;clojure.lang.TObj#has(Object);clojure.lang.TObj#hasAttr(Object);a00179b2fb6cc09f87efbe8100fb17a7dd34a920;Mon Jun 12 15:01:43 2006 +0000
RenameMethod;false;clojure.lang.TObj#put(Object, Object);clojure.lang.TObj#putAttr(Object, Object);a00179b2fb6cc09f87efbe8100fb17a7dd34a920;Mon Jun 12 15:01:43 2006 +0000
RenameMethod;false;clojure.lang.TObj#remove(Object);clojure.lang.TObj#removeAttr(Object);a00179b2fb6cc09f87efbe8100fb17a7dd34a920;Mon Jun 12 15:01:43 2006 +0000
SameType;true;clojure.lang.IObj;clojure.lang.IObj;a00179b2fb6cc09f87efbe8100fb17a7dd34a920;Mon Jun 12 15:01:43 2006 +0000
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;a00179b2fb6cc09f87efbe8100fb17a7dd34a920;Mon Jun 12 15:01:43 2006 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object);clojure.lang.Keyword#invoke(Object);a00179b2fb6cc09f87efbe8100fb17a7dd34a920;Mon Jun 12 15:01:43 2006 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object);clojure.lang.Keyword#invoke(Object, Object);a00179b2fb6cc09f87efbe8100fb17a7dd34a920;Mon Jun 12 15:01:43 2006 +0000
SameType;true;clojure.lang.Obj;clojure.lang.Obj;a00179b2fb6cc09f87efbe8100fb17a7dd34a920;Mon Jun 12 15:01:43 2006 +0000
SameType;true;clojure.lang.TObj;clojure.lang.TObj;a00179b2fb6cc09f87efbe8100fb17a7dd34a920;Mon Jun 12 15:01:43 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;4ff27c7aa3347471e4f8372e4939d192b93ccfd3;Mon Jun 12 20:21:49 2006 +0000
SameMethod;true;clojure.lang.RT#getLineNumberingReader(Reader);clojure.lang.RT#getLineNumberingReader(Reader);4ff27c7aa3347471e4f8372e4939d192b93ccfd3;Mon Jun 12 20:21:49 2006 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;a6945186568b8265f775e448778255d16daba8db;Tue Jun 13 19:55:28 2006 +0000
SameMethod;true;clojure.lang.LispReader#read(LineNumberingPushbackReader, boolean, Object, boolean);clojure.lang.LispReader#read(LineNumberingPushbackReader, boolean, Object, boolean);a6945186568b8265f775e448778255d16daba8db;Tue Jun 13 19:55:28 2006 +0000
SameMethod;true;clojure.lang.LispReader#readToken(LineNumberingPushbackReader, int);clojure.lang.LispReader#readToken(LineNumberingPushbackReader, int);a6945186568b8265f775e448778255d16daba8db;Tue Jun 13 19:55:28 2006 +0000
SameMethod;true;clojure.lang.LispReader#interpretToken(String);clojure.lang.LispReader#interpretToken(String);a6945186568b8265f775e448778255d16daba8db;Tue Jun 13 19:55:28 2006 +0000
SameMethod;true;clojure.lang.LispReader#matchSymbol(String);clojure.lang.LispReader#matchSymbol(String);a6945186568b8265f775e448778255d16daba8db;Tue Jun 13 19:55:28 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;a6945186568b8265f775e448778255d16daba8db;Tue Jun 13 19:55:28 2006 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;3d54fc288b133949a5f49a078641ca07e7ccf3d0;Thu Jun 15 22:04:43 2006 +0000
SameMethod;true;clojure.lang.LispReader#main(String[]);clojure.lang.LispReader#main(String[]);3d54fc288b133949a5f49a078641ca07e7ccf3d0;Thu Jun 15 22:04:43 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;3d54fc288b133949a5f49a078641ca07e7ccf3d0;Thu Jun 15 22:04:43 2006 +0000
ExtractInterface;true;clojure.lang.PersistentArray;clojure.lang.IArray;0d697a5d3edb1551353f6fad0a4c98b8d803b106;Mon Jun 19 16:34:13 2006 +0000
ExtractInterface;true;clojure.lang.ArraySeq;clojure.lang.IndexedSeq;0d697a5d3edb1551353f6fad0a4c98b8d803b106;Mon Jun 19 16:34:13 2006 +0000
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;0d697a5d3edb1551353f6fad0a4c98b8d803b106;Mon Jun 19 16:34:13 2006 +0000
SameType;true;clojure.lang.PersistentArray;clojure.lang.PersistentArray;0d697a5d3edb1551353f6fad0a4c98b8d803b106;Mon Jun 19 16:34:13 2006 +0000
SameType;true;clojure.lang.PersistentArray.Seq;clojure.lang.PersistentArray.Seq;0d697a5d3edb1551353f6fad0a4c98b8d803b106;Mon Jun 19 16:34:13 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#PersistentArray(int);clojure.lang.PersistentArray#PersistentArray(int);0d697a5d3edb1551353f6fad0a4c98b8d803b106;Mon Jun 19 16:34:13 2006 +0000
SameType;true;clojure.lang.PersistentArrayIdentityMap;clojure.lang.PersistentArrayIdentityMap;0d697a5d3edb1551353f6fad0a4c98b8d803b106;Mon Jun 19 16:34:13 2006 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;0d697a5d3edb1551353f6fad0a4c98b8d803b106;Mon Jun 19 16:34:13 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;0d697a5d3edb1551353f6fad0a4c98b8d803b106;Mon Jun 19 16:34:13 2006 +0000
SameType;true;clojure.lang.Tuple;clojure.lang.Tuple;0d697a5d3edb1551353f6fad0a4c98b8d803b106;Mon Jun 19 16:34:13 2006 +0000
SameMethod;true;clojure.lang.Tuple#equals(Object);clojure.lang.Tuple#equals(Object);0d697a5d3edb1551353f6fad0a4c98b8d803b106;Mon Jun 19 16:34:13 2006 +0000
SameType;true;clojure.lang.PersistentArray;clojure.lang.PersistentArray;093ea7b07aea48b9f4b8aac3a8beddfe2e1226f7;Mon Jun 19 20:43:04 2006 +0000
SameType;true;clojure.lang.PersistentArray.Master;clojure.lang.PersistentArray.Master;093ea7b07aea48b9f4b8aac3a8beddfe2e1226f7;Mon Jun 19 20:43:04 2006 +0000
SameMethod;true;clojure.lang.PersistentArray.Master#Master(int, Object, float);clojure.lang.PersistentArray.Master#Master(int, Object, float);093ea7b07aea48b9f4b8aac3a8beddfe2e1226f7;Mon Jun 19 20:43:04 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#PersistentArray(int, Object, float);clojure.lang.PersistentArray#PersistentArray(int, Object, float);093ea7b07aea48b9f4b8aac3a8beddfe2e1226f7;Mon Jun 19 20:43:04 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#PersistentArray(Master, int, int, BitSet);clojure.lang.PersistentArray#PersistentArray(Master, int, int, BitSet);093ea7b07aea48b9f4b8aac3a8beddfe2e1226f7;Mon Jun 19 20:43:04 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#PersistentArray(int, ISeq);clojure.lang.PersistentArray#PersistentArray(int, ISeq);093ea7b07aea48b9f4b8aac3a8beddfe2e1226f7;Mon Jun 19 20:43:04 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#PersistentArray(IArray);clojure.lang.PersistentArray#PersistentArray(IArray);093ea7b07aea48b9f4b8aac3a8beddfe2e1226f7;Mon Jun 19 20:43:04 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#length();clojure.lang.PersistentArray#length();093ea7b07aea48b9f4b8aac3a8beddfe2e1226f7;Mon Jun 19 20:43:04 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#get(int);clojure.lang.PersistentArray#get(int);093ea7b07aea48b9f4b8aac3a8beddfe2e1226f7;Mon Jun 19 20:43:04 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#resize(int);clojure.lang.PersistentArray#resize(int);093ea7b07aea48b9f4b8aac3a8beddfe2e1226f7;Mon Jun 19 20:43:04 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#load();clojure.lang.PersistentArray#load();093ea7b07aea48b9f4b8aac3a8beddfe2e1226f7;Mon Jun 19 20:43:04 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#isolate();clojure.lang.PersistentArray#isolate();093ea7b07aea48b9f4b8aac3a8beddfe2e1226f7;Mon Jun 19 20:43:04 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#getEntry(int);clojure.lang.PersistentArray#getEntry(int);093ea7b07aea48b9f4b8aac3a8beddfe2e1226f7;Mon Jun 19 20:43:04 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#set(int, Object);clojure.lang.PersistentArray#set(int, Object);093ea7b07aea48b9f4b8aac3a8beddfe2e1226f7;Mon Jun 19 20:43:04 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#doSet(int, Object);clojure.lang.PersistentArray#doSet(int, Object);093ea7b07aea48b9f4b8aac3a8beddfe2e1226f7;Mon Jun 19 20:43:04 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#getSetArray();clojure.lang.PersistentArray#getSetArray();093ea7b07aea48b9f4b8aac3a8beddfe2e1226f7;Mon Jun 19 20:43:04 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#main(String[]);clojure.lang.PersistentArray#main(String[]);093ea7b07aea48b9f4b8aac3a8beddfe2e1226f7;Mon Jun 19 20:43:04 2006 +0000
SameType;true;clojure.lang.FnSeq;clojure.lang.FnSeq;5d34c73c9fb03d82a65b916af246238aefb6bcb8;Tue Jun 20 13:10:19 2006 +0000
SameMethod;true;clojure.lang.FnSeq#FnSeq(Object, IFn);clojure.lang.FnSeq#FnSeq(Object, IFn);5d34c73c9fb03d82a65b916af246238aefb6bcb8;Tue Jun 20 13:10:19 2006 +0000
SameMethod;true;clojure.lang.FnSeq#rest();clojure.lang.FnSeq#rest();5d34c73c9fb03d82a65b916af246238aefb6bcb8;Tue Jun 20 13:10:19 2006 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;9623392e3ead372e86ab399ac174f6c1a8700379;Tue Jun 20 15:24:55 2006 +0000
SameMethod;true;clojure.lang.Symbol#intern(String);clojure.lang.Symbol#intern(String);9623392e3ead372e86ab399ac174f6c1a8700379;Tue Jun 20 15:24:55 2006 +0000
SameType;true;clojure.lang.PersistentTree;clojure.lang.PersistentTree;2833558bb5b06956ac07b0fd7d91b2adb3f188e4;Wed Jun 21 14:19:18 2006 +0000
SameType;true;clojure.lang.PersistentTree.Seq;clojure.lang.PersistentTree.Seq;2833558bb5b06956ac07b0fd7d91b2adb3f188e4;Wed Jun 21 14:19:18 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;2833558bb5b06956ac07b0fd7d91b2adb3f188e4;Wed Jun 21 14:19:18 2006 +0000
SameType;true;clojure.lang.PersistentArray;clojure.lang.PersistentArray;e01aaa3dd9e0a33f45d691675b7b5d3a55edd463;Wed Jun 21 14:23:20 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#trim();clojure.lang.PersistentArray#trim();e01aaa3dd9e0a33f45d691675b7b5d3a55edd463;Wed Jun 21 14:23:20 2006 +0000
SameType;true;clojure.lang.AFn;clojure.lang.AFn;3e6c335ae07459b40c885307d6505b55c221515d;Wed Jun 21 14:48:32 2006 +0000
SameMethod;true;clojure.lang.AFn#applyToHelper(IFn, ISeq);clojure.lang.AFn#applyToHelper(IFn, ISeq);3e6c335ae07459b40c885307d6505b55c221515d;Wed Jun 21 14:48:32 2006 +0000
SameType;true;clojure.lang.Accessor;clojure.lang.Accessor;3e6c335ae07459b40c885307d6505b55c221515d;Wed Jun 21 14:48:32 2006 +0000
SameType;true;clojure.lang.IFn;clojure.lang.IFn;3e6c335ae07459b40c885307d6505b55c221515d;Wed Jun 21 14:48:32 2006 +0000
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;3e6c335ae07459b40c885307d6505b55c221515d;Wed Jun 21 14:48:32 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;3e6c335ae07459b40c885307d6505b55c221515d;Wed Jun 21 14:48:32 2006 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;3e6c335ae07459b40c885307d6505b55c221515d;Wed Jun 21 14:48:32 2006 +0000
SameType;true;clojure.lang.RestFn0;clojure.lang.RestFn0;3e6c335ae07459b40c885307d6505b55c221515d;Wed Jun 21 14:48:32 2006 +0000
SameType;true;clojure.lang.RestFn1;clojure.lang.RestFn1;3e6c335ae07459b40c885307d6505b55c221515d;Wed Jun 21 14:48:32 2006 +0000
SameType;true;clojure.lang.RestFn2;clojure.lang.RestFn2;3e6c335ae07459b40c885307d6505b55c221515d;Wed Jun 21 14:48:32 2006 +0000
SameType;true;clojure.lang.RestFn3;clojure.lang.RestFn3;3e6c335ae07459b40c885307d6505b55c221515d;Wed Jun 21 14:48:32 2006 +0000
SameType;true;clojure.lang.RestFn4;clojure.lang.RestFn4;3e6c335ae07459b40c885307d6505b55c221515d;Wed Jun 21 14:48:32 2006 +0000
SameType;true;clojure.lang.RestFn5;clojure.lang.RestFn5;3e6c335ae07459b40c885307d6505b55c221515d;Wed Jun 21 14:48:32 2006 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;3e6c335ae07459b40c885307d6505b55c221515d;Wed Jun 21 14:48:32 2006 +0000
ExtractMethod;true;clojure.lang.PersistentArrayMap#put(Object, Object);clojure.lang.PersistentArrayMap#create(Object[]);ae623590ccb2fd017d67637b2f52e747b9b4ad73;Tue Jul 4 17:09:08 2006 +0000
ExtractMethod;true;clojure.lang.PersistentArrayMap#remove(Object);clojure.lang.PersistentArrayMap#create(Object[]);ae623590ccb2fd017d67637b2f52e747b9b4ad73;Tue Jul 4 17:09:08 2006 +0000
SameType;true;clojure.lang.PersistentArrayIdentityMap;clojure.lang.PersistentArrayIdentityMap;ae623590ccb2fd017d67637b2f52e747b9b4ad73;Tue Jul 4 17:09:08 2006 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;ae623590ccb2fd017d67637b2f52e747b9b4ad73;Tue Jul 4 17:09:08 2006 +0000
SameMethod;true;clojure.lang.PersistentArrayMap#put(Object, Object);clojure.lang.PersistentArrayMap#put(Object, Object);ae623590ccb2fd017d67637b2f52e747b9b4ad73;Tue Jul 4 17:09:08 2006 +0000
SameMethod;true;clojure.lang.PersistentArrayMap#remove(Object);clojure.lang.PersistentArrayMap#remove(Object);ae623590ccb2fd017d67637b2f52e747b9b4ad73;Tue Jul 4 17:09:08 2006 +0000
SameType;true;clojure.lang.ThreadLocalData;clojure.lang.ThreadLocalData;86a8196bbba908bf6cf3f5d9ab3d3ebb7f94a646;Tue Jul 4 17:14:43 2006 +0000
SameType;true;clojure.lang.IPersistentMap;clojure.lang.IPersistentMap;45928ffe7f2b9e59633fb7931f2a3c75c9d6589f;Tue Jul 4 18:02:35 2006 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;45928ffe7f2b9e59633fb7931f2a3c75c9d6589f;Tue Jul 4 18:02:35 2006 +0000
SameType;true;clojure.lang.PersistentHashtableMap;clojure.lang.PersistentHashtableMap;45928ffe7f2b9e59633fb7931f2a3c75c9d6589f;Tue Jul 4 18:02:35 2006 +0000
SameType;true;clojure.lang.PersistentHybridMap;clojure.lang.PersistentHybridMap;45928ffe7f2b9e59633fb7931f2a3c75c9d6589f;Tue Jul 4 18:02:35 2006 +0000
SameType;true;clojure.lang.PersistentListIdentityMap;clojure.lang.PersistentListIdentityMap;45928ffe7f2b9e59633fb7931f2a3c75c9d6589f;Tue Jul 4 18:02:35 2006 +0000
SameType;true;clojure.lang.PersistentListIdentityMap.Tail;clojure.lang.PersistentListIdentityMap.Tail;45928ffe7f2b9e59633fb7931f2a3c75c9d6589f;Tue Jul 4 18:02:35 2006 +0000
SameType;true;clojure.lang.PersistentListIdentityMap.Link;clojure.lang.PersistentListIdentityMap.Link;45928ffe7f2b9e59633fb7931f2a3c75c9d6589f;Tue Jul 4 18:02:35 2006 +0000
SameType;true;clojure.lang.PersistentListMap;clojure.lang.PersistentListMap;45928ffe7f2b9e59633fb7931f2a3c75c9d6589f;Tue Jul 4 18:02:35 2006 +0000
SameType;true;clojure.lang.PersistentListMap.Tail;clojure.lang.PersistentListMap.Tail;45928ffe7f2b9e59633fb7931f2a3c75c9d6589f;Tue Jul 4 18:02:35 2006 +0000
SameType;true;clojure.lang.PersistentListMap.Link;clojure.lang.PersistentListMap.Link;45928ffe7f2b9e59633fb7931f2a3c75c9d6589f;Tue Jul 4 18:02:35 2006 +0000
SameType;true;clojure.lang.PersistentTree;clojure.lang.PersistentTree;45928ffe7f2b9e59633fb7931f2a3c75c9d6589f;Tue Jul 4 18:02:35 2006 +0000
SameMethod;true;clojure.lang.PersistentTree#main(String[]);clojure.lang.PersistentTree#main(String[]);45928ffe7f2b9e59633fb7931f2a3c75c9d6589f;Tue Jul 4 18:02:35 2006 +0000
RenameMethod;true;clojure.lang.Obj#putAttr(Object, Object);clojure.lang.Obj#addAttr(Object, Object);299745acaf1cf2671c30915a2f6ac9a3fc8fca49;Tue Jul 4 18:18:35 2006 +0000
SameType;true;clojure.lang.Obj;clojure.lang.Obj;299745acaf1cf2671c30915a2f6ac9a3fc8fca49;Tue Jul 4 18:18:35 2006 +0000
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;58ff927780b540fad69fc1a8614b216c379e9a2f;Tue Jul 4 18:21:59 2006 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object);clojure.lang.Keyword#invoke(Object);58ff927780b540fad69fc1a8614b216c379e9a2f;Tue Jul 4 18:21:59 2006 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object);clojure.lang.Keyword#invoke(Object, Object);58ff927780b540fad69fc1a8614b216c379e9a2f;Tue Jul 4 18:21:59 2006 +0000
SameType;true;clojure.lang.PersistentArrayIdentityMap;clojure.lang.PersistentArrayIdentityMap;84406ba09fe16b4b56b5ce40de33f8bee340a947;Tue Jul 4 20:05:37 2006 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;84406ba09fe16b4b56b5ce40de33f8bee340a947;Tue Jul 4 20:05:37 2006 +0000
SameMethod;true;clojure.lang.PersistentArrayMap#add(Object, Object);clojure.lang.PersistentArrayMap#add(Object, Object);84406ba09fe16b4b56b5ce40de33f8bee340a947;Tue Jul 4 20:05:37 2006 +0000
SameMethod;true;clojure.lang.PersistentArrayMap#put(Object, Object);clojure.lang.PersistentArrayMap#put(Object, Object);84406ba09fe16b4b56b5ce40de33f8bee340a947;Tue Jul 4 20:05:37 2006 +0000
MoveMethod;false;clojure.lang.ThreadLocalData#setTransaction(Transaction);clojure.lang.Transaction#setTransaction(Transaction);e5dcae7b0a24af84476b1192563fa149ad6a4a96;Tue Jul 4 20:51:55 2006 +0000
SameType;true;clojure.lang.ThreadLocalData;clojure.lang.ThreadLocalData;e5dcae7b0a24af84476b1192563fa149ad6a4a96;Tue Jul 4 20:51:55 2006 +0000
SameType;true;clojure.lang.Transaction;clojure.lang.Transaction;e5dcae7b0a24af84476b1192563fa149ad6a4a96;Tue Jul 4 20:51:55 2006 +0000
SameMethod;true;clojure.lang.Transaction#runInTransaction(IFn);clojure.lang.Transaction#runInTransaction(IFn);e5dcae7b0a24af84476b1192563fa149ad6a4a96;Tue Jul 4 20:51:55 2006 +0000
SameMethod;true;clojure.lang.Transaction#tref(Object);clojure.lang.Transaction#tref(Object);e5dcae7b0a24af84476b1192563fa149ad6a4a96;Tue Jul 4 20:51:55 2006 +0000
SameMethod;true;clojure.lang.Transaction#get(TRef);clojure.lang.Transaction#get(TRef);e5dcae7b0a24af84476b1192563fa149ad6a4a96;Tue Jul 4 20:51:55 2006 +0000
SameMethod;true;clojure.lang.Transaction#set(TRef, Object);clojure.lang.Transaction#set(TRef, Object);e5dcae7b0a24af84476b1192563fa149ad6a4a96;Tue Jul 4 20:51:55 2006 +0000
SameMethod;true;clojure.lang.Transaction#touch(TRef);clojure.lang.Transaction#touch(TRef);e5dcae7b0a24af84476b1192563fa149ad6a4a96;Tue Jul 4 20:51:55 2006 +0000
SameMethod;true;clojure.lang.Transaction#commutate(TRef, IFn);clojure.lang.Transaction#commutate(TRef, IFn);e5dcae7b0a24af84476b1192563fa149ad6a4a96;Tue Jul 4 20:51:55 2006 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;8a628fcd1b1e015ef61272df128cf4cbfa323259;Wed Jul 5 19:37:11 2006 +0000
SameMethod;true;clojure.lang.Var#bind(Object);clojure.lang.Var#bind(Object);8a628fcd1b1e015ef61272df128cf4cbfa323259;Wed Jul 5 19:37:11 2006 +0000
SameMethod;true;clojure.lang.Var#setValue(Object);clojure.lang.Var#setValue(Object);8a628fcd1b1e015ef61272df128cf4cbfa323259;Wed Jul 5 19:37:11 2006 +0000
SameMethod;true;clojure.lang.Var#pushThreadBinding(Object);clojure.lang.Var#pushThreadBinding(Object);8a628fcd1b1e015ef61272df128cf4cbfa323259;Wed Jul 5 19:37:11 2006 +0000
SameMethod;true;clojure.lang.Var#popThreadBinding();clojure.lang.Var#popThreadBinding();8a628fcd1b1e015ef61272df128cf4cbfa323259;Wed Jul 5 19:37:11 2006 +0000
SameMethod;true;clojure.lang.Var#getThreadBinding();clojure.lang.Var#getThreadBinding();8a628fcd1b1e015ef61272df128cf4cbfa323259;Wed Jul 5 19:37:11 2006 +0000
SameMethod;true;clojure.lang.Var#invoke();clojure.lang.Var#invoke();8a628fcd1b1e015ef61272df128cf4cbfa323259;Wed Jul 5 19:37:11 2006 +0000
SameMethod;true;clojure.lang.Var#invoke(Object);clojure.lang.Var#invoke(Object);8a628fcd1b1e015ef61272df128cf4cbfa323259;Wed Jul 5 19:37:11 2006 +0000
SameMethod;true;clojure.lang.Var#invoke(Object, Object);clojure.lang.Var#invoke(Object, Object);8a628fcd1b1e015ef61272df128cf4cbfa323259;Wed Jul 5 19:37:11 2006 +0000
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object);8a628fcd1b1e015ef61272df128cf4cbfa323259;Wed Jul 5 19:37:11 2006 +0000
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object);8a628fcd1b1e015ef61272df128cf4cbfa323259;Wed Jul 5 19:37:11 2006 +0000
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object, Object);8a628fcd1b1e015ef61272df128cf4cbfa323259;Wed Jul 5 19:37:11 2006 +0000
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object[]);clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object[]);8a628fcd1b1e015ef61272df128cf4cbfa323259;Wed Jul 5 19:37:11 2006 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;2e0a542ba24109004ec523f5897418105f1fcd8c;Wed Jul 5 20:51:49 2006 +0000
ExtractMethod;true;clojure.lang.PersistentArray#getSetArray();clojure.lang.PersistentArray#create(Master, int, int, BitSet);3224d6ff2e2e28a6e283a3106992dc0545d4e1b6;Thu Jul 27 22:06:52 2006 +0000
ExtractMethod;true;clojure.lang.PersistentArray#resize(int);clojure.lang.PersistentArray#create(int, Object, float);3224d6ff2e2e28a6e283a3106992dc0545d4e1b6;Thu Jul 27 22:06:52 2006 +0000
SameType;true;clojure.lang.PersistentArray;clojure.lang.PersistentArray;3224d6ff2e2e28a6e283a3106992dc0545d4e1b6;Thu Jul 27 22:06:52 2006 +0000
SameType;true;clojure.lang.PersistentArray.Master;clojure.lang.PersistentArray.Master;3224d6ff2e2e28a6e283a3106992dc0545d4e1b6;Thu Jul 27 22:06:52 2006 +0000
SameType;true;clojure.lang.PersistentArray.Data;clojure.lang.PersistentArray.Data;3224d6ff2e2e28a6e283a3106992dc0545d4e1b6;Thu Jul 27 22:06:52 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#resize(int);clojure.lang.PersistentArray#resize(int);3224d6ff2e2e28a6e283a3106992dc0545d4e1b6;Thu Jul 27 22:06:52 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#getSetArray();clojure.lang.PersistentArray#getSetArray();3224d6ff2e2e28a6e283a3106992dc0545d4e1b6;Thu Jul 27 22:06:52 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#main(String[]);clojure.lang.PersistentArray#main(String[]);3224d6ff2e2e28a6e283a3106992dc0545d4e1b6;Thu Jul 27 22:06:52 2006 +0000
SameType;true;clojure.lang.Tuple;clojure.lang.Tuple;f0ebcbc30c8f2ae9144259caed61495ef753ab72;Thu Jul 27 22:21:53 2006 +0000
SameMethod;true;clojure.lang.Tuple#set(int, Object);clojure.lang.Tuple#set(int, Object);f0ebcbc30c8f2ae9144259caed61495ef753ab72;Thu Jul 27 22:21:53 2006 +0000
RenameClass;true;clojure.lang.PersistentTree;clojure.lang.PersistentTreeMap;97a189bf60c4f4186a51cff166bbaa4f157be3b1;Fri Jul 28 14:46:19 2006 +0000
SameMethod;true;clojure.lang.PersistentTree#add(Object, Object);clojure.lang.PersistentTreeMap#add(Object, Object);97a189bf60c4f4186a51cff166bbaa4f157be3b1;Fri Jul 28 14:46:19 2006 +0000
SameMethod;true;clojure.lang.PersistentTree#put(Object, Object);clojure.lang.PersistentTreeMap#put(Object, Object);97a189bf60c4f4186a51cff166bbaa4f157be3b1;Fri Jul 28 14:46:19 2006 +0000
SameMethod;true;clojure.lang.PersistentTree#remove(Object);clojure.lang.PersistentTreeMap#remove(Object);97a189bf60c4f4186a51cff166bbaa4f157be3b1;Fri Jul 28 14:46:19 2006 +0000
SameMethod;true;clojure.lang.PersistentTree#main(String[]);clojure.lang.PersistentTreeMap#main(String[]);97a189bf60c4f4186a51cff166bbaa4f157be3b1;Fri Jul 28 14:46:19 2006 +0000
SameType;true;clojure.lang.AFn;clojure.lang.AFn;11a4dd18b1a472ca65870293efc5efb9759255c9;Fri Jul 28 16:23:35 2006 +0000
SameType;true;clojure.lang.Obj;clojure.lang.Obj;11a4dd18b1a472ca65870293efc5efb9759255c9;Fri Jul 28 16:23:35 2006 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;11a4dd18b1a472ca65870293efc5efb9759255c9;Fri Jul 28 16:23:35 2006 +0000
SameType;true;clojure.lang.PersistentArray;clojure.lang.PersistentArray;f6beae41f544340607bddb4a217abd249d085fc6;Fri Jul 28 17:58:11 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#create(Master, int, int, BitSet);clojure.lang.PersistentArray#create(Master, int, int, BitSet);f6beae41f544340607bddb4a217abd249d085fc6;Fri Jul 28 17:58:11 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#create(int, Object, float);clojure.lang.PersistentArray#create(int, Object, float);f6beae41f544340607bddb4a217abd249d085fc6;Fri Jul 28 17:58:11 2006 +0000
SameType;true;clojure.lang.PersistentArrayList;clojure.lang.PersistentArrayList;f6beae41f544340607bddb4a217abd249d085fc6;Fri Jul 28 17:58:11 2006 +0000
SameMethod;true;clojure.lang.PersistentArrayList#remove();clojure.lang.PersistentArrayList#remove();f6beae41f544340607bddb4a217abd249d085fc6;Fri Jul 28 17:58:11 2006 +0000
SameMethod;true;clojure.lang.PersistentArrayList#create(Master, int, int, BitSet);clojure.lang.PersistentArrayList#create(Master, int, int, BitSet);f6beae41f544340607bddb4a217abd249d085fc6;Fri Jul 28 17:58:11 2006 +0000
SameMethod;true;clojure.lang.PersistentArrayList#create(int, Object, float);clojure.lang.PersistentArrayList#create(int, Object, float);f6beae41f544340607bddb4a217abd249d085fc6;Fri Jul 28 17:58:11 2006 +0000
SameType;true;clojure.lang.PersistentArrayIdentityMap;clojure.lang.PersistentArrayIdentityMap;709e897e44e353f2bda74d1f5b4bcaf413bf5a54;Fri Jul 28 18:51:47 2006 +0000
SameMethod;true;clojure.lang.PersistentArrayIdentityMap#create(Object[]);clojure.lang.PersistentArrayIdentityMap#create(Object[]);709e897e44e353f2bda74d1f5b4bcaf413bf5a54;Fri Jul 28 18:51:47 2006 +0000
SameMethod;true;clojure.lang.PersistentArrayIdentityMap#createHT(Object[]);clojure.lang.PersistentArrayIdentityMap#createHT(Object[]);709e897e44e353f2bda74d1f5b4bcaf413bf5a54;Fri Jul 28 18:51:47 2006 +0000
SameMethod;true;clojure.lang.PersistentArrayIdentityMap#empty();clojure.lang.PersistentArrayIdentityMap#empty();709e897e44e353f2bda74d1f5b4bcaf413bf5a54;Fri Jul 28 18:51:47 2006 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;709e897e44e353f2bda74d1f5b4bcaf413bf5a54;Fri Jul 28 18:51:47 2006 +0000
SameMethod;true;clojure.lang.PersistentArrayMap#create(Object[]);clojure.lang.PersistentArrayMap#create(Object[]);709e897e44e353f2bda74d1f5b4bcaf413bf5a54;Fri Jul 28 18:51:47 2006 +0000
SameMethod;true;clojure.lang.PersistentArrayMap#createHT(Object[]);clojure.lang.PersistentArrayMap#createHT(Object[]);709e897e44e353f2bda74d1f5b4bcaf413bf5a54;Fri Jul 28 18:51:47 2006 +0000
SameMethod;true;clojure.lang.PersistentArrayMap#empty();clojure.lang.PersistentArrayMap#empty();709e897e44e353f2bda74d1f5b4bcaf413bf5a54;Fri Jul 28 18:51:47 2006 +0000
SameType;true;clojure.lang.PersistentHashtableIdentityMap;clojure.lang.PersistentHashtableIdentityMap;709e897e44e353f2bda74d1f5b4bcaf413bf5a54;Fri Jul 28 18:51:47 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableIdentityMap#create(int);clojure.lang.PersistentHashtableIdentityMap#create(int);709e897e44e353f2bda74d1f5b4bcaf413bf5a54;Fri Jul 28 18:51:47 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableIdentityMap#create(int, PersistentArray);clojure.lang.PersistentHashtableIdentityMap#create(int, PersistentArray);709e897e44e353f2bda74d1f5b4bcaf413bf5a54;Fri Jul 28 18:51:47 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableIdentityMap#create(int, PersistentArray, int);clojure.lang.PersistentHashtableIdentityMap#create(int, PersistentArray, int);709e897e44e353f2bda74d1f5b4bcaf413bf5a54;Fri Jul 28 18:51:47 2006 +0000
SameType;true;clojure.lang.PersistentHashtableMap;clojure.lang.PersistentHashtableMap;709e897e44e353f2bda74d1f5b4bcaf413bf5a54;Fri Jul 28 18:51:47 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap#create(int);clojure.lang.PersistentHashtableMap#create(int);709e897e44e353f2bda74d1f5b4bcaf413bf5a54;Fri Jul 28 18:51:47 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap#create(int, PersistentArray);clojure.lang.PersistentHashtableMap#create(int, PersistentArray);709e897e44e353f2bda74d1f5b4bcaf413bf5a54;Fri Jul 28 18:51:47 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap#create(int, PersistentArray, int);clojure.lang.PersistentHashtableMap#create(int, PersistentArray, int);709e897e44e353f2bda74d1f5b4bcaf413bf5a54;Fri Jul 28 18:51:47 2006 +0000
SameType;true;clojure.lang.AFn;clojure.lang.AFn;0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.AFn#withMeta(IPersistentMap);clojure.lang.AFn#withMeta(IPersistentMap);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameType;true;clojure.lang.Obj;clojure.lang.Obj;0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameType;true;clojure.lang.PersistentArray;clojure.lang.PersistentArray;0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#withMeta(IPersistentMap);clojure.lang.PersistentArray#withMeta(IPersistentMap);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentArrayMap#withMeta(IPersistentMap);clojure.lang.PersistentArrayMap#withMeta(IPersistentMap);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameType;true;clojure.lang.PersistentHashtableMap;clojure.lang.PersistentHashtableMap;0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap#withMeta(IPersistentMap);clojure.lang.PersistentHashtableMap#withMeta(IPersistentMap);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameType;true;clojure.lang.PersistentListIdentityMap;clojure.lang.PersistentListIdentityMap;0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListIdentityMap#create(Object, Object);clojure.lang.PersistentListIdentityMap#create(Object, Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListIdentityMap#put(Object, Object);clojure.lang.PersistentListIdentityMap#put(Object, Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameType;true;clojure.lang.PersistentListIdentityMap.Iter;clojure.lang.PersistentListIdentityMap.Iter;0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListIdentityMap.Iter#hasNext();clojure.lang.PersistentListIdentityMap.Iter#hasNext();0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameType;true;clojure.lang.PersistentListIdentityMap.Tail;clojure.lang.PersistentListIdentityMap.Tail;0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListIdentityMap.Tail#add(Object, Object);clojure.lang.PersistentListIdentityMap.Tail#add(Object, Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListIdentityMap.Tail#put(Object, Object);clojure.lang.PersistentListIdentityMap.Tail#put(Object, Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListIdentityMap.Tail#remove(Object);clojure.lang.PersistentListIdentityMap.Tail#remove(Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameType;true;clojure.lang.PersistentListIdentityMap.Link;clojure.lang.PersistentListIdentityMap.Link;0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListIdentityMap.Link#add(Object, Object);clojure.lang.PersistentListIdentityMap.Link#add(Object, Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListIdentityMap.Link#put(Object, Object);clojure.lang.PersistentListIdentityMap.Link#put(Object, Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListIdentityMap.Link#remove(Object);clojure.lang.PersistentListIdentityMap.Link#remove(Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListIdentityMap.Link#create(Object, Object, PersistentListIdentityMap);clojure.lang.PersistentListIdentityMap.Link#create(Object, Object, PersistentListIdentityMap);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameType;true;clojure.lang.PersistentListMap;clojure.lang.PersistentListMap;0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListMap#create(Object, Object);clojure.lang.PersistentListMap#create(Object, Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListMap#put(Object, Object);clojure.lang.PersistentListMap#put(Object, Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameType;true;clojure.lang.PersistentListMap.Iter;clojure.lang.PersistentListMap.Iter;0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListMap.Iter#hasNext();clojure.lang.PersistentListMap.Iter#hasNext();0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameType;true;clojure.lang.PersistentListMap.Tail;clojure.lang.PersistentListMap.Tail;0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListMap.Tail#add(Object, Object);clojure.lang.PersistentListMap.Tail#add(Object, Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListMap.Tail#put(Object, Object);clojure.lang.PersistentListMap.Tail#put(Object, Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListMap.Tail#remove(Object);clojure.lang.PersistentListMap.Tail#remove(Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameType;true;clojure.lang.PersistentListMap.Link;clojure.lang.PersistentListMap.Link;0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListMap.Link#add(Object, Object);clojure.lang.PersistentListMap.Link#add(Object, Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListMap.Link#put(Object, Object);clojure.lang.PersistentListMap.Link#put(Object, Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListMap.Link#remove(Object);clojure.lang.PersistentListMap.Link#remove(Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentListMap.Link#create(Object, Object, PersistentListMap);clojure.lang.PersistentListMap.Link#create(Object, Object, PersistentListMap);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#add(Object, Object);clojure.lang.PersistentTreeMap#add(Object, Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#put(Object, Object);clojure.lang.PersistentTreeMap#put(Object, Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#remove(Object);clojure.lang.PersistentTreeMap#remove(Object);0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;0c422d65c6dc16d9e2887695ee5f6fa3e07fe617;Fri Jul 28 20:50:09 2006 +0000
ExtractMethod;true;clojure.lang.Accessor#invoke(Object, Object, Object, Object, Object, Object[]);clojure.lang.Reflector#invokeInstanceMember(String, Object, Object[]);df7b30a6c1dfd253d63786ed8277ab43329a11dd;Tue Aug 1 20:24:20 2006 +0000
SameType;true;clojure.lang.AFn;clojure.lang.AFn;df7b30a6c1dfd253d63786ed8277ab43329a11dd;Tue Aug 1 20:24:20 2006 +0000
SameMethod;true;clojure.lang.AFn#applyToHelper(IFn, ISeq);clojure.lang.AFn#applyToHelper(IFn, ISeq);df7b30a6c1dfd253d63786ed8277ab43329a11dd;Tue Aug 1 20:24:20 2006 +0000
SameType;true;clojure.lang.Accessor;clojure.lang.Accessor;df7b30a6c1dfd253d63786ed8277ab43329a11dd;Tue Aug 1 20:24:20 2006 +0000
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;df7b30a6c1dfd253d63786ed8277ab43329a11dd;Tue Aug 1 20:24:20 2006 +0000
SameMethod;true;clojure.lang.ArraySeq#ArraySeq(Object[], int);clojure.lang.ArraySeq#ArraySeq(Object[], int);df7b30a6c1dfd253d63786ed8277ab43329a11dd;Tue Aug 1 20:24:20 2006 +0000
SameMethod;true;clojure.lang.ArraySeq#rest();clojure.lang.ArraySeq#rest();df7b30a6c1dfd253d63786ed8277ab43329a11dd;Tue Aug 1 20:24:20 2006 +0000
SameType;true;clojure.lang.IFn;clojure.lang.IFn;df7b30a6c1dfd253d63786ed8277ab43329a11dd;Tue Aug 1 20:24:20 2006 +0000
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;df7b30a6c1dfd253d63786ed8277ab43329a11dd;Tue Aug 1 20:24:20 2006 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;df7b30a6c1dfd253d63786ed8277ab43329a11dd;Tue Aug 1 20:24:20 2006 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;df7b30a6c1dfd253d63786ed8277ab43329a11dd;Tue Aug 1 20:24:20 2006 +0000
SameType;true;clojure.lang.PersistentListMap;clojure.lang.PersistentListMap;275c906989e19fd8fa3afc152ce8e9153eccb595;Wed Aug 2 00:02:41 2006 +0000
SameType;true;clojure.lang.PersistentListMap.Link;clojure.lang.PersistentListMap.Link;275c906989e19fd8fa3afc152ce8e9153eccb595;Wed Aug 2 00:02:41 2006 +0000
SameMethod;true;clojure.lang.PersistentListMap.Link#Link(Object, Object, PersistentListMap, IPersistentMap);clojure.lang.PersistentListMap.Link#Link(Object, Object, PersistentListMap, IPersistentMap);275c906989e19fd8fa3afc152ce8e9153eccb595;Wed Aug 2 00:02:41 2006 +0000
SameMethod;true;clojure.lang.PersistentListMap.Link#count();clojure.lang.PersistentListMap.Link#count();275c906989e19fd8fa3afc152ce8e9153eccb595;Wed Aug 2 00:02:41 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;8c2c0ea39e31c05863a5f0d07fb3916a345c3da8;Wed Aug 2 00:28:32 2006 +0000
SameMethod;true;clojure.lang.RT#seq(Object);clojure.lang.RT#seq(Object);8c2c0ea39e31c05863a5f0d07fb3916a345c3da8;Wed Aug 2 00:28:32 2006 +0000
RenameClass;true;clojure.lang.ISequential;clojure.lang.IPersistentCollection;b47c234ac5a398894c8f3ce5dc7c06a5e7926e10;Fri Aug 4 22:31:21 2006 +0000
SameType;true;clojure.lang.Cons;clojure.lang.Cons;b47c234ac5a398894c8f3ce5dc7c06a5e7926e10;Fri Aug 4 22:31:21 2006 +0000
SameType;true;clojure.lang.IArray;clojure.lang.IArray;b47c234ac5a398894c8f3ce5dc7c06a5e7926e10;Fri Aug 4 22:31:21 2006 +0000
SameType;true;clojure.lang.IPersistentMap;clojure.lang.IPersistentMap;b47c234ac5a398894c8f3ce5dc7c06a5e7926e10;Fri Aug 4 22:31:21 2006 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;b47c234ac5a398894c8f3ce5dc7c06a5e7926e10;Fri Aug 4 22:31:21 2006 +0000
SameType;true;clojure.lang.PersistentHashtableMap;clojure.lang.PersistentHashtableMap;b47c234ac5a398894c8f3ce5dc7c06a5e7926e10;Fri Aug 4 22:31:21 2006 +0000
SameType;true;clojure.lang.PersistentHashtableMap.Seq;clojure.lang.PersistentHashtableMap.Seq;b47c234ac5a398894c8f3ce5dc7c06a5e7926e10;Fri Aug 4 22:31:21 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap.Seq#next(PersistentArray, int, ISeq);clojure.lang.PersistentHashtableMap.Seq#next(PersistentArray, int, ISeq);b47c234ac5a398894c8f3ce5dc7c06a5e7926e10;Fri Aug 4 22:31:21 2006 +0000
SameType;true;clojure.lang.PersistentListIdentityMap;clojure.lang.PersistentListIdentityMap;b47c234ac5a398894c8f3ce5dc7c06a5e7926e10;Fri Aug 4 22:31:21 2006 +0000
SameType;true;clojure.lang.PersistentListMap;clojure.lang.PersistentListMap;b47c234ac5a398894c8f3ce5dc7c06a5e7926e10;Fri Aug 4 22:31:21 2006 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;b47c234ac5a398894c8f3ce5dc7c06a5e7926e10;Fri Aug 4 22:31:21 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;b47c234ac5a398894c8f3ce5dc7c06a5e7926e10;Fri Aug 4 22:31:21 2006 +0000
SameMethod;true;clojure.lang.RT#seq(Object);clojure.lang.RT#seq(Object);b47c234ac5a398894c8f3ce5dc7c06a5e7926e10;Fri Aug 4 22:31:21 2006 +0000
ExtractInterface;true;clojure.lang.IPersistentMap;clojure.lang.Associative;ae23e1e284833c61924cc09f4053ded4cc96cc44;Fri Aug 4 23:13:37 2006 +0000
SameType;true;clojure.lang.Cons;clojure.lang.Cons;ae23e1e284833c61924cc09f4053ded4cc96cc44;Fri Aug 4 23:13:37 2006 +0000
SameType;true;clojure.lang.IPersistentCollection;clojure.lang.IPersistentCollection;ae23e1e284833c61924cc09f4053ded4cc96cc44;Fri Aug 4 23:13:37 2006 +0000
SameType;true;clojure.lang.IPersistentMap;clojure.lang.IPersistentMap;ae23e1e284833c61924cc09f4053ded4cc96cc44;Fri Aug 4 23:13:37 2006 +0000
SameType;true;clojure.lang.PersistentArray;clojure.lang.PersistentArray;ae23e1e284833c61924cc09f4053ded4cc96cc44;Fri Aug 4 23:13:37 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;ae23e1e284833c61924cc09f4053ded4cc96cc44;Fri Aug 4 23:13:37 2006 +0000
SameType;true;clojure.lang.Tuple;clojure.lang.Tuple;ae23e1e284833c61924cc09f4053ded4cc96cc44;Fri Aug 4 23:13:37 2006 +0000
SameType;true;clojure.lang.TObj;clojure.lang.TObj;ee19adc3e5bc9e5b525dac99e9281f3db30d3ece;Fri Aug 4 23:21:07 2006 +0000
SameMethod;true;clojure.lang.TObj#TObj();clojure.lang.TObj#TObj();ee19adc3e5bc9e5b525dac99e9281f3db30d3ece;Fri Aug 4 23:21:07 2006 +0000
SameType;true;clojure.lang.ThreadLocalData;clojure.lang.ThreadLocalData;ee19adc3e5bc9e5b525dac99e9281f3db30d3ece;Fri Aug 4 23:21:07 2006 +0000
SameMethod;true;clojure.lang.ThreadLocalData#main(String[]);clojure.lang.ThreadLocalData#main(String[]);ee19adc3e5bc9e5b525dac99e9281f3db30d3ece;Fri Aug 4 23:21:07 2006 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;ee19adc3e5bc9e5b525dac99e9281f3db30d3ece;Fri Aug 4 23:21:07 2006 +0000
RenameMethod;false;clojure.lang.PersistentArray#get(int);clojure.lang.PersistentArray#nth(int);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
RenameMethod;false;clojure.lang.PersistentArray#set(int, Object);clojure.lang.PersistentArray#assocN(int, Object);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
RenameMethod;false;clojure.lang.PersistentListMap#put(Object, Object);clojure.lang.PersistentListMap#assoc(Object, Object);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
RenameMethod;false;clojure.lang.PersistentListMap.Link#put(Object, Object);clojure.lang.PersistentListMap.Link#assoc(Object, Object);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
RenameMethod;false;clojure.lang.PersistentListMap.Tail#put(Object, Object);clojure.lang.PersistentListMap.Tail#assoc(Object, Object);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
RenameMethod;false;clojure.lang.PersistentTreeMap#put(Object, Object);clojure.lang.PersistentTreeMap#assoc(Object, Object);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
RenameMethod;false;clojure.lang.Tuple#get(int);clojure.lang.Tuple#nth(int);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
RenameMethod;false;clojure.lang.Tuple#set(int, Object);clojure.lang.Tuple#assocN(int, Object);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
RenameMethod;true;clojure.lang.PersistentArrayMap#put(Object, Object);clojure.lang.PersistentArrayMap#assoc(Object, Object);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
RenameMethod;true;clojure.lang.PersistentHashtableMap#put(Object, Object);clojure.lang.PersistentHashtableMap#assoc(Object, Object);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
RenameMethod;true;clojure.lang.PersistentArrayList#set(int, Object);clojure.lang.PersistentArrayList#assocN(int, Object);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
RenameMethod;true;clojure.lang.PersistentArrayList#get(int);clojure.lang.PersistentArrayList#nth(int);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.Associative;clojure.lang.Associative;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.IArray;clojure.lang.IArray;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object);clojure.lang.Keyword#invoke(Object, Object);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.PersistentArray;clojure.lang.PersistentArray;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.PersistentArray.Seq;clojure.lang.PersistentArray.Seq;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.PersistentArray.Seq#first();clojure.lang.PersistentArray.Seq#first();cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.PersistentArray.ValIter;clojure.lang.PersistentArray.ValIter;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.PersistentArray.ValIter#next();clojure.lang.PersistentArray.ValIter#next();cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#PersistentArray(IArray);clojure.lang.PersistentArray#PersistentArray(IArray);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#equals(Object);clojure.lang.PersistentArray#equals(Object);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#hashCode();clojure.lang.PersistentArray#hashCode();cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#main(String[]);clojure.lang.PersistentArray#main(String[]);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.PersistentArrayList;clojure.lang.PersistentArrayList;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.PersistentArrayList#add(Object);clojure.lang.PersistentArrayList#add(Object);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.PersistentHashtableMap;clojure.lang.PersistentHashtableMap;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap#doPut(int, Object, Object, PersistentArray);clojure.lang.PersistentHashtableMap#doPut(int, Object, Object, PersistentArray);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap#doAdd(int, Object, Object, PersistentArray);clojure.lang.PersistentHashtableMap#doAdd(int, Object, Object, PersistentArray);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap#remove(Object);clojure.lang.PersistentHashtableMap#remove(Object);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.PersistentHashtableMap.Seq;clojure.lang.PersistentHashtableMap.Seq;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap.Seq#next(PersistentArray, int, ISeq);clojure.lang.PersistentHashtableMap.Seq#next(PersistentArray, int, ISeq);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.PersistentHashtableMap.Iter;clojure.lang.PersistentHashtableMap.Iter;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap.Iter#nextBucket();clojure.lang.PersistentHashtableMap.Iter#nextBucket();cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap#entriesFor(Object);clojure.lang.PersistentHashtableMap#entriesFor(Object);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.PersistentListMap;clojure.lang.PersistentListMap;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.PersistentListMap#add(Object, Object);clojure.lang.PersistentListMap#add(Object, Object);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.PersistentListMap.Tail;clojure.lang.PersistentListMap.Tail;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.PersistentListMap.Link;clojure.lang.PersistentListMap.Link;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#main(String[]);clojure.lang.PersistentTreeMap#main(String[]);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.TObj;clojure.lang.TObj;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.TObj#putAttr(Object, Object);clojure.lang.TObj#putAttr(Object, Object);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.ThreadLocalData;clojure.lang.ThreadLocalData;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.ThreadLocalData#main(String[]);clojure.lang.ThreadLocalData#main(String[]);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.Tuple;clojure.lang.Tuple;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.Tuple#equals(Object);clojure.lang.Tuple#equals(Object);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
SameMethod;true;clojure.lang.Var#setThreadBinding(Binding);clojure.lang.Var#setThreadBinding(Binding);cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e;Fri Aug 4 23:31:33 2006 +0000
ExtractSuperclass;true;clojure.lang.PersistentArray;clojure.lang.AnArray;a8ba1dbdec6976596e005b7ffe2d06355280a10f;Fri Aug 4 23:43:39 2006 +0000
SameType;true;clojure.lang.PersistentArray;clojure.lang.PersistentArray;a8ba1dbdec6976596e005b7ffe2d06355280a10f;Fri Aug 4 23:43:39 2006 +0000
SameType;true;clojure.lang.Tuple;clojure.lang.Tuple;a8ba1dbdec6976596e005b7ffe2d06355280a10f;Fri Aug 4 23:43:39 2006 +0000
SameType;true;clojure.lang.AnArray;clojure.lang.AnArray;cfbe0fe8a1adaf7b16f37d92545c89230256221d;Sat Aug 5 15:06:30 2006 +0000
SameMethod;true;clojure.lang.AnArray#withMeta(IPersistentMap);clojure.lang.AnArray#withMeta(IPersistentMap);cfbe0fe8a1adaf7b16f37d92545c89230256221d;Sat Aug 5 15:06:30 2006 +0000
SameType;true;clojure.lang.IArray;clojure.lang.IArray;cfbe0fe8a1adaf7b16f37d92545c89230256221d;Sat Aug 5 15:06:30 2006 +0000
SameType;true;clojure.lang.IPersistentMap;clojure.lang.IPersistentMap;cfbe0fe8a1adaf7b16f37d92545c89230256221d;Sat Aug 5 15:06:30 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;cfbe0fe8a1adaf7b16f37d92545c89230256221d;Sat Aug 5 15:06:30 2006 +0000
RenameMethod;false;clojure.lang.MapEntry#add(Object, Object);clojure.lang.MapEntry#assocEx(Object, Object);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
RenameMethod;false;clojure.lang.MapEntry#remove(Object);clojure.lang.MapEntry#without(Object);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
RenameMethod;false;clojure.lang.PersistentArrayMap#remove(Object);clojure.lang.PersistentArrayMap#without(Object);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
RenameMethod;false;clojure.lang.PersistentListMap#add(Object, Object);clojure.lang.PersistentListMap#assocEx(Object, Object);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
RenameMethod;false;clojure.lang.PersistentListMap#remove(Object);clojure.lang.PersistentListMap#without(Object);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
RenameMethod;false;clojure.lang.PersistentListMap.Link#add(Object, Object);clojure.lang.PersistentListMap.Link#assocEx(Object, Object);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
RenameMethod;false;clojure.lang.PersistentListMap.Tail#add(Object, Object);clojure.lang.PersistentListMap.Tail#assocEx(Object, Object);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
RenameMethod;false;clojure.lang.PersistentListMap.Tail#remove(Object);clojure.lang.PersistentListMap.Tail#without(Object);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
RenameMethod;false;clojure.lang.PersistentTreeMap#add(Object, Object);clojure.lang.PersistentTreeMap#assocEx(Object, Object);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
RenameMethod;false;clojure.lang.PersistentTreeMap#remove(Object);clojure.lang.PersistentTreeMap#without(Object);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
RenameMethod;true;clojure.lang.PersistentArrayMap#add(Object, Object);clojure.lang.PersistentArrayMap#assocEx(Object, Object);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
RenameMethod;true;clojure.lang.PersistentHashtableMap#remove(Object);clojure.lang.PersistentHashtableMap#without(Object);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
RenameMethod;true;clojure.lang.PersistentListMap.Link#remove(Object);clojure.lang.PersistentListMap.Link#without(Object);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
RenameMethod;true;clojure.lang.PersistentHashtableMap#add(Object, Object);clojure.lang.PersistentHashtableMap#assocEx(Object, Object);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
SameType;true;clojure.lang.IArray;clojure.lang.IArray;db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
SameType;true;clojure.lang.IPersistentMap;clojure.lang.IPersistentMap;db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
SameType;true;clojure.lang.MapEntry;clojure.lang.MapEntry;db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
SameType;true;clojure.lang.PersistentHashtableMap;clojure.lang.PersistentHashtableMap;db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap#doAdd(int, Object, Object, PersistentArray);clojure.lang.PersistentHashtableMap#doAdd(int, Object, Object, PersistentArray);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
SameType;true;clojure.lang.PersistentListMap;clojure.lang.PersistentListMap;db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
SameType;true;clojure.lang.PersistentListMap.Tail;clojure.lang.PersistentListMap.Tail;db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
SameType;true;clojure.lang.PersistentListMap.Link;clojure.lang.PersistentListMap.Link;db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
SameMethod;true;clojure.lang.PersistentListMap.Link#assoc(Object, Object);clojure.lang.PersistentListMap.Link#assoc(Object, Object);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#main(String[]);clojure.lang.PersistentTreeMap#main(String[]);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
SameType;true;clojure.lang.TObj;clojure.lang.TObj;db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
SameMethod;true;clojure.lang.TObj#removeAttr(Object);clojure.lang.TObj#removeAttr(Object);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
SameMethod;true;clojure.lang.Var#setThreadBinding(Binding);clojure.lang.Var#setThreadBinding(Binding);db58898d1d44d8025208bb5f0b2c4a493a5cdb43;Sat Aug 5 15:18:43 2006 +0000
SameType;true;clojure.lang.AnArray;clojure.lang.AnArray;da11eb9d0dd587e532470965b3c655b741d1fa5c;Sat Aug 5 15:31:36 2006 +0000
SameMethod;true;clojure.lang.AnArray#assoc(Object, Object);clojure.lang.AnArray#assoc(Object, Object);da11eb9d0dd587e532470965b3c655b741d1fa5c;Sat Aug 5 15:31:36 2006 +0000
SameType;true;clojure.lang.Associative;clojure.lang.Associative;da11eb9d0dd587e532470965b3c655b741d1fa5c;Sat Aug 5 15:31:36 2006 +0000
SameType;true;clojure.lang.IPersistentMap;clojure.lang.IPersistentMap;da11eb9d0dd587e532470965b3c655b741d1fa5c;Sat Aug 5 15:31:36 2006 +0000
RenameMethod;false;clojure.lang.PersistentArrayList#add(Object);clojure.lang.PersistentArrayList#cons(Object);279dd21d4b919496c8fb54c3135f2b82cc36f5c2;Sat Aug 5 16:44:23 2006 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;279dd21d4b919496c8fb54c3135f2b82cc36f5c2;Sat Aug 5 16:44:23 2006 +0000
SameType;true;clojure.lang.AnArray;clojure.lang.AnArray;279dd21d4b919496c8fb54c3135f2b82cc36f5c2;Sat Aug 5 16:44:23 2006 +0000
SameType;true;clojure.lang.Cons;clojure.lang.Cons;279dd21d4b919496c8fb54c3135f2b82cc36f5c2;Sat Aug 5 16:44:23 2006 +0000
SameType;true;clojure.lang.IPersistentCollection;clojure.lang.IPersistentCollection;279dd21d4b919496c8fb54c3135f2b82cc36f5c2;Sat Aug 5 16:44:23 2006 +0000
SameType;true;clojure.lang.PersistentArray;clojure.lang.PersistentArray;279dd21d4b919496c8fb54c3135f2b82cc36f5c2;Sat Aug 5 16:44:23 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#main(String[]);clojure.lang.PersistentArray#main(String[]);279dd21d4b919496c8fb54c3135f2b82cc36f5c2;Sat Aug 5 16:44:23 2006 +0000
SameType;true;clojure.lang.PersistentArrayList;clojure.lang.PersistentArrayList;279dd21d4b919496c8fb54c3135f2b82cc36f5c2;Sat Aug 5 16:44:23 2006 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;279dd21d4b919496c8fb54c3135f2b82cc36f5c2;Sat Aug 5 16:44:23 2006 +0000
SameType;true;clojure.lang.PersistentHashtableMap;clojure.lang.PersistentHashtableMap;279dd21d4b919496c8fb54c3135f2b82cc36f5c2;Sat Aug 5 16:44:23 2006 +0000
SameType;true;clojure.lang.PersistentListMap;clojure.lang.PersistentListMap;279dd21d4b919496c8fb54c3135f2b82cc36f5c2;Sat Aug 5 16:44:23 2006 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;279dd21d4b919496c8fb54c3135f2b82cc36f5c2;Sat Aug 5 16:44:23 2006 +0000
SameType;true;clojure.lang.Associative;clojure.lang.Associative;9213607263509ebc766e7bcf082784ec8ae19bfd;Sat Aug 5 16:59:24 2006 +0000
SameType;true;clojure.lang.IPersistentMap;clojure.lang.IPersistentMap;9213607263509ebc766e7bcf082784ec8ae19bfd;Sat Aug 5 16:59:24 2006 +0000
RenameClass;true;clojure.lang.AnArray;clojure.lang.APersistentArray;73f8a4754a43dfce194989457b54aceca5595979;Sat Aug 5 17:06:27 2006 +0000
RenameClass;true;clojure.lang.IArray;clojure.lang.IPersistentArray;73f8a4754a43dfce194989457b54aceca5595979;Sat Aug 5 17:06:27 2006 +0000
SameType;true;clojure.lang.PersistentArray;clojure.lang.PersistentArray;73f8a4754a43dfce194989457b54aceca5595979;Sat Aug 5 17:06:27 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#equals(Object);clojure.lang.PersistentArray#equals(Object);73f8a4754a43dfce194989457b54aceca5595979;Sat Aug 5 17:06:27 2006 +0000
SameType;true;clojure.lang.PersistentArrayList;clojure.lang.PersistentArrayList;73f8a4754a43dfce194989457b54aceca5595979;Sat Aug 5 17:06:27 2006 +0000
SameType;true;clojure.lang.Tuple;clojure.lang.Tuple;73f8a4754a43dfce194989457b54aceca5595979;Sat Aug 5 17:06:27 2006 +0000
SameMethod;true;clojure.lang.Tuple#equals(Object);clojure.lang.Tuple#equals(Object);73f8a4754a43dfce194989457b54aceca5595979;Sat Aug 5 17:06:27 2006 +0000
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameType;true;clojure.lang.Cons;clojure.lang.Cons;5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameType;true;clojure.lang.FnSeq;clojure.lang.FnSeq;5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameMethod;true;clojure.lang.FnSeq#rest();clojure.lang.FnSeq#rest();5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameType;true;clojure.lang.IPersistentCollection;clojure.lang.IPersistentCollection;5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameType;true;clojure.lang.ISeq;clojure.lang.ISeq;5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameType;true;clojure.lang.IteratorSeq;clojure.lang.IteratorSeq;5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameType;true;clojure.lang.MapEntry;clojure.lang.MapEntry;5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameType;true;clojure.lang.MapEntry.Seq;clojure.lang.MapEntry.Seq;5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameType;true;clojure.lang.PersistentArray;clojure.lang.PersistentArray;5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameType;true;clojure.lang.PersistentArray.Seq;clojure.lang.PersistentArray.Seq;5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameType;true;clojure.lang.PersistentArrayMap.Seq;clojure.lang.PersistentArrayMap.Seq;5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameType;true;clojure.lang.PersistentHashtableMap;clojure.lang.PersistentHashtableMap;5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameType;true;clojure.lang.PersistentHashtableMap.Seq;clojure.lang.PersistentHashtableMap.Seq;5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameType;true;clojure.lang.PersistentListMap;clojure.lang.PersistentListMap;5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameType;true;clojure.lang.PersistentTreeMap.Seq;clojure.lang.PersistentTreeMap.Seq;5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
SameMethod;true;clojure.lang.RT#seq(Object);clojure.lang.RT#seq(Object);5572d24dae42bf686048a1add52437b4b3627ca0;Sat Aug 5 17:52:25 2006 +0000
RenameMethod;false;clojure.lang.PersistentArrayList#remove();clojure.lang.PersistentArrayList#pop();a619d3a6f9cde068d0945ab26b275113c8ffde1b;Sat Aug 5 17:59:51 2006 +0000
SameType;true;clojure.lang.PersistentArrayList;clojure.lang.PersistentArrayList;a619d3a6f9cde068d0945ab26b275113c8ffde1b;Sat Aug 5 17:59:51 2006 +0000
SameMethod;true;clojure.lang.PersistentArrayList#grow();clojure.lang.PersistentArrayList#grow();a619d3a6f9cde068d0945ab26b275113c8ffde1b;Sat Aug 5 17:59:51 2006 +0000
MoveMethod;false;clojure.lang.PersistentListMap.Link#rest();clojure.lang.PersistentList#rest();397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
MoveMethod;false;clojure.lang.PersistentListMap.Tail#rest();clojure.lang.PersistentListMap.Tail.Seq#rest();397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
SameType;true;clojure.lang.ISeq;clojure.lang.ISeq;397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
SameMethod;true;clojure.lang.LispReader#readDelimitedList(char, PushbackReader, boolean);clojure.lang.LispReader#readDelimitedList(char, PushbackReader, boolean);397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
SameType;true;clojure.lang.PersistentListMap;clojure.lang.PersistentListMap;397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
SameType;true;clojure.lang.PersistentListMap.Tail;clojure.lang.PersistentListMap.Tail;397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
SameMethod;true;clojure.lang.PersistentListMap.Tail#seq();clojure.lang.PersistentListMap.Tail#seq();397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
SameType;true;clojure.lang.PersistentListMap.Link;clojure.lang.PersistentListMap.Link;397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
SameMethod;true;clojure.lang.PersistentListMap.Link#seq();clojure.lang.PersistentListMap.Link#seq();397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
SameMethod;true;clojure.lang.RT#list(Object);clojure.lang.RT#list(Object);397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
SameMethod;true;clojure.lang.RT#listStar(Object, ISeq);clojure.lang.RT#listStar(Object, ISeq);397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
SameMethod;true;clojure.lang.RT#listStar(Object, Object, ISeq);clojure.lang.RT#listStar(Object, Object, ISeq);397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
SameMethod;true;clojure.lang.RT#listStar(Object, Object, Object, ISeq);clojure.lang.RT#listStar(Object, Object, Object, ISeq);397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
SameMethod;true;clojure.lang.RT#listStar(Object, Object, Object, Object, ISeq);clojure.lang.RT#listStar(Object, Object, Object, Object, ISeq);397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
SameMethod;true;clojure.lang.RT#listStar(Object, Object, Object, Object, Object, ISeq);clojure.lang.RT#listStar(Object, Object, Object, Object, Object, ISeq);397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
SameMethod;true;clojure.lang.RT#arrayToList(Object[]);clojure.lang.RT#arrayToList(Object[]);397f768ca30a4615c753ec544dedc5c39be7743b;Sat Aug 5 19:24:17 2006 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;c318f7c60e4cff91b0591d1e9dc8bee63c716404;Sat Aug 5 22:39:38 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;c318f7c60e4cff91b0591d1e9dc8bee63c716404;Sat Aug 5 22:39:38 2006 +0000
SameType;true;clojure.lang.APersistentArray;clojure.lang.APersistentArray;3d28909a40372830824c98434fab45198248e75e;Sat Aug 5 23:01:07 2006 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;3d28909a40372830824c98434fab45198248e75e;Sat Aug 5 23:01:07 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;0f1d6411d324b512aa8658d769f274b27b20bce0;Sun Aug 6 18:17:13 2006 +0000
SameMethod;true;clojure.lang.RT#seq(Object);clojure.lang.RT#seq(Object);0f1d6411d324b512aa8658d769f274b27b20bce0;Sun Aug 6 18:17:13 2006 +0000
SameMethod;true;clojure.lang.RT#first(Object);clojure.lang.RT#first(Object);0f1d6411d324b512aa8658d769f274b27b20bce0;Sun Aug 6 18:17:13 2006 +0000
SameMethod;true;clojure.lang.RT#rest(Object);clojure.lang.RT#rest(Object);0f1d6411d324b512aa8658d769f274b27b20bce0;Sun Aug 6 18:17:13 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;0165bc3a0df548701007dcff28dd4b5781cc9e31;Sun Aug 6 23:21:06 2006 +0000
SameType;true;clojure.lang.PersistentArray;clojure.lang.PersistentArray;108db3bc660f25860a201fbd2769ef2640f300bf;Mon Aug 7 17:13:55 2006 +0000
SameType;true;clojure.lang.PersistentArray.Seq;clojure.lang.PersistentArray.Seq;108db3bc660f25860a201fbd2769ef2640f300bf;Mon Aug 7 17:13:55 2006 +0000
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;108db3bc660f25860a201fbd2769ef2640f300bf;Mon Aug 7 17:13:55 2006 +0000
SameMethod;true;clojure.lang.PersistentQueue#pop();clojure.lang.PersistentQueue#pop();108db3bc660f25860a201fbd2769ef2640f300bf;Mon Aug 7 17:13:55 2006 +0000
SameMethod;true;clojure.lang.PersistentQueue#count();clojure.lang.PersistentQueue#count();108db3bc660f25860a201fbd2769ef2640f300bf;Mon Aug 7 17:13:55 2006 +0000
SameMethod;true;clojure.lang.PersistentQueue#seq();clojure.lang.PersistentQueue#seq();108db3bc660f25860a201fbd2769ef2640f300bf;Mon Aug 7 17:13:55 2006 +0000
SameMethod;true;clojure.lang.PersistentQueue#cons(Object);clojure.lang.PersistentQueue#cons(Object);108db3bc660f25860a201fbd2769ef2640f300bf;Mon Aug 7 17:13:55 2006 +0000
SameType;true;clojure.lang.PersistentQueue.Seq;clojure.lang.PersistentQueue.Seq;108db3bc660f25860a201fbd2769ef2640f300bf;Mon Aug 7 17:13:55 2006 +0000
SameMethod;true;clojure.lang.PersistentQueue.Seq#Seq(ISeq, ISeq);clojure.lang.PersistentQueue.Seq#Seq(ISeq, ISeq);108db3bc660f25860a201fbd2769ef2640f300bf;Mon Aug 7 17:13:55 2006 +0000
SameMethod;true;clojure.lang.PersistentQueue.Seq#rest();clojure.lang.PersistentQueue.Seq#rest();108db3bc660f25860a201fbd2769ef2640f300bf;Mon Aug 7 17:13:55 2006 +0000
SameMethod;true;clojure.lang.PersistentQueue#main(String[]);clojure.lang.PersistentQueue#main(String[]);108db3bc660f25860a201fbd2769ef2640f300bf;Mon Aug 7 17:13:55 2006 +0000
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;e5fafd352e9351e1f55b1fac0de911e1dc3b632a;Wed Aug 9 13:17:11 2006 +0000
SameMethod;true;clojure.lang.ArraySeq#ArraySeq(Object[], int);clojure.lang.ArraySeq#ArraySeq(Object[], int);e5fafd352e9351e1f55b1fac0de911e1dc3b632a;Wed Aug 9 13:17:11 2006 +0000
SameMethod;true;clojure.lang.ArraySeq#rest();clojure.lang.ArraySeq#rest();e5fafd352e9351e1f55b1fac0de911e1dc3b632a;Wed Aug 9 13:17:11 2006 +0000
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;e5fafd352e9351e1f55b1fac0de911e1dc3b632a;Wed Aug 9 13:17:11 2006 +0000
SameMethod;true;clojure.lang.PersistentQueue#pop();clojure.lang.PersistentQueue#pop();e5fafd352e9351e1f55b1fac0de911e1dc3b632a;Wed Aug 9 13:17:11 2006 +0000
SameMethod;true;clojure.lang.PersistentQueue#cons(Object);clojure.lang.PersistentQueue#cons(Object);e5fafd352e9351e1f55b1fac0de911e1dc3b632a;Wed Aug 9 13:17:11 2006 +0000
SameType;true;clojure.lang.APersistentArray;clojure.lang.APersistentArray;be12a746746c53c1f00758df7daa1fa5edc03935;Wed Aug 9 13:57:48 2006 +0000
SameMethod;true;clojure.lang.APersistentArray#equals(Object);clojure.lang.APersistentArray#equals(Object);be12a746746c53c1f00758df7daa1fa5edc03935;Wed Aug 9 13:57:48 2006 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;be12a746746c53c1f00758df7daa1fa5edc03935;Wed Aug 9 13:57:48 2006 +0000
SameMethod;true;clojure.lang.APersistentMap#equals(Object);clojure.lang.APersistentMap#equals(Object);be12a746746c53c1f00758df7daa1fa5edc03935;Wed Aug 9 13:57:48 2006 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;be12a746746c53c1f00758df7daa1fa5edc03935;Wed Aug 9 13:57:48 2006 +0000
SameMethod;true;clojure.lang.ASeq#equals(Object);clojure.lang.ASeq#equals(Object);be12a746746c53c1f00758df7daa1fa5edc03935;Wed Aug 9 13:57:48 2006 +0000
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;be12a746746c53c1f00758df7daa1fa5edc03935;Wed Aug 9 13:57:48 2006 +0000
SameMethod;true;clojure.lang.PersistentQueue#cons(Object);clojure.lang.PersistentQueue#cons(Object);be12a746746c53c1f00758df7daa1fa5edc03935;Wed Aug 9 13:57:48 2006 +0000
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;b9b9ceb459f528347f2433357697370fa3fa67b4;Wed Aug 9 14:45:16 2006 +0000
SameType;true;clojure.lang.MapEntry;clojure.lang.MapEntry;b9b9ceb459f528347f2433357697370fa3fa67b4;Wed Aug 9 14:45:16 2006 +0000
SameType;true;clojure.lang.MapEntry.Seq;clojure.lang.MapEntry.Seq;b9b9ceb459f528347f2433357697370fa3fa67b4;Wed Aug 9 14:45:16 2006 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;b9b9ceb459f528347f2433357697370fa3fa67b4;Wed Aug 9 14:45:16 2006 +0000
SameType;true;clojure.lang.PersistentArrayMap.Seq;clojure.lang.PersistentArrayMap.Seq;b9b9ceb459f528347f2433357697370fa3fa67b4;Wed Aug 9 14:45:16 2006 +0000
SameType;true;clojure.lang.PersistentHashtableMap;clojure.lang.PersistentHashtableMap;b9b9ceb459f528347f2433357697370fa3fa67b4;Wed Aug 9 14:45:16 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap#seq();clojure.lang.PersistentHashtableMap#seq();b9b9ceb459f528347f2433357697370fa3fa67b4;Wed Aug 9 14:45:16 2006 +0000
SameType;true;clojure.lang.PersistentHashtableMap.Seq;clojure.lang.PersistentHashtableMap.Seq;b9b9ceb459f528347f2433357697370fa3fa67b4;Wed Aug 9 14:45:16 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap.Seq#rest();clojure.lang.PersistentHashtableMap.Seq#rest();b9b9ceb459f528347f2433357697370fa3fa67b4;Wed Aug 9 14:45:16 2006 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;b9b9ceb459f528347f2433357697370fa3fa67b4;Wed Aug 9 14:45:16 2006 +0000
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;b9b9ceb459f528347f2433357697370fa3fa67b4;Wed Aug 9 14:45:16 2006 +0000
SameType;true;clojure.lang.PersistentQueue.Seq;clojure.lang.PersistentQueue.Seq;b9b9ceb459f528347f2433357697370fa3fa67b4;Wed Aug 9 14:45:16 2006 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;b9b9ceb459f528347f2433357697370fa3fa67b4;Wed Aug 9 14:45:16 2006 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#seq();clojure.lang.PersistentTreeMap#seq();b9b9ceb459f528347f2433357697370fa3fa67b4;Wed Aug 9 14:45:16 2006 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#rseq();clojure.lang.PersistentTreeMap#rseq();b9b9ceb459f528347f2433357697370fa3fa67b4;Wed Aug 9 14:45:16 2006 +0000
SameType;true;clojure.lang.PersistentTreeMap.Seq;clojure.lang.PersistentTreeMap.Seq;b9b9ceb459f528347f2433357697370fa3fa67b4;Wed Aug 9 14:45:16 2006 +0000
SameMethod;true;clojure.lang.PersistentTreeMap.Seq#rest();clojure.lang.PersistentTreeMap.Seq#rest();b9b9ceb459f528347f2433357697370fa3fa67b4;Wed Aug 9 14:45:16 2006 +0000
SameType;true;clojure.lang.PersistentArray;clojure.lang.PersistentArray;28fe593fca2b06b203cb3ce3e6b7ea3eee7dd9a7;Fri Aug 11 13:29:24 2006 +0000
SameType;true;clojure.lang.PersistentArray.Master;clojure.lang.PersistentArray.Master;28fe593fca2b06b203cb3ce3e6b7ea3eee7dd9a7;Fri Aug 11 13:29:24 2006 +0000
SameType;true;clojure.lang.PersistentArray.Data;clojure.lang.PersistentArray.Data;28fe593fca2b06b203cb3ce3e6b7ea3eee7dd9a7;Fri Aug 11 13:29:24 2006 +0000
SameMethod;true;clojure.lang.PersistentArray#PersistentArray(int, Object, float);clojure.lang.PersistentArray#PersistentArray(int, Object, float);28fe593fca2b06b203cb3ce3e6b7ea3eee7dd9a7;Fri Aug 11 13:29:24 2006 +0000
SameType;true;clojure.lang.PersistentArrayList;clojure.lang.PersistentArrayList;28fe593fca2b06b203cb3ce3e6b7ea3eee7dd9a7;Fri Aug 11 13:29:24 2006 +0000
SameMethod;true;clojure.lang.PersistentArrayList#grow();clojure.lang.PersistentArrayList#grow();28fe593fca2b06b203cb3ce3e6b7ea3eee7dd9a7;Fri Aug 11 13:29:24 2006 +0000
SameType;true;clojure.lang.PersistentHashtableMap;clojure.lang.PersistentHashtableMap;a6aa6a69dd251e2a47fe6c1ef17c4e56c0dc5314;Fri Aug 11 16:30:07 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap#doPut(int, Object, Object, PersistentArray);clojure.lang.PersistentHashtableMap#doPut(int, Object, Object, PersistentArray);a6aa6a69dd251e2a47fe6c1ef17c4e56c0dc5314;Fri Aug 11 16:30:07 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap#doAdd(int, Object, Object, PersistentArray);clojure.lang.PersistentHashtableMap#doAdd(int, Object, Object, PersistentArray);a6aa6a69dd251e2a47fe6c1ef17c4e56c0dc5314;Fri Aug 11 16:30:07 2006 +0000
SameType;true;clojure.lang.PersistentHashtableMap.Iter;clojure.lang.PersistentHashtableMap.Iter;a6aa6a69dd251e2a47fe6c1ef17c4e56c0dc5314;Fri Aug 11 16:30:07 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap.Iter#nextBucket();clojure.lang.PersistentHashtableMap.Iter#nextBucket();a6aa6a69dd251e2a47fe6c1ef17c4e56c0dc5314;Fri Aug 11 16:30:07 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap.Iter#next();clojure.lang.PersistentHashtableMap.Iter#next();a6aa6a69dd251e2a47fe6c1ef17c4e56c0dc5314;Fri Aug 11 16:30:07 2006 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap#bucketFor(Object, PersistentArray);clojure.lang.PersistentHashtableMap#bucketFor(Object, PersistentArray);a6aa6a69dd251e2a47fe6c1ef17c4e56c0dc5314;Fri Aug 11 16:30:07 2006 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;a6aa6a69dd251e2a47fe6c1ef17c4e56c0dc5314;Fri Aug 11 16:30:07 2006 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#main(String[]);clojure.lang.PersistentTreeMap#main(String[]);a6aa6a69dd251e2a47fe6c1ef17c4e56c0dc5314;Fri Aug 11 16:30:07 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;73b3f73d469b4a37dd3827e4fff45efce7459d24;Mon Aug 14 15:44:49 2006 +0000
ExtractMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);clojure.lang.RestFn#ontoArrayPrepend(Object[], Object[]);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameType;true;clojure.lang.RestFn;clojure.lang.RestFn;db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#applyTo(ISeq);clojure.lang.RestFn#applyTo(ISeq);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke();clojure.lang.RestFn#invoke();db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object);clojure.lang.RestFn#invoke(Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object);clojure.lang.RestFn#invoke(Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);db5107d5d868cdd95e5af40cc9ab02f0261df7f4;Mon Aug 21 19:58:57 2006 +0000
SameType;true;clojure.lang.IteratorSeq;clojure.lang.IteratorSeq;7608103759042de92448c70cc4dc9cbabc38f44b;Mon Sep 25 14:05:29 2006 +0000
SameMethod;true;clojure.lang.IteratorSeq#first();clojure.lang.IteratorSeq#first();7608103759042de92448c70cc4dc9cbabc38f44b;Mon Sep 25 14:05:29 2006 +0000
SameMethod;true;clojure.lang.IteratorSeq#rest();clojure.lang.IteratorSeq#rest();7608103759042de92448c70cc4dc9cbabc38f44b;Mon Sep 25 14:05:29 2006 +0000
RenameMethod;false;clojure.lang.RT#format(Writer, String, ISeq);clojure.lang.RT#doFormat(Writer, String, ISeq);fc795d4a8da2e9fc990037678b22a51475685600;Mon Sep 25 14:58:51 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;fc795d4a8da2e9fc990037678b22a51475685600;Mon Sep 25 14:58:51 2006 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;65ec8f8e8fcc6611cb4326705018dbed472e0ce7;Mon Sep 25 15:50:37 2006 +0000
SameMethod;true;clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);65ec8f8e8fcc6611cb4326705018dbed472e0ce7;Mon Sep 25 15:50:37 2006 +0000
SameMethod;true;clojure.lang.LispReader#interpretToken(String);clojure.lang.LispReader#interpretToken(String);65ec8f8e8fcc6611cb4326705018dbed472e0ce7;Mon Sep 25 15:50:37 2006 +0000
SameMethod;true;clojure.lang.LispReader#main(String[]);clojure.lang.LispReader#main(String[]);65ec8f8e8fcc6611cb4326705018dbed472e0ce7;Mon Sep 25 15:50:37 2006 +0000
RenameClass;true;clojure.lang.Namespace;clojure.lang.Module;51c468f878a842bc6e469c32acbc58543448d081;Mon Sep 25 17:54:37 2006 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;51c468f878a842bc6e469c32acbc58543448d081;Mon Sep 25 17:54:37 2006 +0000
SameMethod;true;clojure.lang.LispReader#matchVar(String);clojure.lang.LispReader#matchVar(String);51c468f878a842bc6e469c32acbc58543448d081;Mon Sep 25 17:54:37 2006 +0000
SameMethod;true;clojure.lang.Namespace#find(String);clojure.lang.Module#find(String);51c468f878a842bc6e469c32acbc58543448d081;Mon Sep 25 17:54:37 2006 +0000
SameMethod;true;clojure.lang.Namespace#findOrCreate(String);clojure.lang.Module#findOrCreate(String);51c468f878a842bc6e469c32acbc58543448d081;Mon Sep 25 17:54:37 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;51c468f878a842bc6e469c32acbc58543448d081;Mon Sep 25 17:54:37 2006 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;51c468f878a842bc6e469c32acbc58543448d081;Mon Sep 25 17:54:37 2006 +0000
SameMethod;true;clojure.lang.Var#toString();clojure.lang.Var#toString();51c468f878a842bc6e469c32acbc58543448d081;Mon Sep 25 17:54:37 2006 +0000
SameMethod;true;clojure.lang.Var#bind(Object);clojure.lang.Var#bind(Object);51c468f878a842bc6e469c32acbc58543448d081;Mon Sep 25 17:54:37 2006 +0000
SameMethod;true;clojure.lang.Var#getValue();clojure.lang.Var#getValue();51c468f878a842bc6e469c32acbc58543448d081;Mon Sep 25 17:54:37 2006 +0000
SameMethod;true;clojure.lang.Var#main(String[]);clojure.lang.Var#main(String[]);51c468f878a842bc6e469c32acbc58543448d081;Mon Sep 25 17:54:37 2006 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;86fcd18f4ef4d0cfc17df28649ae10b5060f2432;Mon Sep 25 18:46:24 2006 +0000
SameMethod;true;clojure.lang.Symbol#intern(String);clojure.lang.Symbol#intern(String);86fcd18f4ef4d0cfc17df28649ae10b5060f2432;Mon Sep 25 18:46:24 2006 +0000
SameType;true;clojure.lang.InstanceMemberSymbol;clojure.lang.InstanceMemberSymbol;adae71dad2521a9d4c56d50091675a37e0b5161a;Mon Sep 25 19:05:38 2006 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;adae71dad2521a9d4c56d50091675a37e0b5161a;Mon Sep 25 19:05:38 2006 +0000
SameType;true;clojure.lang.StaticMemberSymbol;clojure.lang.StaticMemberSymbol;adae71dad2521a9d4c56d50091675a37e0b5161a;Mon Sep 25 19:05:38 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;79075594063f6db28f90fad2db0aef1a8a277392;Tue Sep 26 00:27:10 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;bbabe65cbbbba066e2df174d7b7bea9b5739b8a5;Tue Sep 26 15:14:57 2006 +0000
SameType;true;clojure.lang.Compiler.Expr;clojure.lang.Compiler.Expr;bbabe65cbbbba066e2df174d7b7bea9b5739b8a5;Tue Sep 26 15:14:57 2006 +0000
SameType;true;clojure.lang.Compiler.AnExpr;clojure.lang.Compiler.AnExpr;bbabe65cbbbba066e2df174d7b7bea9b5739b8a5;Tue Sep 26 15:14:57 2006 +0000
SameMethod;true;clojure.lang.Compiler.AnExpr#emitStatement();clojure.lang.Compiler.AnExpr#emitStatement();bbabe65cbbbba066e2df174d7b7bea9b5739b8a5;Tue Sep 26 15:14:57 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyze(C, Object);clojure.lang.Compiler#analyze(C, Object);bbabe65cbbbba066e2df174d7b7bea9b5739b8a5;Tue Sep 26 15:14:57 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq);clojure.lang.Compiler#analyzeSeq(C, ISeq);bbabe65cbbbba066e2df174d7b7bea9b5739b8a5;Tue Sep 26 15:14:57 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);bbabe65cbbbba066e2df174d7b7bea9b5739b8a5;Tue Sep 26 15:14:57 2006 +0000
SameMethod;true;clojure.lang.Compiler#resolveHostClassname(String);clojure.lang.Compiler#resolveHostClassname(String);bbabe65cbbbba066e2df174d7b7bea9b5739b8a5;Tue Sep 26 15:14:57 2006 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;bbabe65cbbbba066e2df174d7b7bea9b5739b8a5;Tue Sep 26 15:14:57 2006 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#emitExpression();clojure.lang.Compiler.HostExpr#emitExpression();bbabe65cbbbba066e2df174d7b7bea9b5739b8a5;Tue Sep 26 15:14:57 2006 +0000
SameType;true;clojure.lang.Compiler.SymExpr;clojure.lang.Compiler.SymExpr;bbabe65cbbbba066e2df174d7b7bea9b5739b8a5;Tue Sep 26 15:14:57 2006 +0000
SameMethod;true;clojure.lang.Compiler.SymExpr#SymExpr(Symbol, String);clojure.lang.Compiler.SymExpr#SymExpr(Symbol, String);bbabe65cbbbba066e2df174d7b7bea9b5739b8a5;Tue Sep 26 15:14:57 2006 +0000
SameMethod;true;clojure.lang.Compiler.SymExpr#emitExpression();clojure.lang.Compiler.SymExpr#emitExpression();bbabe65cbbbba066e2df174d7b7bea9b5739b8a5;Tue Sep 26 15:14:57 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2212ddd3122b6f0799b4ed73e77aeeea7c19c34c;Tue Sep 26 20:24:16 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeDef(C, ISeq);clojure.lang.Compiler#analyzeDef(C, ISeq);2212ddd3122b6f0799b4ed73e77aeeea7c19c34c;Tue Sep 26 20:24:16 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);2212ddd3122b6f0799b4ed73e77aeeea7c19c34c;Tue Sep 26 20:24:16 2006 +0000
SameType;true;clojure.lang.Compiler.LiteralExpr;clojure.lang.Compiler.LiteralExpr;2212ddd3122b6f0799b4ed73e77aeeea7c19c34c;Tue Sep 26 20:24:16 2006 +0000
SameType;true;clojure.lang.Compiler.CharExpr;clojure.lang.Compiler.CharExpr;2212ddd3122b6f0799b4ed73e77aeeea7c19c34c;Tue Sep 26 20:24:16 2006 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;2212ddd3122b6f0799b4ed73e77aeeea7c19c34c;Tue Sep 26 20:24:16 2006 +0000
SameType;true;clojure.lang.Compiler.KeywordExpr;clojure.lang.Compiler.KeywordExpr;2212ddd3122b6f0799b4ed73e77aeeea7c19c34c;Tue Sep 26 20:24:16 2006 +0000
SameType;true;clojure.lang.Compiler.LocalBindingExpr;clojure.lang.Compiler.LocalBindingExpr;2212ddd3122b6f0799b4ed73e77aeeea7c19c34c;Tue Sep 26 20:24:16 2006 +0000
SameMethod;true;clojure.lang.Compiler.LocalBindingExpr#emitExpression();clojure.lang.Compiler.LocalBindingExpr#emitExpression();2212ddd3122b6f0799b4ed73e77aeeea7c19c34c;Tue Sep 26 20:24:16 2006 +0000
SameType;true;clojure.lang.Compiler.VarExpr;clojure.lang.Compiler.VarExpr;2212ddd3122b6f0799b4ed73e77aeeea7c19c34c;Tue Sep 26 20:24:16 2006 +0000
SameMethod;true;clojure.lang.Compiler.VarExpr#emitExpression();clojure.lang.Compiler.VarExpr#emitExpression();2212ddd3122b6f0799b4ed73e77aeeea7c19c34c;Tue Sep 26 20:24:16 2006 +0000
SameType;true;clojure.lang.Module;clojure.lang.Module;2212ddd3122b6f0799b4ed73e77aeeea7c19c34c;Tue Sep 26 20:24:16 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;2212ddd3122b6f0799b4ed73e77aeeea7c19c34c;Tue Sep 26 20:24:16 2006 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;2212ddd3122b6f0799b4ed73e77aeeea7c19c34c;Tue Sep 26 20:24:16 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c62973eb7d0af525fe5e9e6d1e9d8a8971aab8b2;Wed Sep 27 01:01:56 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq);clojure.lang.Compiler#analyzeSeq(C, ISeq);c62973eb7d0af525fe5e9e6d1e9d8a8971aab8b2;Wed Sep 27 01:01:56 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeDef(C, ISeq);clojure.lang.Compiler#analyzeDef(C, ISeq);c62973eb7d0af525fe5e9e6d1e9d8a8971aab8b2;Wed Sep 27 01:01:56 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);c62973eb7d0af525fe5e9e6d1e9d8a8971aab8b2;Wed Sep 27 01:01:56 2006 +0000
SameMethod;true;clojure.lang.Compiler#closeOver(LocalBinding, FnFrame);clojure.lang.Compiler#closeOver(LocalBinding, FnFrame);c62973eb7d0af525fe5e9e6d1e9d8a8971aab8b2;Wed Sep 27 01:01:56 2006 +0000
SameType;true;clojure.lang.Compiler.FnFrame;clojure.lang.Compiler.FnFrame;c62973eb7d0af525fe5e9e6d1e9d8a8971aab8b2;Wed Sep 27 01:01:56 2006 +0000
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;c62973eb7d0af525fe5e9e6d1e9d8a8971aab8b2;Wed Sep 27 01:01:56 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;c62973eb7d0af525fe5e9e6d1e9d8a8971aab8b2;Wed Sep 27 01:01:56 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;63f878b1103d32483c44ef6416a6c74c4b7b969b;Fri Sep 29 16:58:49 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeFn(C, ISeq);clojure.lang.Compiler#analyzeFn(C, ISeq);63f878b1103d32483c44ef6416a6c74c4b7b969b;Fri Sep 29 16:58:49 2006 +0000
SameMethod;true;clojure.lang.Compiler#referenceLocal(Symbol);clojure.lang.Compiler#referenceLocal(Symbol);63f878b1103d32483c44ef6416a6c74c4b7b969b;Fri Sep 29 16:58:49 2006 +0000
SameMethod;true;clojure.lang.Compiler#registerLocal(LocalBinding);clojure.lang.Compiler#registerLocal(LocalBinding);63f878b1103d32483c44ef6416a6c74c4b7b969b;Fri Sep 29 16:58:49 2006 +0000
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;63f878b1103d32483c44ef6416a6c74c4b7b969b;Fri Sep 29 16:58:49 2006 +0000
SameType;true;clojure.lang.Compiler.LocalBindingExpr;clojure.lang.Compiler.LocalBindingExpr;63f878b1103d32483c44ef6416a6c74c4b7b969b;Fri Sep 29 16:58:49 2006 +0000
SameMethod;true;clojure.lang.Compiler.LocalBindingExpr#emitExpression();clojure.lang.Compiler.LocalBindingExpr#emitExpression();63f878b1103d32483c44ef6416a6c74c4b7b969b;Fri Sep 29 16:58:49 2006 +0000
RenameMethod;true;clojure.lang.Compiler.FnExpr#getClassName();clojure.lang.Compiler.FnExpr#getName();f36e07ecf4275fc6c6773b56faff7426b5671147;Fri Sep 29 18:15:18 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;f36e07ecf4275fc6c6773b56faff7426b5671147;Fri Sep 29 18:15:18 2006 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;f36e07ecf4275fc6c6773b56faff7426b5671147;Fri Sep 29 18:15:18 2006 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emitExpression();clojure.lang.Compiler.FnExpr#emitExpression();f36e07ecf4275fc6c6773b56faff7426b5671147;Fri Sep 29 18:15:18 2006 +0000
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;f36e07ecf4275fc6c6773b56faff7426b5671147;Fri Sep 29 18:15:18 2006 +0000
ExtractMethod;true;clojure.lang.Compiler#analyzeFn(C, ISeq);clojure.lang.Compiler.FnMethod#isVariadic();bc8dbcb2c35fe41b38b05a061614bcacfd21f29b;Fri Sep 29 22:42:48 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;bc8dbcb2c35fe41b38b05a061614bcacfd21f29b;Fri Sep 29 22:42:48 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeFn(C, ISeq);clojure.lang.Compiler#analyzeFn(C, ISeq);bc8dbcb2c35fe41b38b05a061614bcacfd21f29b;Fri Sep 29 22:42:48 2006 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;bc8dbcb2c35fe41b38b05a061614bcacfd21f29b;Fri Sep 29 22:42:48 2006 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emitDeclaration();clojure.lang.Compiler.FnExpr#emitDeclaration();bc8dbcb2c35fe41b38b05a061614bcacfd21f29b;Fri Sep 29 22:42:48 2006 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;bc8dbcb2c35fe41b38b05a061614bcacfd21f29b;Fri Sep 29 22:42:48 2006 +0000
SameType;true;clojure.lang.Compiler.KeyParam;clojure.lang.Compiler.KeyParam;bc8dbcb2c35fe41b38b05a061614bcacfd21f29b;Fri Sep 29 22:42:48 2006 +0000
SameMethod;true;clojure.lang.Compiler.KeyParam#KeyParam(LocalBindingExpr, Expr);clojure.lang.Compiler.KeyParam#KeyParam(LocalBindingExpr, Expr);bc8dbcb2c35fe41b38b05a061614bcacfd21f29b;Fri Sep 29 22:42:48 2006 +0000
SameMethod;true;clojure.lang.Compiler.KeyParam#KeyParam(LocalBindingExpr);clojure.lang.Compiler.KeyParam#KeyParam(LocalBindingExpr);bc8dbcb2c35fe41b38b05a061614bcacfd21f29b;Fri Sep 29 22:42:48 2006 +0000
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;bc8dbcb2c35fe41b38b05a061614bcacfd21f29b;Fri Sep 29 22:42:48 2006 +0000
SameMethod;true;clojure.lang.Compiler.LocalBinding#getName();clojure.lang.Compiler.LocalBinding#getName();bc8dbcb2c35fe41b38b05a061614bcacfd21f29b;Fri Sep 29 22:42:48 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;48c28eff6cff167219f030bca3188219604c9a63;Sat Sep 30 00:00:55 2006 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;48c28eff6cff167219f030bca3188219604c9a63;Sat Sep 30 00:00:55 2006 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emitDeclaration();clojure.lang.Compiler.FnExpr#emitDeclaration();48c28eff6cff167219f030bca3188219604c9a63;Sat Sep 30 00:00:55 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;bc5dc23be88ad294d86d8d2b09583c41eafdd9b9;Sat Sep 30 00:02:23 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameType;true;clojure.lang.Compiler.AnExpr;clojure.lang.Compiler.AnExpr;3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameMethod;true;clojure.lang.Compiler.AnExpr#emitExpressionString();clojure.lang.Compiler.AnExpr#emitExpressionString();3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq);clojure.lang.Compiler#analyzeSeq(C, ISeq);3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeFn(C, ISeq);clojure.lang.Compiler#analyzeFn(C, ISeq);3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#getName();clojure.lang.Compiler.FnExpr#getName();3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emitExpression();clojure.lang.Compiler.FnExpr#emitExpression();3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emitDeclaration();clojure.lang.Compiler.FnExpr#emitDeclaration();3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeDef(C, ISeq);clojure.lang.Compiler#analyzeDef(C, ISeq);3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol);clojure.lang.Compiler#lookupVar(Symbol);3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameMethod;true;clojure.lang.Compiler#registerFn(FnExpr);clojure.lang.Compiler#registerFn(FnExpr);3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameType;true;clojure.lang.Compiler.KeyParam;clojure.lang.Compiler.KeyParam;3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameMethod;true;clojure.lang.Compiler.KeyParam#KeyParam(LocalBindingExpr, Expr);clojure.lang.Compiler.KeyParam#KeyParam(LocalBindingExpr, Expr);3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameMethod;true;clojure.lang.Compiler.KeyParam#KeyParam(LocalBindingExpr);clojure.lang.Compiler.KeyParam#KeyParam(LocalBindingExpr);3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#emitExpression();clojure.lang.Compiler.HostExpr#emitExpression();3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameType;true;clojure.lang.Compiler.KeywordExpr;clojure.lang.Compiler.KeywordExpr;3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameMethod;true;clojure.lang.Compiler.KeywordExpr#emitExpression();clojure.lang.Compiler.KeywordExpr#emitExpression();3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameType;true;clojure.lang.Compiler.LocalBindingExpr;clojure.lang.Compiler.LocalBindingExpr;3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameMethod;true;clojure.lang.Compiler.LocalBindingExpr#emitExpression();clojure.lang.Compiler.LocalBindingExpr#emitExpression();3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameType;true;clojure.lang.Compiler.VarExpr;clojure.lang.Compiler.VarExpr;3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameMethod;true;clojure.lang.Compiler.VarExpr#emitExpression();clojure.lang.Compiler.VarExpr#emitExpression();3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr#emitExpression();clojure.lang.Compiler.DefExpr#emitExpression();3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameMethod;true;clojure.lang.PersistentArrayMap#PersistentArrayMap();clojure.lang.PersistentArrayMap#PersistentArrayMap();3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;3302b103d19483ab301c98f381f03eb3a2ed0107;Mon Oct 2 19:51:10 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;97230011c3ae6a33d1aac2be5ce78a031b46f189;Tue Oct 3 00:59:14 2006 +0000
SameMethod;true;clojure.lang.Compiler#compile(String, String, LineNumberingPushbackReader[]);clojure.lang.Compiler#compile(String, String, LineNumberingPushbackReader[]);97230011c3ae6a33d1aac2be5ce78a031b46f189;Tue Oct 3 00:59:14 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq);clojure.lang.Compiler#analyzeSeq(C, ISeq);97230011c3ae6a33d1aac2be5ce78a031b46f189;Tue Oct 3 00:59:14 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeDo(C, ISeq);clojure.lang.Compiler#analyzeDo(C, ISeq);97230011c3ae6a33d1aac2be5ce78a031b46f189;Tue Oct 3 00:59:14 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeFn(C, ISeq);clojure.lang.Compiler#analyzeFn(C, ISeq);97230011c3ae6a33d1aac2be5ce78a031b46f189;Tue Oct 3 00:59:14 2006 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;97230011c3ae6a33d1aac2be5ce78a031b46f189;Tue Oct 3 00:59:14 2006 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emitDeclaration();clojure.lang.Compiler.FnExpr#emitDeclaration();97230011c3ae6a33d1aac2be5ce78a031b46f189;Tue Oct 3 00:59:14 2006 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#willBeStaticMethod();clojure.lang.Compiler.FnExpr#willBeStaticMethod();97230011c3ae6a33d1aac2be5ce78a031b46f189;Tue Oct 3 00:59:14 2006 +0000
SameType;true;clojure.lang.Compiler.LiteralExpr;clojure.lang.Compiler.LiteralExpr;97230011c3ae6a33d1aac2be5ce78a031b46f189;Tue Oct 3 00:59:14 2006 +0000
SameMethod;true;clojure.lang.Compiler.LiteralExpr#emitExpression();clojure.lang.Compiler.LiteralExpr#emitExpression();97230011c3ae6a33d1aac2be5ce78a031b46f189;Tue Oct 3 00:59:14 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;97230011c3ae6a33d1aac2be5ce78a031b46f189;Tue Oct 3 00:59:14 2006 +0000
SameType;true;clojure.lang.RestFn;clojure.lang.RestFn;97230011c3ae6a33d1aac2be5ce78a031b46f189;Tue Oct 3 00:59:14 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;b23cb2a261303e52d0846ac45cf1d28211503412;Tue Oct 3 15:59:15 2006 +0000
SameMethod;true;clojure.lang.Compiler#compile(String, String, LineNumberingPushbackReader[]);clojure.lang.Compiler#compile(String, String, LineNumberingPushbackReader[]);b23cb2a261303e52d0846ac45cf1d28211503412;Tue Oct 3 15:59:15 2006 +0000
SameType;true;clojure.lang.Compiler.AnExpr;clojure.lang.Compiler.AnExpr;b23cb2a261303e52d0846ac45cf1d28211503412;Tue Oct 3 15:59:15 2006 +0000
SameMethod;true;clojure.lang.Compiler.AnExpr#emitExpressionString();clojure.lang.Compiler.AnExpr#emitExpressionString();b23cb2a261303e52d0846ac45cf1d28211503412;Tue Oct 3 15:59:15 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq);clojure.lang.Compiler#analyzeSeq(C, ISeq);b23cb2a261303e52d0846ac45cf1d28211503412;Tue Oct 3 15:59:15 2006 +0000
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;b23cb2a261303e52d0846ac45cf1d28211503412;Tue Oct 3 15:59:15 2006 +0000
SameMethod;true;clojure.lang.Compiler.IfExpr#emitStatement();clojure.lang.Compiler.IfExpr#emitStatement();b23cb2a261303e52d0846ac45cf1d28211503412;Tue Oct 3 15:59:15 2006 +0000
SameType;true;clojure.lang.Compiler.BodyExpr;clojure.lang.Compiler.BodyExpr;b23cb2a261303e52d0846ac45cf1d28211503412;Tue Oct 3 15:59:15 2006 +0000
SameMethod;true;clojure.lang.Compiler.BodyExpr#emitStatement();clojure.lang.Compiler.BodyExpr#emitStatement();b23cb2a261303e52d0846ac45cf1d28211503412;Tue Oct 3 15:59:15 2006 +0000
SameMethod;true;clojure.lang.Compiler.BodyExpr#emitReturn();clojure.lang.Compiler.BodyExpr#emitReturn();b23cb2a261303e52d0846ac45cf1d28211503412;Tue Oct 3 15:59:15 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeDef(C, ISeq);clojure.lang.Compiler#analyzeDef(C, ISeq);b23cb2a261303e52d0846ac45cf1d28211503412;Tue Oct 3 15:59:15 2006 +0000
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol);clojure.lang.Compiler#lookupVar(Symbol);b23cb2a261303e52d0846ac45cf1d28211503412;Tue Oct 3 15:59:15 2006 +0000
SameType;true;clojure.lang.Compiler.NotExpr;clojure.lang.Compiler.NotExpr;b23cb2a261303e52d0846ac45cf1d28211503412;Tue Oct 3 15:59:15 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;25814b673de2a3bb007bbdeb7891996d80f74449;Tue Oct 3 17:49:28 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq);clojure.lang.Compiler#analyzeSeq(C, ISeq);25814b673de2a3bb007bbdeb7891996d80f74449;Tue Oct 3 17:49:28 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeDo(C, ISeq);clojure.lang.Compiler#analyzeDo(C, ISeq);25814b673de2a3bb007bbdeb7891996d80f74449;Tue Oct 3 17:49:28 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeMethod(FnExpr, ISeq);clojure.lang.Compiler#analyzeMethod(FnExpr, ISeq);25814b673de2a3bb007bbdeb7891996d80f74449;Tue Oct 3 17:49:28 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;8acca11d1aa4ffdf1facf48ca1b8aec6d6bf0e7f;Tue Oct 3 21:38:40 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq);clojure.lang.Compiler#analyzeSeq(C, ISeq);8acca11d1aa4ffdf1facf48ca1b8aec6d6bf0e7f;Tue Oct 3 21:38:40 2006 +0000
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;8acca11d1aa4ffdf1facf48ca1b8aec6d6bf0e7f;Tue Oct 3 21:38:40 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;dc4c38e0f3bea2ebb7708c36ac8d670fe9b95f97;Fri Oct 6 19:29:58 2006 +0000
SameMethod;true;clojure.lang.RT#doFormat(Writer, String, ISeq);clojure.lang.RT#doFormat(Writer, String, ISeq);dc4c38e0f3bea2ebb7708c36ac8d670fe9b95f97;Fri Oct 6 19:29:58 2006 +0000
ExtractMethod;true;clojure.lang.Compiler.LocalBindingExpr#emitExpression();clojure.lang.Compiler.LocalBinding#getExpr();a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq);clojure.lang.Compiler#analyzeSeq(C, ISeq);a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameMethod;true;clojure.lang.Compiler.LetExpr#emitBindings();clojure.lang.Compiler.LetExpr#emitBindings();a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameMethod;true;clojure.lang.Compiler.IfExpr#emitReturn();clojure.lang.Compiler.IfExpr#emitReturn();a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameMethod;true;clojure.lang.Compiler.IfExpr#emitStatement();clojure.lang.Compiler.IfExpr#emitStatement();a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameType;true;clojure.lang.Compiler.BodyExpr;clojure.lang.Compiler.BodyExpr;a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameMethod;true;clojure.lang.Compiler.BodyExpr#emitStatement();clojure.lang.Compiler.BodyExpr#emitStatement();a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameMethod;true;clojure.lang.Compiler.BodyExpr#emitReturn();clojure.lang.Compiler.BodyExpr#emitReturn();a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emitDeclaration();clojure.lang.Compiler.FnExpr#emitDeclaration();a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#willBeStaticMethod();clojure.lang.Compiler.FnExpr#willBeStaticMethod();a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameMethod;true;clojure.lang.Compiler#referenceLocal(Symbol);clojure.lang.Compiler#referenceLocal(Symbol);a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameMethod;true;clojure.lang.Compiler.LocalBinding#needsBox();clojure.lang.Compiler.LocalBinding#needsBox();a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameType;true;clojure.lang.Compiler.LocalBindingExpr;clojure.lang.Compiler.LocalBindingExpr;a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameMethod;true;clojure.lang.Compiler.LocalBindingExpr#emitExpression();clojure.lang.Compiler.LocalBindingExpr#emitExpression();a1128113559fa272dada3cfc25757a0223fbdea1;Fri Oct 6 19:30:23 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;bb50ab5256b62f29b48a03faca6bfaa116aff2ea;Mon Oct 9 16:14:53 2006 +0000
SameType;true;clojure.lang.Compiler.AnExpr;clojure.lang.Compiler.AnExpr;bb50ab5256b62f29b48a03faca6bfaa116aff2ea;Mon Oct 9 16:14:53 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq);clojure.lang.Compiler#analyzeSeq(C, ISeq);bb50ab5256b62f29b48a03faca6bfaa116aff2ea;Mon Oct 9 16:14:53 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeLet(C, ISeq);clojure.lang.Compiler#analyzeLet(C, ISeq);bb50ab5256b62f29b48a03faca6bfaa116aff2ea;Mon Oct 9 16:14:53 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeLetStar(C, ISeq);clojure.lang.Compiler#analyzeLetStar(C, ISeq);bb50ab5256b62f29b48a03faca6bfaa116aff2ea;Mon Oct 9 16:14:53 2006 +0000
SameType;true;clojure.lang.Compiler.VarExpr;clojure.lang.Compiler.VarExpr;bb50ab5256b62f29b48a03faca6bfaa116aff2ea;Mon Oct 9 16:14:53 2006 +0000
SameMethod;true;clojure.lang.Compiler.VarExpr#emitExpression();clojure.lang.Compiler.VarExpr#emitExpression();bb50ab5256b62f29b48a03faca6bfaa116aff2ea;Mon Oct 9 16:14:53 2006 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;bb50ab5256b62f29b48a03faca6bfaa116aff2ea;Mon Oct 9 16:14:53 2006 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr#emitExpression();clojure.lang.Compiler.DefExpr#emitExpression();bb50ab5256b62f29b48a03faca6bfaa116aff2ea;Mon Oct 9 16:14:53 2006 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;5019080db104c1857d36948871901b4803b3e4b6;Mon Oct 9 18:49:42 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;5019080db104c1857d36948871901b4803b3e4b6;Mon Oct 9 18:49:42 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;ad0302cd67dc50695a9348178065f0ec090b9890;Mon Oct 9 18:50:07 2006 +0000
SameType;true;clojure.lang.Compiler.C;clojure.lang.Compiler.C;ad0302cd67dc50695a9348178065f0ec090b9890;Mon Oct 9 18:50:07 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyze(C, Object);clojure.lang.Compiler#analyze(C, Object);ad0302cd67dc50695a9348178065f0ec090b9890;Mon Oct 9 18:50:07 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq);clojure.lang.Compiler#analyzeSeq(C, ISeq);ad0302cd67dc50695a9348178065f0ec090b9890;Mon Oct 9 18:50:07 2006 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;ad0302cd67dc50695a9348178065f0ec090b9890;Mon Oct 9 18:50:07 2006 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emitExpression();clojure.lang.Compiler.InvokeExpr#emitExpression();ad0302cd67dc50695a9348178065f0ec090b9890;Mon Oct 9 18:50:07 2006 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;ad0302cd67dc50695a9348178065f0ec090b9890;Mon Oct 9 18:50:07 2006 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#getName();clojure.lang.Compiler.FnExpr#getName();ad0302cd67dc50695a9348178065f0ec090b9890;Mon Oct 9 18:50:07 2006 +0000
SameMethod;true;clojure.lang.Compiler#referenceLocal(Symbol);clojure.lang.Compiler#referenceLocal(Symbol);ad0302cd67dc50695a9348178065f0ec090b9890;Mon Oct 9 18:50:07 2006 +0000
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;ad0302cd67dc50695a9348178065f0ec090b9890;Mon Oct 9 18:50:07 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;a53e41cd426ebd2181d036e83ab0f8e69de9a8bf;Tue Oct 10 19:41:48 2006 +0000
SameMethod;true;clojure.lang.RT#box(boolean);clojure.lang.RT#box(boolean);a53e41cd426ebd2181d036e83ab0f8e69de9a8bf;Tue Oct 10 19:41:48 2006 +0000
SameMethod;true;clojure.lang.RT#box(byte);clojure.lang.RT#box(byte);a53e41cd426ebd2181d036e83ab0f8e69de9a8bf;Tue Oct 10 19:41:48 2006 +0000
SameMethod;true;clojure.lang.RT#box(short);clojure.lang.RT#box(short);a53e41cd426ebd2181d036e83ab0f8e69de9a8bf;Tue Oct 10 19:41:48 2006 +0000
SameMethod;true;clojure.lang.RT#box(int);clojure.lang.RT#box(int);a53e41cd426ebd2181d036e83ab0f8e69de9a8bf;Tue Oct 10 19:41:48 2006 +0000
SameMethod;true;clojure.lang.RT#box(long);clojure.lang.RT#box(long);a53e41cd426ebd2181d036e83ab0f8e69de9a8bf;Tue Oct 10 19:41:48 2006 +0000
SameMethod;true;clojure.lang.RT#box(float);clojure.lang.RT#box(float);a53e41cd426ebd2181d036e83ab0f8e69de9a8bf;Tue Oct 10 19:41:48 2006 +0000
SameMethod;true;clojure.lang.RT#box(double);clojure.lang.RT#box(double);a53e41cd426ebd2181d036e83ab0f8e69de9a8bf;Tue Oct 10 19:41:48 2006 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;a53e41cd426ebd2181d036e83ab0f8e69de9a8bf;Tue Oct 10 19:41:48 2006 +0000
SameMethod;true;clojure.lang.Reflector#boxArg(Class, Object);clojure.lang.Reflector#boxArg(Class, Object);a53e41cd426ebd2181d036e83ab0f8e69de9a8bf;Tue Oct 10 19:41:48 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c486dde7e4b3e74c2a41d2fff3deeb9833f2c1ab;Tue Oct 10 19:42:14 2006 +0000
SameType;true;clojure.lang.Compiler.Expr;clojure.lang.Compiler.Expr;c486dde7e4b3e74c2a41d2fff3deeb9833f2c1ab;Tue Oct 10 19:42:14 2006 +0000
SameType;true;clojure.lang.Compiler.AnExpr;clojure.lang.Compiler.AnExpr;c486dde7e4b3e74c2a41d2fff3deeb9833f2c1ab;Tue Oct 10 19:42:14 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq);clojure.lang.Compiler#analyzeSeq(C, ISeq);c486dde7e4b3e74c2a41d2fff3deeb9833f2c1ab;Tue Oct 10 19:42:14 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol, boolean);clojure.lang.Compiler#analyzeSymbol(Symbol, boolean);c486dde7e4b3e74c2a41d2fff3deeb9833f2c1ab;Tue Oct 10 19:42:14 2006 +0000
SameMethod;true;clojure.lang.Compiler#resolveHostClassname(String);clojure.lang.Compiler#resolveHostClassname(String);c486dde7e4b3e74c2a41d2fff3deeb9833f2c1ab;Tue Oct 10 19:42:14 2006 +0000
SameType;true;clojure.lang.Compiler.LiteralExpr;clojure.lang.Compiler.LiteralExpr;c486dde7e4b3e74c2a41d2fff3deeb9833f2c1ab;Tue Oct 10 19:42:14 2006 +0000
SameType;true;clojure.lang.Compiler.CharExpr;clojure.lang.Compiler.CharExpr;c486dde7e4b3e74c2a41d2fff3deeb9833f2c1ab;Tue Oct 10 19:42:14 2006 +0000
RenameClass;true;clojure.lang.Compiler.HostStaticExpr;clojure.lang.Compiler.HostStaticFieldExpr;e8bbb66e066c06854814aa7bfb00fe9c8fd2e273;Tue Oct 10 22:09:04 2006 +0000
RenameClass;true;clojure.lang.Compiler.InvokeHostClassExpr;clojure.lang.Compiler.InvokeConstructorExpr;e8bbb66e066c06854814aa7bfb00fe9c8fd2e273;Tue Oct 10 22:09:04 2006 +0000
RenameMethod;true;clojure.lang.Compiler#isCompatible(Class[], PersistentArrayList);clojure.lang.Compiler#emitTypedArgs(Class[], PersistentArrayList);e8bbb66e066c06854814aa7bfb00fe9c8fd2e273;Tue Oct 10 22:09:04 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e8bbb66e066c06854814aa7bfb00fe9c8fd2e273;Tue Oct 10 22:09:04 2006 +0000
SameType;true;clojure.lang.Compiler.Expr;clojure.lang.Compiler.Expr;e8bbb66e066c06854814aa7bfb00fe9c8fd2e273;Tue Oct 10 22:09:04 2006 +0000
SameType;true;clojure.lang.Compiler.AnExpr;clojure.lang.Compiler.AnExpr;e8bbb66e066c06854814aa7bfb00fe9c8fd2e273;Tue Oct 10 22:09:04 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq);clojure.lang.Compiler#analyzeSeq(C, ISeq);e8bbb66e066c06854814aa7bfb00fe9c8fd2e273;Tue Oct 10 22:09:04 2006 +0000
SameMethod;true;clojure.lang.Compiler.InvokeHostClassExpr#emitHostExpr();clojure.lang.Compiler.InvokeConstructorExpr#emitHostExpr();e8bbb66e066c06854814aa7bfb00fe9c8fd2e273;Tue Oct 10 22:09:04 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol, boolean);clojure.lang.Compiler#analyzeSymbol(Symbol, boolean);e8bbb66e066c06854814aa7bfb00fe9c8fd2e273;Tue Oct 10 22:09:04 2006 +0000
SameMethod;true;clojure.lang.Compiler.HostStaticExpr#HostStaticExpr(StaticMemberSymbol);clojure.lang.Compiler.HostStaticFieldExpr#HostStaticFieldExpr(StaticMemberSymbol);e8bbb66e066c06854814aa7bfb00fe9c8fd2e273;Tue Oct 10 22:09:04 2006 +0000
SameMethod;true;clojure.lang.Compiler.HostStaticExpr#getHostType();clojure.lang.Compiler.HostStaticFieldExpr#getHostType();e8bbb66e066c06854814aa7bfb00fe9c8fd2e273;Tue Oct 10 22:09:04 2006 +0000
SameType;true;clojure.lang.Compiler.LocalBindingExpr;clojure.lang.Compiler.LocalBindingExpr;e8bbb66e066c06854814aa7bfb00fe9c8fd2e273;Tue Oct 10 22:09:04 2006 +0000
SameType;true;clojure.lang.Compiler.VarExpr;clojure.lang.Compiler.VarExpr;e8bbb66e066c06854814aa7bfb00fe9c8fd2e273;Tue Oct 10 22:09:04 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;b8e4aa5295ac361ebc01c40274b336b875e93489;Sat Oct 14 15:49:13 2006 +0000
SameMethod;true;clojure.lang.Compiler#compile(String, String, LineNumberingPushbackReader[]);clojure.lang.Compiler#compile(String, String, LineNumberingPushbackReader[]);b8e4aa5295ac361ebc01c40274b336b875e93489;Sat Oct 14 15:49:13 2006 +0000
SameType;true;clojure.lang.Compiler.Expr;clojure.lang.Compiler.Expr;b8e4aa5295ac361ebc01c40274b336b875e93489;Sat Oct 14 15:49:13 2006 +0000
SameType;true;clojure.lang.Compiler.AnExpr;clojure.lang.Compiler.AnExpr;b8e4aa5295ac361ebc01c40274b336b875e93489;Sat Oct 14 15:49:13 2006 +0000
SameType;true;clojure.lang.Compiler.AHostExpr;clojure.lang.Compiler.AHostExpr;b8e4aa5295ac361ebc01c40274b336b875e93489;Sat Oct 14 15:49:13 2006 +0000
SameMethod;true;clojure.lang.Compiler.AHostExpr#emitExpression();clojure.lang.Compiler.AHostExpr#emitExpression();b8e4aa5295ac361ebc01c40274b336b875e93489;Sat Oct 14 15:49:13 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq);clojure.lang.Compiler#analyzeSeq(C, ISeq);b8e4aa5295ac361ebc01c40274b336b875e93489;Sat Oct 14 15:49:13 2006 +0000
SameType;true;clojure.lang.Compiler.InvokeConstructorExpr;clojure.lang.Compiler.InvokeConstructorExpr;b8e4aa5295ac361ebc01c40274b336b875e93489;Sat Oct 14 15:49:13 2006 +0000
SameMethod;true;clojure.lang.Compiler.InvokeConstructorExpr#emitHostExpr();clojure.lang.Compiler.InvokeConstructorExpr#emitHostExpr();b8e4aa5295ac361ebc01c40274b336b875e93489;Sat Oct 14 15:49:13 2006 +0000
SameMethod;true;clojure.lang.Compiler#emitHostArgs(PersistentArrayList);clojure.lang.Compiler#emitHostArgs(PersistentArrayList);b8e4aa5295ac361ebc01c40274b336b875e93489;Sat Oct 14 15:49:13 2006 +0000
SameMethod;true;clojure.lang.Compiler#findSingleConstructor(Class, PersistentArrayList);clojure.lang.Compiler#findSingleConstructor(Class, PersistentArrayList);b8e4aa5295ac361ebc01c40274b336b875e93489;Sat Oct 14 15:49:13 2006 +0000
SameMethod;true;clojure.lang.Compiler#getTypeNamed(String);clojure.lang.Compiler#getTypeNamed(String);b8e4aa5295ac361ebc01c40274b336b875e93489;Sat Oct 14 15:49:13 2006 +0000
SameType;true;clojure.lang.Compiler.LiteralExpr;clojure.lang.Compiler.LiteralExpr;b8e4aa5295ac361ebc01c40274b336b875e93489;Sat Oct 14 15:49:13 2006 +0000
SameMethod;true;clojure.lang.Compiler.LiteralExpr#getHostType();clojure.lang.Compiler.LiteralExpr#getHostType();b8e4aa5295ac361ebc01c40274b336b875e93489;Sat Oct 14 15:49:13 2006 +0000
SameType;true;clojure.lang.Compiler.CharExpr;clojure.lang.Compiler.CharExpr;b8e4aa5295ac361ebc01c40274b336b875e93489;Sat Oct 14 15:49:13 2006 +0000
SameMethod;true;clojure.lang.Compiler.CharExpr#getHostType();clojure.lang.Compiler.CharExpr#getHostType();b8e4aa5295ac361ebc01c40274b336b875e93489;Sat Oct 14 15:49:13 2006 +0000
SameType;true;clojure.lang.Compiler.LocalBindingExpr;clojure.lang.Compiler.LocalBindingExpr;b8e4aa5295ac361ebc01c40274b336b875e93489;Sat Oct 14 15:49:13 2006 +0000
RenameMethod;true;clojure.lang.Compiler#findSingleStaticMethod(Class, String, PersistentArrayList);clojure.lang.Compiler#findSingleMethod(Class, String, PersistentArrayList, boolean);348f4fa02df4c2b111be5cc7afd48123fd40d195;Sun Oct 15 15:56:08 2006 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;348f4fa02df4c2b111be5cc7afd48123fd40d195;Sun Oct 15 15:56:08 2006 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq);clojure.lang.Compiler#analyzeSeq(C, ISeq);348f4fa02df4c2b111be5cc7afd48123fd40d195;Sun Oct 15 15:56:08 2006 +0000
SameType;true;clojure.lang.Compiler.InvokeStaticMethodExpr;clojure.lang.Compiler.InvokeStaticMethodExpr;348f4fa02df4c2b111be5cc7afd48123fd40d195;Sun Oct 15 15:56:08 2006 +0000
SameMethod;true;clojure.lang.Compiler.InvokeStaticMethodExpr#InvokeStaticMethodExpr(StaticMemberSymbol, PersistentArrayList);clojure.lang.Compiler.InvokeStaticMethodExpr#InvokeStaticMethodExpr(StaticMemberSymbol, PersistentArrayList);348f4fa02df4c2b111be5cc7afd48123fd40d195;Sun Oct 15 15:56:08 2006 +0000
SameMethod;true;clojure.lang.Compiler.InvokeStaticMethodExpr#getHostType();clojure.lang.Compiler.InvokeStaticMethodExpr#getHostType();348f4fa02df4c2b111be5cc7afd48123fd40d195;Sun Oct 15 15:56:08 2006 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;348f4fa02df4c2b111be5cc7afd48123fd40d195;Sun Oct 15 15:56:08 2006 +0000
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;8cb60ca5a949f8dea94aea80d9c60b1cd336892c;Mon Oct 16 19:09:20 2006 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object);clojure.lang.Keyword#invoke(Object, Object);8cb60ca5a949f8dea94aea80d9c60b1cd336892c;Mon Oct 16 19:09:20 2006 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;1df4b1bfffde0c6ed749ffa35e246a7145bef1ca;Mon Jun 18 20:02:08 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.Leaf;clojure.lang.PersistentHashMap.Leaf;1df4b1bfffde0c6ed749ffa35e246a7145bef1ca;Mon Jun 18 20:02:08 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.Leaf#assoc(int, int, Object, Object);clojure.lang.PersistentHashMap.Leaf#assoc(int, int, Object, Object);1df4b1bfffde0c6ed749ffa35e246a7145bef1ca;Mon Jun 18 20:02:08 2007 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;ccf5c095673f0811d23d13e1cf458e9e29b88c41;Tue Jun 19 01:52:10 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.Node;clojure.lang.PersistentHashMap.Node;ccf5c095673f0811d23d13e1cf458e9e29b88c41;Tue Jun 19 01:52:10 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.Leaf;clojure.lang.PersistentHashMap.Leaf;ccf5c095673f0811d23d13e1cf458e9e29b88c41;Tue Jun 19 01:52:10 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.Leaf#assoc(int, int, Object, Object);clojure.lang.PersistentHashMap.Leaf#assoc(int, int, Object, Object);ccf5c095673f0811d23d13e1cf458e9e29b88c41;Tue Jun 19 01:52:10 2007 +0000
SameType;true;clojure.lang.IteratorSeq;clojure.lang.IteratorSeq;1908c0e93935986d20bc64c9325a5158729348e0;Tue Jun 19 13:11:57 2007 +0000
SameMethod;true;clojure.lang.IteratorSeq#first();clojure.lang.IteratorSeq#first();1908c0e93935986d20bc64c9325a5158729348e0;Tue Jun 19 13:11:57 2007 +0000
SameMethod;true;clojure.lang.IteratorSeq#rest();clojure.lang.IteratorSeq#rest();1908c0e93935986d20bc64c9325a5158729348e0;Tue Jun 19 13:11:57 2007 +0000
RenameClass;true;clojure.lang.PersistentHashMap.MultiLeaf;clojure.lang.PersistentHashMap.HashCollisionLeaf;12457e7bf29747232bbfda2a0de3b72fbb14f3a9;Tue Jun 19 14:21:24 2007 +0000
ExtractMethod;true;clojure.lang.PersistentHashMap.MultiLeaf#assoc(int, int, Object, Object);clojure.lang.PersistentHashMap.Node#create(int, ILeaf, int, Object, Object);12457e7bf29747232bbfda2a0de3b72fbb14f3a9;Tue Jun 19 14:21:24 2007 +0000
ExtractMethod;true;clojure.lang.PersistentHashMap.Node#assoc(int, int, Object, Object);clojure.lang.PersistentHashMap.Node#mask(int, int);12457e7bf29747232bbfda2a0de3b72fbb14f3a9;Tue Jun 19 14:21:24 2007 +0000
ExtractMethod;true;clojure.lang.PersistentHashMap.Node#without(int, Object);clojure.lang.PersistentHashMap.Node#mask(int, int);12457e7bf29747232bbfda2a0de3b72fbb14f3a9;Tue Jun 19 14:21:24 2007 +0000
ExtractMethod;true;clojure.lang.PersistentHashMap.Node#find(int, Object);clojure.lang.PersistentHashMap.Node#mask(int, int);12457e7bf29747232bbfda2a0de3b72fbb14f3a9;Tue Jun 19 14:21:24 2007 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;12457e7bf29747232bbfda2a0de3b72fbb14f3a9;Tue Jun 19 14:21:24 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.INode;clojure.lang.PersistentHashMap.INode;12457e7bf29747232bbfda2a0de3b72fbb14f3a9;Tue Jun 19 14:21:24 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.Node;clojure.lang.PersistentHashMap.Node;12457e7bf29747232bbfda2a0de3b72fbb14f3a9;Tue Jun 19 14:21:24 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.Node#Node(int, INode[], int);clojure.lang.PersistentHashMap.Node#Node(int, INode[], int);12457e7bf29747232bbfda2a0de3b72fbb14f3a9;Tue Jun 19 14:21:24 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.Node#assoc(int, int, Object, Object);clojure.lang.PersistentHashMap.Node#assoc(int, int, Object, Object);12457e7bf29747232bbfda2a0de3b72fbb14f3a9;Tue Jun 19 14:21:24 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.Node#without(int, Object);clojure.lang.PersistentHashMap.Node#without(int, Object);12457e7bf29747232bbfda2a0de3b72fbb14f3a9;Tue Jun 19 14:21:24 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.Node#find(int, Object);clojure.lang.PersistentHashMap.Node#find(int, Object);12457e7bf29747232bbfda2a0de3b72fbb14f3a9;Tue Jun 19 14:21:24 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.Leaf;clojure.lang.PersistentHashMap.Leaf;12457e7bf29747232bbfda2a0de3b72fbb14f3a9;Tue Jun 19 14:21:24 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.Leaf#assoc(int, int, Object, Object);clojure.lang.PersistentHashMap.Leaf#assoc(int, int, Object, Object);12457e7bf29747232bbfda2a0de3b72fbb14f3a9;Tue Jun 19 14:21:24 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.Leaf#without(int, Object);clojure.lang.PersistentHashMap.Leaf#without(int, Object);12457e7bf29747232bbfda2a0de3b72fbb14f3a9;Tue Jun 19 14:21:24 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.Leaf#find(int, Object);clojure.lang.PersistentHashMap.Leaf#find(int, Object);12457e7bf29747232bbfda2a0de3b72fbb14f3a9;Tue Jun 19 14:21:24 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.MultiLeaf#assoc(int, int, Object, Object);clojure.lang.PersistentHashMap.HashCollisionLeaf#assoc(int, int, Object, Object);12457e7bf29747232bbfda2a0de3b72fbb14f3a9;Tue Jun 19 14:21:24 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.MultiLeaf#without(int, Object);clojure.lang.PersistentHashMap.HashCollisionLeaf#without(int, Object);12457e7bf29747232bbfda2a0de3b72fbb14f3a9;Tue Jun 19 14:21:24 2007 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;94a93a725b26f36f3a2d3dbf3b84fc5f3d341cc2;Tue Jun 19 19:09:56 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.Node;clojure.lang.PersistentHashMap.Node;94a93a725b26f36f3a2d3dbf3b84fc5f3d341cc2;Tue Jun 19 19:09:56 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.Node#without(int, Object);clojure.lang.PersistentHashMap.Node#without(int, Object);94a93a725b26f36f3a2d3dbf3b84fc5f3d341cc2;Tue Jun 19 19:09:56 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.HashCollisionLeaf;clojure.lang.PersistentHashMap.HashCollisionLeaf;94a93a725b26f36f3a2d3dbf3b84fc5f3d341cc2;Tue Jun 19 19:09:56 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.HashCollisionLeaf#without(int, Object);clojure.lang.PersistentHashMap.HashCollisionLeaf#without(int, Object);94a93a725b26f36f3a2d3dbf3b84fc5f3d341cc2;Tue Jun 19 19:09:56 2007 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;c070e63a413e1cfe3d95f2100b6aa7ce28ea5221;Tue Jun 19 19:12:00 2007 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#main(String[]);clojure.lang.PersistentTreeMap#main(String[]);c070e63a413e1cfe3d95f2100b6aa7ce28ea5221;Tue Jun 19 19:12:00 2007 +0000
RenameClass;true;clojure.lang.PersistentHashMap.Node;clojure.lang.PersistentHashMap.BitmapIndexedNode;fa6d4d3681917738c1acf5653239c19872bf71d9;Thu Jun 21 17:17:15 2007 +0000
RenameClass;true;clojure.lang.PersistentHashMap.HashCollisionLeaf;clojure.lang.PersistentHashMap.HashCollisionNode;fa6d4d3681917738c1acf5653239c19872bf71d9;Thu Jun 21 17:17:15 2007 +0000
RenameClass;true;clojure.lang.PersistentHashMap.Leaf;clojure.lang.PersistentHashMap.LeafNode;fa6d4d3681917738c1acf5653239c19872bf71d9;Thu Jun 21 17:17:15 2007 +0000
ExtractMethod;true;clojure.lang.PersistentHashMap.Node#create(int, ILeaf, int, Object, Object);clojure.lang.PersistentHashMap.BitmapIndexedNode#bitpos(int, int);fa6d4d3681917738c1acf5653239c19872bf71d9;Thu Jun 21 17:17:15 2007 +0000
ExtractMethod;true;clojure.lang.PersistentHashMap.Node#assoc(int, int, Object, Object);clojure.lang.PersistentHashMap.BitmapIndexedNode#bitpos(int, int);fa6d4d3681917738c1acf5653239c19872bf71d9;Thu Jun 21 17:17:15 2007 +0000
ExtractMethod;true;clojure.lang.PersistentHashMap.Node#without(int, Object);clojure.lang.PersistentHashMap.BitmapIndexedNode#bitpos(int, int);fa6d4d3681917738c1acf5653239c19872bf71d9;Thu Jun 21 17:17:15 2007 +0000
ExtractMethod;true;clojure.lang.PersistentHashMap.Node#find(int, Object);clojure.lang.PersistentHashMap.BitmapIndexedNode#bitpos(int, int);fa6d4d3681917738c1acf5653239c19872bf71d9;Thu Jun 21 17:17:15 2007 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;fa6d4d3681917738c1acf5653239c19872bf71d9;Thu Jun 21 17:17:15 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap#assoc(Object, Object);clojure.lang.PersistentHashMap#assoc(Object, Object);fa6d4d3681917738c1acf5653239c19872bf71d9;Thu Jun 21 17:17:15 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.INode;clojure.lang.PersistentHashMap.INode;fa6d4d3681917738c1acf5653239c19872bf71d9;Thu Jun 21 17:17:15 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.EmptyNode;clojure.lang.PersistentHashMap.EmptyNode;fa6d4d3681917738c1acf5653239c19872bf71d9;Thu Jun 21 17:17:15 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.Node#mask(int, int);clojure.lang.PersistentHashMap.BitmapIndexedNode#mask(int, int);fa6d4d3681917738c1acf5653239c19872bf71d9;Thu Jun 21 17:17:15 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.Node#without(int, Object);clojure.lang.PersistentHashMap.BitmapIndexedNode#without(int, Object);fa6d4d3681917738c1acf5653239c19872bf71d9;Thu Jun 21 17:17:15 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.Node#find(int, Object);clojure.lang.PersistentHashMap.BitmapIndexedNode#find(int, Object);fa6d4d3681917738c1acf5653239c19872bf71d9;Thu Jun 21 17:17:15 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.Node.Seq;clojure.lang.PersistentHashMap.BitmapIndexedNode.Seq;fa6d4d3681917738c1acf5653239c19872bf71d9;Thu Jun 21 17:17:15 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.HashCollisionLeaf#without(int, Object);clojure.lang.PersistentHashMap.HashCollisionNode#without(int, Object);fa6d4d3681917738c1acf5653239c19872bf71d9;Thu Jun 21 17:17:15 2007 +0000
InlineMethod;true;clojure.lang.Transaction#getNextSeq();clojure.lang.Transaction#run(IFn);97c180a498e6ca60c36b4dbf08581bc27d8aeb2a;Fri Jun 22 21:28:28 2007 +0000
InlineMethod;true;clojure.lang.Transaction#reset();clojure.lang.Transaction#run(IFn);97c180a498e6ca60c36b4dbf08581bc27d8aeb2a;Fri Jun 22 21:28:28 2007 +0000
SameType;true;clojure.lang.TRef;clojure.lang.TRef;97c180a498e6ca60c36b4dbf08581bc27d8aeb2a;Fri Jun 22 21:28:28 2007 +0000
SameType;true;clojure.lang.TVal;clojure.lang.TVal;97c180a498e6ca60c36b4dbf08581bc27d8aeb2a;Fri Jun 22 21:28:28 2007 +0000
SameType;true;clojure.lang.Transaction;clojure.lang.Transaction;97c180a498e6ca60c36b4dbf08581bc27d8aeb2a;Fri Jun 22 21:28:28 2007 +0000
SameMethod;true;clojure.lang.Transaction#getTransaction();clojure.lang.Transaction#getTransaction();97c180a498e6ca60c36b4dbf08581bc27d8aeb2a;Fri Jun 22 21:28:28 2007 +0000
SameMethod;true;clojure.lang.Transaction#runInTransaction(IFn);clojure.lang.Transaction#runInTransaction(IFn);97c180a498e6ca60c36b4dbf08581bc27d8aeb2a;Fri Jun 22 21:28:28 2007 +0000
SameMethod;true;clojure.lang.Transaction#Transaction();clojure.lang.Transaction#Transaction();97c180a498e6ca60c36b4dbf08581bc27d8aeb2a;Fri Jun 22 21:28:28 2007 +0000
SameMethod;true;clojure.lang.Transaction#run(IFn);clojure.lang.Transaction#run(IFn);97c180a498e6ca60c36b4dbf08581bc27d8aeb2a;Fri Jun 22 21:28:28 2007 +0000
SameMethod;true;clojure.lang.Transaction#doGet(TRef);clojure.lang.Transaction#doGet(TRef);97c180a498e6ca60c36b4dbf08581bc27d8aeb2a;Fri Jun 22 21:28:28 2007 +0000
SameMethod;true;clojure.lang.Transaction#getCurrent(TRef);clojure.lang.Transaction#getCurrent(TRef);97c180a498e6ca60c36b4dbf08581bc27d8aeb2a;Fri Jun 22 21:28:28 2007 +0000
SameMethod;true;clojure.lang.Transaction#doSet(TRef, Object);clojure.lang.Transaction#doSet(TRef, Object);97c180a498e6ca60c36b4dbf08581bc27d8aeb2a;Fri Jun 22 21:28:28 2007 +0000
RenameMethod;true;clojure.lang.Transaction#Transaction();clojure.lang.Transaction#getNextPoint();76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
MoveMethod;true;clojure.lang.TPool#valAsOfTime(TRef, long);clojure.lang.TRef#valAsOfTime(TRef, long);76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
MoveMethod;true;clojure.lang.TPool#valAsOfPoint(TRef, int);clojure.lang.TRef#valAsOfPoint(TRef, int);76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
MoveMethod;true;clojure.lang.TPool#trimHistoryPriorToTime(long);clojure.lang.TRef#trimHistoryPriorToTime(long);76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
MoveMethod;true;clojure.lang.TPool#trimHistoryPriorToPoint(int);clojure.lang.TRef#trimHistoryPriorToPoint(int);76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
MoveMethod;true;clojure.lang.TPool#trimHistory();clojure.lang.TRef#trimHistory();76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
ExtractMethod;true;clojure.lang.Transaction#doCommute(TRef, IFn);clojure.lang.Transaction#lock(TRef, boolean);76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
ExtractMethod;true;clojure.lang.Transaction#run(IFn);clojure.lang.Transaction#relinquish(long);76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#main(String[]);clojure.lang.PersistentTreeMap#main(String[]);76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
SameType;true;clojure.lang.TRef;clojure.lang.TRef;76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
SameType;true;clojure.lang.TStamp;clojure.lang.TStamp;76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
SameType;true;clojure.lang.TVal;clojure.lang.TVal;76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
SameType;true;clojure.lang.Transaction;clojure.lang.Transaction;76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
SameMethod;true;clojure.lang.Transaction#completedThroughPoint();clojure.lang.Transaction#completedThroughPoint();76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
SameMethod;true;clojure.lang.Transaction#runInTransaction(IFn);clojure.lang.Transaction#runInTransaction(IFn);76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
SameMethod;true;clojure.lang.Transaction#run(IFn);clojure.lang.Transaction#run(IFn);76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
SameMethod;true;clojure.lang.Transaction#doGet(TRef);clojure.lang.Transaction#doGet(TRef);76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
SameMethod;true;clojure.lang.Transaction#doSet(TRef, Object);clojure.lang.Transaction#doSet(TRef, Object);76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
SameMethod;true;clojure.lang.Transaction#doTouch(TRef);clojure.lang.Transaction#doTouch(TRef);76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
SameMethod;true;clojure.lang.Transaction#doCommute(TRef, IFn);clojure.lang.Transaction#doCommute(TRef, IFn);76e5252aaf17760df635115999bc212a860c8b9d;Sun Jun 24 01:28:43 2007 +0000
SameType;true;clojure.lang.TObj;clojure.lang.TObj;32ed38ea8f0dde2b8d3ac5b489510ebd359da979;Sun Jun 24 15:52:17 2007 +0000
SameType;true;clojure.lang.TRef;clojure.lang.TRef;32ed38ea8f0dde2b8d3ac5b489510ebd359da979;Sun Jun 24 15:52:17 2007 +0000
SameType;true;clojure.lang.TStamp;clojure.lang.TStamp;32ed38ea8f0dde2b8d3ac5b489510ebd359da979;Sun Jun 24 15:52:17 2007 +0000
SameType;true;clojure.lang.Transaction;clojure.lang.Transaction;32ed38ea8f0dde2b8d3ac5b489510ebd359da979;Sun Jun 24 15:52:17 2007 +0000
SameMethod;true;clojure.lang.Transaction#lock(TRef, boolean);clojure.lang.Transaction#lock(TRef, boolean);32ed38ea8f0dde2b8d3ac5b489510ebd359da979;Sun Jun 24 15:52:17 2007 +0000
SameMethod;true;clojure.lang.Transaction#run(IFn);clojure.lang.Transaction#run(IFn);32ed38ea8f0dde2b8d3ac5b489510ebd359da979;Sun Jun 24 15:52:17 2007 +0000
SameMethod;true;clojure.lang.Transaction#doGet(TRef);clojure.lang.Transaction#doGet(TRef);32ed38ea8f0dde2b8d3ac5b489510ebd359da979;Sun Jun 24 15:52:17 2007 +0000
SameMethod;true;clojure.lang.Transaction#doSet(TRef, Object);clojure.lang.Transaction#doSet(TRef, Object);32ed38ea8f0dde2b8d3ac5b489510ebd359da979;Sun Jun 24 15:52:17 2007 +0000
SameMethod;true;clojure.lang.Transaction#doCommute(TRef, IFn);clojure.lang.Transaction#doCommute(TRef, IFn);32ed38ea8f0dde2b8d3ac5b489510ebd359da979;Sun Jun 24 15:52:17 2007 +0000
SameType;true;clojure.lang.Transaction;clojure.lang.Transaction;bc13a0cb50ef1f6da7b3c72e2024ff511b5af631;Sun Jun 24 18:08:23 2007 +0000
SameMethod;true;clojure.lang.Transaction#doGet(TRef);clojure.lang.Transaction#doGet(TRef);bc13a0cb50ef1f6da7b3c72e2024ff511b5af631;Sun Jun 24 18:08:23 2007 +0000
SameMethod;true;clojure.lang.Transaction#main(String[]);clojure.lang.Transaction#main(String[]);bc13a0cb50ef1f6da7b3c72e2024ff511b5af631;Sun Jun 24 18:08:23 2007 +0000
SameType;true;clojure.lang.Transaction;clojure.lang.Transaction;9a6e587299aa58697f133d199ed38c4985899556;Mon Jun 25 12:22:09 2007 +0000
SameMethod;true;clojure.lang.Transaction#main(String[]);clojure.lang.Transaction#main(String[]);9a6e587299aa58697f133d199ed38c4985899556;Mon Jun 25 12:22:09 2007 +0000
SameType;true;clojure.lang.Transaction$1Incrementer;clojure.lang.Transaction$1Incrementer;9a6e587299aa58697f133d199ed38c4985899556;Mon Jun 25 12:22:09 2007 +0000
SameMethod;true;clojure.lang.Transaction$1Incrementer#invoke();clojure.lang.Transaction$1Incrementer#invoke();9a6e587299aa58697f133d199ed38c4985899556;Mon Jun 25 12:22:09 2007 +0000
SameType;true;clojure.lang.TRef;clojure.lang.TRef;51381b5ad21ea2a74708504e64077cdfeccc8e0d;Mon Jun 25 14:38:28 2007 +0000
SameType;true;clojure.lang.Module;clojure.lang.Module;2f727ab53baa48fded8f8735484c8b7cddf7b95b;Mon Jun 25 20:43:16 2007 +0000
SameMethod;true;clojure.lang.Module#intern(String, String);clojure.lang.Module#intern(String, String);2f727ab53baa48fded8f8735484c8b7cddf7b95b;Mon Jun 25 20:43:16 2007 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;2f727ab53baa48fded8f8735484c8b7cddf7b95b;Mon Jun 25 20:43:16 2007 +0000
SameMethod;true;clojure.lang.Symbol#Symbol(String);clojure.lang.Symbol#Symbol(String);2f727ab53baa48fded8f8735484c8b7cddf7b95b;Mon Jun 25 20:43:16 2007 +0000
RenameMethod;false;clojure.lang.Transaction#getTransaction();clojure.lang.Transaction#get();bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
SameType;true;clojure.lang.Module;clojure.lang.Module;bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
SameMethod;true;clojure.lang.Module#Module(String);clojure.lang.Module#Module(String);bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
SameMethod;true;clojure.lang.Module#find(String);clojure.lang.Module#find(String);bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
SameMethod;true;clojure.lang.Module#findOrCreate(String);clojure.lang.Module#findOrCreate(String);bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
SameMethod;true;clojure.lang.Module#find(Symbol);clojure.lang.Module#find(Symbol);bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
SameMethod;true;clojure.lang.Module#intern(Symbol);clojure.lang.Module#intern(Symbol);bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
SameMethod;true;clojure.lang.Symbol#equals(Object);clojure.lang.Symbol#equals(Object);bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
SameType;true;clojure.lang.TRef;clojure.lang.TRef;bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
SameMethod;true;clojure.lang.TRef#getCurrentVal();clojure.lang.TRef#getCurrentVal();bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
SameType;true;clojure.lang.Transaction;clojure.lang.Transaction;bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
SameMethod;true;clojure.lang.Transaction#runInTransaction(IFn);clojure.lang.Transaction#runInTransaction(IFn);bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
SameMethod;true;clojure.lang.Transaction#doCommute(TRef, IFn);clojure.lang.Transaction#doCommute(TRef, IFn);bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
SameMethod;true;clojure.lang.Transaction#main(String[]);clojure.lang.Transaction#main(String[]);bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
SameType;true;clojure.lang.Transaction$1Commuter;clojure.lang.Transaction$1Commuter;bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
SameMethod;true;clojure.lang.Transaction$1Commuter#invoke();clojure.lang.Transaction$1Commuter#invoke();bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
SameType;true;clojure.lang.Transaction$1Incrementer;clojure.lang.Transaction$1Incrementer;bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
SameMethod;true;clojure.lang.Transaction$1Incrementer#invoke();clojure.lang.Transaction$1Incrementer#invoke();bbe9d7ace49db4e368443818220e5268c3e3a367;Tue Jun 26 00:56:43 2007 +0000
ExtractMethod;true;clojure.lang.FnSeq#rest();clojure.lang.Delay#force();58d22d11d8313d630a43da8bf716bf0212227505;Thu Jun 28 13:45:55 2007 +0000
SameType;true;clojure.lang.FnSeq;clojure.lang.FnSeq;58d22d11d8313d630a43da8bf716bf0212227505;Thu Jun 28 13:45:55 2007 +0000
SameMethod;true;clojure.lang.FnSeq#rest();clojure.lang.FnSeq#rest();58d22d11d8313d630a43da8bf716bf0212227505;Thu Jun 28 13:45:55 2007 +0000
ExtractMethod;true;clojure.lang.Var#getValue();clojure.lang.TRef#isBound();21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol);clojure.lang.Compiler#lookupVar(Symbol);21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameType;true;clojure.lang.Compiler.KeyParam;clojure.lang.Compiler.KeyParam;21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameType;true;clojure.lang.TRef;clojure.lang.TRef;21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameMethod;true;clojure.lang.TRef#set(T);clojure.lang.TRef#set(T);21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameType;true;clojure.lang.Transaction;clojure.lang.Transaction;21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameMethod;true;clojure.lang.Transaction#lock(TRef, boolean);clojure.lang.Transaction#lock(TRef, boolean);21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameMethod;true;clojure.lang.Transaction#doGet(TRef);clojure.lang.Transaction#doGet(TRef);21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameMethod;true;clojure.lang.Var#Var(Symbol, Module);clojure.lang.Var#Var(Symbol, Module);21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameMethod;true;clojure.lang.Var#bind(Object);clojure.lang.Var#bind(Object);21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameMethod;true;clojure.lang.Var#getValue();clojure.lang.Var#getValue();21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameMethod;true;clojure.lang.Var#setValue(Object);clojure.lang.Var#setValue(Object);21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameMethod;true;clojure.lang.Var#pushThreadBinding(Object);clojure.lang.Var#pushThreadBinding(Object);21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameMethod;true;clojure.lang.Var#popThreadBinding();clojure.lang.Var#popThreadBinding();21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameMethod;true;clojure.lang.Var#fn();clojure.lang.Var#fn();21cb093d49c39537d26c0f7735b9b2b2b7684b8f;Fri Jun 29 16:03:25 2007 +0000
SameType;true;clojure.lang.TRef;clojure.lang.TRef;d5081fd98c12a3f933ca0d0b5389fb97018b9f38;Sat Jun 30 13:54:42 2007 +0000
SameMethod;true;clojure.lang.TRef#TRef();clojure.lang.TRef#TRef();d5081fd98c12a3f933ca0d0b5389fb97018b9f38;Sat Jun 30 13:54:42 2007 +0000
SameMethod;true;clojure.lang.TRef#getCurrentVal();clojure.lang.TRef#getCurrentVal();d5081fd98c12a3f933ca0d0b5389fb97018b9f38;Sat Jun 30 13:54:42 2007 +0000
SameMethod;true;clojure.lang.TRef#get();clojure.lang.TRef#get();d5081fd98c12a3f933ca0d0b5389fb97018b9f38;Sat Jun 30 13:54:42 2007 +0000
SameMethod;true;clojure.lang.TRef#set(T);clojure.lang.TRef#set(T);d5081fd98c12a3f933ca0d0b5389fb97018b9f38;Sat Jun 30 13:54:42 2007 +0000
SameMethod;true;clojure.lang.TRef#isBound();clojure.lang.TRef#isBound();d5081fd98c12a3f933ca0d0b5389fb97018b9f38;Sat Jun 30 13:54:42 2007 +0000
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;e4bbdb0c9af57495d16c8b4f97248c0137030da9;Mon Jul 2 14:57:01 2007 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object);clojure.lang.Keyword#invoke(Object, Object);e4bbdb0c9af57495d16c8b4f97248c0137030da9;Mon Jul 2 14:57:01 2007 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;e4bbdb0c9af57495d16c8b4f97248c0137030da9;Mon Jul 2 14:57:01 2007 +0000
SameMethod;true;clojure.lang.Symbol#toString();clojure.lang.Symbol#toString();e4bbdb0c9af57495d16c8b4f97248c0137030da9;Mon Jul 2 14:57:01 2007 +0000
SameMethod;true;clojure.lang.Symbol#equals(Object);clojure.lang.Symbol#equals(Object);e4bbdb0c9af57495d16c8b4f97248c0137030da9;Mon Jul 2 14:57:01 2007 +0000
SameMethod;true;clojure.lang.Symbol#hashCode();clojure.lang.Symbol#hashCode();e4bbdb0c9af57495d16c8b4f97248c0137030da9;Mon Jul 2 14:57:01 2007 +0000
SameType;true;clojure.lang.TRef;clojure.lang.TRef;e4bbdb0c9af57495d16c8b4f97248c0137030da9;Mon Jul 2 14:57:01 2007 +0000
SameMethod;true;clojure.lang.TRef#getThreadBinding();clojure.lang.TRef#getThreadBinding();e4bbdb0c9af57495d16c8b4f97248c0137030da9;Mon Jul 2 14:57:01 2007 +0000
SameMethod;true;clojure.lang.TRef#isBound();clojure.lang.TRef#isBound();e4bbdb0c9af57495d16c8b4f97248c0137030da9;Mon Jul 2 14:57:01 2007 +0000
RenameMethod;false;clojure.lang.APersistentArray#find(Object);clojure.lang.APersistentArray#entryAt(Object);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
RenameMethod;false;clojure.lang.APersistentArray#get(Object);clojure.lang.APersistentArray#valAt(Object);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
RenameMethod;false;clojure.lang.MapEntry#find(Object);clojure.lang.MapEntry#entryAt(Object);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
RenameMethod;false;clojure.lang.MapEntry#get(Object);clojure.lang.MapEntry#valAt(Object);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
RenameMethod;false;clojure.lang.PersistentArrayMap#find(Object);clojure.lang.PersistentArrayMap#entryAt(Object);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
RenameMethod;false;clojure.lang.PersistentArrayMap#get(Object);clojure.lang.PersistentArrayMap#valAt(Object);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
RenameMethod;false;clojure.lang.PersistentHashMap#find(Object);clojure.lang.PersistentHashMap#entryAt(Object);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
RenameMethod;false;clojure.lang.PersistentTreeMap#find(Object);clojure.lang.PersistentTreeMap#entryAt(Object);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
RenameMethod;false;clojure.lang.TRef#getCurrentVal();clojure.lang.TRef#currentVal();c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
RenameMethod;true;clojure.lang.TRef#get();clojure.lang.TRef#val();c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
RenameMethod;true;clojure.lang.PersistentHashtableMap#get(Object);clojure.lang.PersistentHashtableMap#entryAt(Object);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
RenameMethod;true;clojure.lang.PersistentHashtableMap#find(Object);clojure.lang.PersistentHashtableMap#valAt(Object);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
RenameMethod;true;clojure.lang.PersistentTreeMap#get(Object);clojure.lang.PersistentTreeMap#valAt(Object);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
RenameMethod;true;clojure.lang.PersistentHashMap#get(Object);clojure.lang.PersistentHashMap#valAt(Object);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
RenameMethod;true;clojure.lang.Module#find(String);clojure.lang.Module#findModule(String);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
RenameMethod;true;clojure.lang.Module#findOrCreate(String);clojure.lang.Module#findOrCreateModule(String);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameType;true;clojure.lang.APersistentArray;clojure.lang.APersistentArray;c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameMethod;true;clojure.lang.APersistentMap#equals(Object);clojure.lang.APersistentMap#equals(Object);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameType;true;clojure.lang.Associative;clojure.lang.Associative;c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameMethod;true;clojure.lang.Compiler#munge(String);clojure.lang.Compiler#munge(String);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object);clojure.lang.Keyword#invoke(Object);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameType;true;clojure.lang.MapEntry;clojure.lang.MapEntry;c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameType;true;clojure.lang.Module;clojure.lang.Module;c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameMethod;true;clojure.lang.Module#intern(String, String);clojure.lang.Module#intern(String, String);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap#contains(Object);clojure.lang.PersistentHashMap#contains(Object);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameType;true;clojure.lang.PersistentHashtableMap;clojure.lang.PersistentHashtableMap;c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#contains(Object);clojure.lang.PersistentTreeMap#contains(Object);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameMethod;true;clojure.lang.RT#get(Object, Object);clojure.lang.RT#get(Object, Object);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameMethod;true;clojure.lang.RT#find(Object, Object);clojure.lang.RT#find(Object, Object);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameType;true;clojure.lang.TRef;clojure.lang.TRef;c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameType;true;clojure.lang.ThreadLocalData;clojure.lang.ThreadLocalData;c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameMethod;true;clojure.lang.ThreadLocalData#main(String[]);clojure.lang.ThreadLocalData#main(String[]);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameType;true;clojure.lang.Transaction;clojure.lang.Transaction;c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameMethod;true;clojure.lang.Transaction#main(String[]);clojure.lang.Transaction#main(String[]);c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameMethod;true;clojure.lang.Var#getValue();clojure.lang.Var#getValue();c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameMethod;true;clojure.lang.Var#fn();clojure.lang.Var#fn();c8f2340902b1c3efd66dec3071f93b82eb5632e4;Mon Jul 2 18:41:27 2007 +0000
SameType;true;clojure.lang.InstanceMemberSymbol;clojure.lang.InstanceMemberSymbol;ee8b13bd2d08c2636e453bd65c599d70e8d7bf0c;Mon Jul 2 19:56:50 2007 +0000
SameType;true;clojure.lang.StaticMemberSymbol;clojure.lang.StaticMemberSymbol;ee8b13bd2d08c2636e453bd65c599d70e8d7bf0c;Mon Jul 2 19:56:50 2007 +0000
RenameClass;true;clojure.lang.StaticMemberSymbol;clojure.lang.StaticMemberInvoker;97795e1e3c44870ea715d602fa39ea61163bc3a4;Mon Jul 2 20:00:02 2007 +0000
RenameClass;true;clojure.lang.InstanceMemberSymbol;clojure.lang.InstanceMemberInvoker;97795e1e3c44870ea715d602fa39ea61163bc3a4;Mon Jul 2 20:00:02 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;97795e1e3c44870ea715d602fa39ea61163bc3a4;Mon Jul 2 20:00:02 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq);clojure.lang.Compiler#analyzeSeq(C, ISeq);97795e1e3c44870ea715d602fa39ea61163bc3a4;Mon Jul 2 20:00:02 2007 +0000
SameType;true;clojure.lang.Compiler.InvokeStaticMethodExpr;clojure.lang.Compiler.InvokeStaticMethodExpr;97795e1e3c44870ea715d602fa39ea61163bc3a4;Mon Jul 2 20:00:02 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol, boolean);clojure.lang.Compiler#analyzeSymbol(Symbol, boolean);97795e1e3c44870ea715d602fa39ea61163bc3a4;Mon Jul 2 20:00:02 2007 +0000
SameType;true;clojure.lang.Compiler.HostStaticFieldExpr;clojure.lang.Compiler.HostStaticFieldExpr;97795e1e3c44870ea715d602fa39ea61163bc3a4;Mon Jul 2 20:00:02 2007 +0000
SameType;true;clojure.lang.Module;clojure.lang.Module;cbb04272ba5bf377cb2f24071915597e7ad7e437;Mon Jul 2 20:11:41 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;cbb04272ba5bf377cb2f24071915597e7ad7e437;Mon Jul 2 20:11:41 2007 +0000
SameMethod;true;clojure.lang.RT#format(Object, String, Object[]);clojure.lang.RT#format(Object, String, Object[]);cbb04272ba5bf377cb2f24071915597e7ad7e437;Mon Jul 2 20:11:41 2007 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;cbb04272ba5bf377cb2f24071915597e7ad7e437;Mon Jul 2 20:11:41 2007 +0000
SameType;true;clojure.lang.Delay;clojure.lang.Delay;2a55f48aef818dd78265d09c3ca741ae4d74e2fa;Mon Jul 2 20:19:08 2007 +0000
SameMethod;true;clojure.lang.Delay#Delay(IFn);clojure.lang.Delay#Delay(IFn);2a55f48aef818dd78265d09c3ca741ae4d74e2fa;Mon Jul 2 20:19:08 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
SameMethod;true;clojure.lang.Compiler#compile(String, String, LineNumberingPushbackReader[]);clojure.lang.Compiler#compile(String, String, LineNumberingPushbackReader[]);829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq);clojure.lang.Compiler#analyzeSeq(C, ISeq);829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeLet(C, ISeq);clojure.lang.Compiler#analyzeLet(C, ISeq);829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeLetFn(C, ISeq);clojure.lang.Compiler#analyzeLetFn(C, ISeq);829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeLetStar(C, ISeq);clojure.lang.Compiler#analyzeLetStar(C, ISeq);829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeOr(C, ISeq);clojure.lang.Compiler#analyzeOr(C, ISeq);829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeMethod(FnExpr, ISeq);clojure.lang.Compiler#analyzeMethod(FnExpr, ISeq);829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeDef(C, ISeq);clojure.lang.Compiler#analyzeDef(C, ISeq);829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol);clojure.lang.Compiler#lookupVar(Symbol);829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
SameMethod;true;clojure.lang.Compiler#registerKeyword(Keyword);clojure.lang.Compiler#registerKeyword(Keyword);829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
SameMethod;true;clojure.lang.Compiler#registerVar(Var);clojure.lang.Compiler#registerVar(Var);829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
SameMethod;true;clojure.lang.Compiler#registerFn(FnExpr);clojure.lang.Compiler#registerFn(FnExpr);829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
SameMethod;true;clojure.lang.Compiler#referenceLocal(Symbol);clojure.lang.Compiler#referenceLocal(Symbol);829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
SameMethod;true;clojure.lang.Compiler#registerLocal(LocalBinding);clojure.lang.Compiler#registerLocal(LocalBinding);829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
SameMethod;true;clojure.lang.Compiler#resolveHostClassname(String);clojure.lang.Compiler#resolveHostClassname(String);829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
SameType;true;clojure.lang.Compiler.VarExpr;clojure.lang.Compiler.VarExpr;829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
SameMethod;true;clojure.lang.Compiler.VarExpr#emitExpression();clojure.lang.Compiler.VarExpr#emitExpression();829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;829f3e3fb7908c958355ccde936c62c4ddc8099c;Mon Jul 2 20:33:09 2007 +0000
ExtractMethod;true;clojure.lang.PersistentArrayMap#createHT(Object[]);clojure.lang.PersistentHashMap#create(IPersistentMap, Object[]);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameType;true;clojure.lang.AFn;clojure.lang.AFn;296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emitDeclaration();clojure.lang.Compiler.FnExpr#emitDeclaration();296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeDef(C, ISeq);clojure.lang.Compiler#analyzeDef(C, ISeq);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.Compiler#baseSymbol(Symbol);clojure.lang.Compiler#baseSymbol(Symbol);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol, boolean);clojure.lang.Compiler#analyzeSymbol(Symbol, boolean);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol);clojure.lang.Compiler#lookupVar(Symbol);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.Compiler#registerKeyword(Keyword);clojure.lang.Compiler#registerKeyword(Keyword);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.Compiler#registerVar(Var);clojure.lang.Compiler#registerVar(Var);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.Compiler#registerFn(FnExpr);clojure.lang.Compiler#registerFn(FnExpr);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.Compiler#registerLocal(LocalBinding);clojure.lang.Compiler#registerLocal(LocalBinding);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameType;true;clojure.lang.Compiler.KeyParam;clojure.lang.Compiler.KeyParam;296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.Compiler.KeyParam#KeyParam(LocalBindingExpr, Expr);clojure.lang.Compiler.KeyParam#KeyParam(LocalBindingExpr, Expr);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.LispReader#interpretToken(String);clojure.lang.LispReader#interpretToken(String);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameType;true;clojure.lang.MapEntry;clojure.lang.MapEntry;296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.MapEntry#assoc(Object, Object);clojure.lang.MapEntry#assoc(Object, Object);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.MapEntry#without(Object);clojure.lang.MapEntry#without(Object);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameType;true;clojure.lang.Obj;clojure.lang.Obj;296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.PersistentArrayMap#create(Object[]);clojure.lang.PersistentArrayMap#create(Object[]);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.PersistentArrayMap#createHT(Object[]);clojure.lang.PersistentArrayMap#createHT(Object[]);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.PersistentArrayMap#empty();clojure.lang.PersistentArrayMap#empty();296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap#assoc(Object, Object);clojure.lang.PersistentHashMap#assoc(Object, Object);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap#without(Object);clojure.lang.PersistentHashMap#without(Object);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.HashCollisionNode;clojure.lang.PersistentHashMap.HashCollisionNode;296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.HashCollisionNode#seq();clojure.lang.PersistentHashMap.HashCollisionNode#seq();296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.PersistentList#PersistentList(Object, PersistentList);clojure.lang.PersistentList#PersistentList(Object, PersistentList);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#PersistentTreeMap(Comparator);clojure.lang.PersistentTreeMap#PersistentTreeMap(Comparator);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#assocEx(Object, Object);clojure.lang.PersistentTreeMap#assocEx(Object, Object);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#assoc(Object, Object);clojure.lang.PersistentTreeMap#assoc(Object, Object);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#without(Object);clojure.lang.PersistentTreeMap#without(Object);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#PersistentTreeMap(Comparator, Node, int, IPersistentMap);clojure.lang.PersistentTreeMap#PersistentTreeMap(Comparator, Node, int, IPersistentMap);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameType;true;clojure.lang.TRef;clojure.lang.TRef;296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.TRef#TRef(T);clojure.lang.TRef#TRef(T);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.TRef#currentVal();clojure.lang.TRef#currentVal();296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.TRef#val();clojure.lang.TRef#val();296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameType;true;clojure.lang.Transaction;clojure.lang.Transaction;296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
SameMethod;true;clojure.lang.Transaction#doGet(TRef);clojure.lang.Transaction#doGet(TRef);296da9b329a1a7f07a8a8baeed2c59439e24e889;Wed Jul 4 19:26:42 2007 +0000
MoveMethod;false;clojure.lang.PersistentHashMap.BitmapIndexedNode#mask(int, int);clojure.lang.PersistentHashMap#mask(int, int);ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
MoveMethod;false;clojure.lang.PersistentHashMap.FullNode#mask(int, int);clojure.lang.PersistentHashMap#mask(int, int);ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameType;true;clojure.lang.APersistentArray;clojure.lang.APersistentArray;ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameMethod;true;clojure.lang.APersistentArray#cons(Object);clojure.lang.APersistentArray#cons(Object);ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameMethod;true;clojure.lang.Compiler#compile(String, String, LineNumberingPushbackReader[]);clojure.lang.Compiler#compile(String, String, LineNumberingPushbackReader[]);ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeDef(C, ISeq);clojure.lang.Compiler#analyzeDef(C, ISeq);ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol, boolean);clojure.lang.Compiler#analyzeSymbol(Symbol, boolean);ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameType;true;clojure.lang.Compiler.VarExpr;clojure.lang.Compiler.VarExpr;ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameType;true;clojure.lang.PersistentArray;clojure.lang.PersistentArray;ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameMethod;true;clojure.lang.PersistentArray#create(Master, int, int, BitSet);clojure.lang.PersistentArray#create(Master, int, int, BitSet);ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameMethod;true;clojure.lang.PersistentArray#create(int, Object, float);clojure.lang.PersistentArray#create(int, Object, float);ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameType;true;clojure.lang.PersistentArrayList;clojure.lang.PersistentArrayList;ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameMethod;true;clojure.lang.PersistentArrayList#pop();clojure.lang.PersistentArrayList#pop();ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameMethod;true;clojure.lang.PersistentArrayList#create(Master, int, int, BitSet);clojure.lang.PersistentArrayList#create(Master, int, int, BitSet);ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameMethod;true;clojure.lang.PersistentArrayList#create(int, Object, float);clojure.lang.PersistentArrayList#create(int, Object, float);ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.INode;clojure.lang.PersistentHashMap.INode;ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.EmptyNode;clojure.lang.PersistentHashMap.EmptyNode;ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.FullNode;clojure.lang.PersistentHashMap.FullNode;ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.FullNode#FullNode(INode[], int);clojure.lang.PersistentHashMap.FullNode#FullNode(INode[], int);ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode;clojure.lang.PersistentHashMap.BitmapIndexedNode;ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#BitmapIndexedNode(int, INode[], int);clojure.lang.PersistentHashMap.BitmapIndexedNode#BitmapIndexedNode(int, INode[], int);ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.LeafNode;clojure.lang.PersistentHashMap.LeafNode;ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.HashCollisionNode;clojure.lang.PersistentHashMap.HashCollisionNode;ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameType;true;clojure.lang.PersistentHashtableMap;clojure.lang.PersistentHashtableMap;ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap#create(int);clojure.lang.PersistentHashtableMap#create(int);ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap#create(int, PersistentArray);clojure.lang.PersistentHashtableMap#create(int, PersistentArray);ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameMethod;true;clojure.lang.PersistentHashtableMap#create(int, PersistentArray, int);clojure.lang.PersistentHashtableMap#create(int, PersistentArray, int);ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameMethod;true;clojure.lang.PersistentQueue#PersistentQueue(ISeq, PersistentArrayList, IPersistentMap);clojure.lang.PersistentQueue#PersistentQueue(ISeq, PersistentArrayList, IPersistentMap);ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameMethod;true;clojure.lang.PersistentQueue#pop();clojure.lang.PersistentQueue#pop();ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameMethod;true;clojure.lang.PersistentQueue#cons(Object);clojure.lang.PersistentQueue#cons(Object);ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#main(String[]);clojure.lang.PersistentTreeMap#main(String[]);ec855a884cc289812332d34a6b8f2ebf18ccb1cc;Thu Jul 5 17:17:25 2007 +0000
MoveMethod;false;clojure.lang.APersistentArray#equals(Object);clojure.lang.PersistentVector#equals(Object);7ee1a813d0c90a1bde3e8c341d3fc18ba0ad462e;Thu Jul 5 22:10:24 2007 +0000
MoveMethod;true;clojure.lang.APersistentArray#hashCode();clojure.lang.PersistentVector#hashCode();7ee1a813d0c90a1bde3e8c341d3fc18ba0ad462e;Thu Jul 5 22:10:24 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7ee1a813d0c90a1bde3e8c341d3fc18ba0ad462e;Thu Jul 5 22:10:24 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeLetFn(C, ISeq);clojure.lang.Compiler#analyzeLetFn(C, ISeq);7ee1a813d0c90a1bde3e8c341d3fc18ba0ad462e;Thu Jul 5 22:10:24 2007 +0000
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;7ee1a813d0c90a1bde3e8c341d3fc18ba0ad462e;Thu Jul 5 22:10:24 2007 +0000
SameMethod;true;clojure.lang.PersistentQueue#pop();clojure.lang.PersistentQueue#pop();7ee1a813d0c90a1bde3e8c341d3fc18ba0ad462e;Thu Jul 5 22:10:24 2007 +0000
SameMethod;true;clojure.lang.PersistentQueue#cons(Object);clojure.lang.PersistentQueue#cons(Object);7ee1a813d0c90a1bde3e8c341d3fc18ba0ad462e;Thu Jul 5 22:10:24 2007 +0000
SameMethod;true;clojure.lang.PersistentQueue#main(String[]);clojure.lang.PersistentQueue#main(String[]);7ee1a813d0c90a1bde3e8c341d3fc18ba0ad462e;Thu Jul 5 22:10:24 2007 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;7ee1a813d0c90a1bde3e8c341d3fc18ba0ad462e;Thu Jul 5 22:10:24 2007 +0000
SameMethod;true;clojure.lang.PersistentVector#create(Object[]);clojure.lang.PersistentVector#create(Object[]);7ee1a813d0c90a1bde3e8c341d3fc18ba0ad462e;Thu Jul 5 22:10:24 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameMethod;true;clojure.lang.Compiler#compile(String, String, LineNumberingPushbackReader[]);clojure.lang.Compiler#compile(String, String, LineNumberingPushbackReader[]);6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq);clojure.lang.Compiler#analyzeSeq(C, ISeq);6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameType;true;clojure.lang.Compiler.InvokeStaticMethodExpr;clojure.lang.Compiler.InvokeStaticMethodExpr;6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameType;true;clojure.lang.Compiler.InvokeUntypedInstanceMemberExpr;clojure.lang.Compiler.InvokeUntypedInstanceMemberExpr;6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameType;true;clojure.lang.Compiler.InvokeInstanceMemberExpr;clojure.lang.Compiler.InvokeInstanceMemberExpr;6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeLet(C, ISeq);clojure.lang.Compiler#analyzeLet(C, ISeq);6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeLetFn(C, ISeq);clojure.lang.Compiler#analyzeLetFn(C, ISeq);6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeLetStar(C, ISeq);clojure.lang.Compiler#analyzeLetStar(C, ISeq);6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeAnd(C, ISeq);clojure.lang.Compiler#analyzeAnd(C, ISeq);6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameType;true;clojure.lang.Compiler.AndExpr;clojure.lang.Compiler.AndExpr;6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeOr(C, ISeq);clojure.lang.Compiler#analyzeOr(C, ISeq);6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameType;true;clojure.lang.Compiler.OrExpr;clojure.lang.Compiler.OrExpr;6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeBody(C, ISeq);clojure.lang.Compiler#analyzeBody(C, ISeq);6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameType;true;clojure.lang.Compiler.BodyExpr;clojure.lang.Compiler.BodyExpr;6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emitDeclaration();clojure.lang.Compiler.FnExpr#emitDeclaration();6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeMethod(FnExpr, ISeq);clojure.lang.Compiler#analyzeMethod(FnExpr, ISeq);6458d1bc2e1d9ea332c21f0a46e889a59e0b3fff;Fri Jul 6 13:15:47 2007 +0000
SameType;true;clojure.lang.TRef;clojure.lang.TRef;06be2c38f892fa63a4b53a6700a09e19c6345c54;Mon Jul 9 14:28:41 2007 +0000
SameMethod;true;clojure.lang.TRef#TRef();clojure.lang.TRef#TRef();06be2c38f892fa63a4b53a6700a09e19c6345c54;Mon Jul 9 14:28:41 2007 +0000
SameMethod;true;clojure.lang.TRef#getThreadBinding();clojure.lang.TRef#getThreadBinding();06be2c38f892fa63a4b53a6700a09e19c6345c54;Mon Jul 9 14:28:41 2007 +0000
SameMethod;true;clojure.lang.TRef#pushThreadBinding(T);clojure.lang.TRef#pushThreadBinding(T);06be2c38f892fa63a4b53a6700a09e19c6345c54;Mon Jul 9 14:28:41 2007 +0000
SameMethod;true;clojure.lang.TRef#popThreadBinding();clojure.lang.TRef#popThreadBinding();06be2c38f892fa63a4b53a6700a09e19c6345c54;Mon Jul 9 14:28:41 2007 +0000
SameMethod;true;clojure.lang.TRef#isBound();clojure.lang.TRef#isBound();06be2c38f892fa63a4b53a6700a09e19c6345c54;Mon Jul 9 14:28:41 2007 +0000
SameType;true;clojure.lang.TRef;clojure.lang.TRef;08df868c33388c2e045f567b44d083a81935ef61;Mon Jul 9 14:40:28 2007 +0000
SameType;true;clojure.lang.AFn;clojure.lang.AFn;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.APersistentMap.KeySeq;clojure.lang.APersistentMap.KeySeq;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.APersistentMap.ValSeq;clojure.lang.APersistentMap.ValSeq;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.Cons;clojure.lang.Cons;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.FnSeq;clojure.lang.FnSeq;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.IObj;clojure.lang.IObj;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.IteratorSeq;clojure.lang.IteratorSeq;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameMethod;true;clojure.lang.IteratorSeq#IteratorSeq(Iterator);clojure.lang.IteratorSeq#IteratorSeq(Iterator);f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameMethod;true;clojure.lang.IteratorSeq#first();clojure.lang.IteratorSeq#first();f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameMethod;true;clojure.lang.IteratorSeq#rest();clojure.lang.IteratorSeq#rest();f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.LispReader.StringReader;clojure.lang.LispReader.StringReader;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.LispReader.CommentReader;clojure.lang.LispReader.CommentReader;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.LispReader.QuoteReader;clojure.lang.LispReader.QuoteReader;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.LispReader.BackquoteReader;clojure.lang.LispReader.BackquoteReader;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.LispReader.UnquoteReader;clojure.lang.LispReader.UnquoteReader;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.LispReader.CharacterReader;clojure.lang.LispReader.CharacterReader;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.LispReader.ListReader;clojure.lang.LispReader.ListReader;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.LispReader.UnmatchedDelimiterReader;clojure.lang.LispReader.UnmatchedDelimiterReader;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.MapEntry;clojure.lang.MapEntry;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameMethod;true;clojure.lang.MapEntry#assoc(Object, Object);clojure.lang.MapEntry#assoc(Object, Object);f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.MapEntry.Seq;clojure.lang.MapEntry.Seq;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.Obj;clojure.lang.Obj;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.PersistentArrayMap.Seq;clojure.lang.PersistentArrayMap.Seq;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap#create(IPersistentMap, Object[]);clojure.lang.PersistentHashMap#create(IPersistentMap, Object[]);f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap#without(Object);clojure.lang.PersistentHashMap#without(Object);f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.FullNode;clojure.lang.PersistentHashMap.FullNode;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.FullNode.Seq;clojure.lang.PersistentHashMap.FullNode.Seq;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode;clojure.lang.PersistentHashMap.BitmapIndexedNode;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode.Seq;clojure.lang.PersistentHashMap.BitmapIndexedNode.Seq;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap#main(String[]);clojure.lang.PersistentHashMap#main(String[]);f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.PersistentQueue.Seq;clojure.lang.PersistentQueue.Seq;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.PersistentTreeMap.Seq;clojure.lang.PersistentTreeMap.Seq;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#main(String[]);clojure.lang.PersistentTreeMap#main(String[]);f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.PersistentVector.Seq;clojure.lang.PersistentVector.Seq;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.PersistentVector.RSeq;clojure.lang.PersistentVector.RSeq;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.TRef;clojure.lang.TRef;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.Transaction;clojure.lang.Transaction;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameMethod;true;clojure.lang.Transaction#main(String[]);clojure.lang.Transaction#main(String[]);f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.Transaction$1Incr;clojure.lang.Transaction$1Incr;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.Transaction$1Commuter;clojure.lang.Transaction$1Commuter;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.Transaction$1Incrementer;clojure.lang.Transaction$1Incrementer;f1a5eef2542f5b40778cfb317273b4d6006d3bd4;Mon Jul 9 16:56:13 2007 +0000
SameType;true;clojure.lang.Module;clojure.lang.Module;dda99609dbe5b3ef9a831b570c99ee79530f4d0a;Thu Jul 12 22:31:30 2007 +0000
SameMethod;true;clojure.lang.Module#intern(String, String);clojure.lang.Module#intern(String, String);dda99609dbe5b3ef9a831b570c99ee79530f4d0a;Thu Jul 12 22:31:30 2007 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;1b68f771ed620a7fee62551c0959496168b1cd9d;Fri Jul 13 01:55:29 2007 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;1b68f771ed620a7fee62551c0959496168b1cd9d;Fri Jul 13 01:55:29 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;1b68f771ed620a7fee62551c0959496168b1cd9d;Fri Jul 13 01:55:29 2007 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);1b68f771ed620a7fee62551c0959496168b1cd9d;Fri Jul 13 01:55:29 2007 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;1b68f771ed620a7fee62551c0959496168b1cd9d;Fri Jul 13 01:55:29 2007 +0000
RenameMethod;true;clojure.lang.ReaderLexer#mT28();clojure.lang.ReaderLexer#mT38();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameType;true;clojure.lang.ReaderLexer;clojure.lang.ReaderLexer;2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer#mT29();clojure.lang.ReaderLexer#mT29();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer#mT30();clojure.lang.ReaderLexer#mT30();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer#mT31();clojure.lang.ReaderLexer#mT31();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer#mT32();clojure.lang.ReaderLexer#mT32();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer#mT33();clojure.lang.ReaderLexer#mT33();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer#mT34();clojure.lang.ReaderLexer#mT34();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer#mT35();clojure.lang.ReaderLexer#mT35();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer#mDecimalLiteral();clojure.lang.ReaderLexer#mDecimalLiteral();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer#mCharacterLiteral();clojure.lang.ReaderLexer#mCharacterLiteral();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer#mEscapeSequence();clojure.lang.ReaderLexer#mEscapeSequence();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer#mOctalEscape();clojure.lang.ReaderLexer#mOctalEscape();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer#mIdentifier();clojure.lang.ReaderLexer#mIdentifier();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer#mTokens();clojure.lang.ReaderLexer#mTokens();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameType;true;clojure.lang.ReaderLexer.DFA16;clojure.lang.ReaderLexer.DFA16;2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer.DFA16#getDescription();clojure.lang.ReaderLexer.DFA16#getDescription();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameType;true;clojure.lang.ReaderLexer.DFA29;clojure.lang.ReaderLexer.DFA29;2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer.DFA29#getDescription();clojure.lang.ReaderLexer.DFA29#getDescription();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameType;true;clojure.lang.ReaderParser;clojure.lang.ReaderParser;2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#ReaderParser(TokenStream);clojure.lang.ReaderParser#ReaderParser(TokenStream);2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#main(String[]);clojure.lang.ReaderParser#main(String[]);2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#expression();clojure.lang.ReaderParser#expression();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#listExpression();clojure.lang.ReaderParser#listExpression();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#expressions();clojure.lang.ReaderParser#expressions();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#vectorExpression();clojure.lang.ReaderParser#vectorExpression();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#mapExpression();clojure.lang.ReaderParser#mapExpression();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#symbol();clojure.lang.ReaderParser#symbol();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#keyword();clojure.lang.ReaderParser#keyword();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#literal();clojure.lang.ReaderParser#literal();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#ratioLiteral();clojure.lang.ReaderParser#ratioLiteral();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#integerLiteral();clojure.lang.ReaderParser#integerLiteral();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#metaTag();clojure.lang.ReaderParser#metaTag();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#objExpression();clojure.lang.ReaderParser#objExpression();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#metaExpression();clojure.lang.ReaderParser#metaExpression();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#member();clojure.lang.ReaderParser#member();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#method();clojure.lang.ReaderParser#method();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#args();clojure.lang.ReaderParser#args();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#dotExpression();clojure.lang.ReaderParser#dotExpression();2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
SameMethod;true;clojure.lang.Symbol#Symbol(String);clojure.lang.Symbol#Symbol(String);2f851022c1de98dd11dd05e30e4fca5e118c30f9;Mon Jul 16 15:14:56 2007 +0000
ExtractMethod;true;clojure.lang.ReaderParser#expression();clojure.lang.ReaderParser#otherThanDotExpression();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameType;true;clojure.lang.ReaderLexer;clojure.lang.ReaderLexer;fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer#mDecimalLiteral();clojure.lang.ReaderLexer#mDecimalLiteral();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer#mCharacterLiteral();clojure.lang.ReaderLexer#mCharacterLiteral();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer#mEscapeSequence();clojure.lang.ReaderLexer#mEscapeSequence();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer#mOctalEscape();clojure.lang.ReaderLexer#mOctalEscape();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameType;true;clojure.lang.ReaderLexer.DFA16;clojure.lang.ReaderLexer.DFA16;fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer.DFA16#getDescription();clojure.lang.ReaderLexer.DFA16#getDescription();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameType;true;clojure.lang.ReaderLexer.DFA24;clojure.lang.ReaderLexer.DFA24;fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderLexer.DFA24#getDescription();clojure.lang.ReaderLexer.DFA24#getDescription();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameType;true;clojure.lang.ReaderParser;clojure.lang.ReaderParser;fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#ReaderParser(TokenStream);clojure.lang.ReaderParser#ReaderParser(TokenStream);fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#expression();clojure.lang.ReaderParser#expression();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#listExpression();clojure.lang.ReaderParser#listExpression();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#expressions();clojure.lang.ReaderParser#expressions();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#vectorExpression();clojure.lang.ReaderParser#vectorExpression();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#mapExpression();clojure.lang.ReaderParser#mapExpression();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#symbol();clojure.lang.ReaderParser#symbol();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#keyword();clojure.lang.ReaderParser#keyword();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#literal();clojure.lang.ReaderParser#literal();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#ratioLiteral();clojure.lang.ReaderParser#ratioLiteral();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#integerLiteral();clojure.lang.ReaderParser#integerLiteral();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#metaTag();clojure.lang.ReaderParser#metaTag();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#objExpression();clojure.lang.ReaderParser#objExpression();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#metaExpression();clojure.lang.ReaderParser#metaExpression();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#member();clojure.lang.ReaderParser#member();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#method();clojure.lang.ReaderParser#method();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#args();clojure.lang.ReaderParser#args();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#dotExpression();clojure.lang.ReaderParser#dotExpression();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#quotedExpression();clojure.lang.ReaderParser#quotedExpression();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#caretExpression();clojure.lang.ReaderParser#caretExpression();fc33cf217b1dbfaaee3ca3294a6785df5befdaa1;Fri Jul 20 13:27:03 2007 +0000
SameType;true;clojure.lang.Transaction;clojure.lang.Transaction;099953cd4057aacf696de026baaee0295fc4db19;Tue Jul 24 18:09:20 2007 +0000
SameMethod;true;clojure.lang.Transaction#getNextPoint();clojure.lang.Transaction#getNextPoint();099953cd4057aacf696de026baaee0295fc4db19;Tue Jul 24 18:09:20 2007 +0000
SameMethod;true;clojure.lang.Transaction#run(IFn);clojure.lang.Transaction#run(IFn);099953cd4057aacf696de026baaee0295fc4db19;Tue Jul 24 18:09:20 2007 +0000
RenameMethod;true;clojure.lang.Transaction#getNextPoint();clojure.lang.Transaction#getCommitPoint();f39e88435ebb9bba67ce46a758dce82fc71eb0be;Thu Jul 26 15:13:50 2007 +0000
SameType;true;clojure.lang.TRef;clojure.lang.TRef;f39e88435ebb9bba67ce46a758dce82fc71eb0be;Thu Jul 26 15:13:50 2007 +0000
SameType;true;clojure.lang.TStamp;clojure.lang.TStamp;f39e88435ebb9bba67ce46a758dce82fc71eb0be;Thu Jul 26 15:13:50 2007 +0000
SameType;true;clojure.lang.Transaction;clojure.lang.Transaction;f39e88435ebb9bba67ce46a758dce82fc71eb0be;Thu Jul 26 15:13:50 2007 +0000
SameMethod;true;clojure.lang.Transaction#completedThroughPoint();clojure.lang.Transaction#completedThroughPoint();f39e88435ebb9bba67ce46a758dce82fc71eb0be;Thu Jul 26 15:13:50 2007 +0000
SameMethod;true;clojure.lang.Transaction#relinquish(long);clojure.lang.Transaction#relinquish(long);f39e88435ebb9bba67ce46a758dce82fc71eb0be;Thu Jul 26 15:13:50 2007 +0000
SameMethod;true;clojure.lang.Transaction#lock(TRef, boolean);clojure.lang.Transaction#lock(TRef, boolean);f39e88435ebb9bba67ce46a758dce82fc71eb0be;Thu Jul 26 15:13:50 2007 +0000
SameMethod;true;clojure.lang.Transaction#run(IFn);clojure.lang.Transaction#run(IFn);f39e88435ebb9bba67ce46a758dce82fc71eb0be;Thu Jul 26 15:13:50 2007 +0000
SameMethod;true;clojure.lang.Transaction#doGet(TRef);clojure.lang.Transaction#doGet(TRef);f39e88435ebb9bba67ce46a758dce82fc71eb0be;Thu Jul 26 15:13:50 2007 +0000
SameMethod;true;clojure.lang.Transaction#main(String[]);clojure.lang.Transaction#main(String[]);f39e88435ebb9bba67ce46a758dce82fc71eb0be;Thu Jul 26 15:13:50 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;4294c94279eecee549d4969e194a40b5ea50649f;Fri Jul 27 15:19:46 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#main(String[]);clojure.lang.LockingTransaction#main(String[]);4294c94279eecee549d4969e194a40b5ea50649f;Fri Jul 27 15:19:46 2007 +0000
SameType;true;clojure.lang.LockingTransaction$1Commuter;clojure.lang.LockingTransaction$1Commuter;4294c94279eecee549d4969e194a40b5ea50649f;Fri Jul 27 15:19:46 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction$1Commuter#call();clojure.lang.LockingTransaction$1Commuter#call();4294c94279eecee549d4969e194a40b5ea50649f;Fri Jul 27 15:19:46 2007 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;4294c94279eecee549d4969e194a40b5ea50649f;Fri Jul 27 15:19:46 2007 +0000
SameMethod;true;clojure.lang.Ref#set(Object);clojure.lang.Ref#set(Object);4294c94279eecee549d4969e194a40b5ea50649f;Fri Jul 27 15:19:46 2007 +0000
ExtractMethod;true;clojure.lang.LockingTransaction#lock(Ref, boolean);clojure.lang.LockingTransaction#stop(int);5c719b2f91f723c78d0f066f6ddd7fa558ff8bcc;Sun Jul 29 14:25:48 2007 +0000
ExtractMethod;true;clojure.lang.LockingTransaction#run(IFn);clojure.lang.LockingTransaction#stop(int);5c719b2f91f723c78d0f066f6ddd7fa558ff8bcc;Sun Jul 29 14:25:48 2007 +0000
ExtractMethod;true;clojure.lang.LockingTransaction#lock(Ref, boolean);clojure.lang.LockingTransaction.Info#running();5c719b2f91f723c78d0f066f6ddd7fa558ff8bcc;Sun Jul 29 14:25:48 2007 +0000
ExtractMethod;true;clojure.lang.LockingTransaction#run(IFn);clojure.lang.LockingTransaction.Info#running();5c719b2f91f723c78d0f066f6ddd7fa558ff8bcc;Sun Jul 29 14:25:48 2007 +0000
InlineMethod;true;clojure.lang.LockingTransaction#relinquishReadPoint();clojure.lang.LockingTransaction#run(IFn);5c719b2f91f723c78d0f066f6ddd7fa558ff8bcc;Sun Jul 29 14:25:48 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;5c719b2f91f723c78d0f066f6ddd7fa558ff8bcc;Sun Jul 29 14:25:48 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#getCommitPoint();clojure.lang.LockingTransaction#getCommitPoint();5c719b2f91f723c78d0f066f6ddd7fa558ff8bcc;Sun Jul 29 14:25:48 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#getReadPoint();clojure.lang.LockingTransaction#getReadPoint();5c719b2f91f723c78d0f066f6ddd7fa558ff8bcc;Sun Jul 29 14:25:48 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#lock(Ref, boolean);clojure.lang.LockingTransaction#lock(Ref, boolean);5c719b2f91f723c78d0f066f6ddd7fa558ff8bcc;Sun Jul 29 14:25:48 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#abort();clojure.lang.LockingTransaction#abort();5c719b2f91f723c78d0f066f6ddd7fa558ff8bcc;Sun Jul 29 14:25:48 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#getEx();clojure.lang.LockingTransaction#getEx();5c719b2f91f723c78d0f066f6ddd7fa558ff8bcc;Sun Jul 29 14:25:48 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#runInTransaction(IFn);clojure.lang.LockingTransaction#runInTransaction(IFn);5c719b2f91f723c78d0f066f6ddd7fa558ff8bcc;Sun Jul 29 14:25:48 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#run(IFn);clojure.lang.LockingTransaction#run(IFn);5c719b2f91f723c78d0f066f6ddd7fa558ff8bcc;Sun Jul 29 14:25:48 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#doGet(Ref);clojure.lang.LockingTransaction#doGet(Ref);5c719b2f91f723c78d0f066f6ddd7fa558ff8bcc;Sun Jul 29 14:25:48 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#main(String[]);clojure.lang.LockingTransaction#main(String[]);5c719b2f91f723c78d0f066f6ddd7fa558ff8bcc;Sun Jul 29 14:25:48 2007 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;5c719b2f91f723c78d0f066f6ddd7fa558ff8bcc;Sun Jul 29 14:25:48 2007 +0000
SameMethod;true;clojure.lang.Ref#Ref();clojure.lang.Ref#Ref();5c719b2f91f723c78d0f066f6ddd7fa558ff8bcc;Sun Jul 29 14:25:48 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;e9aa32282a2b428d12b6409bf4c84ebe7423d16f;Sun Jul 29 18:31:28 2007 +0000
SameType;true;clojure.lang.LockingTransaction.Info;clojure.lang.LockingTransaction.Info;e9aa32282a2b428d12b6409bf4c84ebe7423d16f;Sun Jul 29 18:31:28 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction.Info#Info(int, long);clojure.lang.LockingTransaction.Info#Info(int, long);e9aa32282a2b428d12b6409bf4c84ebe7423d16f;Sun Jul 29 18:31:28 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction.Info#running();clojure.lang.LockingTransaction.Info#running();e9aa32282a2b428d12b6409bf4c84ebe7423d16f;Sun Jul 29 18:31:28 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#run(IFn);clojure.lang.LockingTransaction#run(IFn);e9aa32282a2b428d12b6409bf4c84ebe7423d16f;Sun Jul 29 18:31:28 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#doGet(Ref);clojure.lang.LockingTransaction#doGet(Ref);e9aa32282a2b428d12b6409bf4c84ebe7423d16f;Sun Jul 29 18:31:28 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#doSet(Ref, Object);clojure.lang.LockingTransaction#doSet(Ref, Object);e9aa32282a2b428d12b6409bf4c84ebe7423d16f;Sun Jul 29 18:31:28 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#doTouch(Ref);clojure.lang.LockingTransaction#doTouch(Ref);e9aa32282a2b428d12b6409bf4c84ebe7423d16f;Sun Jul 29 18:31:28 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#doCommute(Ref, IFn);clojure.lang.LockingTransaction#doCommute(Ref, IFn);e9aa32282a2b428d12b6409bf4c84ebe7423d16f;Sun Jul 29 18:31:28 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#main(String[]);clojure.lang.LockingTransaction#main(String[]);e9aa32282a2b428d12b6409bf4c84ebe7423d16f;Sun Jul 29 18:31:28 2007 +0000
SameType;true;clojure.lang.LockingTransaction$1Commuter;clojure.lang.LockingTransaction$1Commuter;e9aa32282a2b428d12b6409bf4c84ebe7423d16f;Sun Jul 29 18:31:28 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction$1Commuter#call();clojure.lang.LockingTransaction$1Commuter#call();e9aa32282a2b428d12b6409bf4c84ebe7423d16f;Sun Jul 29 18:31:28 2007 +0000
SameType;true;clojure.lang.LockingTransaction$1Incrementer;clojure.lang.LockingTransaction$1Incrementer;e9aa32282a2b428d12b6409bf4c84ebe7423d16f;Sun Jul 29 18:31:28 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction$1Incrementer#call();clojure.lang.LockingTransaction$1Incrementer#call();e9aa32282a2b428d12b6409bf4c84ebe7423d16f;Sun Jul 29 18:31:28 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;d9acdc7608ed556984ca37d747ec4e5879e378f0;Sun Jul 29 19:03:50 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#lock(Ref);clojure.lang.LockingTransaction#lock(Ref);d9acdc7608ed556984ca37d747ec4e5879e378f0;Sun Jul 29 19:03:50 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;d6160c83ed806f0c62a303b85421711357a9d2b7;Sun Jul 29 23:13:19 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#run(IFn);clojure.lang.LockingTransaction#run(IFn);d6160c83ed806f0c62a303b85421711357a9d2b7;Sun Jul 29 23:13:19 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#doGet(Ref);clojure.lang.LockingTransaction#doGet(Ref);d6160c83ed806f0c62a303b85421711357a9d2b7;Sun Jul 29 23:13:19 2007 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;d6160c83ed806f0c62a303b85421711357a9d2b7;Sun Jul 29 23:13:19 2007 +0000
SameType;true;clojure.lang.Ref.TVal;clojure.lang.Ref.TVal;d6160c83ed806f0c62a303b85421711357a9d2b7;Sun Jul 29 23:13:19 2007 +0000
SameMethod;true;clojure.lang.Ref.TVal#TVal(Object, long, long, TVal);clojure.lang.Ref.TVal#TVal(Object, long, long, TVal);d6160c83ed806f0c62a303b85421711357a9d2b7;Sun Jul 29 23:13:19 2007 +0000
SameMethod;true;clojure.lang.Ref#Ref();clojure.lang.Ref#Ref();d6160c83ed806f0c62a303b85421711357a9d2b7;Sun Jul 29 23:13:19 2007 +0000
SameMethod;true;clojure.lang.Ref#Ref(Object);clojure.lang.Ref#Ref(Object);d6160c83ed806f0c62a303b85421711357a9d2b7;Sun Jul 29 23:13:19 2007 +0000
SameMethod;true;clojure.lang.Ref#trimHistory();clojure.lang.Ref#trimHistory();d6160c83ed806f0c62a303b85421711357a9d2b7;Sun Jul 29 23:13:19 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;031971d1d80e1e2f6fbc50ac6a6afe81fcbc2e27;Mon Jul 30 12:32:41 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#lock(Ref);clojure.lang.LockingTransaction#lock(Ref);031971d1d80e1e2f6fbc50ac6a6afe81fcbc2e27;Mon Jul 30 12:32:41 2007 +0000
ExtractMethod;true;clojure.lang.LockingTransaction#lock(Ref);clojure.lang.LockingTransaction#barge(Info);bd6e6a16c32f15713a351263a07c384a19c2d21d;Mon Jul 30 15:27:32 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;bd6e6a16c32f15713a351263a07c384a19c2d21d;Mon Jul 30 15:27:32 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#lock(Ref);clojure.lang.LockingTransaction#lock(Ref);bd6e6a16c32f15713a351263a07c384a19c2d21d;Mon Jul 30 15:27:32 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#run(IFn);clojure.lang.LockingTransaction#run(IFn);bd6e6a16c32f15713a351263a07c384a19c2d21d;Mon Jul 30 15:27:32 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#doGet(Ref);clojure.lang.LockingTransaction#doGet(Ref);bd6e6a16c32f15713a351263a07c384a19c2d21d;Mon Jul 30 15:27:32 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#doSet(Ref, Object);clojure.lang.LockingTransaction#doSet(Ref, Object);bd6e6a16c32f15713a351263a07c384a19c2d21d;Mon Jul 30 15:27:32 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#doTouch(Ref);clojure.lang.LockingTransaction#doTouch(Ref);bd6e6a16c32f15713a351263a07c384a19c2d21d;Mon Jul 30 15:27:32 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#doCommute(Ref, IFn);clojure.lang.LockingTransaction#doCommute(Ref, IFn);bd6e6a16c32f15713a351263a07c384a19c2d21d;Mon Jul 30 15:27:32 2007 +0000
RenameMethod;true;clojure.lang.Ref#val();clojure.lang.Ref#get();0a6ceab0717beeabef24062d68449a8147ed9e22;Mon Jul 30 19:26:01 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;0a6ceab0717beeabef24062d68449a8147ed9e22;Mon Jul 30 19:26:01 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#main(String[]);clojure.lang.LockingTransaction#main(String[]);0a6ceab0717beeabef24062d68449a8147ed9e22;Mon Jul 30 19:26:01 2007 +0000
SameType;true;clojure.lang.LockingTransaction$1Incrementer;clojure.lang.LockingTransaction$1Incrementer;0a6ceab0717beeabef24062d68449a8147ed9e22;Mon Jul 30 19:26:01 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction$1Incrementer#invoke();clojure.lang.LockingTransaction$1Incrementer#invoke();0a6ceab0717beeabef24062d68449a8147ed9e22;Mon Jul 30 19:26:01 2007 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;0a6ceab0717beeabef24062d68449a8147ed9e22;Mon Jul 30 19:26:01 2007 +0000
SameMethod;true;clojure.lang.Ref#Ref();clojure.lang.Ref#Ref();0a6ceab0717beeabef24062d68449a8147ed9e22;Mon Jul 30 19:26:01 2007 +0000
SameMethod;true;clojure.lang.Ref#currentVal();clojure.lang.Ref#currentVal();0a6ceab0717beeabef24062d68449a8147ed9e22;Mon Jul 30 19:26:01 2007 +0000
SameMethod;true;clojure.lang.Ref#fn();clojure.lang.Ref#fn();0a6ceab0717beeabef24062d68449a8147ed9e22;Mon Jul 30 19:26:01 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;389cf13600985156e8e44640e2781d48af8e00a1;Tue Jul 31 13:13:58 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#main(String[]);clojure.lang.LockingTransaction#main(String[]);389cf13600985156e8e44640e2781d48af8e00a1;Tue Jul 31 13:13:58 2007 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;389cf13600985156e8e44640e2781d48af8e00a1;Tue Jul 31 13:13:58 2007 +0000
SameMethod;true;clojure.lang.Ref#compareTo(Ref);clojure.lang.Ref#compareTo(Ref);389cf13600985156e8e44640e2781d48af8e00a1;Tue Jul 31 13:13:58 2007 +0000
SameMethod;true;clojure.lang.Ref#Ref();clojure.lang.Ref#Ref();389cf13600985156e8e44640e2781d48af8e00a1;Tue Jul 31 13:13:58 2007 +0000
SameMethod;true;clojure.lang.Ref#cachedVal();clojure.lang.Ref#cachedVal();389cf13600985156e8e44640e2781d48af8e00a1;Tue Jul 31 13:13:58 2007 +0000
SameMethod;true;clojure.lang.Ref#currentVal();clojure.lang.Ref#currentVal();389cf13600985156e8e44640e2781d48af8e00a1;Tue Jul 31 13:13:58 2007 +0000
SameMethod;true;clojure.lang.Ref#get();clojure.lang.Ref#get();389cf13600985156e8e44640e2781d48af8e00a1;Tue Jul 31 13:13:58 2007 +0000
MoveMethod;true;clojure.lang.Ref#popThreadBinding();clojure.lang.DynamicVar#popThreadBinding();faa1146288b03e82451943a3f7fd6e927bb1acc7;Tue Jul 31 13:42:46 2007 +0000
SameType;true;clojure.lang.Binding;clojure.lang.Binding;faa1146288b03e82451943a3f7fd6e927bb1acc7;Tue Jul 31 13:42:46 2007 +0000
SameMethod;true;clojure.lang.Binding#Binding(Object);clojure.lang.Binding#Binding(Object);faa1146288b03e82451943a3f7fd6e927bb1acc7;Tue Jul 31 13:42:46 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;faa1146288b03e82451943a3f7fd6e927bb1acc7;Tue Jul 31 13:42:46 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#main(String[]);clojure.lang.LockingTransaction#main(String[]);faa1146288b03e82451943a3f7fd6e927bb1acc7;Tue Jul 31 13:42:46 2007 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;faa1146288b03e82451943a3f7fd6e927bb1acc7;Tue Jul 31 13:42:46 2007 +0000
SameMethod;true;clojure.lang.Ref#Ref();clojure.lang.Ref#Ref();faa1146288b03e82451943a3f7fd6e927bb1acc7;Tue Jul 31 13:42:46 2007 +0000
SameMethod;true;clojure.lang.Ref#Ref(UUID, Object);clojure.lang.Ref#Ref(UUID, Object);faa1146288b03e82451943a3f7fd6e927bb1acc7;Tue Jul 31 13:42:46 2007 +0000
SameMethod;true;clojure.lang.Ref#cachedVal();clojure.lang.Ref#cachedVal();faa1146288b03e82451943a3f7fd6e927bb1acc7;Tue Jul 31 13:42:46 2007 +0000
SameMethod;true;clojure.lang.Ref#currentVal();clojure.lang.Ref#currentVal();faa1146288b03e82451943a3f7fd6e927bb1acc7;Tue Jul 31 13:42:46 2007 +0000
SameMethod;true;clojure.lang.Ref#get();clojure.lang.Ref#get();faa1146288b03e82451943a3f7fd6e927bb1acc7;Tue Jul 31 13:42:46 2007 +0000
SameMethod;true;clojure.lang.Ref#set(Object);clojure.lang.Ref#set(Object);faa1146288b03e82451943a3f7fd6e927bb1acc7;Tue Jul 31 13:42:46 2007 +0000
SameMethod;true;clojure.lang.Ref#commute(IFn);clojure.lang.Ref#commute(IFn);faa1146288b03e82451943a3f7fd6e927bb1acc7;Tue Jul 31 13:42:46 2007 +0000
SameMethod;true;clojure.lang.Ref#touch();clojure.lang.Ref#touch();faa1146288b03e82451943a3f7fd6e927bb1acc7;Tue Jul 31 13:42:46 2007 +0000
SameMethod;true;clojure.lang.Ref#isBound();clojure.lang.Ref#isBound();faa1146288b03e82451943a3f7fd6e927bb1acc7;Tue Jul 31 13:42:46 2007 +0000
SameType;true;clojure.lang.AFn;clojure.lang.AFn;df5c458d0a4ce0fe590f6ce981bd62c19c15558f;Tue Jul 31 15:37:51 2007 +0000
SameType;true;clojure.lang.IFn;clojure.lang.IFn;df5c458d0a4ce0fe590f6ce981bd62c19c15558f;Tue Jul 31 15:37:51 2007 +0000
SameType;true;clojure.lang.InstanceMemberInvoker;clojure.lang.InstanceMemberInvoker;df5c458d0a4ce0fe590f6ce981bd62c19c15558f;Tue Jul 31 15:37:51 2007 +0000
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;df5c458d0a4ce0fe590f6ce981bd62c19c15558f;Tue Jul 31 15:37:51 2007 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;df5c458d0a4ce0fe590f6ce981bd62c19c15558f;Tue Jul 31 15:37:51 2007 +0000
SameType;true;clojure.lang.StaticMemberInvoker;clojure.lang.StaticMemberInvoker;df5c458d0a4ce0fe590f6ce981bd62c19c15558f;Tue Jul 31 15:37:51 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameMethod;true;clojure.lang.Compiler#compile(String, String, LineNumberingPushbackReader[]);clojure.lang.Compiler#compile(String, String, LineNumberingPushbackReader[]);7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeLet(C, ISeq);clojure.lang.Compiler#analyzeLet(C, ISeq);7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeLetFn(C, ISeq);clojure.lang.Compiler#analyzeLetFn(C, ISeq);7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeLetStar(C, ISeq);clojure.lang.Compiler#analyzeLetStar(C, ISeq);7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeMethod(FnExpr, ISeq);clojure.lang.Compiler#analyzeMethod(FnExpr, ISeq);7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeDef(C, ISeq);clojure.lang.Compiler#analyzeDef(C, ISeq);7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol, boolean);clojure.lang.Compiler#analyzeSymbol(Symbol, boolean);7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol);clojure.lang.Compiler#lookupVar(Symbol);7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameMethod;true;clojure.lang.Compiler#registerKeyword(Keyword);clojure.lang.Compiler#registerKeyword(Keyword);7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameMethod;true;clojure.lang.Compiler#registerFn(FnExpr);clojure.lang.Compiler#registerFn(FnExpr);7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameMethod;true;clojure.lang.Compiler#referenceLocal(Symbol);clojure.lang.Compiler#referenceLocal(Symbol);7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameMethod;true;clojure.lang.Compiler#registerLocal(LocalBinding);clojure.lang.Compiler#registerLocal(LocalBinding);7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameMethod;true;clojure.lang.Compiler#resolveHostClassname(String);clojure.lang.Compiler#resolveHostClassname(String);7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameType;true;clojure.lang.Compiler.VarExpr;clojure.lang.Compiler.VarExpr;7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameMethod;true;clojure.lang.Compiler.VarExpr#emitExpression();clojure.lang.Compiler.VarExpr#emitExpression();7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameType;true;clojure.lang.Module;clojure.lang.Module;7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameMethod;true;clojure.lang.Module#findRef(String);clojure.lang.Module#findRef(String);7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameMethod;true;clojure.lang.Module#intern(String);clojure.lang.Module#intern(String);7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameMethod;true;clojure.lang.RT#format(Object, String, Object[]);clojure.lang.RT#format(Object, String, Object[]);7eb9b13d196dfab9215e9d45a7c956fddcf88640;Tue Jul 31 15:48:17 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;2a4a356a602def89fd87bc037274b314ecdbfd8c;Tue Jul 31 16:51:06 2007 +0000
SameType;true;clojure.lang.LockingTransaction.RetryException;clojure.lang.LockingTransaction.RetryException;2a4a356a602def89fd87bc037274b314ecdbfd8c;Tue Jul 31 16:51:06 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#lock(Ref);clojure.lang.LockingTransaction#lock(Ref);2a4a356a602def89fd87bc037274b314ecdbfd8c;Tue Jul 31 16:51:06 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#getEx();clojure.lang.LockingTransaction#getEx();2a4a356a602def89fd87bc037274b314ecdbfd8c;Tue Jul 31 16:51:06 2007 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;2a4a356a602def89fd87bc037274b314ecdbfd8c;Tue Jul 31 16:51:06 2007 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;779991a26a7c595ad7bc4cce9ad5d6b5d88f5f64;Tue Jul 31 16:52:43 2007 +0000
SameType;true;clojure.lang.PersistentHashMap.LeafNode;clojure.lang.PersistentHashMap.LeafNode;779991a26a7c595ad7bc4cce9ad5d6b5d88f5f64;Tue Jul 31 16:52:43 2007 +0000
SameType;true;clojure.lang.AFn;clojure.lang.AFn;5b0755d04339f1724a9b88c9fb6ee0c751eb80b6;Tue Jul 31 20:17:27 2007 +0000
RenameMethod;true;clojure.lang.Symbol#Symbol(String);clojure.lang.Symbol#intern(String);04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeOr(C, ISeq);clojure.lang.Compiler#analyzeOr(C, ISeq);04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameMethod;true;clojure.lang.Compiler#baseSymbol(Symbol);clojure.lang.Compiler#baseSymbol(Symbol);04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameType;true;clojure.lang.DynamicVar;clojure.lang.DynamicVar;04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#popThreadBinding();clojure.lang.DynamicVar#popThreadBinding();04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameMethod;true;clojure.lang.Keyword#Keyword(String, String);clojure.lang.Keyword#Keyword(String, String);04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameMethod;true;clojure.lang.LispReader#interpretToken(String);clojure.lang.LispReader#interpretToken(String);04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameType;true;clojure.lang.ReaderParser;clojure.lang.ReaderParser;04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#symbol();clojure.lang.ReaderParser#symbol();04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#keyword();clojure.lang.ReaderParser#keyword();04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#member();clojure.lang.ReaderParser#member();04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameMethod;true;clojure.lang.ReaderParser#method();clojure.lang.ReaderParser#method();04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameMethod;true;clojure.lang.Symbol#Symbol(String, String);clojure.lang.Symbol#Symbol(String, String);04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameMethod;true;clojure.lang.Symbol#equals(Object);clojure.lang.Symbol#equals(Object);04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameMethod;true;clojure.lang.Symbol#hashCode();clojure.lang.Symbol#hashCode();04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameMethod;true;clojure.lang.Symbol#Symbol(IPersistentMap, String, String);clojure.lang.Symbol#Symbol(IPersistentMap, String, String);04c59e81c4f16bfcaef2fdfd3f5bc5d887445045;Thu Aug 2 20:51:38 2007 +0000
SameType;true;clojure.lang.DynamicVar;clojure.lang.DynamicVar;7ae2f7310f3817a98c738e84e70ec69d2f60b56f;Tue Aug 7 14:28:15 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#setRoot(Object);clojure.lang.DynamicVar#setRoot(Object);7ae2f7310f3817a98c738e84e70ec69d2f60b56f;Tue Aug 7 14:28:15 2007 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;7ae2f7310f3817a98c738e84e70ec69d2f60b56f;Tue Aug 7 14:28:15 2007 +0000
ExtractMethod;true;clojure.lang.Compiler#analyzeOr(C, ISeq);clojure.lang.Symbol#create(String);1e4492b15775747144472f30e3cf4aeff193a2bc;Tue Aug 7 14:40:34 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;1e4492b15775747144472f30e3cf4aeff193a2bc;Tue Aug 7 14:40:34 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeOr(C, ISeq);clojure.lang.Compiler#analyzeOr(C, ISeq);1e4492b15775747144472f30e3cf4aeff193a2bc;Tue Aug 7 14:40:34 2007 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;1e4492b15775747144472f30e3cf4aeff193a2bc;Tue Aug 7 14:40:34 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e47953186a17469875a94a00f5a98de5d1f926f3;Wed Aug 8 15:12:12 2007 +0000
SameType;true;clojure.lang.Compiler.AnExpr;clojure.lang.Compiler.AnExpr;e47953186a17469875a94a00f5a98de5d1f926f3;Wed Aug 8 15:12:12 2007 +0000
SameMethod;true;clojure.lang.Compiler.AnExpr#toString();clojure.lang.Compiler.AnExpr#toString();e47953186a17469875a94a00f5a98de5d1f926f3;Wed Aug 8 15:12:12 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;8b21472e502732159b4d2e3fa20b25089cfd9c79;Sat Aug 18 18:05:23 2007 +0000
SameType;true;clojure.lang.DynamicVar;clojure.lang.DynamicVar;8b21472e502732159b4d2e3fa20b25089cfd9c79;Sat Aug 18 18:05:23 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#intern(Symbol, Object, boolean);clojure.lang.DynamicVar#intern(Symbol, Object, boolean);8b21472e502732159b4d2e3fa20b25089cfd9c79;Sat Aug 18 18:05:23 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#intern(Symbol);clojure.lang.DynamicVar#intern(Symbol);8b21472e502732159b4d2e3fa20b25089cfd9c79;Sat Aug 18 18:05:23 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#isBound();clojure.lang.DynamicVar#isBound();8b21472e502732159b4d2e3fa20b25089cfd9c79;Sat Aug 18 18:05:23 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#get();clojure.lang.DynamicVar#get();8b21472e502732159b4d2e3fa20b25089cfd9c79;Sat Aug 18 18:05:23 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#set(Object);clojure.lang.DynamicVar#set(Object);8b21472e502732159b4d2e3fa20b25089cfd9c79;Sat Aug 18 18:05:23 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#pushThreadBinding(Object);clojure.lang.DynamicVar#pushThreadBinding(Object);8b21472e502732159b4d2e3fa20b25089cfd9c79;Sat Aug 18 18:05:23 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#popThreadBinding();clojure.lang.DynamicVar#popThreadBinding();8b21472e502732159b4d2e3fa20b25089cfd9c79;Sat Aug 18 18:05:23 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#getThreadBinding();clojure.lang.DynamicVar#getThreadBinding();8b21472e502732159b4d2e3fa20b25089cfd9c79;Sat Aug 18 18:05:23 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;8b21472e502732159b4d2e3fa20b25089cfd9c79;Sat Aug 18 18:05:23 2007 +0000
RenameMethod;false;clojure.lang.DynamicVar#setRoot(Object);clojure.lang.DynamicVar#bindRoot(Object);35e67dc6215ab3be205b1b95d7ffe7a235cedd8f;Sat Aug 18 20:09:06 2007 +0000
SameType;true;clojure.lang.Binding;clojure.lang.Binding;35e67dc6215ab3be205b1b95d7ffe7a235cedd8f;Sat Aug 18 20:09:06 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;35e67dc6215ab3be205b1b95d7ffe7a235cedd8f;Sat Aug 18 20:09:06 2007 +0000
SameMethod;true;clojure.lang.Compiler#compile(String, String, LineNumberingPushbackReader[]);clojure.lang.Compiler#compile(String, String, LineNumberingPushbackReader[]);35e67dc6215ab3be205b1b95d7ffe7a235cedd8f;Sat Aug 18 20:09:06 2007 +0000
SameType;true;clojure.lang.Compiler.AnExpr;clojure.lang.Compiler.AnExpr;35e67dc6215ab3be205b1b95d7ffe7a235cedd8f;Sat Aug 18 20:09:06 2007 +0000
SameMethod;true;clojure.lang.Compiler.AnExpr#emitExpressionString();clojure.lang.Compiler.AnExpr#emitExpressionString();35e67dc6215ab3be205b1b95d7ffe7a235cedd8f;Sat Aug 18 20:09:06 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeLet(C, ISeq);clojure.lang.Compiler#analyzeLet(C, ISeq);35e67dc6215ab3be205b1b95d7ffe7a235cedd8f;Sat Aug 18 20:09:06 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeLetFn(C, ISeq);clojure.lang.Compiler#analyzeLetFn(C, ISeq);35e67dc6215ab3be205b1b95d7ffe7a235cedd8f;Sat Aug 18 20:09:06 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeLetStar(C, ISeq);clojure.lang.Compiler#analyzeLetStar(C, ISeq);35e67dc6215ab3be205b1b95d7ffe7a235cedd8f;Sat Aug 18 20:09:06 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeMethod(FnExpr, ISeq);clojure.lang.Compiler#analyzeMethod(FnExpr, ISeq);35e67dc6215ab3be205b1b95d7ffe7a235cedd8f;Sat Aug 18 20:09:06 2007 +0000
SameType;true;clojure.lang.DynamicVar;clojure.lang.DynamicVar;35e67dc6215ab3be205b1b95d7ffe7a235cedd8f;Sat Aug 18 20:09:06 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#intern(Symbol, Object, boolean);clojure.lang.DynamicVar#intern(Symbol, Object, boolean);35e67dc6215ab3be205b1b95d7ffe7a235cedd8f;Sat Aug 18 20:09:06 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#DynamicVar(Symbol);clojure.lang.DynamicVar#DynamicVar(Symbol);35e67dc6215ab3be205b1b95d7ffe7a235cedd8f;Sat Aug 18 20:09:06 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#isBound();clojure.lang.DynamicVar#isBound();35e67dc6215ab3be205b1b95d7ffe7a235cedd8f;Sat Aug 18 20:09:06 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#get();clojure.lang.DynamicVar#get();35e67dc6215ab3be205b1b95d7ffe7a235cedd8f;Sat Aug 18 20:09:06 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#set(Object);clojure.lang.DynamicVar#set(Object);35e67dc6215ab3be205b1b95d7ffe7a235cedd8f;Sat Aug 18 20:09:06 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#getThreadBinding();clojure.lang.DynamicVar#getThreadBinding();35e67dc6215ab3be205b1b95d7ffe7a235cedd8f;Sat Aug 18 20:09:06 2007 +0000
ExtractMethod;true;clojure.lang.DynamicVar#isBound();clojure.lang.DynamicVar#hasRoot();7818b558dfa10006178b9a9b4334de7c4bab2d78;Sat Aug 18 21:35:18 2007 +0000
ExtractMethod;true;clojure.lang.DynamicVar#get();clojure.lang.DynamicVar#hasRoot();7818b558dfa10006178b9a9b4334de7c4bab2d78;Sat Aug 18 21:35:18 2007 +0000
ExtractMethod;true;clojure.lang.DynamicVar#set(Object);clojure.lang.DynamicVar#hasRoot();7818b558dfa10006178b9a9b4334de7c4bab2d78;Sat Aug 18 21:35:18 2007 +0000
ExtractMethod;true;clojure.lang.DynamicVar#intern(Symbol, Object, boolean);clojure.lang.DynamicVar#hasRoot();7818b558dfa10006178b9a9b4334de7c4bab2d78;Sat Aug 18 21:35:18 2007 +0000
SameType;true;clojure.lang.DynamicVar;clojure.lang.DynamicVar;7818b558dfa10006178b9a9b4334de7c4bab2d78;Sat Aug 18 21:35:18 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#intern(Symbol, Object, boolean);clojure.lang.DynamicVar#intern(Symbol, Object, boolean);7818b558dfa10006178b9a9b4334de7c4bab2d78;Sat Aug 18 21:35:18 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#DynamicVar(Symbol);clojure.lang.DynamicVar#DynamicVar(Symbol);7818b558dfa10006178b9a9b4334de7c4bab2d78;Sat Aug 18 21:35:18 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#isBound();clojure.lang.DynamicVar#isBound();7818b558dfa10006178b9a9b4334de7c4bab2d78;Sat Aug 18 21:35:18 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#get();clojure.lang.DynamicVar#get();7818b558dfa10006178b9a9b4334de7c4bab2d78;Sat Aug 18 21:35:18 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#set(Object);clojure.lang.DynamicVar#set(Object);7818b558dfa10006178b9a9b4334de7c4bab2d78;Sat Aug 18 21:35:18 2007 +0000
SameType;true;clojure.lang.DynamicVar;clojure.lang.DynamicVar;f152b43065aef56a77eb69e891f1f06db12afd2b;Sat Aug 18 21:36:47 2007 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;885415486923d6be1e52a40701e416c39d2155c0;Sat Aug 18 21:47:10 2007 +0000
SameMethod;true;clojure.lang.Ref#Ref();clojure.lang.Ref#Ref();885415486923d6be1e52a40701e416c39d2155c0;Sat Aug 18 21:47:10 2007 +0000
SameMethod;true;clojure.lang.Ref#Ref(UUID, Object);clojure.lang.Ref#Ref(UUID, Object);885415486923d6be1e52a40701e416c39d2155c0;Sat Aug 18 21:47:10 2007 +0000
SameMethod;true;clojure.lang.Ref#currentVal();clojure.lang.Ref#currentVal();885415486923d6be1e52a40701e416c39d2155c0;Sat Aug 18 21:47:10 2007 +0000
SameMethod;true;clojure.lang.Ref#get();clojure.lang.Ref#get();885415486923d6be1e52a40701e416c39d2155c0;Sat Aug 18 21:47:10 2007 +0000
SameMethod;true;clojure.lang.Ref#fn();clojure.lang.Ref#fn();885415486923d6be1e52a40701e416c39d2155c0;Sat Aug 18 21:47:10 2007 +0000
SameType;true;clojure.lang.DynamicVar;clojure.lang.DynamicVar;1c05fa481e44ef5067f6ccd591516d4b914e9e15;Sat Aug 18 22:50:48 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#intern(Symbol, Object, boolean);clojure.lang.DynamicVar#intern(Symbol, Object, boolean);1c05fa481e44ef5067f6ccd591516d4b914e9e15;Sat Aug 18 22:50:48 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;508d68d6c108114195188cf18260759d2f35ac5e;Sun Aug 19 00:55:20 2007 +0000
SameMethod;true;clojure.lang.LispReader#interpretToken(String);clojure.lang.LispReader#interpretToken(String);508d68d6c108114195188cf18260759d2f35ac5e;Sun Aug 19 00:55:20 2007 +0000
SameType;true;clojure.lang.LispReader.StringReader;clojure.lang.LispReader.StringReader;508d68d6c108114195188cf18260759d2f35ac5e;Sun Aug 19 00:55:20 2007 +0000
SameType;true;clojure.lang.LispReader.CommentReader;clojure.lang.LispReader.CommentReader;508d68d6c108114195188cf18260759d2f35ac5e;Sun Aug 19 00:55:20 2007 +0000
SameType;true;clojure.lang.LispReader.QuoteReader;clojure.lang.LispReader.QuoteReader;508d68d6c108114195188cf18260759d2f35ac5e;Sun Aug 19 00:55:20 2007 +0000
SameType;true;clojure.lang.LispReader.BackquoteReader;clojure.lang.LispReader.BackquoteReader;508d68d6c108114195188cf18260759d2f35ac5e;Sun Aug 19 00:55:20 2007 +0000
SameType;true;clojure.lang.LispReader.UnquoteReader;clojure.lang.LispReader.UnquoteReader;508d68d6c108114195188cf18260759d2f35ac5e;Sun Aug 19 00:55:20 2007 +0000
SameType;true;clojure.lang.LispReader.CharacterReader;clojure.lang.LispReader.CharacterReader;508d68d6c108114195188cf18260759d2f35ac5e;Sun Aug 19 00:55:20 2007 +0000
SameType;true;clojure.lang.LispReader.ListReader;clojure.lang.LispReader.ListReader;508d68d6c108114195188cf18260759d2f35ac5e;Sun Aug 19 00:55:20 2007 +0000
SameMethod;true;clojure.lang.LispReader.ListReader#invoke(Object, Object);clojure.lang.LispReader.ListReader#invoke(Object, Object);508d68d6c108114195188cf18260759d2f35ac5e;Sun Aug 19 00:55:20 2007 +0000
SameType;true;clojure.lang.LispReader.UnmatchedDelimiterReader;clojure.lang.LispReader.UnmatchedDelimiterReader;508d68d6c108114195188cf18260759d2f35ac5e;Sun Aug 19 00:55:20 2007 +0000
SameMethod;true;clojure.lang.LispReader#readDelimitedList(char, PushbackReader, boolean);clojure.lang.LispReader#readDelimitedList(char, PushbackReader, boolean);508d68d6c108114195188cf18260759d2f35ac5e;Sun Aug 19 00:55:20 2007 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;508d68d6c108114195188cf18260759d2f35ac5e;Sun Aug 19 00:55:20 2007 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;508d68d6c108114195188cf18260759d2f35ac5e;Sun Aug 19 00:55:20 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;508d68d6c108114195188cf18260759d2f35ac5e;Sun Aug 19 00:55:20 2007 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);508d68d6c108114195188cf18260759d2f35ac5e;Sun Aug 19 00:55:20 2007 +0000
ExtractMethod;true;clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);clojure.lang.LispReader#isWhitespace(int);f12a76d3063e4a024b1e67a63c4f9fc12d168088;Sun Aug 19 17:10:29 2007 +0000
ExtractMethod;true;clojure.lang.LispReader#readDelimitedList(char, PushbackReader, boolean);clojure.lang.LispReader#isWhitespace(int);f12a76d3063e4a024b1e67a63c4f9fc12d168088;Sun Aug 19 17:10:29 2007 +0000
ExtractMethod;true;clojure.lang.LispReader#readToken(PushbackReader, char);clojure.lang.LispReader#isWhitespace(int);f12a76d3063e4a024b1e67a63c4f9fc12d168088;Sun Aug 19 17:10:29 2007 +0000
ExtractMethod;true;clojure.lang.LispReader#readNumber(PushbackReader, char);clojure.lang.LispReader#isWhitespace(int);f12a76d3063e4a024b1e67a63c4f9fc12d168088;Sun Aug 19 17:10:29 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;f12a76d3063e4a024b1e67a63c4f9fc12d168088;Sun Aug 19 17:10:29 2007 +0000
SameMethod;true;clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);f12a76d3063e4a024b1e67a63c4f9fc12d168088;Sun Aug 19 17:10:29 2007 +0000
SameMethod;true;clojure.lang.LispReader#readToken(PushbackReader, char);clojure.lang.LispReader#readToken(PushbackReader, char);f12a76d3063e4a024b1e67a63c4f9fc12d168088;Sun Aug 19 17:10:29 2007 +0000
SameMethod;true;clojure.lang.LispReader#readNumber(PushbackReader, char);clojure.lang.LispReader#readNumber(PushbackReader, char);f12a76d3063e4a024b1e67a63c4f9fc12d168088;Sun Aug 19 17:10:29 2007 +0000
SameType;true;clojure.lang.LispReader.MetaReader;clojure.lang.LispReader.MetaReader;f12a76d3063e4a024b1e67a63c4f9fc12d168088;Sun Aug 19 17:10:29 2007 +0000
SameMethod;true;clojure.lang.LispReader.MetaReader#invoke(Object, Object);clojure.lang.LispReader.MetaReader#invoke(Object, Object);f12a76d3063e4a024b1e67a63c4f9fc12d168088;Sun Aug 19 17:10:29 2007 +0000
SameType;true;clojure.lang.LispReader.ListReader;clojure.lang.LispReader.ListReader;f12a76d3063e4a024b1e67a63c4f9fc12d168088;Sun Aug 19 17:10:29 2007 +0000
SameMethod;true;clojure.lang.LispReader.ListReader#invoke(Object, Object);clojure.lang.LispReader.ListReader#invoke(Object, Object);f12a76d3063e4a024b1e67a63c4f9fc12d168088;Sun Aug 19 17:10:29 2007 +0000
SameMethod;true;clojure.lang.LispReader#readDelimitedList(char, PushbackReader, boolean);clojure.lang.LispReader#readDelimitedList(char, PushbackReader, boolean);f12a76d3063e4a024b1e67a63c4f9fc12d168088;Sun Aug 19 17:10:29 2007 +0000
SameMethod;true;clojure.lang.LispReader#main(String[]);clojure.lang.LispReader#main(String[]);f12a76d3063e4a024b1e67a63c4f9fc12d168088;Sun Aug 19 17:10:29 2007 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;f12a76d3063e4a024b1e67a63c4f9fc12d168088;Sun Aug 19 17:10:29 2007 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;f12a76d3063e4a024b1e67a63c4f9fc12d168088;Sun Aug 19 17:10:29 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;f12a76d3063e4a024b1e67a63c4f9fc12d168088;Sun Aug 19 17:10:29 2007 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);f12a76d3063e4a024b1e67a63c4f9fc12d168088;Sun Aug 19 17:10:29 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;5d1806f75ee05769a7683afc806c389091667e04;Wed Aug 22 21:46:52 2007 +0000
SameType;true;clojure.lang.Compiler.C;clojure.lang.Compiler.C;5d1806f75ee05769a7683afc806c389091667e04;Wed Aug 22 21:46:52 2007 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;5d1806f75ee05769a7683afc806c389091667e04;Wed Aug 22 21:46:52 2007 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr#emitExpression();clojure.lang.Compiler.DefExpr#emitExpression();5d1806f75ee05769a7683afc806c389091667e04;Wed Aug 22 21:46:52 2007 +0000
SameType;true;clojure.lang.DynamicVar;clojure.lang.DynamicVar;5d1806f75ee05769a7683afc806c389091667e04;Wed Aug 22 21:46:52 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#bindRoot(Object);clojure.lang.DynamicVar#bindRoot(Object);5d1806f75ee05769a7683afc806c389091667e04;Wed Aug 22 21:46:52 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;5d1806f75ee05769a7683afc806c389091667e04;Wed Aug 22 21:46:52 2007 +0000
RenameMethod;true;clojure.lang.Keyword#Keyword(String, String);clojure.lang.Keyword#intern(String, String);f93cacece6c5bb48d20fdbbf7b228fcdb1477981;Thu Aug 30 14:34:29 2007 +0000
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;f93cacece6c5bb48d20fdbbf7b228fcdb1477981;Thu Aug 30 14:34:29 2007 +0000
SameMethod;true;clojure.lang.Keyword#Keyword(Symbol);clojure.lang.Keyword#Keyword(Symbol);f93cacece6c5bb48d20fdbbf7b228fcdb1477981;Thu Aug 30 14:34:29 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;f93cacece6c5bb48d20fdbbf7b228fcdb1477981;Thu Aug 30 14:34:29 2007 +0000
SameMethod;true;clojure.lang.LispReader#matchSymbol(String);clojure.lang.LispReader#matchSymbol(String);f93cacece6c5bb48d20fdbbf7b228fcdb1477981;Thu Aug 30 14:34:29 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;f93cacece6c5bb48d20fdbbf7b228fcdb1477981;Thu Aug 30 14:34:29 2007 +0000
SameType;true;clojure.lang.DynamicVar;clojure.lang.DynamicVar;bdaeb6f6706d1e89fe289f41662507531c01fce4;Thu Aug 30 15:41:57 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#set(Object);clojure.lang.DynamicVar#set(Object);bdaeb6f6706d1e89fe289f41662507531c01fce4;Thu Aug 30 15:41:57 2007 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;cb96c6d66d4e77b162359495840199cb94e0ccbf;Thu Aug 30 18:06:36 2007 +0000
ExtractMethod;true;clojure.lang.BytecodeCompiler#lookupVar(Symbol);clojure.lang.BytecodeCompiler#currentNS();c894ed9bcc2bb8e45822d48f00b1cb8d90f8c603;Thu Aug 30 22:41:50 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;c894ed9bcc2bb8e45822d48f00b1cb8d90f8c603;Thu Aug 30 22:41:50 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.C;clojure.lang.BytecodeCompiler.C;c894ed9bcc2bb8e45822d48f00b1cb8d90f8c603;Thu Aug 30 22:41:50 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.DefExpr;clojure.lang.BytecodeCompiler.DefExpr;c894ed9bcc2bb8e45822d48f00b1cb8d90f8c603;Thu Aug 30 22:41:50 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.VarExpr;clojure.lang.BytecodeCompiler.VarExpr;c894ed9bcc2bb8e45822d48f00b1cb8d90f8c603;Thu Aug 30 22:41:50 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.NumExpr;clojure.lang.BytecodeCompiler.NumExpr;c894ed9bcc2bb8e45822d48f00b1cb8d90f8c603;Thu Aug 30 22:41:50 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.StringExpr;clojure.lang.BytecodeCompiler.StringExpr;c894ed9bcc2bb8e45822d48f00b1cb8d90f8c603;Thu Aug 30 22:41:50 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.FnExpr;clojure.lang.BytecodeCompiler.FnExpr;c894ed9bcc2bb8e45822d48f00b1cb8d90f8c603;Thu Aug 30 22:41:50 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.FnMethod;clojure.lang.BytecodeCompiler.FnMethod;c894ed9bcc2bb8e45822d48f00b1cb8d90f8c603;Thu Aug 30 22:41:50 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.LocalBinding;clojure.lang.BytecodeCompiler.LocalBinding;c894ed9bcc2bb8e45822d48f00b1cb8d90f8c603;Thu Aug 30 22:41:50 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyze(C, Object, String);clojure.lang.BytecodeCompiler#analyze(C, Object, String);c894ed9bcc2bb8e45822d48f00b1cb8d90f8c603;Thu Aug 30 22:41:50 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#lookupVar(Symbol);clojure.lang.BytecodeCompiler#lookupVar(Symbol);c894ed9bcc2bb8e45822d48f00b1cb8d90f8c603;Thu Aug 30 22:41:50 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#closeOver(LocalBinding, FnMethod);clojure.lang.BytecodeCompiler#closeOver(LocalBinding, FnMethod);c894ed9bcc2bb8e45822d48f00b1cb8d90f8c603;Thu Aug 30 22:41:50 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c894ed9bcc2bb8e45822d48f00b1cb8d90f8c603;Thu Aug 30 22:41:50 2007 +0000
SameType;true;clojure.lang.Compiler.C;clojure.lang.Compiler.C;c894ed9bcc2bb8e45822d48f00b1cb8d90f8c603;Thu Aug 30 22:41:50 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;acb5edd8085bff75b8940fa4a70ca317961e471f;Fri Aug 31 13:26:26 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.DefExpr;clojure.lang.BytecodeCompiler.DefExpr;acb5edd8085bff75b8940fa4a70ca317961e471f;Fri Aug 31 13:26:26 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.DefExpr#parse(C, ISeq);clojure.lang.BytecodeCompiler.DefExpr#parse(C, ISeq);acb5edd8085bff75b8940fa4a70ca317961e471f;Fri Aug 31 13:26:26 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.FnExpr;clojure.lang.BytecodeCompiler.FnExpr;acb5edd8085bff75b8940fa4a70ca317961e471f;Fri Aug 31 13:26:26 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.FnExpr#eval();clojure.lang.BytecodeCompiler.FnExpr#eval();acb5edd8085bff75b8940fa4a70ca317961e471f;Fri Aug 31 13:26:26 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyzeMethod(FnExpr, ISeq);clojure.lang.BytecodeCompiler#analyzeMethod(FnExpr, ISeq);acb5edd8085bff75b8940fa4a70ca317961e471f;Fri Aug 31 13:26:26 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.LetExpr;clojure.lang.BytecodeCompiler.LetExpr;acb5edd8085bff75b8940fa4a70ca317961e471f;Fri Aug 31 13:26:26 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.LetExpr#parse(C, ISeq, boolean);clojure.lang.BytecodeCompiler.LetExpr#parse(C, ISeq, boolean);acb5edd8085bff75b8940fa4a70ca317961e471f;Fri Aug 31 13:26:26 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyze(C, Object, String);clojure.lang.BytecodeCompiler#analyze(C, Object, String);acb5edd8085bff75b8940fa4a70ca317961e471f;Fri Aug 31 13:26:26 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#lookupVar(Symbol);clojure.lang.BytecodeCompiler#lookupVar(Symbol);acb5edd8085bff75b8940fa4a70ca317961e471f;Fri Aug 31 13:26:26 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;ea2f6942c5a5dd65f9f074cb68f495ea93644a86;Sat Sep 1 15:23:01 2007 +0000
SameType;true;clojure.lang.LispReader.CharacterReader;clojure.lang.LispReader.CharacterReader;ea2f6942c5a5dd65f9f074cb68f495ea93644a86;Sat Sep 1 15:23:01 2007 +0000
SameMethod;true;clojure.lang.LispReader.CharacterReader#invoke(Object, Object);clojure.lang.LispReader.CharacterReader#invoke(Object, Object);ea2f6942c5a5dd65f9f074cb68f495ea93644a86;Sat Sep 1 15:23:01 2007 +0000
SameType;true;org.clojure.tools.TypeDump;org.clojure.tools.TypeDump;cbe59e53843e41c78f566f202eec2d3eb855b160;Sat Sep 1 18:06:00 2007 +0000
SameMethod;true;org.clojure.tools.TypeDump#main(String[]);org.clojure.tools.TypeDump#main(String[]);cbe59e53843e41c78f566f202eec2d3eb855b160;Sat Sep 1 18:06:00 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;aeb160665adff7925207d7f60f3a7fdf5837cad0;Sat Sep 1 18:07:52 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.FnExpr;clojure.lang.BytecodeCompiler.FnExpr;aeb160665adff7925207d7f60f3a7fdf5837cad0;Sat Sep 1 18:07:52 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.FnExpr#parse(C, ISeq, String);clojure.lang.BytecodeCompiler.FnExpr#parse(C, ISeq, String);aeb160665adff7925207d7f60f3a7fdf5837cad0;Sat Sep 1 18:07:52 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.FnExpr#compile();clojure.lang.BytecodeCompiler.FnExpr#compile();aeb160665adff7925207d7f60f3a7fdf5837cad0;Sat Sep 1 18:07:52 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyzeMethod(FnExpr, ISeq);clojure.lang.BytecodeCompiler#analyzeMethod(FnExpr, ISeq);aeb160665adff7925207d7f60f3a7fdf5837cad0;Sat Sep 1 18:07:52 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.LocalBinding;clojure.lang.BytecodeCompiler.LocalBinding;aeb160665adff7925207d7f60f3a7fdf5837cad0;Sat Sep 1 18:07:52 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.LetExpr;clojure.lang.BytecodeCompiler.LetExpr;aeb160665adff7925207d7f60f3a7fdf5837cad0;Sat Sep 1 18:07:52 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.LetExpr#parse(C, ISeq, boolean);clojure.lang.BytecodeCompiler.LetExpr#parse(C, ISeq, boolean);aeb160665adff7925207d7f60f3a7fdf5837cad0;Sat Sep 1 18:07:52 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);aeb160665adff7925207d7f60f3a7fdf5837cad0;Sat Sep 1 18:07:52 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#registerKeyword(Keyword);clojure.lang.BytecodeCompiler#registerKeyword(Keyword);aeb160665adff7925207d7f60f3a7fdf5837cad0;Sat Sep 1 18:07:52 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#registerVar(DynamicVar);clojure.lang.BytecodeCompiler#registerVar(DynamicVar);aeb160665adff7925207d7f60f3a7fdf5837cad0;Sat Sep 1 18:07:52 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#referenceLocal(Symbol);clojure.lang.BytecodeCompiler#referenceLocal(Symbol);aeb160665adff7925207d7f60f3a7fdf5837cad0;Sat Sep 1 18:07:52 2007 +0000
SameType;true;clojure.lang.DynamicClassLoader;clojure.lang.DynamicClassLoader;aeb160665adff7925207d7f60f3a7fdf5837cad0;Sat Sep 1 18:07:52 2007 +0000
SameType;true;clojure.lang.DynamicVar;clojure.lang.DynamicVar;aeb160665adff7925207d7f60f3a7fdf5837cad0;Sat Sep 1 18:07:52 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#intern(Symbol);clojure.lang.DynamicVar#intern(Symbol);aeb160665adff7925207d7f60f3a7fdf5837cad0;Sat Sep 1 18:07:52 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;f96102812da70214ef45e4f7bb68707258d3a41c;Sat Sep 1 19:19:49 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.FnExpr;clojure.lang.BytecodeCompiler.FnExpr;f96102812da70214ef45e4f7bb68707258d3a41c;Sat Sep 1 19:19:49 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.FnExpr#parse(C, ISeq, String);clojure.lang.BytecodeCompiler.FnExpr#parse(C, ISeq, String);f96102812da70214ef45e4f7bb68707258d3a41c;Sat Sep 1 19:19:49 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.FnExpr#compile();clojure.lang.BytecodeCompiler.FnExpr#compile();f96102812da70214ef45e4f7bb68707258d3a41c;Sat Sep 1 19:19:49 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.FnMethod;clojure.lang.BytecodeCompiler.FnMethod;f96102812da70214ef45e4f7bb68707258d3a41c;Sat Sep 1 19:19:49 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.FnMethod#isVariadic();clojure.lang.BytecodeCompiler.FnMethod#isVariadic();f96102812da70214ef45e4f7bb68707258d3a41c;Sat Sep 1 19:19:49 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.LetExpr;clojure.lang.BytecodeCompiler.LetExpr;f96102812da70214ef45e4f7bb68707258d3a41c;Sat Sep 1 19:19:49 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.LetExpr#parse(C, ISeq, boolean);clojure.lang.BytecodeCompiler.LetExpr#parse(C, ISeq, boolean);f96102812da70214ef45e4f7bb68707258d3a41c;Sat Sep 1 19:19:49 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.LetExpr#eval();clojure.lang.BytecodeCompiler.LetExpr#eval();f96102812da70214ef45e4f7bb68707258d3a41c;Sat Sep 1 19:19:49 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#main(String[]);clojure.lang.BytecodeCompiler#main(String[]);f96102812da70214ef45e4f7bb68707258d3a41c;Sat Sep 1 19:19:49 2007 +0000
RenameClass;true;clojure.lang.DynamicVar;clojure.lang.Var;8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.DefExpr;clojure.lang.BytecodeCompiler.DefExpr;8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.DefExpr#parse(C, ISeq);clojure.lang.BytecodeCompiler.DefExpr#parse(C, ISeq);8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.VarExpr;clojure.lang.BytecodeCompiler.VarExpr;8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.FnExpr;clojure.lang.BytecodeCompiler.FnExpr;8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.FnExpr#parse(C, ISeq, String);clojure.lang.BytecodeCompiler.FnExpr#parse(C, ISeq, String);8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.FnMethod;clojure.lang.BytecodeCompiler.FnMethod;8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.FnMethod#parse(FnExpr, ISeq);clojure.lang.BytecodeCompiler.FnMethod#parse(FnExpr, ISeq);8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.LetExpr;clojure.lang.BytecodeCompiler.LetExpr;8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.LetExpr#parse(C, ISeq, boolean);clojure.lang.BytecodeCompiler.LetExpr#parse(C, ISeq, boolean);8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyzeSymbol(Symbol);clojure.lang.BytecodeCompiler#analyzeSymbol(Symbol);8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#lookupVar(Symbol);clojure.lang.BytecodeCompiler#lookupVar(Symbol);8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#main(String[]);clojure.lang.BytecodeCompiler#main(String[]);8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.Compiler#compile(String, String, LineNumberingPushbackReader[]);clojure.lang.Compiler#compile(String, String, LineNumberingPushbackReader[]);8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameType;true;clojure.lang.Compiler.AnExpr;clojure.lang.Compiler.AnExpr;8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.Compiler.AnExpr#emitExpressionString();clojure.lang.Compiler.AnExpr#emitExpressionString();8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeLet(C, ISeq);clojure.lang.Compiler#analyzeLet(C, ISeq);8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeLetFn(C, ISeq);clojure.lang.Compiler#analyzeLetFn(C, ISeq);8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeLetStar(C, ISeq);clojure.lang.Compiler#analyzeLetStar(C, ISeq);8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeMethod(FnExpr, ISeq);clojure.lang.Compiler#analyzeMethod(FnExpr, ISeq);8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeDef(C, ISeq);clojure.lang.Compiler#analyzeDef(C, ISeq);8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol, boolean);clojure.lang.Compiler#analyzeSymbol(Symbol, boolean);8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameType;true;clojure.lang.Compiler.VarExpr;clojure.lang.Compiler.VarExpr;8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#intern(Symbol, Object, boolean);clojure.lang.Var#intern(Symbol, Object, boolean);8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#intern(Symbol);clojure.lang.Var#intern(Symbol);8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#create();clojure.lang.Var#create();8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#create(Object);clojure.lang.Var#create(Object);8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#pushThreadBindings(Associative);clojure.lang.Var#pushThreadBindings(Associative);8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameMethod;true;clojure.lang.DynamicVar#popThreadBindings();clojure.lang.Var#popThreadBindings();8a36fd5f840f13e2cb16e7876012d5dc43c244e3;Sat Sep 1 19:22:53 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;baed4be30a25d1fa9909baab16702a520b688aaf;Sat Sep 1 20:35:09 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.FnExpr;clojure.lang.BytecodeCompiler.FnExpr;baed4be30a25d1fa9909baab16702a520b688aaf;Sat Sep 1 20:35:09 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.FnExpr#compile();clojure.lang.BytecodeCompiler.FnExpr#compile();baed4be30a25d1fa9909baab16702a520b688aaf;Sat Sep 1 20:35:09 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;89399efd04b3a276bd00a5219a8db2e0d329eecb;Sun Sep 2 02:27:25 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.Expr;clojure.lang.BytecodeCompiler.Expr;89399efd04b3a276bd00a5219a8db2e0d329eecb;Sun Sep 2 02:27:25 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.DefExpr;clojure.lang.BytecodeCompiler.DefExpr;89399efd04b3a276bd00a5219a8db2e0d329eecb;Sun Sep 2 02:27:25 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.DefExpr#eval();clojure.lang.BytecodeCompiler.DefExpr#eval();89399efd04b3a276bd00a5219a8db2e0d329eecb;Sun Sep 2 02:27:25 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.FnExpr;clojure.lang.BytecodeCompiler.FnExpr;89399efd04b3a276bd00a5219a8db2e0d329eecb;Sun Sep 2 02:27:25 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.FnExpr#compile();clojure.lang.BytecodeCompiler.FnExpr#compile();89399efd04b3a276bd00a5219a8db2e0d329eecb;Sun Sep 2 02:27:25 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.FnMethod;clojure.lang.BytecodeCompiler.FnMethod;89399efd04b3a276bd00a5219a8db2e0d329eecb;Sun Sep 2 02:27:25 2007 +0000
SameType;true;clojure.lang.RestFn;clojure.lang.RestFn;89399efd04b3a276bd00a5219a8db2e0d329eecb;Sun Sep 2 02:27:25 2007 +0000
SameMethod;true;clojure.lang.RestFn#ontoArrayPrepend(Object[], Object[]);clojure.lang.RestFn#ontoArrayPrepend(Object[], Object[]);89399efd04b3a276bd00a5219a8db2e0d329eecb;Sun Sep 2 02:27:25 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;89399efd04b3a276bd00a5219a8db2e0d329eecb;Sun Sep 2 02:27:25 2007 +0000
SameMethod;true;clojure.lang.Var#bindRoot(Object);clojure.lang.Var#bindRoot(Object);89399efd04b3a276bd00a5219a8db2e0d329eecb;Sun Sep 2 02:27:25 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.DefExpr;clojure.lang.BytecodeCompiler.DefExpr;408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.DefExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.BytecodeCompiler.DefExpr#emit(C, FnExpr, GeneratorAdapter);408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.VarExpr;clojure.lang.BytecodeCompiler.VarExpr;408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.KeywordExpr;clojure.lang.BytecodeCompiler.KeywordExpr;408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.NilExpr;clojure.lang.BytecodeCompiler.NilExpr;408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.NumExpr;clojure.lang.BytecodeCompiler.NumExpr;408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.StringExpr;clojure.lang.BytecodeCompiler.StringExpr;408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.CharExpr;clojure.lang.BytecodeCompiler.CharExpr;408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.IfExpr;clojure.lang.BytecodeCompiler.IfExpr;408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.FnExpr;clojure.lang.BytecodeCompiler.FnExpr;408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.FnExpr#parse(C, ISeq, String);clojure.lang.BytecodeCompiler.FnExpr#parse(C, ISeq, String);408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.FnExpr#compile();clojure.lang.BytecodeCompiler.FnExpr#compile();408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.LocalBinding;clojure.lang.BytecodeCompiler.LocalBinding;408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.LocalBinding#LocalBinding(int, Symbol, Symbol);clojure.lang.BytecodeCompiler.LocalBinding#LocalBinding(int, Symbol, Symbol);408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.LocalBindingExpr;clojure.lang.BytecodeCompiler.LocalBindingExpr;408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.BodyExpr;clojure.lang.BytecodeCompiler.BodyExpr;408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.LetExpr;clojure.lang.BytecodeCompiler.LetExpr;408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);408738696c33290242941b7395c9c15166c1c28c;Sun Sep 2 16:16:42 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;74a408a19df659ba79eadfde48340f6397c310be;Sun Sep 2 18:02:57 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.FnMethod;clojure.lang.BytecodeCompiler.FnMethod;74a408a19df659ba79eadfde48340f6397c310be;Sun Sep 2 18:02:57 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.FnMethod#emit(FnExpr, ClassVisitor);clojure.lang.BytecodeCompiler.FnMethod#emit(FnExpr, ClassVisitor);74a408a19df659ba79eadfde48340f6397c310be;Sun Sep 2 18:02:57 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.LetExpr;clojure.lang.BytecodeCompiler.LetExpr;74a408a19df659ba79eadfde48340f6397c310be;Sun Sep 2 18:02:57 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.LetExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.BytecodeCompiler.LetExpr#emit(C, FnExpr, GeneratorAdapter);74a408a19df659ba79eadfde48340f6397c310be;Sun Sep 2 18:02:57 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);74a408a19df659ba79eadfde48340f6397c310be;Sun Sep 2 18:02:57 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#eval(Object);clojure.lang.BytecodeCompiler#eval(Object);74a408a19df659ba79eadfde48340f6397c310be;Sun Sep 2 18:02:57 2007 +0000
ExtractMethod;true;clojure.lang.BytecodeCompiler#registerLocal(Symbol, Symbol);clojure.lang.BytecodeCompiler#getAndIncLocalNum();2115153ec692d1393c654b6a60be2a395ef1beb2;Sun Sep 2 22:25:45 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;2115153ec692d1393c654b6a60be2a395ef1beb2;Sun Sep 2 22:25:45 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.FnExpr;clojure.lang.BytecodeCompiler.FnExpr;2115153ec692d1393c654b6a60be2a395ef1beb2;Sun Sep 2 22:25:45 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.FnExpr#compile();clojure.lang.BytecodeCompiler.FnExpr#compile();2115153ec692d1393c654b6a60be2a395ef1beb2;Sun Sep 2 22:25:45 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.FnMethod;clojure.lang.BytecodeCompiler.FnMethod;2115153ec692d1393c654b6a60be2a395ef1beb2;Sun Sep 2 22:25:45 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.FnMethod#emit(FnExpr, ClassVisitor);clojure.lang.BytecodeCompiler.FnMethod#emit(FnExpr, ClassVisitor);2115153ec692d1393c654b6a60be2a395ef1beb2;Sun Sep 2 22:25:45 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.RecurExpr;clojure.lang.BytecodeCompiler.RecurExpr;2115153ec692d1393c654b6a60be2a395ef1beb2;Sun Sep 2 22:25:45 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.RecurExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.BytecodeCompiler.RecurExpr#emit(C, FnExpr, GeneratorAdapter);2115153ec692d1393c654b6a60be2a395ef1beb2;Sun Sep 2 22:25:45 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#registerLocal(Symbol, Symbol);clojure.lang.BytecodeCompiler#registerLocal(Symbol, Symbol);2115153ec692d1393c654b6a60be2a395ef1beb2;Sun Sep 2 22:25:45 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;44e91204bbc4a8bf8217cb8b2eea14de94e6b9d2;Sun Sep 2 22:58:53 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);44e91204bbc4a8bf8217cb8b2eea14de94e6b9d2;Sun Sep 2 22:58:53 2007 +0000
SameType;true;clojure.lang.DynamicClassLoader;clojure.lang.DynamicClassLoader;44e91204bbc4a8bf8217cb8b2eea14de94e6b9d2;Sun Sep 2 22:58:53 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke();clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
ExtractMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Reflector#invokeStaticMethodVariadic(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.Reflector#getStaticField(String, String);clojure.lang.Reflector#getStaticField(String, String);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.Reflector#setStaticField(String, String, Object);clojure.lang.Reflector#setStaticField(String, String, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameType;true;clojure.lang.StaticMemberInvoker;clojure.lang.StaticMemberInvoker;3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke();clojure.lang.StaticMemberInvoker#invoke();3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object);clojure.lang.StaticMemberInvoker#invoke(Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameMethod;true;clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.StaticMemberInvoker#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);3a4ab3a82e9b1b750da2d3c536d4867f69654ce5;Mon Sep 3 14:23:57 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;a7241b23866e9f628349232034090aada1ef4010;Mon Sep 3 17:20:12 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);a7241b23866e9f628349232034090aada1ef4010;Mon Sep 3 17:20:12 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;58b4e4494a55e334b85852b95c9afd378202c74b;Mon Sep 3 21:09:43 2007 +0000
SameMethod;true;clojure.lang.RT#box(char);clojure.lang.RT#box(char);58b4e4494a55e334b85852b95c9afd378202c74b;Mon Sep 3 21:09:43 2007 +0000
SameMethod;true;clojure.lang.RT#map(Object[]);clojure.lang.RT#map(Object[]);58b4e4494a55e334b85852b95c9afd378202c74b;Mon Sep 3 21:09:43 2007 +0000
ExtractMethod;true;clojure.lang.BytecodeCompiler.DefExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.BytecodeCompiler.FnExpr#emitVarValue(GeneratorAdapter, Var);54acb784b9b1872195466924377ec49587f88f58;Mon Sep 3 21:10:40 2007 +0000
ExtractMethod;true;clojure.lang.BytecodeCompiler.VarExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.BytecodeCompiler.FnExpr#emitVarValue(GeneratorAdapter, Var);54acb784b9b1872195466924377ec49587f88f58;Mon Sep 3 21:10:40 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;54acb784b9b1872195466924377ec49587f88f58;Mon Sep 3 21:10:40 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.DefExpr;clojure.lang.BytecodeCompiler.DefExpr;54acb784b9b1872195466924377ec49587f88f58;Mon Sep 3 21:10:40 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.DefExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.BytecodeCompiler.DefExpr#emit(C, FnExpr, GeneratorAdapter);54acb784b9b1872195466924377ec49587f88f58;Mon Sep 3 21:10:40 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.DefExpr#parse(C, ISeq);clojure.lang.BytecodeCompiler.DefExpr#parse(C, ISeq);54acb784b9b1872195466924377ec49587f88f58;Mon Sep 3 21:10:40 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.VarExpr;clojure.lang.BytecodeCompiler.VarExpr;54acb784b9b1872195466924377ec49587f88f58;Mon Sep 3 21:10:40 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.VarExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.BytecodeCompiler.VarExpr#emit(C, FnExpr, GeneratorAdapter);54acb784b9b1872195466924377ec49587f88f58;Mon Sep 3 21:10:40 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.InvokeExpr;clojure.lang.BytecodeCompiler.InvokeExpr;54acb784b9b1872195466924377ec49587f88f58;Mon Sep 3 21:10:40 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.InvokeExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.BytecodeCompiler.InvokeExpr#emit(C, FnExpr, GeneratorAdapter);54acb784b9b1872195466924377ec49587f88f58;Mon Sep 3 21:10:40 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.FnExpr;clojure.lang.BytecodeCompiler.FnExpr;54acb784b9b1872195466924377ec49587f88f58;Mon Sep 3 21:10:40 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);54acb784b9b1872195466924377ec49587f88f58;Mon Sep 3 21:10:40 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyzeSymbol(Symbol);clojure.lang.BytecodeCompiler#analyzeSymbol(Symbol);54acb784b9b1872195466924377ec49587f88f58;Mon Sep 3 21:10:40 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#main(String[]);clojure.lang.BytecodeCompiler#main(String[]);54acb784b9b1872195466924377ec49587f88f58;Mon Sep 3 21:10:40 2007 +0000
InlineMethod;true;clojure.lang.BytecodeCompiler.FnExpr#emitVarValue(GeneratorAdapter, Var);clojure.lang.BytecodeCompiler.VarExpr#emit(C, FnExpr, GeneratorAdapter);5759cb53f75f34e43814d99a362f96ffc315eb42;Mon Sep 3 22:03:41 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;5759cb53f75f34e43814d99a362f96ffc315eb42;Mon Sep 3 22:03:41 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.DefExpr;clojure.lang.BytecodeCompiler.DefExpr;5759cb53f75f34e43814d99a362f96ffc315eb42;Mon Sep 3 22:03:41 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.DefExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.BytecodeCompiler.DefExpr#emit(C, FnExpr, GeneratorAdapter);5759cb53f75f34e43814d99a362f96ffc315eb42;Mon Sep 3 22:03:41 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.VarExpr;clojure.lang.BytecodeCompiler.VarExpr;5759cb53f75f34e43814d99a362f96ffc315eb42;Mon Sep 3 22:03:41 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.VarExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.BytecodeCompiler.VarExpr#emit(C, FnExpr, GeneratorAdapter);5759cb53f75f34e43814d99a362f96ffc315eb42;Mon Sep 3 22:03:41 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.FnExpr;clojure.lang.BytecodeCompiler.FnExpr;5759cb53f75f34e43814d99a362f96ffc315eb42;Mon Sep 3 22:03:41 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;a51a104cfff59b7b27628dcc66885d712510879f;Mon Sep 3 22:14:20 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.VarExpr;clojure.lang.BytecodeCompiler.VarExpr;a51a104cfff59b7b27628dcc66885d712510879f;Mon Sep 3 22:14:20 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.InstanceFieldExpr;clojure.lang.BytecodeCompiler.InstanceFieldExpr;a51a104cfff59b7b27628dcc66885d712510879f;Mon Sep 3 22:14:20 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.StaticFieldExpr;clojure.lang.BytecodeCompiler.StaticFieldExpr;a51a104cfff59b7b27628dcc66885d712510879f;Mon Sep 3 22:14:20 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;c0b1333eb25fea97a04de528d5c8f612bd098e89;Mon Sep 3 22:31:49 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.VarExpr;clojure.lang.BytecodeCompiler.VarExpr;c0b1333eb25fea97a04de528d5c8f612bd098e89;Mon Sep 3 22:31:49 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.AssignableExpr;clojure.lang.BytecodeCompiler.AssignableExpr;c0b1333eb25fea97a04de528d5c8f612bd098e89;Mon Sep 3 22:31:49 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.InstanceFieldExpr;clojure.lang.BytecodeCompiler.InstanceFieldExpr;c0b1333eb25fea97a04de528d5c8f612bd098e89;Mon Sep 3 22:31:49 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.StaticFieldExpr;clojure.lang.BytecodeCompiler.StaticFieldExpr;c0b1333eb25fea97a04de528d5c8f612bd098e89;Mon Sep 3 22:31:49 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);c0b1333eb25fea97a04de528d5c8f612bd098e89;Mon Sep 3 22:31:49 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;c0b1333eb25fea97a04de528d5c8f612bd098e89;Mon Sep 3 22:31:49 2007 +0000
SameMethod;true;clojure.lang.Var#set(Object);clojure.lang.Var#set(Object);c0b1333eb25fea97a04de528d5c8f612bd098e89;Mon Sep 3 22:31:49 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;dfb7e514c4ab8a2c878b6deaa27d984f54b5d248;Tue Sep 4 13:32:49 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.DefExpr;clojure.lang.BytecodeCompiler.DefExpr;dfb7e514c4ab8a2c878b6deaa27d984f54b5d248;Tue Sep 4 13:32:49 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.DefExpr#eval();clojure.lang.BytecodeCompiler.DefExpr#eval();dfb7e514c4ab8a2c878b6deaa27d984f54b5d248;Tue Sep 4 13:32:49 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.DefExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.BytecodeCompiler.DefExpr#emit(C, FnExpr, GeneratorAdapter);dfb7e514c4ab8a2c878b6deaa27d984f54b5d248;Tue Sep 4 13:32:49 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.DefExpr#parse(C, ISeq);clojure.lang.BytecodeCompiler.DefExpr#parse(C, ISeq);dfb7e514c4ab8a2c878b6deaa27d984f54b5d248;Tue Sep 4 13:32:49 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;dfb7e514c4ab8a2c878b6deaa27d984f54b5d248;Tue Sep 4 13:32:49 2007 +0000
SameMethod;true;clojure.lang.Var#set(Object);clojure.lang.Var#set(Object);dfb7e514c4ab8a2c878b6deaa27d984f54b5d248;Tue Sep 4 13:32:49 2007 +0000
SameType;true;clojure.lang.Box;clojure.lang.Box;717e9f3557cf4aa1d5e42ce1bbb25fc8f0d0aa9d;Tue Sep 4 14:13:09 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;717e9f3557cf4aa1d5e42ce1bbb25fc8f0d0aa9d;Tue Sep 4 14:13:09 2007 +0000
SameType;true;clojure.lang.Var.Frame;clojure.lang.Var.Frame;717e9f3557cf4aa1d5e42ce1bbb25fc8f0d0aa9d;Tue Sep 4 14:13:09 2007 +0000
SameMethod;true;clojure.lang.Var.Frame#Frame(Associative, Associative, Frame);clojure.lang.Var.Frame#Frame(Associative, Associative, Frame);717e9f3557cf4aa1d5e42ce1bbb25fc8f0d0aa9d;Tue Sep 4 14:13:09 2007 +0000
SameMethod;true;clojure.lang.Var#isBound();clojure.lang.Var#isBound();717e9f3557cf4aa1d5e42ce1bbb25fc8f0d0aa9d;Tue Sep 4 14:13:09 2007 +0000
SameMethod;true;clojure.lang.Var#pushThreadBindings(Associative);clojure.lang.Var#pushThreadBindings(Associative);717e9f3557cf4aa1d5e42ce1bbb25fc8f0d0aa9d;Tue Sep 4 14:13:09 2007 +0000
SameMethod;true;clojure.lang.Var#popThreadBindings();clojure.lang.Var#popThreadBindings();717e9f3557cf4aa1d5e42ce1bbb25fc8f0d0aa9d;Tue Sep 4 14:13:09 2007 +0000
SameMethod;true;clojure.lang.Var#getThreadBinding();clojure.lang.Var#getThreadBinding();717e9f3557cf4aa1d5e42ce1bbb25fc8f0d0aa9d;Tue Sep 4 14:13:09 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;ea1a136f4097c70a0289dc75826d540143dd9219;Tue Sep 4 15:07:12 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#main(String[]);clojure.lang.BytecodeCompiler#main(String[]);ea1a136f4097c70a0289dc75826d540143dd9219;Tue Sep 4 15:07:12 2007 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;e1523958395cd54576b582d0b0ed8fcbbe87ab1d;Tue Sep 4 15:08:07 2007 +0000
SameMethod;true;clojure.lang.Reflector#getStaticField(String, String);clojure.lang.Reflector#getStaticField(String, String);e1523958395cd54576b582d0b0ed8fcbbe87ab1d;Tue Sep 4 15:08:07 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;46a3fbcb5cf35fbd18472658627a90a53be89ccf;Tue Sep 4 16:44:11 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.HostExpr;clojure.lang.BytecodeCompiler.HostExpr;46a3fbcb5cf35fbd18472658627a90a53be89ccf;Tue Sep 4 16:44:11 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.HostExpr#parse(C, ISeq);clojure.lang.BytecodeCompiler.HostExpr#parse(C, ISeq);46a3fbcb5cf35fbd18472658627a90a53be89ccf;Tue Sep 4 16:44:11 2007 +0000
SameType;true;clojure.lang.RestFn;clojure.lang.RestFn;55ed50c4975cf694828d46ee9ca32ce72a9ef913;Tue Sep 4 19:54:38 2007 +0000
SameMethod;true;clojure.lang.RestFn#applyTo(ISeq);clojure.lang.RestFn#applyTo(ISeq);55ed50c4975cf694828d46ee9ca32ce72a9ef913;Tue Sep 4 19:54:38 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;8e5282d0366d1089998fbc13eb1cf275785edb7c;Tue Sep 4 19:55:18 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);8e5282d0366d1089998fbc13eb1cf275785edb7c;Tue Sep 4 19:55:18 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;8e5282d0366d1089998fbc13eb1cf275785edb7c;Tue Sep 4 19:55:18 2007 +0000
SameMethod;true;clojure.lang.Var#bindRoot(Object);clojure.lang.Var#bindRoot(Object);8e5282d0366d1089998fbc13eb1cf275785edb7c;Tue Sep 4 19:55:18 2007 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;bd5301d52f43a687dd9b960db53a733a8f0d5a23;Tue Sep 4 20:32:54 2007 +0000
SameMethod;true;clojure.lang.ASeq#equals(Object);clojure.lang.ASeq#equals(Object);bd5301d52f43a687dd9b960db53a733a8f0d5a23;Tue Sep 4 20:32:54 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;013a93dff3efbd7113734108db8f85b850e26ef5;Tue Sep 4 20:34:05 2007 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;5c6f9df565814bf01b1886639ee10dd6c296f08c;Tue Sep 4 22:14:04 2007 +0000
SameMethod;true;clojure.lang.Reflector#boxArg(Class, Object);clojure.lang.Reflector#boxArg(Class, Object);5c6f9df565814bf01b1886639ee10dd6c296f08c;Tue Sep 4 22:14:04 2007 +0000
RenameMethod;false;clojure.lang.Delay#force();clojure.lang.Delay#invoke();fc05db1783036d621215de9c297500c2d349b33e;Wed Sep 5 15:56:49 2007 +0000
SameType;true;clojure.lang.Delay;clojure.lang.Delay;fc05db1783036d621215de9c297500c2d349b33e;Wed Sep 5 15:56:49 2007 +0000
SameType;true;clojure.lang.FnSeq;clojure.lang.FnSeq;fc05db1783036d621215de9c297500c2d349b33e;Wed Sep 5 15:56:49 2007 +0000
SameMethod;true;clojure.lang.FnSeq#rest();clojure.lang.FnSeq#rest();fc05db1783036d621215de9c297500c2d349b33e;Wed Sep 5 15:56:49 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;ca3cfe298fc492ebe113c984535e76435ebf590a;Wed Sep 5 16:50:12 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);ca3cfe298fc492ebe113c984535e76435ebf590a;Wed Sep 5 16:50:12 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;249a5002ca080890b057e0829444da033eca08c3;Wed Sep 5 17:07:08 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);249a5002ca080890b057e0829444da033eca08c3;Wed Sep 5 17:07:08 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#lookupVar(Symbol, boolean);clojure.lang.BytecodeCompiler#lookupVar(Symbol, boolean);249a5002ca080890b057e0829444da033eca08c3;Wed Sep 5 17:07:08 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;947171087efab6b64133d2321fc0ed78d12474de;Wed Sep 5 19:35:43 2007 +0000
SameMethod;true;clojure.lang.LispReader#interpretToken(String);clojure.lang.LispReader#interpretToken(String);947171087efab6b64133d2321fc0ed78d12474de;Wed Sep 5 19:35:43 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;5ce3a48dbc1a5a41cf9a93bae55bb2b142daf31c;Wed Sep 5 20:40:37 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.FnExpr;clojure.lang.BytecodeCompiler.FnExpr;5ce3a48dbc1a5a41cf9a93bae55bb2b142daf31c;Wed Sep 5 20:40:37 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.FnExpr#compile();clojure.lang.BytecodeCompiler.FnExpr#compile();5ce3a48dbc1a5a41cf9a93bae55bb2b142daf31c;Wed Sep 5 20:40:37 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.FnExpr#emitLocal(GeneratorAdapter, LocalBinding);clojure.lang.BytecodeCompiler.FnExpr#emitLocal(GeneratorAdapter, LocalBinding);5ce3a48dbc1a5a41cf9a93bae55bb2b142daf31c;Wed Sep 5 20:40:37 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;ea14ec2404e56448a78b2064073cd5dc9487ab7a;Wed Sep 5 20:58:29 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;424a73aa7b009304c0fc9c99033c73b39bd14d55;Thu Sep 6 14:15:31 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;c42b245685ff5a285dde2ff3664cae6a9951a3f5;Thu Sep 6 14:16:06 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);c42b245685ff5a285dde2ff3664cae6a9951a3f5;Thu Sep 6 14:16:06 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#lookupVar(Symbol, boolean);clojure.lang.BytecodeCompiler#lookupVar(Symbol, boolean);c42b245685ff5a285dde2ff3664cae6a9951a3f5;Thu Sep 6 14:16:06 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#load(InputStream);clojure.lang.BytecodeCompiler#load(InputStream);c42b245685ff5a285dde2ff3664cae6a9951a3f5;Thu Sep 6 14:16:06 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#main(String[]);clojure.lang.BytecodeCompiler#main(String[]);c42b245685ff5a285dde2ff3664cae6a9951a3f5;Thu Sep 6 14:16:06 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;79420ec6999df1a4471f10116e724ca10267f861;Thu Sep 6 18:49:35 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);79420ec6999df1a4471f10116e724ca10267f861;Thu Sep 6 18:49:35 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#load(InputStream);clojure.lang.BytecodeCompiler#load(InputStream);79420ec6999df1a4471f10116e724ca10267f861;Thu Sep 6 18:49:35 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#main(String[]);clojure.lang.BytecodeCompiler#main(String[]);79420ec6999df1a4471f10116e724ca10267f861;Thu Sep 6 18:49:35 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;83a708fcac4cb37ed91ad4d32d70e54041b41dec;Thu Sep 6 18:56:43 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.InvokeExpr;clojure.lang.BytecodeCompiler.InvokeExpr;83a708fcac4cb37ed91ad4d32d70e54041b41dec;Thu Sep 6 18:56:43 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.InvokeExpr#eval();clojure.lang.BytecodeCompiler.InvokeExpr#eval();83a708fcac4cb37ed91ad4d32d70e54041b41dec;Thu Sep 6 18:56:43 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;83a708fcac4cb37ed91ad4d32d70e54041b41dec;Thu Sep 6 18:56:43 2007 +0000
SameMethod;true;clojure.lang.LispReader#interpretToken(String);clojure.lang.LispReader#interpretToken(String);83a708fcac4cb37ed91ad4d32d70e54041b41dec;Thu Sep 6 18:56:43 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;83a708fcac4cb37ed91ad4d32d70e54041b41dec;Thu Sep 6 18:56:43 2007 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);83a708fcac4cb37ed91ad4d32d70e54041b41dec;Thu Sep 6 18:56:43 2007 +0000
ExtractMethod;true;clojure.lang.BytecodeCompiler.HostExpr#parse(C, ISeq);clojure.lang.BytecodeCompiler.HostExpr#maybeClassName(Object);b6cdf89042b44d0665ea760e8ab596c26817827e;Fri Sep 7 15:26:26 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler;clojure.lang.BytecodeCompiler;b6cdf89042b44d0665ea760e8ab596c26817827e;Fri Sep 7 15:26:26 2007 +0000
SameType;true;clojure.lang.BytecodeCompiler.HostExpr;clojure.lang.BytecodeCompiler.HostExpr;b6cdf89042b44d0665ea760e8ab596c26817827e;Fri Sep 7 15:26:26 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler.HostExpr#parse(C, ISeq);clojure.lang.BytecodeCompiler.HostExpr#parse(C, ISeq);b6cdf89042b44d0665ea760e8ab596c26817827e;Fri Sep 7 15:26:26 2007 +0000
SameMethod;true;clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);clojure.lang.BytecodeCompiler#analyzeSeq(C, ISeq, String);b6cdf89042b44d0665ea760e8ab596c26817827e;Fri Sep 7 15:26:26 2007 +0000
RenameClass;true;clojure.lang.Compiler;clojure.lang.OldCompiler;db6cffe28cf45b42777245a1c02f6e4d93c203ab;Fri Sep 7 17:01:20 2007 +0000
RenameMethod;false;clojure.lang.RT#tuple(Object[]);clojure.lang.RT#vector(Object[]);db6cffe28cf45b42777245a1c02f6e4d93c203ab;Fri Sep 7 17:01:20 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;db6cffe28cf45b42777245a1c02f6e4d93c203ab;Fri Sep 7 17:01:20 2007 +0000
RenameClass;true;clojure.lang.BytecodeCompiler;clojure.lang.Compiler;ce9726806209cdf6d5770a693e3dc844ba1f3a7b;Fri Sep 7 17:02:14 2007 +0000
RenameClass;true;clojure.lang.IPersistentArray;clojure.lang.IPersistentVector;ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameType;true;clojure.lang.ArgVector;clojure.lang.ArgVector;ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameType;true;clojure.lang.Compiler.MethodExpr;clojure.lang.Compiler.MethodExpr;ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameMethod;true;clojure.lang.Compiler.LetExpr#parse(C, ISeq, boolean);clojure.lang.Compiler.LetExpr#parse(C, ISeq, boolean);ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameMethod;true;clojure.lang.Compiler.RecurExpr#parse(C, ISeq);clojure.lang.Compiler.RecurExpr#parse(C, ISeq);ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameType;true;clojure.lang.OldCompiler;clojure.lang.OldCompiler;ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameMethod;true;clojure.lang.OldCompiler#analyzeLetFn(C, ISeq);clojure.lang.OldCompiler#analyzeLetFn(C, ISeq);ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameMethod;true;clojure.lang.PersistentVector#equals(Object);clojure.lang.PersistentVector#equals(Object);ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameMethod;true;clojure.lang.RT#nth(int, Object);clojure.lang.RT#nth(int, Object);ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameMethod;true;clojure.lang.RT#assocN(int, Object, Object);clojure.lang.RT#assocN(int, Object, Object);ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);ed021e912e1d3c23ff533961d9564e8b9c184ea1;Fri Sep 7 17:06:16 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2eb4e3d4f77718e04645eb59f629b31d9f85e166;Fri Sep 7 17:21:21 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);2eb4e3d4f77718e04645eb59f629b31d9f85e166;Fri Sep 7 17:21:21 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e50ef0f6ae3215545c0efd02a72a2793fdc67812;Fri Sep 7 17:39:32 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);e50ef0f6ae3215545c0efd02a72a2793fdc67812;Fri Sep 7 17:39:32 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;236855e91b23ee35947233d8d4da6ab5c8a760f0;Fri Sep 7 18:17:36 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);236855e91b23ee35947233d8d4da6ab5c8a760f0;Fri Sep 7 18:17:36 2007 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;236855e91b23ee35947233d8d4da6ab5c8a760f0;Fri Sep 7 18:17:36 2007 +0000
RenameMethod;false;clojure.lang.RT#without(Object, Object);clojure.lang.RT#dissoc(Object, Object);a6272ace730f0de9791c26fcbf7c96acd24ab9d2;Sat Sep 8 14:05:01 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;a6272ace730f0de9791c26fcbf7c96acd24ab9d2;Sat Sep 8 14:05:01 2007 +0000
RenameClass;true;clojure.lang.LispReader.BackquoteReader;clojure.lang.LispReader.SyntaxQuoteReader;9913465259449b6b278b304eb24e03ef20a194d0;Sat Sep 8 14:05:30 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;9913465259449b6b278b304eb24e03ef20a194d0;Sat Sep 8 14:05:30 2007 +0000
SameMethod;true;clojure.lang.LispReader.BackquoteReader#invoke(Object, Object);clojure.lang.LispReader.SyntaxQuoteReader#invoke(Object, Object);9913465259449b6b278b304eb24e03ef20a194d0;Sat Sep 8 14:05:30 2007 +0000
SameType;true;clojure.lang.LispReader.UnquoteReader;clojure.lang.LispReader.UnquoteReader;9913465259449b6b278b304eb24e03ef20a194d0;Sat Sep 8 14:05:30 2007 +0000
SameMethod;true;clojure.lang.LispReader.UnquoteReader#invoke(Object, Object);clojure.lang.LispReader.UnquoteReader#invoke(Object, Object);9913465259449b6b278b304eb24e03ef20a194d0;Sat Sep 8 14:05:30 2007 +0000
MoveMethod;false;clojure.lang.Compiler.DefExpr#parse(C, ISeq);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
MoveMethod;false;clojure.lang.Compiler.QuoteExpr#parse(C, ISeq);clojure.lang.Compiler.QuoteExpr.Parser#parse(C, Object);d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
MoveMethod;false;clojure.lang.Compiler.TheVarExpr#parse(C, ISeq);clojure.lang.Compiler.TheVarExpr.Parser#parse(C, Object);d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
MoveMethod;false;clojure.lang.Compiler.ThrowExpr#parse(C, ISeq);clojure.lang.Compiler.ThrowExpr.Parser#parse(C, Object);d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
MoveMethod;true;clojure.lang.Compiler.HostExpr#parse(C, ISeq);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
MoveMethod;true;clojure.lang.Compiler.RecurExpr#parse(C, ISeq);clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
MoveMethod;true;clojure.lang.Compiler.LetExpr#parse(C, ISeq, boolean);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
MoveMethod;true;clojure.lang.Compiler.AssignExpr#parse(C, ISeq);clojure.lang.Compiler.AssignExpr.Parser#parse(C, Object);d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
MoveMethod;true;clojure.lang.Compiler.IfExpr#parse(C, ISeq);clojure.lang.Compiler.IfExpr.Parser#parse(C, Object);d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
MoveMethod;true;clojure.lang.Compiler.InstanceExpr#parse(C, ISeq);clojure.lang.Compiler.InstanceExpr.Parser#parse(C, Object);d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
MoveMethod;true;clojure.lang.Compiler.TryFinallyExpr#parse(C, ISeq);clojure.lang.Compiler.TryFinallyExpr.Parser#parse(C, Object);d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
MoveMethod;true;clojure.lang.Compiler.EqlRefExpr#parse(C, ISeq);clojure.lang.Compiler.EqlRefExpr.Parser#parse(C, Object);d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
MoveMethod;true;clojure.lang.Compiler.BodyExpr#parse(C, ISeq);clojure.lang.Compiler.BodyExpr.Parser#parse(C, Object);d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.Compiler.AssignExpr;clojure.lang.Compiler.AssignExpr;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.Compiler.TheVarExpr;clojure.lang.Compiler.TheVarExpr;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.Compiler.QuoteExpr;clojure.lang.Compiler.QuoteExpr;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.Compiler.MonitorEnterExpr;clojure.lang.Compiler.MonitorEnterExpr;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.Compiler.MonitorExitExpr;clojure.lang.Compiler.MonitorExitExpr;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.Compiler.TryFinallyExpr;clojure.lang.Compiler.TryFinallyExpr;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.Compiler.ThrowExpr;clojure.lang.Compiler.ThrowExpr;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.Compiler.InstanceExpr;clojure.lang.Compiler.InstanceExpr;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.Compiler.EqlRefExpr;clojure.lang.Compiler.EqlRefExpr;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.Compiler.BodyExpr;clojure.lang.Compiler.BodyExpr;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.LispReader.QuoteReader;clojure.lang.LispReader.QuoteReader;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameMethod;true;clojure.lang.LispReader.QuoteReader#invoke(Object, Object);clojure.lang.LispReader.QuoteReader#invoke(Object, Object);d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#invoke(Object, Object);clojure.lang.LispReader.SyntaxQuoteReader#invoke(Object, Object);d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.LispReader.UnquoteReader;clojure.lang.LispReader.UnquoteReader;d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameMethod;true;clojure.lang.LispReader.UnquoteReader#invoke(Object, Object);clojure.lang.LispReader.UnquoteReader#invoke(Object, Object);d3ba5541568cd748daae80a9866fa109ded2d520;Sat Sep 8 16:40:16 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;638effc5964f882c3bad55aee6018bb3979f58be;Sat Sep 8 19:30:33 2007 +0000
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Compiler#lookupVar(Symbol, boolean);638effc5964f882c3bad55aee6018bb3979f58be;Sat Sep 8 19:30:33 2007 +0000
SameMethod;true;clojure.lang.Compiler#load(InputStream);clojure.lang.Compiler#load(InputStream);638effc5964f882c3bad55aee6018bb3979f58be;Sat Sep 8 19:30:33 2007 +0000
SameMethod;true;clojure.lang.Compiler#main(String[]);clojure.lang.Compiler#main(String[]);638effc5964f882c3bad55aee6018bb3979f58be;Sat Sep 8 19:30:33 2007 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;638effc5964f882c3bad55aee6018bb3979f58be;Sat Sep 8 19:30:33 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap#create(Object[]);clojure.lang.PersistentHashMap#create(Object[]);638effc5964f882c3bad55aee6018bb3979f58be;Sat Sep 8 19:30:33 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap#create(List);clojure.lang.PersistentHashMap#create(List);638effc5964f882c3bad55aee6018bb3979f58be;Sat Sep 8 19:30:33 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap#create(IPersistentMap, Object[]);clojure.lang.PersistentHashMap#create(IPersistentMap, Object[]);638effc5964f882c3bad55aee6018bb3979f58be;Sat Sep 8 19:30:33 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;638effc5964f882c3bad55aee6018bb3979f58be;Sat Sep 8 19:30:33 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6dc8a6d3a90c45288df47b7f60d3457d33dcd053;Sun Sep 9 13:33:19 2007 +0000
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;6dc8a6d3a90c45288df47b7f60d3457d33dcd053;Sun Sep 9 13:33:19 2007 +0000
SameMethod;true;clojure.lang.Compiler.RecurExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.RecurExpr#emit(C, FnExpr, GeneratorAdapter);6dc8a6d3a90c45288df47b7f60d3457d33dcd053;Sun Sep 9 13:33:19 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;bd7a1e50372c5ecd2c5f7afc7bd461f048456a8a;Sun Sep 9 16:49:42 2007 +0000
SameType;true;clojure.lang.Compiler.QuoteExpr;clojure.lang.Compiler.QuoteExpr;bd7a1e50372c5ecd2c5f7afc7bd461f048456a8a;Sun Sep 9 16:49:42 2007 +0000
SameType;true;clojure.lang.Compiler.QuoteExpr.Parser;clojure.lang.Compiler.QuoteExpr.Parser;bd7a1e50372c5ecd2c5f7afc7bd461f048456a8a;Sun Sep 9 16:49:42 2007 +0000
SameMethod;true;clojure.lang.Compiler.QuoteExpr.Parser#parse(C, Object);clojure.lang.Compiler.QuoteExpr.Parser#parse(C, Object);bd7a1e50372c5ecd2c5f7afc7bd461f048456a8a;Sun Sep 9 16:49:42 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7686aa3fba8bf1a0ae6829625eb322abc7681ed6;Mon Sep 10 10:22:14 2007 +0000
SameMethod;true;clojure.lang.Compiler#syntaxQuote(Object);clojure.lang.Compiler#syntaxQuote(Object);7686aa3fba8bf1a0ae6829625eb322abc7681ed6;Mon Sep 10 10:22:14 2007 +0000
SameType;true;clojure.lang.Compiler.MapExpr;clojure.lang.Compiler.MapExpr;7686aa3fba8bf1a0ae6829625eb322abc7681ed6;Mon Sep 10 10:22:14 2007 +0000
SameMethod;true;clojure.lang.Compiler.MapExpr#parse(C, IPersistentMap);clojure.lang.Compiler.MapExpr#parse(C, IPersistentMap);7686aa3fba8bf1a0ae6829625eb322abc7681ed6;Mon Sep 10 10:22:14 2007 +0000
SameType;true;clojure.lang.Compiler.VectorExpr;clojure.lang.Compiler.VectorExpr;7686aa3fba8bf1a0ae6829625eb322abc7681ed6;Mon Sep 10 10:22:14 2007 +0000
SameMethod;true;clojure.lang.Compiler.VectorExpr#parse(C, IPersistentVector);clojure.lang.Compiler.VectorExpr#parse(C, IPersistentVector);7686aa3fba8bf1a0ae6829625eb322abc7681ed6;Mon Sep 10 10:22:14 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);7686aa3fba8bf1a0ae6829625eb322abc7681ed6;Mon Sep 10 10:22:14 2007 +0000
MoveMethod;false;clojure.lang.Compiler#flattenMap(Object);clojure.lang.LispReader.SyntaxQuoteReader#flattenMap(Object);f78d8b3fe57b7eee920a1566f7207708d84a8a3f;Tue Sep 11 11:22:02 2007 +0000
MoveMethod;true;clojure.lang.Compiler#sqExpandList(PersistentVector, ISeq);clojure.lang.LispReader.SyntaxQuoteReader#sqExpandList(PersistentVector, ISeq);f78d8b3fe57b7eee920a1566f7207708d84a8a3f;Tue Sep 11 11:22:02 2007 +0000
MoveMethod;true;clojure.lang.Compiler#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);f78d8b3fe57b7eee920a1566f7207708d84a8a3f;Tue Sep 11 11:22:02 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;f78d8b3fe57b7eee920a1566f7207708d84a8a3f;Tue Sep 11 11:22:02 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);f78d8b3fe57b7eee920a1566f7207708d84a8a3f;Tue Sep 11 11:22:02 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;f78d8b3fe57b7eee920a1566f7207708d84a8a3f;Tue Sep 11 11:22:02 2007 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;f78d8b3fe57b7eee920a1566f7207708d84a8a3f;Tue Sep 11 11:22:02 2007 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#invoke(Object, Object);clojure.lang.LispReader.SyntaxQuoteReader#invoke(Object, Object);f78d8b3fe57b7eee920a1566f7207708d84a8a3f;Tue Sep 11 11:22:02 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;d4d0a25f1da9d71fe1fd737eb2a59a710ad59413;Tue Sep 11 12:59:32 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;d4d0a25f1da9d71fe1fd737eb2a59a710ad59413;Tue Sep 11 12:59:32 2007 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;d4d0a25f1da9d71fe1fd737eb2a59a710ad59413;Tue Sep 11 12:59:32 2007 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);d4d0a25f1da9d71fe1fd737eb2a59a710ad59413;Tue Sep 11 12:59:32 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;1b2bbce9e5ae18f0cefb29dafb0e47df1e449e8b;Tue Sep 11 13:42:53 2007 +0000
SameMethod;true;clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);1b2bbce9e5ae18f0cefb29dafb0e47df1e449e8b;Tue Sep 11 13:42:53 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;5cee1402e46ff04792da9e49004ebaca23c19403;Tue Sep 11 13:44:29 2007 +0000
SameMethod;true;clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);5cee1402e46ff04792da9e49004ebaca23c19403;Tue Sep 11 13:44:29 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c66048a95c042a098881b7b6d32e9d548f76cdd6;Wed Sep 12 12:33:01 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;c66048a95c042a098881b7b6d32e9d548f76cdd6;Wed Sep 12 12:33:01 2007 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;c66048a95c042a098881b7b6d32e9d548f76cdd6;Wed Sep 12 12:33:01 2007 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);c66048a95c042a098881b7b6d32e9d548f76cdd6;Wed Sep 12 12:33:01 2007 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#sqExpandList(ISeq);clojure.lang.LispReader.SyntaxQuoteReader#sqExpandList(ISeq);c66048a95c042a098881b7b6d32e9d548f76cdd6;Wed Sep 12 12:33:01 2007 +0000
SameType;true;clojure.lang.LispReader.UnquoteReader;clojure.lang.LispReader.UnquoteReader;c66048a95c042a098881b7b6d32e9d548f76cdd6;Wed Sep 12 12:33:01 2007 +0000
SameMethod;true;clojure.lang.LispReader.UnquoteReader#invoke(Object, Object);clojure.lang.LispReader.UnquoteReader#invoke(Object, Object);c66048a95c042a098881b7b6d32e9d548f76cdd6;Wed Sep 12 12:33:01 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;562e883ed0e195564b924831631ae01897be11c9;Wed Sep 12 17:55:59 2007 +0000
SameType;true;clojure.lang.LispReader.MetaReader;clojure.lang.LispReader.MetaReader;562e883ed0e195564b924831631ae01897be11c9;Wed Sep 12 17:55:59 2007 +0000
SameMethod;true;clojure.lang.LispReader.MetaReader#invoke(Object, Object);clojure.lang.LispReader.MetaReader#invoke(Object, Object);562e883ed0e195564b924831631ae01897be11c9;Wed Sep 12 17:55:59 2007 +0000
SameType;true;clojure.lang.LispReader.ListReader;clojure.lang.LispReader.ListReader;562e883ed0e195564b924831631ae01897be11c9;Wed Sep 12 17:55:59 2007 +0000
SameMethod;true;clojure.lang.LispReader.ListReader#invoke(Object, Object);clojure.lang.LispReader.ListReader#invoke(Object, Object);562e883ed0e195564b924831631ae01897be11c9;Wed Sep 12 17:55:59 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;562e883ed0e195564b924831631ae01897be11c9;Wed Sep 12 17:55:59 2007 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);562e883ed0e195564b924831631ae01897be11c9;Wed Sep 12 17:55:59 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;d7f39a425ce621b86d1fb23ba36ae711c262aba3;Wed Sep 12 18:51:27 2007 +0000
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;d7f39a425ce621b86d1fb23ba36ae711c262aba3;Wed Sep 12 18:51:27 2007 +0000
SameMethod;true;clojure.lang.Compiler.IfExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.IfExpr#emit(C, FnExpr, GeneratorAdapter);d7f39a425ce621b86d1fb23ba36ae711c262aba3;Wed Sep 12 18:51:27 2007 +0000
SameType;true;clojure.lang.Compiler.IfExpr.Parser;clojure.lang.Compiler.IfExpr.Parser;d7f39a425ce621b86d1fb23ba36ae711c262aba3;Wed Sep 12 18:51:27 2007 +0000
SameMethod;true;clojure.lang.Compiler.IfExpr.Parser#parse(C, Object);clojure.lang.Compiler.IfExpr.Parser#parse(C, Object);d7f39a425ce621b86d1fb23ba36ae711c262aba3;Wed Sep 12 18:51:27 2007 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;d7f39a425ce621b86d1fb23ba36ae711c262aba3;Wed Sep 12 18:51:27 2007 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emit(C, FnExpr, GeneratorAdapter);d7f39a425ce621b86d1fb23ba36ae711c262aba3;Wed Sep 12 18:51:27 2007 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);d7f39a425ce621b86d1fb23ba36ae711c262aba3;Wed Sep 12 18:51:27 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);d7f39a425ce621b86d1fb23ba36ae711c262aba3;Wed Sep 12 18:51:27 2007 +0000
SameMethod;true;clojure.lang.Compiler#loadFile(String);clojure.lang.Compiler#loadFile(String);d7f39a425ce621b86d1fb23ba36ae711c262aba3;Wed Sep 12 18:51:27 2007 +0000
SameMethod;true;clojure.lang.Compiler#main(String[]);clojure.lang.Compiler#main(String[]);d7f39a425ce621b86d1fb23ba36ae711c262aba3;Wed Sep 12 18:51:27 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;d7f39a425ce621b86d1fb23ba36ae711c262aba3;Wed Sep 12 18:51:27 2007 +0000
SameMethod;true;clojure.lang.RT#contains(Object, Object);clojure.lang.RT#contains(Object, Object);d7f39a425ce621b86d1fb23ba36ae711c262aba3;Wed Sep 12 18:51:27 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;8a455a486ff36e93acf2b53ecd2dc488fbfea16f;Wed Sep 12 19:04:24 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;aebb74ffad1d183ba66d9f379cdfc9362553af5a;Wed Sep 12 19:30:55 2007 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;aebb74ffad1d183ba66d9f379cdfc9362553af5a;Wed Sep 12 19:30:55 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);aebb74ffad1d183ba66d9f379cdfc9362553af5a;Wed Sep 12 19:30:55 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#emit(FnExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#emit(FnExpr, ClassVisitor);aebb74ffad1d183ba66d9f379cdfc9362553af5a;Wed Sep 12 19:30:55 2007 +0000
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;aebb74ffad1d183ba66d9f379cdfc9362553af5a;Wed Sep 12 19:30:55 2007 +0000
SameMethod;true;clojure.lang.Compiler.LetExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.LetExpr#emit(C, FnExpr, GeneratorAdapter);aebb74ffad1d183ba66d9f379cdfc9362553af5a;Wed Sep 12 19:30:55 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;accad479e195ea30f43face204487a3a4e7a568a;Thu Sep 13 19:12:30 2007 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;accad479e195ea30f43face204487a3a4e7a568a;Thu Sep 13 19:12:30 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#emit(FnExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#emit(FnExpr, ClassVisitor);accad479e195ea30f43face204487a3a4e7a568a;Thu Sep 13 19:12:30 2007 +0000
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;accad479e195ea30f43face204487a3a4e7a568a;Thu Sep 13 19:12:30 2007 +0000
SameMethod;true;clojure.lang.Compiler.LetExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.LetExpr#emit(C, FnExpr, GeneratorAdapter);accad479e195ea30f43face204487a3a4e7a568a;Thu Sep 13 19:12:30 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c945972ca77ddf5618de27bc7fadaa2c33a209c5;Sat Sep 15 13:18:05 2007 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;c945972ca77ddf5618de27bc7fadaa2c33a209c5;Sat Sep 15 13:18:05 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);c945972ca77ddf5618de27bc7fadaa2c33a209c5;Sat Sep 15 13:18:05 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();c945972ca77ddf5618de27bc7fadaa2c33a209c5;Sat Sep 15 13:18:05 2007 +0000
SameMethod;true;clojure.lang.Compiler#loadFile(String);clojure.lang.Compiler#loadFile(String);c945972ca77ddf5618de27bc7fadaa2c33a209c5;Sat Sep 15 13:18:05 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;c945972ca77ddf5618de27bc7fadaa2c33a209c5;Sat Sep 15 13:18:05 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;41a8f2db3807dc7ecb98b2fce3d9314c24e91d7d;Sat Sep 15 13:34:24 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;b0fade9a41329e679dcf95a7d663299b465ea447;Sat Sep 15 14:00:17 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceFieldExpr#emit(C, FnExpr, GeneratorAdapter);1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameType;true;clojure.lang.Compiler.StaticFieldExpr;clojure.lang.Compiler.StaticFieldExpr;1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameMethod;true;clojure.lang.Compiler.StaticFieldExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.StaticFieldExpr#emit(C, FnExpr, GeneratorAdapter);1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.StaticMethodExpr#emit(C, FnExpr, GeneratorAdapter);1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#emit(FnExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#emit(FnExpr, ClassVisitor);1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameType;true;clojure.lang.LineNumberingPushbackReader;clojure.lang.LineNumberingPushbackReader;1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameMethod;true;clojure.lang.LineNumberingPushbackReader#getLineNumber();clojure.lang.LineNumberingPushbackReader#getLineNumber();1c442977ae85c994c1085ccab79139d653c517b7;Sat Sep 15 18:18:52 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;cccaea9bcb03f737d79581284b51d7e99384d5ea;Sat Sep 15 19:38:03 2007 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;cccaea9bcb03f737d79581284b51d7e99384d5ea;Sat Sep 15 19:38:03 2007 +0000
SameType;true;clojure.lang.Compiler.MethodExpr;clojure.lang.Compiler.MethodExpr;cccaea9bcb03f737d79581284b51d7e99384d5ea;Sat Sep 15 19:38:03 2007 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;cccaea9bcb03f737d79581284b51d7e99384d5ea;Sat Sep 15 19:38:03 2007 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(int, String, String, IPersistentVector);clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(int, String, String, IPersistentVector);cccaea9bcb03f737d79581284b51d7e99384d5ea;Sat Sep 15 19:38:03 2007 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.StaticMethodExpr#emit(C, FnExpr, GeneratorAdapter);cccaea9bcb03f737d79581284b51d7e99384d5ea;Sat Sep 15 19:38:03 2007 +0000
RenameMethod;false;clojure.lang.RT#cons(Object, IPersistentCollection);clojure.lang.RT#conj(Object, IPersistentCollection);8cbacf156a7a42c7ff1a816783e1afda1781becb;Sat Sep 15 21:29:29 2007 +0000
SameType;true;clojure.lang.BigNum;clojure.lang.BigNum;8cbacf156a7a42c7ff1a816783e1afda1781becb;Sat Sep 15 21:29:29 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;8cbacf156a7a42c7ff1a816783e1afda1781becb;Sat Sep 15 21:29:29 2007 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;8cbacf156a7a42c7ff1a816783e1afda1781becb;Sat Sep 15 21:29:29 2007 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#emitBoxReturn(FnExpr, GeneratorAdapter, Class);clojure.lang.Compiler.HostExpr#emitBoxReturn(FnExpr, GeneratorAdapter, Class);8cbacf156a7a42c7ff1a816783e1afda1781becb;Sat Sep 15 21:29:29 2007 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;8cbacf156a7a42c7ff1a816783e1afda1781becb;Sat Sep 15 21:29:29 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);8cbacf156a7a42c7ff1a816783e1afda1781becb;Sat Sep 15 21:29:29 2007 +0000
SameType;true;clojure.lang.DoubleNum;clojure.lang.DoubleNum;8cbacf156a7a42c7ff1a816783e1afda1781becb;Sat Sep 15 21:29:29 2007 +0000
SameType;true;clojure.lang.FixNum;clojure.lang.FixNum;8cbacf156a7a42c7ff1a816783e1afda1781becb;Sat Sep 15 21:29:29 2007 +0000
SameType;true;clojure.lang.Num;clojure.lang.Num;8cbacf156a7a42c7ff1a816783e1afda1781becb;Sat Sep 15 21:29:29 2007 +0000
SameType;true;clojure.lang.OldCompiler;clojure.lang.OldCompiler;8cbacf156a7a42c7ff1a816783e1afda1781becb;Sat Sep 15 21:29:29 2007 +0000
SameMethod;true;clojure.lang.OldCompiler#analyzeFn(C, ISeq);clojure.lang.OldCompiler#analyzeFn(C, ISeq);8cbacf156a7a42c7ff1a816783e1afda1781becb;Sat Sep 15 21:29:29 2007 +0000
SameMethod;true;clojure.lang.OldCompiler#registerFn(FnExpr);clojure.lang.OldCompiler#registerFn(FnExpr);8cbacf156a7a42c7ff1a816783e1afda1781becb;Sat Sep 15 21:29:29 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;8cbacf156a7a42c7ff1a816783e1afda1781becb;Sat Sep 15 21:29:29 2007 +0000
SameType;true;clojure.lang.RatioNum;clojure.lang.RatioNum;8cbacf156a7a42c7ff1a816783e1afda1781becb;Sat Sep 15 21:29:29 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;ed407170f65b744505bd64ea9b8203cb22a1e1ce;Sat Sep 15 21:46:53 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;ae704ada24e998ac243b207798b310675dc728bb;Sat Sep 15 21:55:21 2007 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;13fa4de7e9a7764326626cc7bc3d135e3fd8bc93;Sat Sep 15 22:12:10 2007 +0000
SameMethod;true;clojure.lang.APersistentMap#cons(Object);clojure.lang.APersistentMap#cons(Object);13fa4de7e9a7764326626cc7bc3d135e3fd8bc93;Sat Sep 15 22:12:10 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;534b094db5e9bda280951e6fa9d9b75884825441;Sat Sep 15 22:34:47 2007 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;534b094db5e9bda280951e6fa9d9b75884825441;Sat Sep 15 22:34:47 2007 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(int, String, String, IPersistentVector);clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(int, String, String, IPersistentVector);534b094db5e9bda280951e6fa9d9b75884825441;Sat Sep 15 22:34:47 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e0decde9777bd4a7f1b3f41a0810f66bb8190794;Sat Sep 15 23:09:05 2007 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;e0decde9777bd4a7f1b3f41a0810f66bb8190794;Sat Sep 15 23:09:05 2007 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#NewExpr(String, IPersistentVector);clojure.lang.Compiler.NewExpr#NewExpr(String, IPersistentVector);e0decde9777bd4a7f1b3f41a0810f66bb8190794;Sat Sep 15 23:09:05 2007 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.NewExpr#emit(C, FnExpr, GeneratorAdapter);e0decde9777bd4a7f1b3f41a0810f66bb8190794;Sat Sep 15 23:09:05 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;fd4812c5144a4a6cf8f907c969ee8f8bf71e1e9b;Sun Sep 16 11:40:31 2007 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;fd4812c5144a4a6cf8f907c969ee8f8bf71e1e9b;Sun Sep 16 11:40:31 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();fd4812c5144a4a6cf8f907c969ee8f8bf71e1e9b;Sun Sep 16 11:40:31 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.Expr;clojure.lang.Compiler.Expr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.AssignExpr;clojure.lang.Compiler.AssignExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.VarExpr;clojure.lang.Compiler.VarExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.TheVarExpr;clojure.lang.Compiler.TheVarExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.KeywordExpr;clojure.lang.Compiler.KeywordExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.StaticFieldExpr;clojure.lang.Compiler.StaticFieldExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(int, Expr, String, IPersistentVector);clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(int, Expr, String, IPersistentVector);2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.QuoteExpr;clojure.lang.Compiler.QuoteExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.NilExpr;clojure.lang.Compiler.NilExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.NumExpr;clojure.lang.Compiler.NumExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.StringExpr;clojure.lang.Compiler.StringExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.CharExpr;clojure.lang.Compiler.CharExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.MonitorEnterExpr;clojure.lang.Compiler.MonitorEnterExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.MonitorExitExpr;clojure.lang.Compiler.MonitorExitExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.TryFinallyExpr;clojure.lang.Compiler.TryFinallyExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.ThrowExpr;clojure.lang.Compiler.ThrowExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.ClassExpr;clojure.lang.Compiler.ClassExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.InstanceExpr;clojure.lang.Compiler.InstanceExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.MetaExpr;clojure.lang.Compiler.MetaExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.EmptyExpr;clojure.lang.Compiler.EmptyExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.ListExpr;clojure.lang.Compiler.ListExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.MapExpr;clojure.lang.Compiler.MapExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.VectorExpr;clojure.lang.Compiler.VectorExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;2e738a7306bd887eefc3799778b0deee2cb126c2;Sun Sep 16 14:26:03 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;a6be4971c2e80127462bcd564e237fdfa293755c;Sun Sep 16 15:01:51 2007 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;a6be4971c2e80127462bcd564e237fdfa293755c;Sun Sep 16 15:01:51 2007 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(int, Expr, String, IPersistentVector);clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(int, Expr, String, IPersistentVector);a6be4971c2e80127462bcd564e237fdfa293755c;Sun Sep 16 15:01:51 2007 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;a6be4971c2e80127462bcd564e237fdfa293755c;Sun Sep 16 15:01:51 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);a6be4971c2e80127462bcd564e237fdfa293755c;Sun Sep 16 15:01:51 2007 +0000
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;a6be4971c2e80127462bcd564e237fdfa293755c;Sun Sep 16 15:01:51 2007 +0000
SameType;true;clojure.lang.Compiler.LocalBindingExpr;clojure.lang.Compiler.LocalBindingExpr;a6be4971c2e80127462bcd564e237fdfa293755c;Sun Sep 16 15:01:51 2007 +0000
SameType;true;clojure.lang.Compiler.BodyExpr;clojure.lang.Compiler.BodyExpr;a6be4971c2e80127462bcd564e237fdfa293755c;Sun Sep 16 15:01:51 2007 +0000
SameType;true;clojure.lang.Compiler.BodyExpr.Parser;clojure.lang.Compiler.BodyExpr.Parser;a6be4971c2e80127462bcd564e237fdfa293755c;Sun Sep 16 15:01:51 2007 +0000
SameMethod;true;clojure.lang.Compiler.BodyExpr.Parser#parse(C, Object);clojure.lang.Compiler.BodyExpr.Parser#parse(C, Object);a6be4971c2e80127462bcd564e237fdfa293755c;Sun Sep 16 15:01:51 2007 +0000
SameMethod;true;clojure.lang.Compiler.BodyExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.BodyExpr#emit(C, FnExpr, GeneratorAdapter);a6be4971c2e80127462bcd564e237fdfa293755c;Sun Sep 16 15:01:51 2007 +0000
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;a6be4971c2e80127462bcd564e237fdfa293755c;Sun Sep 16 15:01:51 2007 +0000
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;a6be4971c2e80127462bcd564e237fdfa293755c;Sun Sep 16 15:01:51 2007 +0000
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);a6be4971c2e80127462bcd564e237fdfa293755c;Sun Sep 16 15:01:51 2007 +0000
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;a6be4971c2e80127462bcd564e237fdfa293755c;Sun Sep 16 15:01:51 2007 +0000
RenameClass;true;clojure.lang.LispReader.QuoteReader;clojure.lang.LispReader.WrappingReader;d041b1fe404e73fb01ee572825d32a1d9df731d7;Sun Sep 16 15:56:14 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;d041b1fe404e73fb01ee572825d32a1d9df731d7;Sun Sep 16 15:56:14 2007 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;d041b1fe404e73fb01ee572825d32a1d9df731d7;Sun Sep 16 15:56:14 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);d041b1fe404e73fb01ee572825d32a1d9df731d7;Sun Sep 16 15:56:14 2007 +0000
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;d041b1fe404e73fb01ee572825d32a1d9df731d7;Sun Sep 16 15:56:14 2007 +0000
SameMethod;true;clojure.lang.Compiler.LocalBinding#hasJavaClass();clojure.lang.Compiler.LocalBinding#hasJavaClass();d041b1fe404e73fb01ee572825d32a1d9df731d7;Sun Sep 16 15:56:14 2007 +0000
SameMethod;true;clojure.lang.Compiler.LocalBinding#getJavaClass();clojure.lang.Compiler.LocalBinding#getJavaClass();d041b1fe404e73fb01ee572825d32a1d9df731d7;Sun Sep 16 15:56:14 2007 +0000
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;d041b1fe404e73fb01ee572825d32a1d9df731d7;Sun Sep 16 15:56:14 2007 +0000
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;d041b1fe404e73fb01ee572825d32a1d9df731d7;Sun Sep 16 15:56:14 2007 +0000
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);d041b1fe404e73fb01ee572825d32a1d9df731d7;Sun Sep 16 15:56:14 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;d041b1fe404e73fb01ee572825d32a1d9df731d7;Sun Sep 16 15:56:14 2007 +0000
SameMethod;true;clojure.lang.LispReader#readToken(PushbackReader, char);clojure.lang.LispReader#readToken(PushbackReader, char);d041b1fe404e73fb01ee572825d32a1d9df731d7;Sun Sep 16 15:56:14 2007 +0000
SameMethod;true;clojure.lang.LispReader.QuoteReader#invoke(Object, Object);clojure.lang.LispReader.WrappingReader#invoke(Object, Object);d041b1fe404e73fb01ee572825d32a1d9df731d7;Sun Sep 16 15:56:14 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;414f12b134344baee0f5d183551d24b577ec66a5;Sun Sep 16 17:09:52 2007 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;414f12b134344baee0f5d183551d24b577ec66a5;Sun Sep 16 17:09:52 2007 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#emitBoxReturn(FnExpr, GeneratorAdapter, Class);clojure.lang.Compiler.HostExpr#emitBoxReturn(FnExpr, GeneratorAdapter, Class);414f12b134344baee0f5d183551d24b577ec66a5;Sun Sep 16 17:09:52 2007 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;414f12b134344baee0f5d183551d24b577ec66a5;Sun Sep 16 17:09:52 2007 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);414f12b134344baee0f5d183551d24b577ec66a5;Sun Sep 16 17:09:52 2007 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;414f12b134344baee0f5d183551d24b577ec66a5;Sun Sep 16 17:09:52 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();414f12b134344baee0f5d183551d24b577ec66a5;Sun Sep 16 17:09:52 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;414f12b134344baee0f5d183551d24b577ec66a5;Sun Sep 16 17:09:52 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;22cc068ed0721477c222e4e7419ec7e71bca8713;Wed Sep 19 12:47:01 2007 +0000
SameType;true;clojure.lang.Compiler.QuoteExpr;clojure.lang.Compiler.QuoteExpr;22cc068ed0721477c222e4e7419ec7e71bca8713;Wed Sep 19 12:47:01 2007 +0000
SameType;true;clojure.lang.Compiler.QuoteExpr.Parser;clojure.lang.Compiler.QuoteExpr.Parser;22cc068ed0721477c222e4e7419ec7e71bca8713;Wed Sep 19 12:47:01 2007 +0000
SameMethod;true;clojure.lang.Compiler.QuoteExpr.Parser#parse(C, Object);clojure.lang.Compiler.QuoteExpr.Parser#parse(C, Object);22cc068ed0721477c222e4e7419ec7e71bca8713;Wed Sep 19 12:47:01 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;f245f016afdcedfd2c0d6bd3096a45110554848e;Wed Sep 19 12:48:19 2007 +0000
SameType;true;clojure.lang.Compiler.QuoteExpr;clojure.lang.Compiler.QuoteExpr;f245f016afdcedfd2c0d6bd3096a45110554848e;Wed Sep 19 12:48:19 2007 +0000
SameType;true;clojure.lang.Compiler.QuoteExpr.Parser;clojure.lang.Compiler.QuoteExpr.Parser;f245f016afdcedfd2c0d6bd3096a45110554848e;Wed Sep 19 12:48:19 2007 +0000
SameMethod;true;clojure.lang.Compiler.QuoteExpr.Parser#parse(C, Object);clojure.lang.Compiler.QuoteExpr.Parser#parse(C, Object);f245f016afdcedfd2c0d6bd3096a45110554848e;Wed Sep 19 12:48:19 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;c13e11f2fec745192c2364e9e60d4d387c365cda;Wed Sep 19 13:11:07 2007 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);c13e11f2fec745192c2364e9e60d4d387c365cda;Wed Sep 19 13:11:07 2007 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;8882ed0d74714d58dac777ec7383beab184fb38a;Wed Sep 19 15:45:43 2007 +0000
SameMethod;true;clojure.lang.PersistentList#cons(Object);clojure.lang.PersistentList#cons(Object);8882ed0d74714d58dac777ec7383beab184fb38a;Wed Sep 19 15:45:43 2007 +0000
SameType;true;clojure.lang.PersistentList.EmptyList;clojure.lang.PersistentList.EmptyList;8882ed0d74714d58dac777ec7383beab184fb38a;Wed Sep 19 15:45:43 2007 +0000
SameMethod;true;clojure.lang.PersistentList.EmptyList#cons(Object);clojure.lang.PersistentList.EmptyList#cons(Object);8882ed0d74714d58dac777ec7383beab184fb38a;Wed Sep 19 15:45:43 2007 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;db86652ad2da15f500ad84806c2bf7a7af807741;Wed Sep 19 19:53:21 2007 +0000
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;db86652ad2da15f500ad84806c2bf7a7af807741;Wed Sep 19 19:53:21 2007 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;db86652ad2da15f500ad84806c2bf7a7af807741;Wed Sep 19 19:53:21 2007 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;db86652ad2da15f500ad84806c2bf7a7af807741;Wed Sep 19 19:53:21 2007 +0000
ExtractInterface;true;clojure.lang.IPersistentList;clojure.lang.IStack;23554c4cd66e4821e39b21f60f8101868ac51070;Wed Sep 19 20:52:31 2007 +0000
PushDownMethod;false;clojure.lang.ASeq#peek();clojure.lang.PersistentList#peek();23554c4cd66e4821e39b21f60f8101868ac51070;Wed Sep 19 20:52:31 2007 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;23554c4cd66e4821e39b21f60f8101868ac51070;Wed Sep 19 20:52:31 2007 +0000
SameType;true;clojure.lang.IPersistentList;clojure.lang.IPersistentList;23554c4cd66e4821e39b21f60f8101868ac51070;Wed Sep 19 20:52:31 2007 +0000
SameType;true;clojure.lang.IPersistentVector;clojure.lang.IPersistentVector;23554c4cd66e4821e39b21f60f8101868ac51070;Wed Sep 19 20:52:31 2007 +0000
SameType;true;clojure.lang.ISeq;clojure.lang.ISeq;23554c4cd66e4821e39b21f60f8101868ac51070;Wed Sep 19 20:52:31 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;23554c4cd66e4821e39b21f60f8101868ac51070;Wed Sep 19 20:52:31 2007 +0000
SameType;true;clojure.lang.LispReader.ListReader;clojure.lang.LispReader.ListReader;23554c4cd66e4821e39b21f60f8101868ac51070;Wed Sep 19 20:52:31 2007 +0000
SameMethod;true;clojure.lang.LispReader.ListReader#invoke(Object, Object);clojure.lang.LispReader.ListReader#invoke(Object, Object);23554c4cd66e4821e39b21f60f8101868ac51070;Wed Sep 19 20:52:31 2007 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;23554c4cd66e4821e39b21f60f8101868ac51070;Wed Sep 19 20:52:31 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;23554c4cd66e4821e39b21f60f8101868ac51070;Wed Sep 19 20:52:31 2007 +0000
SameMethod;true;clojure.lang.RT#peek(Object);clojure.lang.RT#peek(Object);23554c4cd66e4821e39b21f60f8101868ac51070;Wed Sep 19 20:52:31 2007 +0000
SameMethod;true;clojure.lang.RT#pop(Object);clojure.lang.RT#pop(Object);23554c4cd66e4821e39b21f60f8101868ac51070;Wed Sep 19 20:52:31 2007 +0000
RenameClass;true;clojure.lang.IStack;clojure.lang.IPersistentStack;7aac33d1447ccea5ef6a70318ea67085af994a68;Wed Sep 19 20:53:35 2007 +0000
SameType;true;clojure.lang.IPersistentList;clojure.lang.IPersistentList;7aac33d1447ccea5ef6a70318ea67085af994a68;Wed Sep 19 20:53:35 2007 +0000
SameType;true;clojure.lang.IPersistentVector;clojure.lang.IPersistentVector;7aac33d1447ccea5ef6a70318ea67085af994a68;Wed Sep 19 20:53:35 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;7aac33d1447ccea5ef6a70318ea67085af994a68;Wed Sep 19 20:53:35 2007 +0000
SameMethod;true;clojure.lang.RT#peek(Object);clojure.lang.RT#peek(Object);7aac33d1447ccea5ef6a70318ea67085af994a68;Wed Sep 19 20:53:35 2007 +0000
SameMethod;true;clojure.lang.RT#pop(Object);clojure.lang.RT#pop(Object);7aac33d1447ccea5ef6a70318ea67085af994a68;Wed Sep 19 20:53:35 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;f745f2189d239572e3247d23384b0d2bc9138c8d;Wed Sep 19 21:19:19 2007 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;f745f2189d239572e3247d23384b0d2bc9138c8d;Wed Sep 19 21:19:19 2007 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#emitUnboxArg(FnExpr, GeneratorAdapter, Class);clojure.lang.Compiler.HostExpr#emitUnboxArg(FnExpr, GeneratorAdapter, Class);f745f2189d239572e3247d23384b0d2bc9138c8d;Wed Sep 19 21:19:19 2007 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;f745f2189d239572e3247d23384b0d2bc9138c8d;Wed Sep 19 21:19:19 2007 +0000
SameMethod;true;clojure.lang.PersistentVector#assocN(int, Object);clojure.lang.PersistentVector#assocN(int, Object);f745f2189d239572e3247d23384b0d2bc9138c8d;Wed Sep 19 21:19:19 2007 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;7cff1180b7de9066d833044f1b71aae0e4612e98;Wed Sep 19 21:31:37 2007 +0000
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;98cf7e1cab10a3208c0b60611e9b2b533fbc0eea;Thu Sep 20 16:31:21 2007 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;98cf7e1cab10a3208c0b60611e9b2b533fbc0eea;Thu Sep 20 16:31:21 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;3c2265abbab40be15976f8945fba4426c468e836;Thu Sep 20 18:34:00 2007 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;3c2265abbab40be15976f8945fba4426c468e836;Thu Sep 20 18:34:00 2007 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#invoke(Object, Object);clojure.lang.LispReader.SyntaxQuoteReader#invoke(Object, Object);3c2265abbab40be15976f8945fba4426c468e836;Thu Sep 20 18:34:00 2007 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);3c2265abbab40be15976f8945fba4426c468e836;Thu Sep 20 18:34:00 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c16ce61aeb730ccd3ab03fc51ca6437e42e752a2;Fri Sep 21 20:40:40 2007 +0000
SameMethod;true;clojure.lang.Compiler#main(String[]);clojure.lang.Compiler#main(String[]);c16ce61aeb730ccd3ab03fc51ca6437e42e752a2;Fri Sep 21 20:40:40 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;c16ce61aeb730ccd3ab03fc51ca6437e42e752a2;Fri Sep 21 20:40:40 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;c16ce61aeb730ccd3ab03fc51ca6437e42e752a2;Fri Sep 21 20:40:40 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#getEx();clojure.lang.LockingTransaction#getEx();c16ce61aeb730ccd3ab03fc51ca6437e42e752a2;Fri Sep 21 20:40:40 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6b248387e7631748011afccb65c495b635806d45;Sat Sep 22 18:29:04 2007 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;6b248387e7631748011afccb65c495b635806d45;Sat Sep 22 18:29:04 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();6b248387e7631748011afccb65c495b635806d45;Sat Sep 22 18:29:04 2007 +0000
SameMethod;true;clojure.lang.Compiler#main(String[]);clojure.lang.Compiler#main(String[]);6b248387e7631748011afccb65c495b635806d45;Sat Sep 22 18:29:04 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;6b248387e7631748011afccb65c495b635806d45;Sat Sep 22 18:29:04 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;6b248387e7631748011afccb65c495b635806d45;Sat Sep 22 18:29:04 2007 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;6b248387e7631748011afccb65c495b635806d45;Sat Sep 22 18:29:04 2007 +0000
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;6b248387e7631748011afccb65c495b635806d45;Sat Sep 22 18:29:04 2007 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;6b248387e7631748011afccb65c495b635806d45;Sat Sep 22 18:29:04 2007 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;6b248387e7631748011afccb65c495b635806d45;Sat Sep 22 18:29:04 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;6b248387e7631748011afccb65c495b635806d45;Sat Sep 22 18:29:04 2007 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);6b248387e7631748011afccb65c495b635806d45;Sat Sep 22 18:29:04 2007 +0000
SameMethod;true;clojure.lang.RT#setValues(Object[]);clojure.lang.RT#setValues(Object[]);6b248387e7631748011afccb65c495b635806d45;Sat Sep 22 18:29:04 2007 +0000
SameType;true;clojure.lang.TransactionalHashMap;clojure.lang.TransactionalHashMap;6b248387e7631748011afccb65c495b635806d45;Sat Sep 22 18:29:04 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;55831cba86713b35863c6a53f9f1d26a444e1652;Sat Sep 22 18:40:41 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c256b1a964d6f6bb64a120820394c749bc49b407;Sat Sep 22 22:54:26 2007 +0000
SameMethod;true;clojure.lang.Compiler#loadFile(String);clojure.lang.Compiler#loadFile(String);c256b1a964d6f6bb64a120820394c749bc49b407;Sat Sep 22 22:54:26 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;176a660fb3d4a6136dc342b082288e4f29048dfc;Tue Sep 25 02:52:20 2007 +0000
SameMethod;true;clojure.lang.Compiler#main(String[]);clojure.lang.Compiler#main(String[]);176a660fb3d4a6136dc342b082288e4f29048dfc;Tue Sep 25 02:52:20 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;176a660fb3d4a6136dc342b082288e4f29048dfc;Tue Sep 25 02:52:20 2007 +0000
SameMethod;true;clojure.lang.RT#first(Object);clojure.lang.RT#first(Object);176a660fb3d4a6136dc342b082288e4f29048dfc;Tue Sep 25 02:52:20 2007 +0000
SameMethod;true;clojure.lang.RT#rest(Object);clojure.lang.RT#rest(Object);176a660fb3d4a6136dc342b082288e4f29048dfc;Tue Sep 25 02:52:20 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c67602fd05717218ad4b7b18b4e4643396d62d6b;Fri Sep 28 15:38:20 2007 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;c67602fd05717218ad4b7b18b4e4643396d62d6b;Fri Sep 28 15:38:20 2007 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emit(C, FnExpr, GeneratorAdapter);c67602fd05717218ad4b7b18b4e4643396d62d6b;Fri Sep 28 15:38:20 2007 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);c67602fd05717218ad4b7b18b4e4643396d62d6b;Fri Sep 28 15:38:20 2007 +0000
SameMethod;true;clojure.lang.Compiler#main(String[]);clojure.lang.Compiler#main(String[]);c67602fd05717218ad4b7b18b4e4643396d62d6b;Fri Sep 28 15:38:20 2007 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;3697b6fdf89bc5502657c5936121e8ce151098c1;Fri Sep 28 20:57:15 2007 +0000
SameMethod;true;clojure.lang.APersistentMap#cons(Object);clojure.lang.APersistentMap#cons(Object);3697b6fdf89bc5502657c5936121e8ce151098c1;Fri Sep 28 20:57:15 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;3697b6fdf89bc5502657c5936121e8ce151098c1;Fri Sep 28 20:57:15 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;7708963ed3926abfbf84d765f748d2e246e13ace;Sat Sep 29 00:56:17 2007 +0000
SameMethod;true;clojure.lang.RT$1#invoke(Object);clojure.lang.RT$1#invoke(Object);7708963ed3926abfbf84d765f748d2e246e13ace;Sat Sep 29 00:56:17 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;601a4cb8e03c0471890849580c896961080eacb9;Sat Sep 29 14:22:35 2007 +0000
SameMethod;true;clojure.lang.Compiler#resolveSymbol(Symbol);clojure.lang.Compiler#resolveSymbol(Symbol);601a4cb8e03c0471890849580c896961080eacb9;Sat Sep 29 14:22:35 2007 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;601a4cb8e03c0471890849580c896961080eacb9;Sat Sep 29 14:22:35 2007 +0000
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;601a4cb8e03c0471890849580c896961080eacb9;Sat Sep 29 14:22:35 2007 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);601a4cb8e03c0471890849580c896961080eacb9;Sat Sep 29 14:22:35 2007 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;601a4cb8e03c0471890849580c896961080eacb9;Sat Sep 29 14:22:35 2007 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#maybeClassName(Object);clojure.lang.Compiler.HostExpr#maybeClassName(Object);601a4cb8e03c0471890849580c896961080eacb9;Sat Sep 29 14:22:35 2007 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;601a4cb8e03c0471890849580c896961080eacb9;Sat Sep 29 14:22:35 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);601a4cb8e03c0471890849580c896961080eacb9;Sat Sep 29 14:22:35 2007 +0000
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Compiler#lookupVar(Symbol, boolean);601a4cb8e03c0471890849580c896961080eacb9;Sat Sep 29 14:22:35 2007 +0000
SameMethod;true;clojure.lang.Compiler#currentNS();clojure.lang.Compiler#currentNS();601a4cb8e03c0471890849580c896961080eacb9;Sat Sep 29 14:22:35 2007 +0000
SameMethod;true;clojure.lang.Compiler#load(InputStream);clojure.lang.Compiler#load(InputStream);601a4cb8e03c0471890849580c896961080eacb9;Sat Sep 29 14:22:35 2007 +0000
SameMethod;true;clojure.lang.Compiler#main(String[]);clojure.lang.Compiler#main(String[]);601a4cb8e03c0471890849580c896961080eacb9;Sat Sep 29 14:22:35 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;601a4cb8e03c0471890849580c896961080eacb9;Sat Sep 29 14:22:35 2007 +0000
SameMethod;true;clojure.lang.RT$1#invoke(Object);clojure.lang.RT$1#invoke(Object);601a4cb8e03c0471890849580c896961080eacb9;Sat Sep 29 14:22:35 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e54c3bb625e3f5210465ddf4a960337f4dde82be;Sat Sep 29 16:53:34 2007 +0000
SameType;true;clojure.lang.Compiler.TryFinallyExpr;clojure.lang.Compiler.TryFinallyExpr;e54c3bb625e3f5210465ddf4a960337f4dde82be;Sat Sep 29 16:53:34 2007 +0000
SameType;true;clojure.lang.Compiler.TryFinallyExpr.Parser;clojure.lang.Compiler.TryFinallyExpr.Parser;e54c3bb625e3f5210465ddf4a960337f4dde82be;Sat Sep 29 16:53:34 2007 +0000
SameMethod;true;clojure.lang.Compiler.TryFinallyExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryFinallyExpr.Parser#parse(C, Object);e54c3bb625e3f5210465ddf4a960337f4dde82be;Sat Sep 29 16:53:34 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;46e575bc17e5e54948b4f378973f69266a69ea07;Sun Sep 30 17:56:47 2007 +0000
SameMethod;true;clojure.lang.RT$1#invoke(Object);clojure.lang.RT$1#invoke(Object);46e575bc17e5e54948b4f378973f69266a69ea07;Sun Sep 30 17:56:47 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;4be49c5b2a179ab396e631dc533b14f7ea699c97;Sun Sep 30 22:27:09 2007 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;4be49c5b2a179ab396e631dc533b14f7ea699c97;Sun Sep 30 22:27:09 2007 +0000
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;4be49c5b2a179ab396e631dc533b14f7ea699c97;Sun Sep 30 22:27:09 2007 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);4be49c5b2a179ab396e631dc533b14f7ea699c97;Sun Sep 30 22:27:09 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;a3bc99cd612e164a35e27ca6991075d55cd34d7e;Sun Sep 30 23:42:42 2007 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;a3bc99cd612e164a35e27ca6991075d55cd34d7e;Sun Sep 30 23:42:42 2007 +0000
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;a3bc99cd612e164a35e27ca6991075d55cd34d7e;Sun Sep 30 23:42:42 2007 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);a3bc99cd612e164a35e27ca6991075d55cd34d7e;Sun Sep 30 23:42:42 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;a3bc99cd612e164a35e27ca6991075d55cd34d7e;Sun Sep 30 23:42:42 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;74a359c2300d218691100a17dc34176010355164;Sun Oct 7 12:48:26 2007 +0000
SameMethod;true;clojure.lang.Compiler#main(String[]);clojure.lang.Compiler#main(String[]);74a359c2300d218691100a17dc34176010355164;Sun Oct 7 12:48:26 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;74a359c2300d218691100a17dc34176010355164;Sun Oct 7 12:48:26 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;8d97d8311037125a74d1f21efbea1581adcf3cd0;Sun Oct 14 23:17:31 2007 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;8d97d8311037125a74d1f21efbea1581adcf3cd0;Sun Oct 14 23:17:31 2007 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#emitBoxReturn(FnExpr, GeneratorAdapter, Class);clojure.lang.Compiler.HostExpr#emitBoxReturn(FnExpr, GeneratorAdapter, Class);8d97d8311037125a74d1f21efbea1581adcf3cd0;Sun Oct 14 23:17:31 2007 +0000
SameType;true;clojure.lang.Compiler.InstanceExpr;clojure.lang.Compiler.InstanceExpr;8d97d8311037125a74d1f21efbea1581adcf3cd0;Sun Oct 14 23:17:31 2007 +0000
SameMethod;true;clojure.lang.Compiler.InstanceExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceExpr#emit(C, FnExpr, GeneratorAdapter);8d97d8311037125a74d1f21efbea1581adcf3cd0;Sun Oct 14 23:17:31 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;8d97d8311037125a74d1f21efbea1581adcf3cd0;Sun Oct 14 23:17:31 2007 +0000
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;83a9de7db39c25429f00d265043212943d229fc0;Tue Oct 16 01:52:23 2007 +0000
SameMethod;true;clojure.lang.ArraySeq#create(Object[]);clojure.lang.ArraySeq#create(Object[]);83a9de7db39c25429f00d265043212943d229fc0;Tue Oct 16 01:52:23 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;caa8005d5700dedf633d4b4a2d0b117629eaa557;Thu Oct 18 01:47:59 2007 +0000
SameType;true;clojure.lang.Compiler.BodyExpr;clojure.lang.Compiler.BodyExpr;caa8005d5700dedf633d4b4a2d0b117629eaa557;Thu Oct 18 01:47:59 2007 +0000
SameType;true;clojure.lang.Compiler.BodyExpr.Parser;clojure.lang.Compiler.BodyExpr.Parser;caa8005d5700dedf633d4b4a2d0b117629eaa557;Thu Oct 18 01:47:59 2007 +0000
SameMethod;true;clojure.lang.Compiler.BodyExpr.Parser#parse(C, Object);clojure.lang.Compiler.BodyExpr.Parser#parse(C, Object);caa8005d5700dedf633d4b4a2d0b117629eaa557;Thu Oct 18 01:47:59 2007 +0000
RenameMethod;false;clojure.lang.MapEntry#contains(Object);clojure.lang.MapEntry#containsKey(Object);5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
RenameMethod;false;clojure.lang.PersistentArrayMap#contains(Object);clojure.lang.PersistentArrayMap#containsKey(Object);5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
RenameMethod;false;clojure.lang.PersistentHashMap#contains(Object);clojure.lang.PersistentHashMap#containsKey(Object);5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
RenameMethod;false;clojure.lang.PersistentTreeMap#contains(Object);clojure.lang.PersistentTreeMap#containsKey(Object);5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameType;true;clojure.lang.Associative;clojure.lang.Associative;5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameMethod;true;clojure.lang.Compiler#isSpecial(Object);clojure.lang.Compiler#isSpecial(Object);5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(int, Expr, String, IPersistentVector);clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(int, Expr, String, IPersistentVector);5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emitLocal(GeneratorAdapter, LocalBinding);clojure.lang.Compiler.FnExpr#emitLocal(GeneratorAdapter, LocalBinding);5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameType;true;clojure.lang.MapEntry;clojure.lang.MapEntry;5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap#assocEx(Object, Object);clojure.lang.PersistentHashMap#assocEx(Object, Object);5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameMethod;true;clojure.lang.PersistentVector#contains(Object);clojure.lang.PersistentVector#contains(Object);5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameMethod;true;clojure.lang.RT#contains(Object, Object);clojure.lang.RT#contains(Object, Object);5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameMethod;true;clojure.lang.RT#map(Object[]);clojure.lang.RT#map(Object[]);5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameMethod;true;clojure.lang.Var#isBound();clojure.lang.Var#isBound();5c4b0b8323fe091f5a6c5a0af041a41403fbf3fb;Thu Oct 18 13:50:06 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;87fe051f497dde0a8641689cf18928bffcf329dd;Thu Oct 18 15:25:37 2007 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;87fe051f497dde0a8641689cf18928bffcf329dd;Thu Oct 18 15:25:37 2007 +0000
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;87fe051f497dde0a8641689cf18928bffcf329dd;Thu Oct 18 15:25:37 2007 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);87fe051f497dde0a8641689cf18928bffcf329dd;Thu Oct 18 15:25:37 2007 +0000
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;87fe051f497dde0a8641689cf18928bffcf329dd;Thu Oct 18 15:25:37 2007 +0000
SameType;true;clojure.lang.Compiler.IfExpr.Parser;clojure.lang.Compiler.IfExpr.Parser;87fe051f497dde0a8641689cf18928bffcf329dd;Thu Oct 18 15:25:37 2007 +0000
SameMethod;true;clojure.lang.Compiler.IfExpr.Parser#parse(C, Object);clojure.lang.Compiler.IfExpr.Parser#parse(C, Object);87fe051f497dde0a8641689cf18928bffcf329dd;Thu Oct 18 15:25:37 2007 +0000
SameType;true;clojure.lang.Compiler.MapExpr;clojure.lang.Compiler.MapExpr;87fe051f497dde0a8641689cf18928bffcf329dd;Thu Oct 18 15:25:37 2007 +0000
SameMethod;true;clojure.lang.Compiler.MapExpr#parse(C, IPersistentMap);clojure.lang.Compiler.MapExpr#parse(C, IPersistentMap);87fe051f497dde0a8641689cf18928bffcf329dd;Thu Oct 18 15:25:37 2007 +0000
SameType;true;clojure.lang.Compiler.VectorExpr;clojure.lang.Compiler.VectorExpr;87fe051f497dde0a8641689cf18928bffcf329dd;Thu Oct 18 15:25:37 2007 +0000
SameMethod;true;clojure.lang.Compiler.VectorExpr#parse(C, IPersistentVector);clojure.lang.Compiler.VectorExpr#parse(C, IPersistentVector);87fe051f497dde0a8641689cf18928bffcf329dd;Thu Oct 18 15:25:37 2007 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;87fe051f497dde0a8641689cf18928bffcf329dd;Thu Oct 18 15:25:37 2007 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);87fe051f497dde0a8641689cf18928bffcf329dd;Thu Oct 18 15:25:37 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7604b15a0efb6ed83fd377693af97d7726c944e6;Fri Oct 19 15:45:46 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);7604b15a0efb6ed83fd377693af97d7726c944e6;Fri Oct 19 15:45:46 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;e1261423aa9d01e8c4dc2a4518ed86e0ada0ccd3;Sat Oct 20 17:44:18 2007 +0000
RenameClass;true;clojure.lang.PolyFn;clojure.lang.MultiFn;134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#assoc(Object, IFn);clojure.lang.MultiFn#assoc(Object, IFn);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#without(Object);clojure.lang.MultiFn#without(Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#withMeta(IPersistentMap);clojure.lang.MultiFn#withMeta(IPersistentMap);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#getFn(Object);clojure.lang.MultiFn#getFn(Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object);clojure.lang.MultiFn#invoke(Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object);clojure.lang.MultiFn#invoke(Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameMethod;true;clojure.lang.PolyFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);134557050ec4858b4d1ac2af8b600adbfe3f4f49;Sat Oct 20 17:58:46 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;068bc4439d03127b78cf223504a626dbd05e6b04;Sat Oct 20 18:36:02 2007 +0000
RenameMethod;true;clojure.lang.MultiFn#without(Object);clojure.lang.MultiFn#dissoc(Object);fe567065b55b47705a6292e6f993001e4ef31997;Sat Oct 20 20:09:54 2007 +0000
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;fe567065b55b47705a6292e6f993001e4ef31997;Sat Oct 20 20:09:54 2007 +0000
SameMethod;true;clojure.lang.MultiFn#assoc(Object, IFn);clojure.lang.MultiFn#assoc(Object, IFn);fe567065b55b47705a6292e6f993001e4ef31997;Sat Oct 20 20:09:54 2007 +0000
SameMethod;true;clojure.lang.MultiFn#withMeta(IPersistentMap);clojure.lang.MultiFn#withMeta(IPersistentMap);fe567065b55b47705a6292e6f993001e4ef31997;Sat Oct 20 20:09:54 2007 +0000
SameMethod;true;clojure.lang.MultiFn#getFn(Object);clojure.lang.MultiFn#getFn(Object);fe567065b55b47705a6292e6f993001e4ef31997;Sat Oct 20 20:09:54 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;17e416d3cb89416063fd01a7b5ee4b40ffd0bf0f;Sun Oct 21 13:01:28 2007 +0000
SameMethod;true;clojure.lang.Compiler#main(String[]);clojure.lang.Compiler#main(String[]);17e416d3cb89416063fd01a7b5ee4b40ffd0bf0f;Sun Oct 21 13:01:28 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;17e416d3cb89416063fd01a7b5ee4b40ffd0bf0f;Sun Oct 21 13:01:28 2007 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;6bd66ef67649eecd6012ce10f3da39c325ea4675;Sun Oct 21 19:24:07 2007 +0000
SameMethod;true;clojure.lang.Reflector#invokeMatchingMethod(List, Object, Object[]);clojure.lang.Reflector#invokeMatchingMethod(List, Object, Object[]);6bd66ef67649eecd6012ce10f3da39c325ea4675;Sun Oct 21 19:24:07 2007 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;a90826fc6f3cba8f4541a2a4e02739de6e7954a1;Mon Oct 22 12:14:16 2007 +0000
SameMethod;true;clojure.lang.Reflector#invokeMatchingMethod(List, Object, Object[]);clojure.lang.Reflector#invokeMatchingMethod(List, Object, Object[]);a90826fc6f3cba8f4541a2a4e02739de6e7954a1;Mon Oct 22 12:14:16 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7b1999c497f9e39c01a2b9f5d628f22df701c0e3;Sat Oct 27 12:07:21 2007 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;7b1999c497f9e39c01a2b9f5d628f22df701c0e3;Sat Oct 27 12:07:21 2007 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(int, String, String, IPersistentVector);clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(int, String, String, IPersistentVector);7b1999c497f9e39c01a2b9f5d628f22df701c0e3;Sat Oct 27 12:07:21 2007 +0000
SameType;true;clojure.lang.FnSeq;clojure.lang.FnSeq;7b1999c497f9e39c01a2b9f5d628f22df701c0e3;Sat Oct 27 12:07:21 2007 +0000
SameMethod;true;clojure.lang.FnSeq#rest();clojure.lang.FnSeq#rest();7b1999c497f9e39c01a2b9f5d628f22df701c0e3;Sat Oct 27 12:07:21 2007 +0000
SameMethod;true;clojure.lang.FnSeq#withMeta(IPersistentMap);clojure.lang.FnSeq#withMeta(IPersistentMap);7b1999c497f9e39c01a2b9f5d628f22df701c0e3;Sat Oct 27 12:07:21 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c2eec89e260d5d4ccfe6b722498c7a3fa22aa080;Mon Oct 29 01:40:17 2007 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;c2eec89e260d5d4ccfe6b722498c7a3fa22aa080;Mon Oct 29 01:40:17 2007 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#emitBoxReturn(FnExpr, GeneratorAdapter, Class);clojure.lang.Compiler.HostExpr#emitBoxReturn(FnExpr, GeneratorAdapter, Class);c2eec89e260d5d4ccfe6b722498c7a3fa22aa080;Mon Oct 29 01:40:17 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c5542c2946f3ebdb81840c47d2134200a79ab332;Tue Oct 30 00:14:34 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);c5542c2946f3ebdb81840c47d2134200a79ab332;Tue Oct 30 00:14:34 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;079b143bf2a7bf563b407d4e1dd688988bd2cf04;Sun Nov 18 02:16:49 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#stop(int);clojure.lang.LockingTransaction#stop(int);079b143bf2a7bf563b407d4e1dd688988bd2cf04;Sun Nov 18 02:16:49 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#run(IFn);clojure.lang.LockingTransaction#run(IFn);079b143bf2a7bf563b407d4e1dd688988bd2cf04;Sun Nov 18 02:16:49 2007 +0000
SameType;true;clojure.lang.Num;clojure.lang.Num;7baa797211e956e289bc4e736021161f2e8c085d;Sun Nov 18 16:02:28 2007 +0000
ExtractInterface;true;clojure.lang.Var;clojure.lang.IRef;4159ecf6dba6283f921ede53c35a78850acbed61;Sun Nov 18 21:10:48 2007 +0000
ExtractInterface;true;clojure.lang.Ref;clojure.lang.IRef;4159ecf6dba6283f921ede53c35a78850acbed61;Sun Nov 18 21:10:48 2007 +0000
RenameMethod;false;clojure.lang.Actor#getState();clojure.lang.Actor#get();4159ecf6dba6283f921ede53c35a78850acbed61;Sun Nov 18 21:10:48 2007 +0000
SameType;true;clojure.lang.Actor;clojure.lang.Actor;4159ecf6dba6283f921ede53c35a78850acbed61;Sun Nov 18 21:10:48 2007 +0000
SameType;true;clojure.lang.Actor.Action;clojure.lang.Actor.Action;4159ecf6dba6283f921ede53c35a78850acbed61;Sun Nov 18 21:10:48 2007 +0000
SameMethod;true;clojure.lang.Actor.Action#run();clojure.lang.Actor.Action#run();4159ecf6dba6283f921ede53c35a78850acbed61;Sun Nov 18 21:10:48 2007 +0000
SameMethod;true;clojure.lang.Actor#Actor(Object);clojure.lang.Actor#Actor(Object);4159ecf6dba6283f921ede53c35a78850acbed61;Sun Nov 18 21:10:48 2007 +0000
SameMethod;true;clojure.lang.Actor#doInvoke(Object, Object);clojure.lang.Actor#doInvoke(Object, Object);4159ecf6dba6283f921ede53c35a78850acbed61;Sun Nov 18 21:10:48 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;4159ecf6dba6283f921ede53c35a78850acbed61;Sun Nov 18 21:10:48 2007 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;4159ecf6dba6283f921ede53c35a78850acbed61;Sun Nov 18 21:10:48 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;4159ecf6dba6283f921ede53c35a78850acbed61;Sun Nov 18 21:10:48 2007 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;e8d476806bc50753b3a72c11db1c6a10b3ad8d8c;Wed Nov 21 16:39:34 2007 +0000
SameMethod;true;clojure.lang.Reflector#invokeMatchingMethod(List, Object, Object[]);clojure.lang.Reflector#invokeMatchingMethod(List, Object, Object[]);e8d476806bc50753b3a72c11db1c6a10b3ad8d8c;Wed Nov 21 16:39:34 2007 +0000
SameMethod;true;clojure.lang.Reflector#boxArg(Class, Object);clojure.lang.Reflector#boxArg(Class, Object);e8d476806bc50753b3a72c11db1c6a10b3ad8d8c;Wed Nov 21 16:39:34 2007 +0000
SameMethod;true;clojure.lang.Reflector#primBoxTypeMatch(Class, Class);clojure.lang.Reflector#primBoxTypeMatch(Class, Class);e8d476806bc50753b3a72c11db1c6a10b3ad8d8c;Wed Nov 21 16:39:34 2007 +0000
RenameMethod;true;clojure.lang.Actor#doInvoke(Object, Object);clojure.lang.Actor#send(IFn, ISeq);e40ebe81b7f21ba844c08e3411ce437557630a3f;Mon Nov 26 00:56:01 2007 +0000
SameType;true;clojure.lang.Actor;clojure.lang.Actor;e40ebe81b7f21ba844c08e3411ce437557630a3f;Mon Nov 26 00:56:01 2007 +0000
SameType;true;clojure.lang.Actor.Action;clojure.lang.Actor.Action;e40ebe81b7f21ba844c08e3411ce437557630a3f;Mon Nov 26 00:56:01 2007 +0000
SameMethod;true;clojure.lang.Actor.Action#run();clojure.lang.Actor.Action#run();e40ebe81b7f21ba844c08e3411ce437557630a3f;Mon Nov 26 00:56:01 2007 +0000
SameMethod;true;clojure.lang.Actor#Actor(Object);clojure.lang.Actor#Actor(Object);e40ebe81b7f21ba844c08e3411ce437557630a3f;Mon Nov 26 00:56:01 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;b1da9ba5440902d6de646f5b04f726c7778028e7;Wed Nov 28 14:09:23 2007 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;b1da9ba5440902d6de646f5b04f726c7778028e7;Wed Nov 28 14:09:23 2007 +0000
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;b1da9ba5440902d6de646f5b04f726c7778028e7;Wed Nov 28 14:09:23 2007 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);b1da9ba5440902d6de646f5b04f726c7778028e7;Wed Nov 28 14:09:23 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;5d6a640ae00f5694d5bd9acdf767c07e2b59f11d;Thu Nov 29 17:57:00 2007 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;5d6a640ae00f5694d5bd9acdf767c07e2b59f11d;Thu Nov 29 17:57:00 2007 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#emitUnboxArg(FnExpr, GeneratorAdapter, Class);clojure.lang.Compiler.HostExpr#emitUnboxArg(FnExpr, GeneratorAdapter, Class);5d6a640ae00f5694d5bd9acdf767c07e2b59f11d;Thu Nov 29 17:57:00 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;512576388103ce0170701909d597a6b74e9bcb4d;Thu Nov 29 17:57:49 2007 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);512576388103ce0170701909d597a6b74e9bcb4d;Thu Nov 29 17:57:49 2007 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;6d881e2b6f8169605759c4f835d160c70a24a7e2;Fri Nov 30 02:01:56 2007 +0000
SameMethod;true;clojure.lang.Reflector#boxArg(Class, Object);clojure.lang.Reflector#boxArg(Class, Object);6d881e2b6f8169605759c4f835d160c70a24a7e2;Fri Nov 30 02:01:56 2007 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;2c5046342298d7f8bf370c0dd5fc13e813936202;Fri Nov 30 13:11:15 2007 +0000
SameMethod;true;clojure.lang.Reflector#boxArg(Class, Object);clojure.lang.Reflector#boxArg(Class, Object);2c5046342298d7f8bf370c0dd5fc13e813936202;Fri Nov 30 13:11:15 2007 +0000
SameType;true;clojure.lang.BigNum;clojure.lang.BigNum;ce3b83c95f6758dbb40c031eb131a09e6650173a;Sun Dec 2 03:50:12 2007 +0000
SameMethod;true;clojure.lang.BigNum#truncateBy(RatioNum);clojure.lang.BigNum#truncateBy(RatioNum);ce3b83c95f6758dbb40c031eb131a09e6650173a;Sun Dec 2 03:50:12 2007 +0000
SameType;true;clojure.lang.DoubleNum;clojure.lang.DoubleNum;ce3b83c95f6758dbb40c031eb131a09e6650173a;Sun Dec 2 03:50:12 2007 +0000
SameType;true;clojure.lang.FixNum;clojure.lang.FixNum;ce3b83c95f6758dbb40c031eb131a09e6650173a;Sun Dec 2 03:50:12 2007 +0000
SameMethod;true;clojure.lang.FixNum#truncateBy(RatioNum);clojure.lang.FixNum#truncateBy(RatioNum);ce3b83c95f6758dbb40c031eb131a09e6650173a;Sun Dec 2 03:50:12 2007 +0000
SameType;true;clojure.lang.Num;clojure.lang.Num;ce3b83c95f6758dbb40c031eb131a09e6650173a;Sun Dec 2 03:50:12 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;ce3b83c95f6758dbb40c031eb131a09e6650173a;Sun Dec 2 03:50:12 2007 +0000
SameMethod;true;clojure.lang.RT#setValues(Object[]);clojure.lang.RT#setValues(Object[]);ce3b83c95f6758dbb40c031eb131a09e6650173a;Sun Dec 2 03:50:12 2007 +0000
SameType;true;clojure.lang.RatioNum;clojure.lang.RatioNum;ce3b83c95f6758dbb40c031eb131a09e6650173a;Sun Dec 2 03:50:12 2007 +0000
SameMethod;true;clojure.lang.RatioNum#truncateBy(int);clojure.lang.RatioNum#truncateBy(int);ce3b83c95f6758dbb40c031eb131a09e6650173a;Sun Dec 2 03:50:12 2007 +0000
SameMethod;true;clojure.lang.RatioNum#truncateBy(BigInteger);clojure.lang.RatioNum#truncateBy(BigInteger);ce3b83c95f6758dbb40c031eb131a09e6650173a;Sun Dec 2 03:50:12 2007 +0000
SameMethod;true;clojure.lang.RatioNum#truncateBy(RatioNum);clojure.lang.RatioNum#truncateBy(RatioNum);ce3b83c95f6758dbb40c031eb131a09e6650173a;Sun Dec 2 03:50:12 2007 +0000
ExtractMethod;true;clojure.lang.Actor.Action#run();clojure.lang.Actor#commute(IFn, ISeq);b2bd83819314795cf43defcd361d77271467ca8d;Sun Dec 2 03:57:35 2007 +0000
SameType;true;clojure.lang.Actor;clojure.lang.Actor;b2bd83819314795cf43defcd361d77271467ca8d;Sun Dec 2 03:57:35 2007 +0000
SameType;true;clojure.lang.Actor.Action;clojure.lang.Actor.Action;b2bd83819314795cf43defcd361d77271467ca8d;Sun Dec 2 03:57:35 2007 +0000
SameMethod;true;clojure.lang.Actor.Action#run();clojure.lang.Actor.Action#run();b2bd83819314795cf43defcd361d77271467ca8d;Sun Dec 2 03:57:35 2007 +0000
RenameClass;true;clojure.lang.Ref;clojure.lang.TRef;89bf1ae672b543ad15789533e18954603df2e25b;Sun Dec 2 15:55:47 2007 +0000
RenameMethod;true;clojure.lang.Actor#change(IFn, ISeq);clojure.lang.Actor#alter(IFn, ISeq);89bf1ae672b543ad15789533e18954603df2e25b;Sun Dec 2 15:55:47 2007 +0000
SameType;true;clojure.lang.Actor;clojure.lang.Actor;89bf1ae672b543ad15789533e18954603df2e25b;Sun Dec 2 15:55:47 2007 +0000
SameType;true;clojure.lang.Actor.Action;clojure.lang.Actor.Action;89bf1ae672b543ad15789533e18954603df2e25b;Sun Dec 2 15:55:47 2007 +0000
SameMethod;true;clojure.lang.Actor.Action#run();clojure.lang.Actor.Action#run();89bf1ae672b543ad15789533e18954603df2e25b;Sun Dec 2 15:55:47 2007 +0000
SameMethod;true;clojure.lang.Actor#commute(IFn, ISeq);clojure.lang.Actor#commute(IFn, ISeq);89bf1ae672b543ad15789533e18954603df2e25b;Sun Dec 2 15:55:47 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;89bf1ae672b543ad15789533e18954603df2e25b;Sun Dec 2 15:55:47 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#run(IFn);clojure.lang.LockingTransaction#run(IFn);89bf1ae672b543ad15789533e18954603df2e25b;Sun Dec 2 15:55:47 2007 +0000
RenameClass;true;clojure.lang.IRef;clojure.lang.Ref;8779cee7968ca6479b572854afb4095a21e33f07;Sun Dec 2 16:01:55 2007 +0000
SameType;true;clojure.lang.Actor;clojure.lang.Actor;8779cee7968ca6479b572854afb4095a21e33f07;Sun Dec 2 16:01:55 2007 +0000
SameType;true;clojure.lang.TRef;clojure.lang.TRef;8779cee7968ca6479b572854afb4095a21e33f07;Sun Dec 2 16:01:55 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;8779cee7968ca6479b572854afb4095a21e33f07;Sun Dec 2 16:01:55 2007 +0000
RenameClass;true;clojure.lang.Actor;clojure.lang.IRef;340b89a20353fb118a923fcf0109b2feeeae88e0;Sun Dec 2 16:17:12 2007 +0000
SameType;true;clojure.lang.Actor.Action;clojure.lang.IRef.Action;340b89a20353fb118a923fcf0109b2feeeae88e0;Sun Dec 2 16:17:12 2007 +0000
SameMethod;true;clojure.lang.Actor.Action#run();clojure.lang.IRef.Action#run();340b89a20353fb118a923fcf0109b2feeeae88e0;Sun Dec 2 16:17:12 2007 +0000
SameMethod;true;clojure.lang.Actor#setState(Object);clojure.lang.IRef#setState(Object);340b89a20353fb118a923fcf0109b2feeeae88e0;Sun Dec 2 16:17:12 2007 +0000
SameMethod;true;clojure.lang.Actor#alter(IFn, ISeq);clojure.lang.IRef#alter(IFn, ISeq);340b89a20353fb118a923fcf0109b2feeeae88e0;Sun Dec 2 16:17:12 2007 +0000
SameMethod;true;clojure.lang.Actor#commute(IFn, ISeq);clojure.lang.IRef#commute(IFn, ISeq);340b89a20353fb118a923fcf0109b2feeeae88e0;Sun Dec 2 16:17:12 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;340b89a20353fb118a923fcf0109b2feeeae88e0;Sun Dec 2 16:17:12 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#run(IFn);clojure.lang.LockingTransaction#run(IFn);340b89a20353fb118a923fcf0109b2feeeae88e0;Sun Dec 2 16:17:12 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;340b89a20353fb118a923fcf0109b2feeeae88e0;Sun Dec 2 16:17:12 2007 +0000
SameType;true;clojure.lang.IRef;clojure.lang.IRef;139ddd146f2a272b7ddda397f54b501ff499c643;Sun Dec 2 18:18:00 2007 +0000
SameMethod;true;clojure.lang.IRef#doAlter(IFn, ISeq);clojure.lang.IRef#doAlter(IFn, ISeq);139ddd146f2a272b7ddda397f54b501ff499c643;Sun Dec 2 18:18:00 2007 +0000
SameMethod;true;clojure.lang.IRef#alter(IFn, ISeq);clojure.lang.IRef#alter(IFn, ISeq);139ddd146f2a272b7ddda397f54b501ff499c643;Sun Dec 2 18:18:00 2007 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;139ddd146f2a272b7ddda397f54b501ff499c643;Sun Dec 2 18:18:00 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;139ddd146f2a272b7ddda397f54b501ff499c643;Sun Dec 2 18:18:00 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#run(IFn);clojure.lang.LockingTransaction#run(IFn);139ddd146f2a272b7ddda397f54b501ff499c643;Sun Dec 2 18:18:00 2007 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;139ddd146f2a272b7ddda397f54b501ff499c643;Sun Dec 2 18:18:00 2007 +0000
SameType;true;clojure.lang.TRef;clojure.lang.TRef;139ddd146f2a272b7ddda397f54b501ff499c643;Sun Dec 2 18:18:00 2007 +0000
SameMethod;true;clojure.lang.TRef#get();clojure.lang.TRef#get();139ddd146f2a272b7ddda397f54b501ff499c643;Sun Dec 2 18:18:00 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;139ddd146f2a272b7ddda397f54b501ff499c643;Sun Dec 2 18:18:00 2007 +0000
RenameMethod;false;clojure.lang.IRef#commute(IFn, ISeq);clojure.lang.IRef#send(IFn, ISeq);d647fbb3dc2027e837077cd94aaa9b2ffe3689eb;Sun Dec 2 20:25:00 2007 +0000
SameType;true;clojure.lang.IRef;clojure.lang.IRef;d647fbb3dc2027e837077cd94aaa9b2ffe3689eb;Sun Dec 2 20:25:00 2007 +0000
SameMethod;true;clojure.lang.IRef#alter(IFn, ISeq);clojure.lang.IRef#alter(IFn, ISeq);d647fbb3dc2027e837077cd94aaa9b2ffe3689eb;Sun Dec 2 20:25:00 2007 +0000
SameMethod;true;clojure.lang.IRef#set(Object);clojure.lang.IRef#set(Object);d647fbb3dc2027e837077cd94aaa9b2ffe3689eb;Sun Dec 2 20:25:00 2007 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;d647fbb3dc2027e837077cd94aaa9b2ffe3689eb;Sun Dec 2 20:25:00 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;d647fbb3dc2027e837077cd94aaa9b2ffe3689eb;Sun Dec 2 20:25:00 2007 +0000
RenameClass;true;clojure.lang.IRef;clojure.lang.Agent;b84042c0bc9901954864335dd1bee007e8bcdcc1;Mon Dec 3 18:59:44 2007 +0000
RenameMethod;true;clojure.lang.IRef#send(IFn, ISeq);clojure.lang.Agent#dispatch(IFn, ISeq);b84042c0bc9901954864335dd1bee007e8bcdcc1;Mon Dec 3 18:59:44 2007 +0000
InlineMethod;true;clojure.lang.IRef#doAlter(IFn, ISeq);clojure.lang.Agent.Action#run();b84042c0bc9901954864335dd1bee007e8bcdcc1;Mon Dec 3 18:59:44 2007 +0000
SameType;true;clojure.lang.IRef.Action;clojure.lang.Agent.Action;b84042c0bc9901954864335dd1bee007e8bcdcc1;Mon Dec 3 18:59:44 2007 +0000
SameMethod;true;clojure.lang.IRef.Action#run();clojure.lang.Agent.Action#run();b84042c0bc9901954864335dd1bee007e8bcdcc1;Mon Dec 3 18:59:44 2007 +0000
SameMethod;true;clojure.lang.IRef#setState(Object);clojure.lang.Agent#setState(Object);b84042c0bc9901954864335dd1bee007e8bcdcc1;Mon Dec 3 18:59:44 2007 +0000
SameMethod;true;clojure.lang.IRef#get();clojure.lang.Agent#get();b84042c0bc9901954864335dd1bee007e8bcdcc1;Mon Dec 3 18:59:44 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;b84042c0bc9901954864335dd1bee007e8bcdcc1;Mon Dec 3 18:59:44 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#run(IFn);clojure.lang.LockingTransaction#run(IFn);b84042c0bc9901954864335dd1bee007e8bcdcc1;Mon Dec 3 18:59:44 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;b84042c0bc9901954864335dd1bee007e8bcdcc1;Mon Dec 3 18:59:44 2007 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;b84042c0bc9901954864335dd1bee007e8bcdcc1;Mon Dec 3 18:59:44 2007 +0000
RenameClass;true;clojure.lang.Ref;clojure.lang.IRef;dacf426c70b836581ab6a505e6ae45355582122f;Mon Dec 3 19:01:23 2007 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;dacf426c70b836581ab6a505e6ae45355582122f;Mon Dec 3 19:01:23 2007 +0000
SameType;true;clojure.lang.TRef;clojure.lang.TRef;dacf426c70b836581ab6a505e6ae45355582122f;Mon Dec 3 19:01:23 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;dacf426c70b836581ab6a505e6ae45355582122f;Mon Dec 3 19:01:23 2007 +0000
RenameClass;true;clojure.lang.TRef;clojure.lang.Ref;0822f76b347fa29643ad8de5f4b5e15434145fab;Mon Dec 3 19:04:26 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;0822f76b347fa29643ad8de5f4b5e15434145fab;Mon Dec 3 19:04:26 2007 +0000
SameMethod;true;clojure.lang.LockingTransaction#run(IFn);clojure.lang.LockingTransaction#run(IFn);0822f76b347fa29643ad8de5f4b5e15434145fab;Mon Dec 3 19:04:26 2007 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;78a8b5b34276cdffed7498edab4c8ae6cfbdaa83;Mon Dec 3 20:26:24 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;a5fb196c055839ab90bb14c81d80541bff560ac9;Thu Dec 6 14:05:33 2007 +0000
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;a5fb196c055839ab90bb14c81d80541bff560ac9;Thu Dec 6 14:05:33 2007 +0000
SameMethod;true;clojure.lang.Compiler.LetExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.LetExpr#emit(C, FnExpr, GeneratorAdapter);a5fb196c055839ab90bb14c81d80541bff560ac9;Thu Dec 6 14:05:33 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;3a5404096c707d86145a5e809701645b1036788d;Thu Dec 6 14:25:22 2007 +0000
SameMethod;true;clojure.lang.RT#seq(Object);clojure.lang.RT#seq(Object);3a5404096c707d86145a5e809701645b1036788d;Thu Dec 6 14:25:22 2007 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;999b2d83a37f98c0c2384a7e9f8a41f53665075a;Thu Dec 6 15:34:24 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;b5351815b3ac055168c218992a384d97646f0df5;Fri Dec 7 13:15:45 2007 +0000
SameMethod;true;clojure.lang.Compiler#loadFile(String);clojure.lang.Compiler#loadFile(String);b5351815b3ac055168c218992a384d97646f0df5;Fri Dec 7 13:15:45 2007 +0000
SameMethod;true;clojure.lang.Compiler#load(InputStream);clojure.lang.Compiler#load(InputStream);b5351815b3ac055168c218992a384d97646f0df5;Fri Dec 7 13:15:45 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e953a3bbe78362b8d180f72400af3cc6d3e6c641;Fri Dec 7 13:23:21 2007 +0000
SameMethod;true;clojure.lang.Compiler#loadFile(String);clojure.lang.Compiler#loadFile(String);e953a3bbe78362b8d180f72400af3cc6d3e6c641;Fri Dec 7 13:23:21 2007 +0000
ExtractMethod;true;clojure.lang.MapEntry#valAt(Object);clojure.lang.MapEntry#valAt(Object, Object);14287172ee1ea7549e83e115e8b943a94c444736;Fri Dec 7 13:43:02 2007 +0000
ExtractMethod;true;clojure.lang.PersistentArrayMap#valAt(Object);clojure.lang.PersistentArrayMap#valAt(Object, Object);14287172ee1ea7549e83e115e8b943a94c444736;Fri Dec 7 13:43:02 2007 +0000
ExtractMethod;true;clojure.lang.PersistentHashMap#valAt(Object);clojure.lang.PersistentHashMap#valAt(Object, Object);14287172ee1ea7549e83e115e8b943a94c444736;Fri Dec 7 13:43:02 2007 +0000
ExtractMethod;true;clojure.lang.PersistentTreeMap#valAt(Object);clojure.lang.PersistentTreeMap#valAt(Object, Object);14287172ee1ea7549e83e115e8b943a94c444736;Fri Dec 7 13:43:02 2007 +0000
SameType;true;clojure.lang.IPersistentMap;clojure.lang.IPersistentMap;14287172ee1ea7549e83e115e8b943a94c444736;Fri Dec 7 13:43:02 2007 +0000
SameType;true;clojure.lang.MapEntry;clojure.lang.MapEntry;14287172ee1ea7549e83e115e8b943a94c444736;Fri Dec 7 13:43:02 2007 +0000
SameMethod;true;clojure.lang.MapEntry#valAt(Object);clojure.lang.MapEntry#valAt(Object);14287172ee1ea7549e83e115e8b943a94c444736;Fri Dec 7 13:43:02 2007 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;14287172ee1ea7549e83e115e8b943a94c444736;Fri Dec 7 13:43:02 2007 +0000
SameMethod;true;clojure.lang.PersistentArrayMap#valAt(Object);clojure.lang.PersistentArrayMap#valAt(Object);14287172ee1ea7549e83e115e8b943a94c444736;Fri Dec 7 13:43:02 2007 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;14287172ee1ea7549e83e115e8b943a94c444736;Fri Dec 7 13:43:02 2007 +0000
SameMethod;true;clojure.lang.PersistentHashMap#valAt(Object);clojure.lang.PersistentHashMap#valAt(Object);14287172ee1ea7549e83e115e8b943a94c444736;Fri Dec 7 13:43:02 2007 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;14287172ee1ea7549e83e115e8b943a94c444736;Fri Dec 7 13:43:02 2007 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#valAt(Object);clojure.lang.PersistentTreeMap#valAt(Object);14287172ee1ea7549e83e115e8b943a94c444736;Fri Dec 7 13:43:02 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;14287172ee1ea7549e83e115e8b943a94c444736;Fri Dec 7 13:43:02 2007 +0000
SameMethod;true;clojure.lang.RT#seq(Object);clojure.lang.RT#seq(Object);14287172ee1ea7549e83e115e8b943a94c444736;Fri Dec 7 13:43:02 2007 +0000
SameType;true;clojure.lang.IMapEntry;clojure.lang.IMapEntry;1be538f157cb9e8138dd15ea5cfb2acc5d288755;Fri Dec 7 14:36:12 2007 +0000
SameType;true;clojure.lang.MapEntry;clojure.lang.MapEntry;1be538f157cb9e8138dd15ea5cfb2acc5d288755;Fri Dec 7 14:36:12 2007 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;1be538f157cb9e8138dd15ea5cfb2acc5d288755;Fri Dec 7 14:36:12 2007 +0000
SameType;true;clojure.lang.PersistentArrayMap.Seq;clojure.lang.PersistentArrayMap.Seq;1be538f157cb9e8138dd15ea5cfb2acc5d288755;Fri Dec 7 14:36:12 2007 +0000
SameType;true;clojure.lang.PersistentArrayMap.Iter;clojure.lang.PersistentArrayMap.Iter;1be538f157cb9e8138dd15ea5cfb2acc5d288755;Fri Dec 7 14:36:12 2007 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;1be538f157cb9e8138dd15ea5cfb2acc5d288755;Fri Dec 7 14:36:12 2007 +0000
SameType;true;clojure.lang.PersistentTreeMap.Node;clojure.lang.PersistentTreeMap.Node;1be538f157cb9e8138dd15ea5cfb2acc5d288755;Fri Dec 7 14:36:12 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;1afd217ec5c496c5f11bedf28a3424b262d8e626;Fri Dec 7 22:40:20 2007 +0000
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;1afd217ec5c496c5f11bedf28a3424b262d8e626;Fri Dec 7 22:40:20 2007 +0000
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;1afd217ec5c496c5f11bedf28a3424b262d8e626;Fri Dec 7 22:40:20 2007 +0000
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);1afd217ec5c496c5f11bedf28a3424b262d8e626;Fri Dec 7 22:40:20 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;a273729aec06a817e077cb4c2fc1d3b7f517c3dd;Sat Dec 8 17:51:42 2007 +0000
SameMethod;true;clojure.lang.RT#seq(Object);clojure.lang.RT#seq(Object);a273729aec06a817e077cb4c2fc1d3b7f517c3dd;Sat Dec 8 17:51:42 2007 +0000
RenameMethod;false;clojure.lang.PersistentTreeMap#compare(Object, Object);clojure.lang.PersistentTreeMap#doCompare(Object, Object);3e01095b3f355c2f597dd6efc2a049caf682f5d1;Sun Dec 9 14:24:08 2007 +0000
SameType;true;clojure.lang.AFn;clojure.lang.AFn;3e01095b3f355c2f597dd6efc2a049caf682f5d1;Sun Dec 9 14:24:08 2007 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;3e01095b3f355c2f597dd6efc2a049caf682f5d1;Sun Dec 9 14:24:08 2007 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#entryAt(Object);clojure.lang.PersistentTreeMap#entryAt(Object);3e01095b3f355c2f597dd6efc2a049caf682f5d1;Sun Dec 9 14:24:08 2007 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#add(Node, Object, Object, Box);clojure.lang.PersistentTreeMap#add(Node, Object, Object, Box);3e01095b3f355c2f597dd6efc2a049caf682f5d1;Sun Dec 9 14:24:08 2007 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#remove(Node, Object, Box);clojure.lang.PersistentTreeMap#remove(Node, Object, Box);3e01095b3f355c2f597dd6efc2a049caf682f5d1;Sun Dec 9 14:24:08 2007 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#replace(Node, Object, Object);clojure.lang.PersistentTreeMap#replace(Node, Object, Object);3e01095b3f355c2f597dd6efc2a049caf682f5d1;Sun Dec 9 14:24:08 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;e80506c0a027365a557ae0a9262399e11338d68a;Mon Dec 10 12:50:10 2007 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);e80506c0a027365a557ae0a9262399e11338d68a;Mon Dec 10 12:50:10 2007 +0000
ExtractMethod;true;clojure.lang.PersistentVector#valAt(Object);clojure.lang.PersistentVector#valAt(Object, Object);e997be6fcd8fa7f4529de3767e6cd799b6687416;Mon Dec 10 17:06:05 2007 +0000
SameType;true;clojure.lang.Associative;clojure.lang.Associative;e997be6fcd8fa7f4529de3767e6cd799b6687416;Mon Dec 10 17:06:05 2007 +0000
SameType;true;clojure.lang.IPersistentMap;clojure.lang.IPersistentMap;e997be6fcd8fa7f4529de3767e6cd799b6687416;Mon Dec 10 17:06:05 2007 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;e997be6fcd8fa7f4529de3767e6cd799b6687416;Mon Dec 10 17:06:05 2007 +0000
SameMethod;true;clojure.lang.PersistentVector#valAt(Object);clojure.lang.PersistentVector#valAt(Object);e997be6fcd8fa7f4529de3767e6cd799b6687416;Mon Dec 10 17:06:05 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;e997be6fcd8fa7f4529de3767e6cd799b6687416;Mon Dec 10 17:06:05 2007 +0000
SameMethod;true;clojure.lang.RT#get(Object, Object, Object);clojure.lang.RT#get(Object, Object, Object);e997be6fcd8fa7f4529de3767e6cd799b6687416;Mon Dec 10 17:06:05 2007 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;b41c0d9f7eefbe8541adf68e43f2fcd365466812;Tue Dec 11 11:40:27 2007 +0000
SameType;true;clojure.lang.Agent.Action;clojure.lang.Agent.Action;b41c0d9f7eefbe8541adf68e43f2fcd365466812;Tue Dec 11 11:40:27 2007 +0000
SameMethod;true;clojure.lang.Agent.Action#run();clojure.lang.Agent.Action#run();b41c0d9f7eefbe8541adf68e43f2fcd365466812;Tue Dec 11 11:40:27 2007 +0000
SameMethod;true;clojure.lang.Agent#enqueue(Action);clojure.lang.Agent#enqueue(Action);b41c0d9f7eefbe8541adf68e43f2fcd365466812;Tue Dec 11 11:40:27 2007 +0000
ExtractMethod;true;clojure.lang.Agent.Action#run();clojure.lang.Agent.Action#doRun(Action);c2d824b9bf74523156a47ffae27eb2a7c76b3074;Tue Dec 11 21:03:27 2007 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;c2d824b9bf74523156a47ffae27eb2a7c76b3074;Tue Dec 11 21:03:27 2007 +0000
SameType;true;clojure.lang.Agent.Action;clojure.lang.Agent.Action;c2d824b9bf74523156a47ffae27eb2a7c76b3074;Tue Dec 11 21:03:27 2007 +0000
SameMethod;true;clojure.lang.Agent.Action#run();clojure.lang.Agent.Action#run();c2d824b9bf74523156a47ffae27eb2a7c76b3074;Tue Dec 11 21:03:27 2007 +0000
SameMethod;true;clojure.lang.Agent#enqueue(Action);clojure.lang.Agent#enqueue(Action);c2d824b9bf74523156a47ffae27eb2a7c76b3074;Tue Dec 11 21:03:27 2007 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;013ec9ebc82d6e3376e4e7b515ad4e3145fc9019;Wed Dec 12 14:29:13 2007 +0000
SameMethod;true;clojure.lang.PersistentList#pop();clojure.lang.PersistentList#pop();013ec9ebc82d6e3376e4e7b515ad4e3145fc9019;Wed Dec 12 14:29:13 2007 +0000
SameMethod;true;clojure.lang.PersistentList#withMeta(IPersistentMap);clojure.lang.PersistentList#withMeta(IPersistentMap);013ec9ebc82d6e3376e4e7b515ad4e3145fc9019;Wed Dec 12 14:29:13 2007 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;aec380c321f7fd8d28b2cd45082a3502208a01c2;Wed Dec 12 23:24:28 2007 +0000
SameMethod;true;clojure.lang.Agent#enqueue(Action);clojure.lang.Agent#enqueue(Action);aec380c321f7fd8d28b2cd45082a3502208a01c2;Wed Dec 12 23:24:28 2007 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;1c3bf71000b2a531995557110e04cd5ff8c22535;Thu Dec 13 00:14:50 2007 +0000
SameMethod;true;clojure.lang.PersistentVector#equals(Object);clojure.lang.PersistentVector#equals(Object);1c3bf71000b2a531995557110e04cd5ff8c22535;Thu Dec 13 00:14:50 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7be0a43dd5c83333de8e10c010f4d04f9ce4087e;Thu Dec 13 16:43:15 2007 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;7be0a43dd5c83333de8e10c010f4d04f9ce4087e;Thu Dec 13 16:43:15 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();7be0a43dd5c83333de8e10c010f4d04f9ce4087e;Thu Dec 13 16:43:15 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3c2c1e9f4517bc58314a40e9c27d7f5b6c3e5e07;Thu Dec 13 16:44:27 2007 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;3c2c1e9f4517bc58314a40e9c27d7f5b6c3e5e07;Thu Dec 13 16:44:27 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();3c2c1e9f4517bc58314a40e9c27d7f5b6c3e5e07;Thu Dec 13 16:44:27 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;59fede97ed5a7bb8f2531dd9bcbd08f36139e4ad;Thu Dec 13 17:14:44 2007 +0000
ExtractMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#isMacro(Object);e86035f9f9fb002b247bd7ae60c8d6fb190c8f4c;Thu Dec 13 17:33:40 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e86035f9f9fb002b247bd7ae60c8d6fb190c8f4c;Thu Dec 13 17:33:40 2007 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);e86035f9f9fb002b247bd7ae60c8d6fb190c8f4c;Thu Dec 13 17:33:40 2007 +0000
SameType;true;clojure.lang.BigNum;clojure.lang.BigNum;cf7c21f908de52a3c73e5339765cebe73b54b783;Thu Dec 13 19:26:06 2007 +0000
SameType;true;clojure.lang.FixNum;clojure.lang.FixNum;cf7c21f908de52a3c73e5339765cebe73b54b783;Thu Dec 13 19:26:06 2007 +0000
SameType;true;clojure.lang.IntegerNum;clojure.lang.IntegerNum;cf7c21f908de52a3c73e5339765cebe73b54b783;Thu Dec 13 19:26:06 2007 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;981cda7c8e8dec5e3343fcd95e3bb7cf12921cdc;Fri Dec 14 16:44:54 2007 +0000
SameMethod;true;clojure.lang.Reflector#getStaticField(String, String);clojure.lang.Reflector#getStaticField(String, String);981cda7c8e8dec5e3343fcd95e3bb7cf12921cdc;Fri Dec 14 16:44:54 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7c25fa0b6a1f90d78f489e04e2f9c43c980d4a93;Fri Dec 14 16:45:43 2007 +0000
SameType;true;clojure.lang.Compiler.StaticFieldExpr;clojure.lang.Compiler.StaticFieldExpr;7c25fa0b6a1f90d78f489e04e2f9c43c980d4a93;Fri Dec 14 16:45:43 2007 +0000
SameMethod;true;clojure.lang.Compiler.StaticFieldExpr#StaticFieldExpr(int, String, String);clojure.lang.Compiler.StaticFieldExpr#StaticFieldExpr(int, String, String);7c25fa0b6a1f90d78f489e04e2f9c43c980d4a93;Fri Dec 14 16:45:43 2007 +0000
SameMethod;true;clojure.lang.Compiler.StaticFieldExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.StaticFieldExpr#emit(C, FnExpr, GeneratorAdapter);7c25fa0b6a1f90d78f489e04e2f9c43c980d4a93;Fri Dec 14 16:45:43 2007 +0000
SameType;true;clojure.lang.IPersistentMap;clojure.lang.IPersistentMap;c0d142ca0b05be6249872c05fe1bff2fd948bd81;Sun Dec 16 22:22:09 2007 +0000
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;c0d142ca0b05be6249872c05fe1bff2fd948bd81;Sun Dec 16 22:22:09 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;c0d142ca0b05be6249872c05fe1bff2fd948bd81;Sun Dec 16 22:22:09 2007 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;a0d9ca6b9746767376ef8546889d7c44a9332ba5;Mon Dec 17 01:51:42 2007 +0000
SameMethod;true;clojure.lang.ASeq#count();clojure.lang.ASeq#count();a0d9ca6b9746767376ef8546889d7c44a9332ba5;Mon Dec 17 01:51:42 2007 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;a0d9ca6b9746767376ef8546889d7c44a9332ba5;Mon Dec 17 01:51:42 2007 +0000
SameType;true;clojure.lang.PersistentList.EmptyList;clojure.lang.PersistentList.EmptyList;a0d9ca6b9746767376ef8546889d7c44a9332ba5;Mon Dec 17 01:51:42 2007 +0000
SameType;true;clojure.lang.FnSeq;clojure.lang.FnSeq;06d6a92e35bc4a28220fd561d6dbb7b684887240;Mon Dec 17 02:51:32 2007 +0000
SameMethod;true;clojure.lang.FnSeq#rest();clojure.lang.FnSeq#rest();06d6a92e35bc4a28220fd561d6dbb7b684887240;Mon Dec 17 02:51:32 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;7e0466d0699b23a6da4557597d3489eb9c54a36b;Mon Dec 17 13:06:29 2007 +0000
SameMethod;true;clojure.lang.RT#intCast(Object);clojure.lang.RT#intCast(Object);7e0466d0699b23a6da4557597d3489eb9c54a36b;Mon Dec 17 13:06:29 2007 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;742bf71003d62c9d41881aa7c59740993a749243;Mon Dec 17 14:43:43 2007 +0000
SameMethod;true;clojure.lang.PersistentVector#pop();clojure.lang.PersistentVector#pop();742bf71003d62c9d41881aa7c59740993a749243;Mon Dec 17 14:43:43 2007 +0000
SameType;true;clojure.lang.ProxyHandler;clojure.lang.ProxyHandler;0f234b3967cea2450ec86b6e21f17642e12ea939;Tue Dec 18 12:55:15 2007 +0000
SameMethod;true;clojure.lang.ProxyHandler#invoke(Object, Method, Object[]);clojure.lang.ProxyHandler#invoke(Object, Method, Object[]);0f234b3967cea2450ec86b6e21f17642e12ea939;Tue Dec 18 12:55:15 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;211b1cf3703b4f935c2079db9b52802a528e135d;Tue Dec 18 15:56:24 2007 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);211b1cf3703b4f935c2079db9b52802a528e135d;Tue Dec 18 15:56:24 2007 +0000
SameType;true;clojure.lang.PersistentStructMap;clojure.lang.PersistentStructMap;563ce9095b9b2610a845123dec1d8e2884177aa0;Tue Dec 18 17:50:32 2007 +0000
MoveClass;true;clojure.lang.PersistentVector.RSeq;clojure.lang.APersistentVector.RSeq;b876bc01060191c4fecef062bdddd190c79fd83f;Tue Dec 18 18:14:30 2007 +0000
ExtractSuperclass;true;clojure.lang.PersistentVector;clojure.lang.APersistentVector;b876bc01060191c4fecef062bdddd190c79fd83f;Tue Dec 18 18:14:30 2007 +0000
MoveMethod;false;clojure.lang.PersistentVector.Seq#first();clojure.lang.APersistentVector.Seq#first();b876bc01060191c4fecef062bdddd190c79fd83f;Tue Dec 18 18:14:30 2007 +0000
MoveMethod;false;clojure.lang.PersistentVector.Seq#index();clojure.lang.APersistentVector.Seq#index();b876bc01060191c4fecef062bdddd190c79fd83f;Tue Dec 18 18:14:30 2007 +0000
MoveMethod;true;clojure.lang.PersistentVector.Seq#withMeta(IPersistentMap);clojure.lang.APersistentVector.Seq#withMeta(IPersistentMap);b876bc01060191c4fecef062bdddd190c79fd83f;Tue Dec 18 18:14:30 2007 +0000
MoveMethod;true;clojure.lang.PersistentVector.Seq#rest();clojure.lang.APersistentVector.Seq#rest();b876bc01060191c4fecef062bdddd190c79fd83f;Tue Dec 18 18:14:30 2007 +0000
MoveMethod;true;clojure.lang.PersistentVector.Seq#count();clojure.lang.APersistentVector.Seq#count();b876bc01060191c4fecef062bdddd190c79fd83f;Tue Dec 18 18:14:30 2007 +0000
SameMethod;true;clojure.lang.PersistentVector.RSeq#rest();clojure.lang.APersistentVector.RSeq#rest();b876bc01060191c4fecef062bdddd190c79fd83f;Tue Dec 18 18:14:30 2007 +0000
SameMethod;true;clojure.lang.PersistentVector.RSeq#withMeta(IPersistentMap);clojure.lang.APersistentVector.RSeq#withMeta(IPersistentMap);b876bc01060191c4fecef062bdddd190c79fd83f;Tue Dec 18 18:14:30 2007 +0000
SameType;true;clojure.lang.IPersistentVector;clojure.lang.IPersistentVector;b876bc01060191c4fecef062bdddd190c79fd83f;Tue Dec 18 18:14:30 2007 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;b876bc01060191c4fecef062bdddd190c79fd83f;Tue Dec 18 18:14:30 2007 +0000
SameMethod;true;clojure.lang.PersistentVector#PersistentVector(int, int, Object[]);clojure.lang.PersistentVector#PersistentVector(int, int, Object[]);b876bc01060191c4fecef062bdddd190c79fd83f;Tue Dec 18 18:14:30 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;b876bc01060191c4fecef062bdddd190c79fd83f;Tue Dec 18 18:14:30 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3d5084fe755c815a09211e2678a89df8e50ea114;Thu Dec 20 20:04:45 2007 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;3d5084fe755c815a09211e2678a89df8e50ea114;Thu Dec 20 20:04:45 2007 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr#eval();clojure.lang.Compiler.DefExpr#eval();3d5084fe755c815a09211e2678a89df8e50ea114;Thu Dec 20 20:04:45 2007 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.DefExpr#emit(C, FnExpr, GeneratorAdapter);3d5084fe755c815a09211e2678a89df8e50ea114;Thu Dec 20 20:04:45 2007 +0000
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;3d5084fe755c815a09211e2678a89df8e50ea114;Thu Dec 20 20:04:45 2007 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);3d5084fe755c815a09211e2678a89df8e50ea114;Thu Dec 20 20:04:45 2007 +0000
SameType;true;clojure.lang.Compiler.VarExpr;clojure.lang.Compiler.VarExpr;3d5084fe755c815a09211e2678a89df8e50ea114;Thu Dec 20 20:04:45 2007 +0000
SameMethod;true;clojure.lang.Compiler.VarExpr#VarExpr(Var, Symbol);clojure.lang.Compiler.VarExpr#VarExpr(Var, Symbol);3d5084fe755c815a09211e2678a89df8e50ea114;Thu Dec 20 20:04:45 2007 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;3d5084fe755c815a09211e2678a89df8e50ea114;Thu Dec 20 20:04:45 2007 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#InvokeExpr(int, Symbol, Expr, IPersistentVector);clojure.lang.Compiler.InvokeExpr#InvokeExpr(int, Symbol, Expr, IPersistentVector);3d5084fe755c815a09211e2678a89df8e50ea114;Thu Dec 20 20:04:45 2007 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;3d5084fe755c815a09211e2678a89df8e50ea114;Thu Dec 20 20:04:45 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();3d5084fe755c815a09211e2678a89df8e50ea114;Thu Dec 20 20:04:45 2007 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;3d5084fe755c815a09211e2678a89df8e50ea114;Thu Dec 20 20:04:45 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2f14556a4e07b25c988987e38df77b404c59580e;Thu Dec 20 21:29:04 2007 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;2f14556a4e07b25c988987e38df77b404c59580e;Thu Dec 20 21:29:04 2007 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();2f14556a4e07b25c988987e38df77b404c59580e;Thu Dec 20 21:29:04 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;9e1fdc8779227acf5c5fa3bd07592c6890fd1710;Thu Dec 27 17:15:17 2007 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;9e1fdc8779227acf5c5fa3bd07592c6890fd1710;Thu Dec 27 17:15:17 2007 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#maybeClassName(Object);clojure.lang.Compiler.HostExpr#maybeClassName(Object);9e1fdc8779227acf5c5fa3bd07592c6890fd1710;Thu Dec 27 17:15:17 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7c2ef5d06bde5b0475e4523b7b4d47ed4bcfe52e;Fri Dec 28 18:06:28 2007 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;7c2ef5d06bde5b0475e4523b7b4d47ed4bcfe52e;Fri Dec 28 18:06:28 2007 +0000
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;7c2ef5d06bde5b0475e4523b7b4d47ed4bcfe52e;Fri Dec 28 18:06:28 2007 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);7c2ef5d06bde5b0475e4523b7b4d47ed4bcfe52e;Fri Dec 28 18:06:28 2007 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#tagToClass(Symbol);clojure.lang.Compiler.HostExpr#tagToClass(Symbol);7c2ef5d06bde5b0475e4523b7b4d47ed4bcfe52e;Fri Dec 28 18:06:28 2007 +0000
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;7c2ef5d06bde5b0475e4523b7b4d47ed4bcfe52e;Fri Dec 28 18:06:28 2007 +0000
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;7c2ef5d06bde5b0475e4523b7b4d47ed4bcfe52e;Fri Dec 28 18:06:28 2007 +0000
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);7c2ef5d06bde5b0475e4523b7b4d47ed4bcfe52e;Fri Dec 28 18:06:28 2007 +0000
SameType;true;clojure.lang.Compiler.ClassExpr;clojure.lang.Compiler.ClassExpr;7c2ef5d06bde5b0475e4523b7b4d47ed4bcfe52e;Fri Dec 28 18:06:28 2007 +0000
SameType;true;clojure.lang.Compiler.ClassExpr.Parser;clojure.lang.Compiler.ClassExpr.Parser;7c2ef5d06bde5b0475e4523b7b4d47ed4bcfe52e;Fri Dec 28 18:06:28 2007 +0000
SameMethod;true;clojure.lang.Compiler.ClassExpr.Parser#parse(C, Object);clojure.lang.Compiler.ClassExpr.Parser#parse(C, Object);7c2ef5d06bde5b0475e4523b7b4d47ed4bcfe52e;Fri Dec 28 18:06:28 2007 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;7c2ef5d06bde5b0475e4523b7b4d47ed4bcfe52e;Fri Dec 28 18:06:28 2007 +0000
SameType;true;clojure.lang.Compiler.NewExpr.Parser;clojure.lang.Compiler.NewExpr.Parser;7c2ef5d06bde5b0475e4523b7b4d47ed4bcfe52e;Fri Dec 28 18:06:28 2007 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);7c2ef5d06bde5b0475e4523b7b4d47ed4bcfe52e;Fri Dec 28 18:06:28 2007 +0000
SameType;true;clojure.lang.Compiler.InstanceExpr;clojure.lang.Compiler.InstanceExpr;7c2ef5d06bde5b0475e4523b7b4d47ed4bcfe52e;Fri Dec 28 18:06:28 2007 +0000
SameType;true;clojure.lang.Compiler.InstanceExpr.Parser;clojure.lang.Compiler.InstanceExpr.Parser;7c2ef5d06bde5b0475e4523b7b4d47ed4bcfe52e;Fri Dec 28 18:06:28 2007 +0000
SameMethod;true;clojure.lang.Compiler.InstanceExpr.Parser#parse(C, Object);clojure.lang.Compiler.InstanceExpr.Parser#parse(C, Object);7c2ef5d06bde5b0475e4523b7b4d47ed4bcfe52e;Fri Dec 28 18:06:28 2007 +0000
RenameMethod;true;clojure.lang.Reflector#invokeMatchingMethod(List, Object, Object[]);clojure.lang.Reflector#getAsMethodOfPublicBase(Class, Method);7ceb044e9ee962c4fd5f86a9152a4ed703ef5c80;Fri Dec 28 18:12:00 2007 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;7ceb044e9ee962c4fd5f86a9152a4ed703ef5c80;Fri Dec 28 18:12:00 2007 +0000
SameMethod;true;clojure.lang.Reflector#invokeInstanceMethod(Object, String, Object[]);clojure.lang.Reflector#invokeInstanceMethod(Object, String, Object[]);7ceb044e9ee962c4fd5f86a9152a4ed703ef5c80;Fri Dec 28 18:12:00 2007 +0000
SameMethod;true;clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);7ceb044e9ee962c4fd5f86a9152a4ed703ef5c80;Fri Dec 28 18:12:00 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;f11854a83725c9b000be03228461606f949ce526;Sat Dec 29 14:49:08 2007 +0000
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;f11854a83725c9b000be03228461606f949ce526;Sat Dec 29 14:49:08 2007 +0000
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;f11854a83725c9b000be03228461606f949ce526;Sat Dec 29 14:49:08 2007 +0000
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);f11854a83725c9b000be03228461606f949ce526;Sat Dec 29 14:49:08 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;c8ecaff2aa9e56de24fad89566d43affaf5a368b;Mon Dec 31 17:23:21 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;dc5ab35bee8aefa3fa9bdcaadc157becb91918d9;Mon Dec 31 20:20:41 2007 +0000
SameMethod;true;clojure.lang.Compiler#loadFile(String);clojure.lang.Compiler#loadFile(String);dc5ab35bee8aefa3fa9bdcaadc157becb91918d9;Mon Dec 31 20:20:41 2007 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;3fc47bccfdabc5d764b15a0c4b1f5d4bd5fa27ac;Mon Dec 31 22:46:20 2007 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);3fc47bccfdabc5d764b15a0c4b1f5d4bd5fa27ac;Mon Dec 31 22:46:20 2007 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;06f5b521d953c311ee258e00adc1f08f306f41ed;Mon Dec 31 23:37:41 2007 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c78855af24bd4cc2f9895d8b2dc4a7fced8453f3;Tue Jan 1 19:54:19 2008 +0000
SameType;true;clojure.lang.Compiler.ThrowExpr;clojure.lang.Compiler.ThrowExpr;c78855af24bd4cc2f9895d8b2dc4a7fced8453f3;Tue Jan 1 19:54:19 2008 +0000
SameMethod;true;clojure.lang.Compiler.ThrowExpr#eval();clojure.lang.Compiler.ThrowExpr#eval();c78855af24bd4cc2f9895d8b2dc4a7fced8453f3;Tue Jan 1 19:54:19 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;9576e7b2edf541f63dc8592d3cf629dfe21a06f5;Tue Jan 1 20:04:00 2008 +0000
SameType;true;clojure.lang.Compiler.ThrowExpr;clojure.lang.Compiler.ThrowExpr;9576e7b2edf541f63dc8592d3cf629dfe21a06f5;Tue Jan 1 20:04:00 2008 +0000
SameMethod;true;clojure.lang.Compiler.ThrowExpr#eval();clojure.lang.Compiler.ThrowExpr#eval();9576e7b2edf541f63dc8592d3cf629dfe21a06f5;Tue Jan 1 20:04:00 2008 +0000
SameType;true;clojure.lang.Compiler.ThrowExpr.Parser;clojure.lang.Compiler.ThrowExpr.Parser;9576e7b2edf541f63dc8592d3cf629dfe21a06f5;Tue Jan 1 20:04:00 2008 +0000
SameMethod;true;clojure.lang.Compiler.ThrowExpr.Parser#parse(C, Object);clojure.lang.Compiler.ThrowExpr.Parser#parse(C, Object);9576e7b2edf541f63dc8592d3cf629dfe21a06f5;Tue Jan 1 20:04:00 2008 +0000
RenameMethod;true;clojure.lang.Reflector#primBoxTypeMatch(Class, Class);clojure.lang.Reflector#paramArgTypeMatch(Class, Class);368c7989e33ecb50b59de48a71fe3c96c6b0c483;Thu Jan 3 18:32:22 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;368c7989e33ecb50b59de48a71fe3c96c6b0c483;Thu Jan 3 18:32:22 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;368c7989e33ecb50b59de48a71fe3c96c6b0c483;Thu Jan 3 18:32:22 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(int, Expr, String, IPersistentVector);clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(int, Expr, String, IPersistentVector);368c7989e33ecb50b59de48a71fe3c96c6b0c483;Thu Jan 3 18:32:22 2008 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;368c7989e33ecb50b59de48a71fe3c96c6b0c483;Thu Jan 3 18:32:22 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(int, String, String, IPersistentVector);clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(int, String, String, IPersistentVector);368c7989e33ecb50b59de48a71fe3c96c6b0c483;Thu Jan 3 18:32:22 2008 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;368c7989e33ecb50b59de48a71fe3c96c6b0c483;Thu Jan 3 18:32:22 2008 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#NewExpr(String, IPersistentVector);clojure.lang.Compiler.NewExpr#NewExpr(String, IPersistentVector);368c7989e33ecb50b59de48a71fe3c96c6b0c483;Thu Jan 3 18:32:22 2008 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;368c7989e33ecb50b59de48a71fe3c96c6b0c483;Thu Jan 3 18:32:22 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);368c7989e33ecb50b59de48a71fe3c96c6b0c483;Thu Jan 3 18:32:22 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;368c7989e33ecb50b59de48a71fe3c96c6b0c483;Thu Jan 3 18:32:22 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;368c7989e33ecb50b59de48a71fe3c96c6b0c483;Thu Jan 3 18:32:22 2008 +0000
SameMethod;true;clojure.lang.Reflector#isCongruent(Class[], Object[]);clojure.lang.Reflector#isCongruent(Class[], Object[]);368c7989e33ecb50b59de48a71fe3c96c6b0c483;Thu Jan 3 18:32:22 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7747ec67b7059eb5e80c65ac92ed373646ba27a8;Fri Jan 4 03:52:06 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;7747ec67b7059eb5e80c65ac92ed373646ba27a8;Fri Jan 4 03:52:06 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(int, Expr, String, IPersistentVector);clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(int, Expr, String, IPersistentVector);7747ec67b7059eb5e80c65ac92ed373646ba27a8;Fri Jan 4 03:52:06 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#eval();clojure.lang.Compiler.InstanceMethodExpr#eval();7747ec67b7059eb5e80c65ac92ed373646ba27a8;Fri Jan 4 03:52:06 2008 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;7747ec67b7059eb5e80c65ac92ed373646ba27a8;Fri Jan 4 03:52:06 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#eval();clojure.lang.Compiler.StaticMethodExpr#eval();7747ec67b7059eb5e80c65ac92ed373646ba27a8;Fri Jan 4 03:52:06 2008 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;7747ec67b7059eb5e80c65ac92ed373646ba27a8;Fri Jan 4 03:52:06 2008 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#eval();clojure.lang.Compiler.NewExpr#eval();7747ec67b7059eb5e80c65ac92ed373646ba27a8;Fri Jan 4 03:52:06 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;7747ec67b7059eb5e80c65ac92ed373646ba27a8;Fri Jan 4 03:52:06 2008 +0000
SameMethod;true;clojure.lang.Reflector#prepRet(Object);clojure.lang.Reflector#prepRet(Object);7747ec67b7059eb5e80c65ac92ed373646ba27a8;Fri Jan 4 03:52:06 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;5c03de501fdfea698e982a2b1347c5c2d2b2bf14;Fri Jan 4 12:38:15 2008 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;5c03de501fdfea698e982a2b1347c5c2d2b2bf14;Fri Jan 4 12:38:15 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);5c03de501fdfea698e982a2b1347c5c2d2b2bf14;Fri Jan 4 12:38:15 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;84c68138fb9573f7248586a7b85964538646f684;Fri Jan 4 12:57:10 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;5fe4b82a893cc8b6479dbd1924d387dc9be527d7;Fri Jan 4 13:51:10 2008 +0000
SameMethod;true;clojure.lang.Compiler#eval(Object);clojure.lang.Compiler#eval(Object);5fe4b82a893cc8b6479dbd1924d387dc9be527d7;Fri Jan 4 13:51:10 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;0fab8baef52f660ea391a2e84ad016f72f71f4b2;Fri Jan 4 14:07:06 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;0fab8baef52f660ea391a2e84ad016f72f71f4b2;Fri Jan 4 14:07:06 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#eval();clojure.lang.Compiler.InstanceMethodExpr#eval();0fab8baef52f660ea391a2e84ad016f72f71f4b2;Fri Jan 4 14:07:06 2008 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;0fab8baef52f660ea391a2e84ad016f72f71f4b2;Fri Jan 4 14:07:06 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#eval();clojure.lang.Compiler.StaticMethodExpr#eval();0fab8baef52f660ea391a2e84ad016f72f71f4b2;Fri Jan 4 14:07:06 2008 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;0fab8baef52f660ea391a2e84ad016f72f71f4b2;Fri Jan 4 14:07:06 2008 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#eval();clojure.lang.Compiler.NewExpr#eval();0fab8baef52f660ea391a2e84ad016f72f71f4b2;Fri Jan 4 14:07:06 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;0fab8baef52f660ea391a2e84ad016f72f71f4b2;Fri Jan 4 14:07:06 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;443cce766feb8477b2480840bea6d7967212da0c;Fri Jan 4 19:26:21 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;443cce766feb8477b2480840bea6d7967212da0c;Fri Jan 4 19:26:21 2008 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#emitUnboxArg(FnExpr, GeneratorAdapter, Class);clojure.lang.Compiler.HostExpr#emitUnboxArg(FnExpr, GeneratorAdapter, Class);443cce766feb8477b2480840bea6d7967212da0c;Fri Jan 4 19:26:21 2008 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;443cce766feb8477b2480840bea6d7967212da0c;Fri Jan 4 19:26:21 2008 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#eval();clojure.lang.Compiler.InvokeExpr#eval();443cce766feb8477b2480840bea6d7967212da0c;Fri Jan 4 19:26:21 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;443cce766feb8477b2480840bea6d7967212da0c;Fri Jan 4 19:26:21 2008 +0000
SameMethod;true;clojure.lang.Reflector#invokeInstanceMethod(Object, String, Object[]);clojure.lang.Reflector#invokeInstanceMethod(Object, String, Object[]);443cce766feb8477b2480840bea6d7967212da0c;Fri Jan 4 19:26:21 2008 +0000
SameMethod;true;clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);443cce766feb8477b2480840bea6d7967212da0c;Fri Jan 4 19:26:21 2008 +0000
SameMethod;true;clojure.lang.Reflector#getStaticField(String, String);clojure.lang.Reflector#getStaticField(String, String);443cce766feb8477b2480840bea6d7967212da0c;Fri Jan 4 19:26:21 2008 +0000
SameMethod;true;clojure.lang.Reflector#getInstanceField(Object, String);clojure.lang.Reflector#getInstanceField(Object, String);443cce766feb8477b2480840bea6d7967212da0c;Fri Jan 4 19:26:21 2008 +0000
SameMethod;true;clojure.lang.Reflector#invokeInstanceMember(Object, String);clojure.lang.Reflector#invokeInstanceMember(Object, String);443cce766feb8477b2480840bea6d7967212da0c;Fri Jan 4 19:26:21 2008 +0000
SameMethod;true;clojure.lang.Reflector#boxArg(Class, Object);clojure.lang.Reflector#boxArg(Class, Object);443cce766feb8477b2480840bea6d7967212da0c;Fri Jan 4 19:26:21 2008 +0000
SameMethod;true;clojure.lang.Reflector#paramArgTypeMatch(Class, Class);clojure.lang.Reflector#paramArgTypeMatch(Class, Class);443cce766feb8477b2480840bea6d7967212da0c;Fri Jan 4 19:26:21 2008 +0000
SameMethod;true;clojure.lang.Reflector#isCongruent(Class[], Object[]);clojure.lang.Reflector#isCongruent(Class[], Object[]);443cce766feb8477b2480840bea6d7967212da0c;Fri Jan 4 19:26:21 2008 +0000
ExtractInterface;true;clojure.lang.PersistentTreeMap;clojure.lang.Reversible;82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#maybeClassName(Object, boolean);clojure.lang.Compiler.HostExpr#maybeClassName(Object, boolean);82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#tagToClass(Symbol);clojure.lang.Compiler.HostExpr#tagToClass(Symbol);82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, Expr, String);clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, Expr, String);82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceFieldExpr#emit(C, FnExpr, GeneratorAdapter);82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#hasJavaClass();clojure.lang.Compiler.InstanceFieldExpr#hasJavaClass();82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#emitAssign(C, FnExpr, GeneratorAdapter, Expr);clojure.lang.Compiler.InstanceFieldExpr#emitAssign(C, FnExpr, GeneratorAdapter, Expr);82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameType;true;clojure.lang.Compiler.StaticFieldExpr;clojure.lang.Compiler.StaticFieldExpr;82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticFieldExpr#getJavaClass();clojure.lang.Compiler.StaticFieldExpr#getJavaClass();82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticFieldExpr#emitAssign(C, FnExpr, GeneratorAdapter, Expr);clojure.lang.Compiler.StaticFieldExpr#emitAssign(C, FnExpr, GeneratorAdapter, Expr);82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameMethod;true;clojure.lang.Compiler#tagOf(Object);clojure.lang.Compiler#tagOf(Object);82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameType;true;clojure.lang.IPersistentVector;clojure.lang.IPersistentVector;82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameType;true;clojure.lang.LispReader.MetaReader;clojure.lang.LispReader.MetaReader;82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameMethod;true;clojure.lang.LispReader.MetaReader#invoke(Object, Object);clojure.lang.LispReader.MetaReader#invoke(Object, Object);82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;82e8dc1deaa37a52515f353d8494dc03be2c6e50;Sat Jan 5 21:23:45 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;433fc199d68217c4d048eaeac81d7ff9f6928c7e;Sat Jan 5 21:29:02 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;433fc199d68217c4d048eaeac81d7ff9f6928c7e;Sat Jan 5 21:29:02 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();433fc199d68217c4d048eaeac81d7ff9f6928c7e;Sat Jan 5 21:29:02 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#emitBoxReturn(FnExpr, GeneratorAdapter, Class);clojure.lang.Compiler.HostExpr#emitBoxReturn(FnExpr, GeneratorAdapter, Class);ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameType;true;clojure.lang.Compiler.IdenticalExpr;clojure.lang.Compiler.IdenticalExpr;ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameMethod;true;clojure.lang.Compiler.IdenticalExpr#eval();clojure.lang.Compiler.IdenticalExpr#eval();ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameMethod;true;clojure.lang.Compiler.IdenticalExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.IdenticalExpr#emit(C, FnExpr, GeneratorAdapter);ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceExpr;clojure.lang.Compiler.InstanceExpr;ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceExpr#eval();clojure.lang.Compiler.InstanceExpr#eval();ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceExpr#emit(C, FnExpr, GeneratorAdapter);ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameMethod;true;clojure.lang.Compiler.IfExpr#eval();clojure.lang.Compiler.IfExpr#eval();ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameMethod;true;clojure.lang.Compiler.IfExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.IfExpr#emit(C, FnExpr, GeneratorAdapter);ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameMethod;true;clojure.lang.LispReader#interpretToken(String);clojure.lang.LispReader#interpretToken(String);ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameType;true;clojure.lang.Num;clojure.lang.Num;ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameMethod;true;clojure.lang.Num#negPred(Object);clojure.lang.Num#negPred(Object);ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameMethod;true;clojure.lang.Num#posPred(Object);clojure.lang.Num#posPred(Object);ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameMethod;true;clojure.lang.Num#zeroPred(Object);clojure.lang.Num#zeroPred(Object);ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameMethod;true;clojure.lang.RT$3#invoke(Object, Object);clojure.lang.RT$3#invoke(Object, Object);ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameMethod;true;clojure.lang.RT#contains(Object, Object);clojure.lang.RT#contains(Object, Object);ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameMethod;true;clojure.lang.RT#box(boolean);clojure.lang.RT#box(boolean);ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameMethod;true;clojure.lang.RT#box(Boolean);clojure.lang.RT#box(Boolean);ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameMethod;true;clojure.lang.Reflector#prepRet(Class, Object);clojure.lang.Reflector#prepRet(Class, Object);ebe40313d671a1cbc9930e58b550a68d1da3c075;Sun Jan 6 17:13:59 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;fa30aeed53960838cdcc5d0437fdccab0e9be828;Sun Jan 6 21:36:09 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;fa30aeed53960838cdcc5d0437fdccab0e9be828;Sun Jan 6 21:36:09 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, Expr, String);clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, Expr, String);fa30aeed53960838cdcc5d0437fdccab0e9be828;Sun Jan 6 21:36:09 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;fa30aeed53960838cdcc5d0437fdccab0e9be828;Sun Jan 6 21:36:09 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(int, Expr, String, IPersistentVector);clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(int, Expr, String, IPersistentVector);fa30aeed53960838cdcc5d0437fdccab0e9be828;Sun Jan 6 21:36:09 2008 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;fa30aeed53960838cdcc5d0437fdccab0e9be828;Sun Jan 6 21:36:09 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(int, String, String, IPersistentVector);clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(int, String, String, IPersistentVector);fa30aeed53960838cdcc5d0437fdccab0e9be828;Sun Jan 6 21:36:09 2008 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;fa30aeed53960838cdcc5d0437fdccab0e9be828;Sun Jan 6 21:36:09 2008 +0000
SameType;true;clojure.lang.Compiler.NewExpr.Parser;clojure.lang.Compiler.NewExpr.Parser;fa30aeed53960838cdcc5d0437fdccab0e9be828;Sun Jan 6 21:36:09 2008 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);fa30aeed53960838cdcc5d0437fdccab0e9be828;Sun Jan 6 21:36:09 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;fa30aeed53960838cdcc5d0437fdccab0e9be828;Sun Jan 6 21:36:09 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;fa30aeed53960838cdcc5d0437fdccab0e9be828;Sun Jan 6 21:36:09 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);fa30aeed53960838cdcc5d0437fdccab0e9be828;Sun Jan 6 21:36:09 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;e133b4037f91c359071852106073b7a8dcf6eccb;Mon Jan 7 01:41:09 2008 +0000
SameMethod;true;clojure.lang.RT#contains(Object, Object);clojure.lang.RT#contains(Object, Object);e133b4037f91c359071852106073b7a8dcf6eccb;Mon Jan 7 01:41:09 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;37afdbbbe891109b9e3ead5b5aec88b4ea00c3f0;Mon Jan 7 18:30:01 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;37afdbbbe891109b9e3ead5b5aec88b4ea00c3f0;Mon Jan 7 18:30:01 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, Expr, String);clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, Expr, String);37afdbbbe891109b9e3ead5b5aec88b4ea00c3f0;Mon Jan 7 18:30:01 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;37afdbbbe891109b9e3ead5b5aec88b4ea00c3f0;Mon Jan 7 18:30:01 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(int, Expr, String, IPersistentVector);clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(int, Expr, String, IPersistentVector);37afdbbbe891109b9e3ead5b5aec88b4ea00c3f0;Mon Jan 7 18:30:01 2008 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;37afdbbbe891109b9e3ead5b5aec88b4ea00c3f0;Mon Jan 7 18:30:01 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(int, String, String, IPersistentVector);clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(int, String, String, IPersistentVector);37afdbbbe891109b9e3ead5b5aec88b4ea00c3f0;Mon Jan 7 18:30:01 2008 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;37afdbbbe891109b9e3ead5b5aec88b4ea00c3f0;Mon Jan 7 18:30:01 2008 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#NewExpr(String, IPersistentVector, int);clojure.lang.Compiler.NewExpr#NewExpr(String, IPersistentVector, int);37afdbbbe891109b9e3ead5b5aec88b4ea00c3f0;Mon Jan 7 18:30:01 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;400fea503405e8d687b224887736f5b70bfc03e5;Tue Jan 8 03:04:33 2008 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);400fea503405e8d687b224887736f5b70bfc03e5;Tue Jan 8 03:04:33 2008 +0000
SameType;true;clojure.lang.BigNum;clojure.lang.BigNum;f7c87e059355badcfbc8d80c2ed6ab8acb3c1d73;Tue Jan 8 21:02:31 2008 +0000
SameMethod;true;clojure.lang.BigNum#equals(Object);clojure.lang.BigNum#equals(Object);f7c87e059355badcfbc8d80c2ed6ab8acb3c1d73;Tue Jan 8 21:02:31 2008 +0000
SameType;true;clojure.lang.PersistentStructMap;clojure.lang.PersistentStructMap;2a12d40a8e26af95b614fa420591039a37f06626;Wed Jan 9 02:59:57 2008 +0000
SameMethod;true;clojure.lang.PersistentStructMap#createSlotMap(ISeq);clojure.lang.PersistentStructMap#createSlotMap(ISeq);2a12d40a8e26af95b614fa420591039a37f06626;Wed Jan 9 02:59:57 2008 +0000
SameMethod;true;clojure.lang.PersistentStructMap$1#invoke(Object);clojure.lang.PersistentStructMap$1#invoke(Object);2a12d40a8e26af95b614fa420591039a37f06626;Wed Jan 9 02:59:57 2008 +0000
SameMethod;true;clojure.lang.PersistentStructMap#withMeta(IPersistentMap);clojure.lang.PersistentStructMap#withMeta(IPersistentMap);2a12d40a8e26af95b614fa420591039a37f06626;Wed Jan 9 02:59:57 2008 +0000
SameMethod;true;clojure.lang.PersistentStructMap#containsKey(Object);clojure.lang.PersistentStructMap#containsKey(Object);2a12d40a8e26af95b614fa420591039a37f06626;Wed Jan 9 02:59:57 2008 +0000
SameMethod;true;clojure.lang.PersistentStructMap#entryAt(Object);clojure.lang.PersistentStructMap#entryAt(Object);2a12d40a8e26af95b614fa420591039a37f06626;Wed Jan 9 02:59:57 2008 +0000
SameMethod;true;clojure.lang.PersistentStructMap#assoc(Object, Object);clojure.lang.PersistentStructMap#assoc(Object, Object);2a12d40a8e26af95b614fa420591039a37f06626;Wed Jan 9 02:59:57 2008 +0000
SameMethod;true;clojure.lang.PersistentStructMap#valAt(Object);clojure.lang.PersistentStructMap#valAt(Object);2a12d40a8e26af95b614fa420591039a37f06626;Wed Jan 9 02:59:57 2008 +0000
SameMethod;true;clojure.lang.PersistentStructMap#valAt(Object, Object);clojure.lang.PersistentStructMap#valAt(Object, Object);2a12d40a8e26af95b614fa420591039a37f06626;Wed Jan 9 02:59:57 2008 +0000
SameMethod;true;clojure.lang.PersistentStructMap#without(Object);clojure.lang.PersistentStructMap#without(Object);2a12d40a8e26af95b614fa420591039a37f06626;Wed Jan 9 02:59:57 2008 +0000
SameMethod;true;clojure.lang.PersistentStructMap#seq();clojure.lang.PersistentStructMap#seq();2a12d40a8e26af95b614fa420591039a37f06626;Wed Jan 9 02:59:57 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;2a12d40a8e26af95b614fa420591039a37f06626;Wed Jan 9 02:59:57 2008 +0000
SameMethod;true;clojure.lang.Var#intern(Symbol, Object, boolean);clojure.lang.Var#intern(Symbol, Object, boolean);2a12d40a8e26af95b614fa420591039a37f06626;Wed Jan 9 02:59:57 2008 +0000
SameMethod;true;clojure.lang.Var#intern(Symbol);clojure.lang.Var#intern(Symbol);2a12d40a8e26af95b614fa420591039a37f06626;Wed Jan 9 02:59:57 2008 +0000
SameMethod;true;clojure.lang.Var#unintern(Symbol);clojure.lang.Var#unintern(Symbol);2a12d40a8e26af95b614fa420591039a37f06626;Wed Jan 9 02:59:57 2008 +0000
SameMethod;true;clojure.lang.Var#find(Symbol);clojure.lang.Var#find(Symbol);2a12d40a8e26af95b614fa420591039a37f06626;Wed Jan 9 02:59:57 2008 +0000
SameType;true;clojure.lang.DynamicClassLoader;clojure.lang.DynamicClassLoader;83bdf44907828c589907b44342ce7f4ddf3d44ec;Sat Jan 12 14:03:49 2008 +0000
SameMethod;true;clojure.lang.DynamicClassLoader#DynamicClassLoader();clojure.lang.DynamicClassLoader#DynamicClassLoader();83bdf44907828c589907b44342ce7f4ddf3d44ec;Sat Jan 12 14:03:49 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;345aff14826f375f9809bd8a6b36b6b8b9927100;Wed Jan 16 18:46:02 2008 +0000
SameMethod;true;clojure.lang.Reflector#prepRet(Class, Object);clojure.lang.Reflector#prepRet(Class, Object);345aff14826f375f9809bd8a6b36b6b8b9927100;Wed Jan 16 18:46:02 2008 +0000
RenameMethod;false;clojure.lang.Var#table(Symbol);clojure.lang.Var#getns(Symbol);dca114e71248ddd7a172e38ff6dc9956db09c6cf;Tue Jan 22 14:30:53 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;dca114e71248ddd7a172e38ff6dc9956db09c6cf;Tue Jan 22 14:30:53 2008 +0000
SameMethod;true;clojure.lang.Var#intern(Symbol, Object, boolean);clojure.lang.Var#intern(Symbol, Object, boolean);dca114e71248ddd7a172e38ff6dc9956db09c6cf;Tue Jan 22 14:30:53 2008 +0000
SameMethod;true;clojure.lang.Var#intern(Symbol);clojure.lang.Var#intern(Symbol);dca114e71248ddd7a172e38ff6dc9956db09c6cf;Tue Jan 22 14:30:53 2008 +0000
SameMethod;true;clojure.lang.Var#unintern(Symbol);clojure.lang.Var#unintern(Symbol);dca114e71248ddd7a172e38ff6dc9956db09c6cf;Tue Jan 22 14:30:53 2008 +0000
SameMethod;true;clojure.lang.Var#find(Symbol);clojure.lang.Var#find(Symbol);dca114e71248ddd7a172e38ff6dc9956db09c6cf;Tue Jan 22 14:30:53 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Var#intern(Namespace, Symbol);df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameMethod;true;clojure.lang.Compiler#resolveSymbol(Symbol);clojure.lang.Compiler#resolveSymbol(Symbol);df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Compiler#lookupVar(Symbol, boolean);df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameMethod;true;clojure.lang.Compiler#currentNS();clojure.lang.Compiler#currentNS();df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameMethod;true;clojure.lang.Compiler#load(Reader);clojure.lang.Compiler#load(Reader);df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameMethod;true;clojure.lang.Compiler#main(String[]);clojure.lang.Compiler#main(String[]);df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameMethod;true;clojure.lang.RT$1#invoke(Object);clojure.lang.RT$1#invoke(Object);df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameMethod;true;clojure.lang.Var#find(Symbol);clojure.lang.Var#find(Symbol);df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameMethod;true;clojure.lang.Var#create();clojure.lang.Var#create();df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
SameMethod;true;clojure.lang.Var#create(Object);clojure.lang.Var#create(Object);df498fe4972a46a89cf06248af1712bae5d4a83a;Wed Jan 23 22:32:59 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Namespace#find(Symbol);44f0b51091dbe7d43aafb0932359f0b460f75018;Thu Jan 24 12:53:49 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Namespace#findInternedVar(Symbol);44f0b51091dbe7d43aafb0932359f0b460f75018;Thu Jan 24 12:53:49 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Namespace#getMapping(Symbol);44f0b51091dbe7d43aafb0932359f0b460f75018;Thu Jan 24 12:53:49 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;44f0b51091dbe7d43aafb0932359f0b460f75018;Thu Jan 24 12:53:49 2008 +0000
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Compiler#lookupVar(Symbol, boolean);44f0b51091dbe7d43aafb0932359f0b460f75018;Thu Jan 24 12:53:49 2008 +0000
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;44f0b51091dbe7d43aafb0932359f0b460f75018;Thu Jan 24 12:53:49 2008 +0000
SameMethod;true;clojure.lang.Namespace#Namespace(Symbol);clojure.lang.Namespace#Namespace(Symbol);44f0b51091dbe7d43aafb0932359f0b460f75018;Thu Jan 24 12:53:49 2008 +0000
SameMethod;true;clojure.lang.Namespace#intern(Symbol);clojure.lang.Namespace#intern(Symbol);44f0b51091dbe7d43aafb0932359f0b460f75018;Thu Jan 24 12:53:49 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;44f0b51091dbe7d43aafb0932359f0b460f75018;Thu Jan 24 12:53:49 2008 +0000
SameMethod;true;clojure.lang.RT$1#invoke(Object);clojure.lang.RT$1#invoke(Object);44f0b51091dbe7d43aafb0932359f0b460f75018;Thu Jan 24 12:53:49 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;44f0b51091dbe7d43aafb0932359f0b460f75018;Thu Jan 24 12:53:49 2008 +0000
SameMethod;true;clojure.lang.Var#toString();clojure.lang.Var#toString();44f0b51091dbe7d43aafb0932359f0b460f75018;Thu Jan 24 12:53:49 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;bba289e42620408d912de604cbd75b78de74b628;Thu Jan 24 14:58:21 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;bba289e42620408d912de604cbd75b78de74b628;Thu Jan 24 14:58:21 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();bba289e42620408d912de604cbd75b78de74b628;Thu Jan 24 14:58:21 2008 +0000
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Compiler#lookupVar(Symbol, boolean);bba289e42620408d912de604cbd75b78de74b628;Thu Jan 24 14:58:21 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;bba289e42620408d912de604cbd75b78de74b628;Thu Jan 24 14:58:21 2008 +0000
RenameMethod;true;clojure.lang.Compiler.HostExpr#maybeClassName(Object, boolean);clojure.lang.Compiler.HostExpr#maybeClass(Object, boolean);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
ExtractMethod;true;clojure.lang.Reflector#getStaticField(String, String);clojure.lang.Reflector#getStaticField(Class, String);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
ExtractMethod;true;clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);clojure.lang.Reflector#invokeStaticMethod(Class, String, Object[]);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
ExtractMethod;true;clojure.lang.Reflector#setStaticField(String, String, Object);clojure.lang.Reflector#setStaticField(Class, String, Object);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler#resolveSymbol(Symbol);clojure.lang.Compiler#resolveSymbol(Symbol);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Compiler.VarExpr;clojure.lang.Compiler.VarExpr;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#tagToClass(Symbol);clojure.lang.Compiler.HostExpr#tagToClass(Symbol);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Compiler.StaticFieldExpr;clojure.lang.Compiler.StaticFieldExpr;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticFieldExpr#eval();clojure.lang.Compiler.StaticFieldExpr#eval();36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticFieldExpr#evalAssign(Expr);clojure.lang.Compiler.StaticFieldExpr#evalAssign(Expr);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#eval();clojure.lang.Compiler.StaticMethodExpr#eval();36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.StaticMethodExpr#emit(C, FnExpr, GeneratorAdapter);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr.CatchClause;clojure.lang.Compiler.TryExpr.CatchClause;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.TryExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.TryExpr#emit(C, FnExpr, GeneratorAdapter);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Compiler.ClassExpr;clojure.lang.Compiler.ClassExpr;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.ClassExpr#eval();clojure.lang.Compiler.ClassExpr#eval();36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.ClassExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.ClassExpr#emit(C, FnExpr, GeneratorAdapter);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Compiler.ClassExpr.Parser;clojure.lang.Compiler.ClassExpr.Parser;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.ClassExpr.Parser#parse(C, Object);clojure.lang.Compiler.ClassExpr.Parser#parse(C, Object);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#eval();clojure.lang.Compiler.NewExpr#eval();36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.NewExpr#emit(C, FnExpr, GeneratorAdapter);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#getJavaClass();clojure.lang.Compiler.NewExpr#getJavaClass();36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Compiler.NewExpr.Parser;clojure.lang.Compiler.NewExpr.Parser;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceExpr;clojure.lang.Compiler.InstanceExpr;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceExpr#eval();clojure.lang.Compiler.InstanceExpr#eval();36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceExpr#emit(C, FnExpr, GeneratorAdapter);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceExpr.Parser;clojure.lang.Compiler.InstanceExpr.Parser;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceExpr.Parser#parse(C, Object);clojure.lang.Compiler.InstanceExpr.Parser#parse(C, Object);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler#load(Reader);clojure.lang.Compiler#load(Reader);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Compiler#main(String[]);clojure.lang.Compiler#main(String[]);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Namespace#importClass(Symbol, Class);clojure.lang.Namespace#importClass(Symbol, Class);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Namespace#refer(Symbol, Var);clojure.lang.Namespace#refer(Symbol, Var);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Reflector#getStaticField(String, String);clojure.lang.Reflector#getStaticField(String, String);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Reflector#setStaticField(String, String, Object);clojure.lang.Reflector#setStaticField(String, String, Object);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);36868a7734f15c51eb1831aa9d72a14544496987;Thu Jan 24 20:22:55 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;755aee1231b268a3fafb1f385af83156938f940c;Fri Jan 25 01:55:15 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);755aee1231b268a3fafb1f385af83156938f940c;Fri Jan 25 01:55:15 2008 +0000
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;755aee1231b268a3fafb1f385af83156938f940c;Fri Jan 25 01:55:15 2008 +0000
SameMethod;true;clojure.lang.Namespace#unintern(Symbol);clojure.lang.Namespace#unintern(Symbol);755aee1231b268a3fafb1f385af83156938f940c;Fri Jan 25 01:55:15 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;755aee1231b268a3fafb1f385af83156938f940c;Fri Jan 25 01:55:15 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;755aee1231b268a3fafb1f385af83156938f940c;Fri Jan 25 01:55:15 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;8da00aca0e47b20cd7c50e29d42ed6a58e9a7a62;Fri Jan 25 19:03:49 2008 +0000
SameType;true;clojure.lang.Compiler.MonitorEnterExpr;clojure.lang.Compiler.MonitorEnterExpr;8da00aca0e47b20cd7c50e29d42ed6a58e9a7a62;Fri Jan 25 19:03:49 2008 +0000
SameType;true;clojure.lang.Compiler.MonitorEnterExpr.Parser;clojure.lang.Compiler.MonitorEnterExpr.Parser;8da00aca0e47b20cd7c50e29d42ed6a58e9a7a62;Fri Jan 25 19:03:49 2008 +0000
SameMethod;true;clojure.lang.Compiler.MonitorEnterExpr.Parser#parse(C, Object);clojure.lang.Compiler.MonitorEnterExpr.Parser#parse(C, Object);8da00aca0e47b20cd7c50e29d42ed6a58e9a7a62;Fri Jan 25 19:03:49 2008 +0000
SameType;true;clojure.lang.Compiler.MonitorExitExpr;clojure.lang.Compiler.MonitorExitExpr;8da00aca0e47b20cd7c50e29d42ed6a58e9a7a62;Fri Jan 25 19:03:49 2008 +0000
SameType;true;clojure.lang.Compiler.MonitorExitExpr.Parser;clojure.lang.Compiler.MonitorExitExpr.Parser;8da00aca0e47b20cd7c50e29d42ed6a58e9a7a62;Fri Jan 25 19:03:49 2008 +0000
SameMethod;true;clojure.lang.Compiler.MonitorExitExpr.Parser#parse(C, Object);clojure.lang.Compiler.MonitorExitExpr.Parser#parse(C, Object);8da00aca0e47b20cd7c50e29d42ed6a58e9a7a62;Fri Jan 25 19:03:49 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);8da00aca0e47b20cd7c50e29d42ed6a58e9a7a62;Fri Jan 25 19:03:49 2008 +0000
SameMethod;true;clojure.lang.Compiler#resolve(Symbol);clojure.lang.Compiler#resolve(Symbol);8da00aca0e47b20cd7c50e29d42ed6a58e9a7a62;Fri Jan 25 19:03:49 2008 +0000
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Compiler#lookupVar(Symbol, boolean);8da00aca0e47b20cd7c50e29d42ed6a58e9a7a62;Fri Jan 25 19:03:49 2008 +0000
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;8da00aca0e47b20cd7c50e29d42ed6a58e9a7a62;Fri Jan 25 19:03:49 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;8da00aca0e47b20cd7c50e29d42ed6a58e9a7a62;Fri Jan 25 19:03:49 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#resolve(Symbol);clojure.lang.Compiler#resolveIn(Namespace, Symbol);2fd70293876dc3713cb9deb1c3e1f237336c6b62;Fri Jan 25 23:10:39 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2fd70293876dc3713cb9deb1c3e1f237336c6b62;Fri Jan 25 23:10:39 2008 +0000
SameMethod;true;clojure.lang.Compiler#resolve(Symbol);clojure.lang.Compiler#resolve(Symbol);2fd70293876dc3713cb9deb1c3e1f237336c6b62;Fri Jan 25 23:10:39 2008 +0000
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;2fd70293876dc3713cb9deb1c3e1f237336c6b62;Fri Jan 25 23:10:39 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;2fd70293876dc3713cb9deb1c3e1f237336c6b62;Fri Jan 25 23:10:39 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;2fd70293876dc3713cb9deb1c3e1f237336c6b62;Fri Jan 25 23:10:39 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);2fd70293876dc3713cb9deb1c3e1f237336c6b62;Fri Jan 25 23:10:39 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;2fd70293876dc3713cb9deb1c3e1f237336c6b62;Fri Jan 25 23:10:39 2008 +0000
SameMethod;true;clojure.lang.Var#toString();clojure.lang.Var#toString();2fd70293876dc3713cb9deb1c3e1f237336c6b62;Fri Jan 25 23:10:39 2008 +0000
SameType;true;clojure.lang.ProxyHandler;clojure.lang.ProxyHandler;0a71511afb0e94f9b3413ff670953a42be97eeb8;Sat Jan 26 20:45:29 2008 +0000
SameMethod;true;clojure.lang.ProxyHandler#invoke(Object, Method, Object[]);clojure.lang.ProxyHandler#invoke(Object, Method, Object[]);0a71511afb0e94f9b3413ff670953a42be97eeb8;Sat Jan 26 20:45:29 2008 +0000
SameType;true;clojure.lang.Num;clojure.lang.Num;999111485f8bc28332780dcd92f6cfa1a2bc66c9;Mon Jan 28 13:47:54 2008 +0000
SameMethod;true;clojure.lang.Num#equiv(Object, Object);clojure.lang.Num#equiv(Object, Object);999111485f8bc28332780dcd92f6cfa1a2bc66c9;Mon Jan 28 13:47:54 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;999111485f8bc28332780dcd92f6cfa1a2bc66c9;Mon Jan 28 13:47:54 2008 +0000
SameMethod;true;clojure.lang.RT#equal(Object, Object);clojure.lang.RT#equal(Object, Object);999111485f8bc28332780dcd92f6cfa1a2bc66c9;Mon Jan 28 13:47:54 2008 +0000
RenameMethod;false;clojure.lang.Namespace#unintern(Symbol);clojure.lang.Namespace#unmap(Symbol);3849410faf554b7268d8175c5a0cb29f51a8ebcc;Mon Jan 28 14:44:47 2008 +0000
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;3849410faf554b7268d8175c5a0cb29f51a8ebcc;Mon Jan 28 14:44:47 2008 +0000
RenameClass;true;clojure.lang.Compiler.QuoteExpr;clojure.lang.Compiler.ConstantExpr;e952d81f687abea07327724d15e60a1500080b67;Mon Jan 28 15:47:33 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e952d81f687abea07327724d15e60a1500080b67;Mon Jan 28 15:47:33 2008 +0000
SameType;true;clojure.lang.Compiler.QuoteExpr.Parser;clojure.lang.Compiler.ConstantExpr.Parser;e952d81f687abea07327724d15e60a1500080b67;Mon Jan 28 15:47:33 2008 +0000
SameMethod;true;clojure.lang.Compiler.QuoteExpr.Parser#parse(C, Object);clojure.lang.Compiler.ConstantExpr.Parser#parse(C, Object);e952d81f687abea07327724d15e60a1500080b67;Mon Jan 28 15:47:33 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);e952d81f687abea07327724d15e60a1500080b67;Mon Jan 28 15:47:33 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);e952d81f687abea07327724d15e60a1500080b67;Mon Jan 28 15:47:33 2008 +0000
RenameMethod;true;clojure.lang.DynamicClassLoader#registerQuotedVal(int, Object);clojure.lang.DynamicClassLoader#registerConstants(int, Object[]);28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
RenameMethod;true;clojure.lang.DynamicClassLoader#getQuotedVal(int);clojure.lang.DynamicClassLoader#getConstants(int);28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
ExtractMethod;true;clojure.lang.Compiler.ConstantExpr#ConstantExpr(Object);clojure.lang.Compiler#registerConstant(Object);28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
ExtractMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#constantName(int);28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
ExtractMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#constantType(int);28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
ExtractMethod;true;clojure.lang.Compiler.FnExpr#emitVar(GeneratorAdapter, Var);clojure.lang.Compiler.FnExpr#emitConstant(GeneratorAdapter, int);28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
ExtractMethod;true;clojure.lang.Compiler.FnExpr#emitKeyword(GeneratorAdapter, Keyword);clojure.lang.Compiler.FnExpr#emitConstant(GeneratorAdapter, int);28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
ExtractMethod;true;clojure.lang.Compiler.ConstantExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.FnExpr#emitConstant(GeneratorAdapter, int);28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
SameType;true;clojure.lang.Compiler.ConstantExpr;clojure.lang.Compiler.ConstantExpr;28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
SameMethod;true;clojure.lang.Compiler.ConstantExpr#ConstantExpr(Object);clojure.lang.Compiler.ConstantExpr#ConstantExpr(Object);28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
SameMethod;true;clojure.lang.Compiler.ConstantExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.ConstantExpr#emit(C, FnExpr, GeneratorAdapter);28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
SameMethod;true;clojure.lang.Compiler.ConstantExpr#hasJavaClass();clojure.lang.Compiler.ConstantExpr#hasJavaClass();28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
SameMethod;true;clojure.lang.Compiler.ConstantExpr#getJavaClass();clojure.lang.Compiler.ConstantExpr#getJavaClass();28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
SameType;true;clojure.lang.Compiler.ConstantExpr.Parser;clojure.lang.Compiler.ConstantExpr.Parser;28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
SameMethod;true;clojure.lang.Compiler.ConstantExpr.Parser#parse(C, Object);clojure.lang.Compiler.ConstantExpr.Parser#parse(C, Object);28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emitVar(GeneratorAdapter, Var);clojure.lang.Compiler.FnExpr#emitVar(GeneratorAdapter, Var);28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emitKeyword(GeneratorAdapter, Keyword);clojure.lang.Compiler.FnExpr#emitKeyword(GeneratorAdapter, Keyword);28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
SameMethod;true;clojure.lang.Compiler#registerKeyword(Keyword);clojure.lang.Compiler#registerKeyword(Keyword);28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
SameMethod;true;clojure.lang.Compiler#registerVar(Var);clojure.lang.Compiler#registerVar(Var);28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
SameType;true;clojure.lang.DynamicClassLoader;clojure.lang.DynamicClassLoader;28b5f12e50f37f1e520512c96c7d18494e779eca;Mon Jan 28 20:22:41 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;aa7ccdb5cfa4067dddef8c189721af99d858c731;Mon Jan 28 21:23:41 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);aa7ccdb5cfa4067dddef8c189721af99d858c731;Mon Jan 28 21:23:41 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;aa7ccdb5cfa4067dddef8c189721af99d858c731;Mon Jan 28 21:23:41 2008 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;e0d36eb1e7d29892a46ed48c5c44ba8046e33571;Tue Jan 29 21:53:16 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;e0d36eb1e7d29892a46ed48c5c44ba8046e33571;Tue Jan 29 21:53:16 2008 +0000
SameType;true;clojure.lang.MapEntry;clojure.lang.MapEntry;e0d36eb1e7d29892a46ed48c5c44ba8046e33571;Tue Jan 29 21:53:16 2008 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;e0d36eb1e7d29892a46ed48c5c44ba8046e33571;Tue Jan 29 21:53:16 2008 +0000
SameType;true;clojure.lang.PersistentHashMap.LeafNode;clojure.lang.PersistentHashMap.LeafNode;e0d36eb1e7d29892a46ed48c5c44ba8046e33571;Tue Jan 29 21:53:16 2008 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;e0d36eb1e7d29892a46ed48c5c44ba8046e33571;Tue Jan 29 21:53:16 2008 +0000
SameType;true;clojure.lang.PersistentTreeMap.Node;clojure.lang.PersistentTreeMap.Node;e0d36eb1e7d29892a46ed48c5c44ba8046e33571;Tue Jan 29 21:53:16 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;e0d36eb1e7d29892a46ed48c5c44ba8046e33571;Tue Jan 29 21:53:16 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;037d1652395349b60194a67887bbb292f77e4d05;Thu Jan 31 17:18:17 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;037d1652395349b60194a67887bbb292f77e4d05;Thu Jan 31 17:18:17 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);037d1652395349b60194a67887bbb292f77e4d05;Thu Jan 31 17:18:17 2008 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;037d1652395349b60194a67887bbb292f77e4d05;Thu Jan 31 17:18:17 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);037d1652395349b60194a67887bbb292f77e4d05;Thu Jan 31 17:18:17 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;7a23f637db7aa64eb3df471d1f44fc53262264a8;Fri Feb 1 12:39:47 2008 +0000
SameType;true;clojure.lang.APersistentVector.SubVector;clojure.lang.APersistentVector.SubVector;7a23f637db7aa64eb3df471d1f44fc53262264a8;Fri Feb 1 12:39:47 2008 +0000
SameMethod;true;clojure.lang.APersistentVector.SubVector#assocN(int, Object);clojure.lang.APersistentVector.SubVector#assocN(int, Object);7a23f637db7aa64eb3df471d1f44fc53262264a8;Fri Feb 1 12:39:47 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;ce4f1d217a0b2384fedfccaceb7468e6a2dad99d;Sun Feb 3 15:01:05 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;ce4f1d217a0b2384fedfccaceb7468e6a2dad99d;Sun Feb 3 15:01:05 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);ce4f1d217a0b2384fedfccaceb7468e6a2dad99d;Sun Feb 3 15:01:05 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;2133a7556144c5d1fdac70c6051dc36d8cc5cfc4;Sun Feb 3 19:16:40 2008 +0000
SameMethod;true;clojure.lang.RT#count(Object);clojure.lang.RT#count(Object);2133a7556144c5d1fdac70c6051dc36d8cc5cfc4;Sun Feb 3 19:16:40 2008 +0000
SameMethod;true;clojure.lang.RT#get(Object, Object);clojure.lang.RT#get(Object, Object);2133a7556144c5d1fdac70c6051dc36d8cc5cfc4;Sun Feb 3 19:16:40 2008 +0000
SameMethod;true;clojure.lang.RT#get(Object, Object, Object);clojure.lang.RT#get(Object, Object, Object);2133a7556144c5d1fdac70c6051dc36d8cc5cfc4;Sun Feb 3 19:16:40 2008 +0000
SameMethod;true;clojure.lang.RT#contains(Object, Object);clojure.lang.RT#contains(Object, Object);2133a7556144c5d1fdac70c6051dc36d8cc5cfc4;Sun Feb 3 19:16:40 2008 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);2133a7556144c5d1fdac70c6051dc36d8cc5cfc4;Sun Feb 3 19:16:40 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;9ba0f1bbd25b92467b7da6facdc9bbf8cdedbebf;Mon Feb 4 14:30:20 2008 +0000
SameMethod;true;clojure.lang.Compiler#isMacro(Object);clojure.lang.Compiler#isMacro(Object);9ba0f1bbd25b92467b7da6facdc9bbf8cdedbebf;Mon Feb 4 14:30:20 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;4ee2a3c25be7bb57375683f3a807fb75ed972ab8;Mon Feb 4 18:29:16 2008 +0000
SameMethod;true;clojure.lang.RT#get(Object, Object);clojure.lang.RT#get(Object, Object);4ee2a3c25be7bb57375683f3a807fb75ed972ab8;Mon Feb 4 18:29:16 2008 +0000
SameMethod;true;clojure.lang.RT#get(Object, Object, Object);clojure.lang.RT#get(Object, Object, Object);4ee2a3c25be7bb57375683f3a807fb75ed972ab8;Mon Feb 4 18:29:16 2008 +0000
SameMethod;true;clojure.lang.RT#contains(Object, Object);clojure.lang.RT#contains(Object, Object);4ee2a3c25be7bb57375683f3a807fb75ed972ab8;Mon Feb 4 18:29:16 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;03ef9bd21b286c6863a9342110224d3a83044d41;Tue Feb 5 12:42:56 2008 +0000
SameMethod;true;clojure.lang.Compiler#main(String[]);clojure.lang.Compiler#main(String[]);03ef9bd21b286c6863a9342110224d3a83044d41;Tue Feb 5 12:42:56 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;03ef9bd21b286c6863a9342110224d3a83044d41;Tue Feb 5 12:42:56 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;03ef9bd21b286c6863a9342110224d3a83044d41;Tue Feb 5 12:42:56 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);03ef9bd21b286c6863a9342110224d3a83044d41;Tue Feb 5 12:42:56 2008 +0000
SameType;true;clojure.lang.Script;clojure.lang.Script;03ef9bd21b286c6863a9342110224d3a83044d41;Tue Feb 5 12:42:56 2008 +0000
SameMethod;true;clojure.lang.Script#main(String[]);clojure.lang.Script#main(String[]);03ef9bd21b286c6863a9342110224d3a83044d41;Tue Feb 5 12:42:56 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2600301b4f797c09cbf9fb7539c39a6333851b4f;Tue Feb 5 21:45:57 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;2600301b4f797c09cbf9fb7539c39a6333851b4f;Tue Feb 5 21:45:57 2008 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#maybeClass(Object, boolean);clojure.lang.Compiler.HostExpr#maybeClass(Object, boolean);2600301b4f797c09cbf9fb7539c39a6333851b4f;Tue Feb 5 21:45:57 2008 +0000
SameType;true;clojure.lang.ProxyHandler;clojure.lang.ProxyHandler;bb759a177e9185741b2dc5e217061298b007cea6;Wed Feb 6 05:23:43 2008 +0000
SameMethod;true;clojure.lang.ProxyHandler#invoke(Object, Method, Object[]);clojure.lang.ProxyHandler#invoke(Object, Method, Object[]);bb759a177e9185741b2dc5e217061298b007cea6;Wed Feb 6 05:23:43 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;81d57a3b85548d82668494a95368524087055665;Wed Feb 6 05:55:44 2008 +0000
SameMethod;true;clojure.lang.RT#seq(Object);clojure.lang.RT#seq(Object);81d57a3b85548d82668494a95368524087055665;Wed Feb 6 05:55:44 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr#eval();clojure.lang.Compiler.DefExpr#eval();221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.DefExpr#emit(C, FnExpr, GeneratorAdapter);221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameType;true;clojure.lang.Compiler.VarExpr;clojure.lang.Compiler.VarExpr;221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameType;true;clojure.lang.Compiler.MetaExpr;clojure.lang.Compiler.MetaExpr;221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameMethod;true;clojure.lang.Compiler#isMacro(Object);clojure.lang.Compiler#isMacro(Object);221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameMethod;true;clojure.lang.Compiler#resolveIn(Namespace, Symbol);clojure.lang.Compiler#resolveIn(Namespace, Symbol);221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameType;true;clojure.lang.LispReader.MetaReader;clojure.lang.LispReader.MetaReader;221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameMethod;true;clojure.lang.LispReader.MetaReader#invoke(Object, Object);clojure.lang.LispReader.MetaReader#invoke(Object, Object);221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameType;true;clojure.lang.LispReader.ListReader;clojure.lang.LispReader.ListReader;221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameMethod;true;clojure.lang.LispReader.ListReader#invoke(Object, Object);clojure.lang.LispReader.ListReader#invoke(Object, Object);221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameMethod;true;clojure.lang.Var#toString();clojure.lang.Var#toString();221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameMethod;true;clojure.lang.Var#Var(Namespace, Symbol);clojure.lang.Var#Var(Namespace, Symbol);221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameMethod;true;clojure.lang.Var#setMacro();clojure.lang.Var#setMacro();221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameMethod;true;clojure.lang.Var#isMacro();clojure.lang.Var#isMacro();221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameMethod;true;clojure.lang.Var#getTag();clojure.lang.Var#getTag();221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameMethod;true;clojure.lang.Var#setTag(Symbol);clojure.lang.Var#setTag(Symbol);221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameMethod;true;clojure.lang.Var#bindRoot(Object);clojure.lang.Var#bindRoot(Object);221023b4d27e75757e3c842176872d5300d35b23;Fri Feb 8 19:11:58 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;87a669b00ec9368b392c908516f8f7bf7131e34e;Fri Feb 8 19:18:33 2008 +0000
SameMethod;true;clojure.lang.Compiler#isMacro(Object);clojure.lang.Compiler#isMacro(Object);87a669b00ec9368b392c908516f8f7bf7131e34e;Fri Feb 8 19:18:33 2008 +0000
SameMethod;true;clojure.lang.Compiler#resolveIn(Namespace, Symbol);clojure.lang.Compiler#resolveIn(Namespace, Symbol);87a669b00ec9368b392c908516f8f7bf7131e34e;Fri Feb 8 19:18:33 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;fbdbcb6b80940bb287d4ad9353094fd6980b73d3;Mon Feb 11 22:22:10 2008 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);fbdbcb6b80940bb287d4ad9353094fd6980b73d3;Mon Feb 11 22:22:10 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3129be6d80d315e3be2f77dadcf7e904fc6015f5;Mon Feb 11 22:24:18 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;76c5f7d547b6c424ccd9523a340883e1597551ce;Tue Feb 12 19:23:56 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;91ab7d7ccee1bc8236591b90100f8b0dd3163034;Tue Feb 12 20:09:27 2008 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);91ab7d7ccee1bc8236591b90100f8b0dd3163034;Tue Feb 12 20:09:27 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;60a042173db6cc290b32f925fa56747a0cdc1a80;Tue Feb 12 23:00:01 2008 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);60a042173db6cc290b32f925fa56747a0cdc1a80;Tue Feb 12 23:00:01 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;c1a8d3587c7409c44c23ea4816b134e72d4d4cd2;Wed Feb 13 02:58:14 2008 +0000
SameMethod;true;clojure.lang.Reflector#getStaticField(Class, String);clojure.lang.Reflector#getStaticField(Class, String);c1a8d3587c7409c44c23ea4816b134e72d4d4cd2;Wed Feb 13 02:58:14 2008 +0000
SameMethod;true;clojure.lang.Reflector#setStaticField(Class, String, Object);clojure.lang.Reflector#setStaticField(Class, String, Object);c1a8d3587c7409c44c23ea4816b134e72d4d4cd2;Wed Feb 13 02:58:14 2008 +0000
SameMethod;true;clojure.lang.Reflector#getInstanceField(Object, String);clojure.lang.Reflector#getInstanceField(Object, String);c1a8d3587c7409c44c23ea4816b134e72d4d4cd2;Wed Feb 13 02:58:14 2008 +0000
SameMethod;true;clojure.lang.Reflector#setInstanceField(Object, String, Object);clojure.lang.Reflector#setInstanceField(Object, String, Object);c1a8d3587c7409c44c23ea4816b134e72d4d4cd2;Wed Feb 13 02:58:14 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;4f97490f3c348d29e4450e9dbf4d2535756948d5;Fri Feb 15 15:49:23 2008 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;4f97490f3c348d29e4450e9dbf4d2535756948d5;Fri Feb 15 15:49:23 2008 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);4f97490f3c348d29e4450e9dbf4d2535756948d5;Fri Feb 15 15:49:23 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;036257426ba2886995ef7b714533ce0734433b3a;Mon Feb 18 17:05:31 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;036257426ba2886995ef7b714533ce0734433b3a;Mon Feb 18 17:05:31 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);036257426ba2886995ef7b714533ce0734433b3a;Mon Feb 18 17:05:31 2008 +0000
SameType;true;clojure.lang.Script;clojure.lang.Script;036257426ba2886995ef7b714533ce0734433b3a;Mon Feb 18 17:05:31 2008 +0000
SameMethod;true;clojure.lang.Script#main(String[]);clojure.lang.Script#main(String[]);036257426ba2886995ef7b714533ce0734433b3a;Mon Feb 18 17:05:31 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;2244e1353f1c9d7bde664ed56ef150f81c61f132;Thu Feb 21 01:17:15 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;91b5515ecf44af1140d4d8293b8b55cd73a9336a;Thu Feb 21 15:53:44 2008 +0000
SameMethod;true;clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);91b5515ecf44af1140d4d8293b8b55cd73a9336a;Thu Feb 21 15:53:44 2008 +0000
SameMethod;true;clojure.lang.LispReader#readToken(PushbackReader, char);clojure.lang.LispReader#readToken(PushbackReader, char);91b5515ecf44af1140d4d8293b8b55cd73a9336a;Thu Feb 21 15:53:44 2008 +0000
SameMethod;true;clojure.lang.LispReader#readNumber(PushbackReader, char);clojure.lang.LispReader#readNumber(PushbackReader, char);91b5515ecf44af1140d4d8293b8b55cd73a9336a;Thu Feb 21 15:53:44 2008 +0000
SameType;true;clojure.lang.LispReader.ArgReader;clojure.lang.LispReader.ArgReader;91b5515ecf44af1140d4d8293b8b55cd73a9336a;Thu Feb 21 15:53:44 2008 +0000
SameMethod;true;clojure.lang.LispReader.ArgReader#invoke(Object, Object);clojure.lang.LispReader.ArgReader#invoke(Object, Object);91b5515ecf44af1140d4d8293b8b55cd73a9336a;Thu Feb 21 15:53:44 2008 +0000
SameType;true;clojure.lang.LispReader.UnquoteReader;clojure.lang.LispReader.UnquoteReader;91b5515ecf44af1140d4d8293b8b55cd73a9336a;Thu Feb 21 15:53:44 2008 +0000
SameMethod;true;clojure.lang.LispReader.UnquoteReader#invoke(Object, Object);clojure.lang.LispReader.UnquoteReader#invoke(Object, Object);91b5515ecf44af1140d4d8293b8b55cd73a9336a;Thu Feb 21 15:53:44 2008 +0000
SameMethod;true;clojure.lang.LispReader#readDelimitedList(char, PushbackReader, boolean);clojure.lang.LispReader#readDelimitedList(char, PushbackReader, boolean);91b5515ecf44af1140d4d8293b8b55cd73a9336a;Thu Feb 21 15:53:44 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;268230358a78e19ba055342ddcaa8d5fd02a3a50;Thu Feb 21 20:49:29 2008 +0000
SameMethod;true;clojure.lang.RT#contains(Object, Object);clojure.lang.RT#contains(Object, Object);268230358a78e19ba055342ddcaa8d5fd02a3a50;Thu Feb 21 20:49:29 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;1c9de854a30e116e502c2d0bebaadce8f80219fb;Thu Feb 21 20:52:45 2008 +0000
SameMethod;true;clojure.lang.RT#get(Object, Object);clojure.lang.RT#get(Object, Object);1c9de854a30e116e502c2d0bebaadce8f80219fb;Thu Feb 21 20:52:45 2008 +0000
SameMethod;true;clojure.lang.RT#get(Object, Object, Object);clojure.lang.RT#get(Object, Object, Object);1c9de854a30e116e502c2d0bebaadce8f80219fb;Thu Feb 21 20:52:45 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;9671d467aca8b7c9cae17e40ba3ff81a611fbe22;Thu Feb 21 21:09:58 2008 +0000
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Compiler#lookupVar(Symbol, boolean);9671d467aca8b7c9cae17e40ba3ff81a611fbe22;Thu Feb 21 21:09:58 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;14500dafbc4effea7aa6a15c68d29429a439fa0e;Fri Feb 22 14:36:31 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;694abf6d09de56e6c03d89650143fc1a5f5075df;Sat Feb 23 19:36:39 2008 +0000
SameType;true;clojure.lang.DynamicClassLoader;clojure.lang.DynamicClassLoader;b0440a219c31267fc09bb00471acf3b3aaf73f5a;Tue Feb 26 13:24:46 2008 +0000
SameMethod;true;clojure.lang.DynamicClassLoader#DynamicClassLoader();clojure.lang.DynamicClassLoader#DynamicClassLoader();b0440a219c31267fc09bb00471acf3b3aaf73f5a;Tue Feb 26 13:24:46 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e8fdf8f175dc5d48113b5715cb8c909a2bc64405;Thu Feb 28 13:51:53 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;9aaa7bf632bf84a3d32788f23116d07e6fe2b1a8;Sat Mar 1 01:02:59 2008 +0000
SameMethod;true;clojure.lang.RT#init();clojure.lang.RT#init();9aaa7bf632bf84a3d32788f23116d07e6fe2b1a8;Sat Mar 1 01:02:59 2008 +0000
PullU Method;true;clojure.lang.MapEntry#valAt(Object);clojure.lang.AMapEntry#valAt(Object);978af02b0a7e2b430c917b32b58215edcae2ad2d;Sat Mar 1 15:54:59 2008 +0000
SameType;true;clojure.lang.MapEntry;clojure.lang.MapEntry;978af02b0a7e2b430c917b32b58215edcae2ad2d;Sat Mar 1 15:54:59 2008 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;978af02b0a7e2b430c917b32b58215edcae2ad2d;Sat Mar 1 15:54:59 2008 +0000
SameMethod;true;clojure.lang.PersistentArrayMap#entryAt(Object);clojure.lang.PersistentArrayMap#entryAt(Object);978af02b0a7e2b430c917b32b58215edcae2ad2d;Sat Mar 1 15:54:59 2008 +0000
SameType;true;clojure.lang.PersistentArrayMap.Seq;clojure.lang.PersistentArrayMap.Seq;978af02b0a7e2b430c917b32b58215edcae2ad2d;Sat Mar 1 15:54:59 2008 +0000
SameMethod;true;clojure.lang.PersistentArrayMap.Seq#first();clojure.lang.PersistentArrayMap.Seq#first();978af02b0a7e2b430c917b32b58215edcae2ad2d;Sat Mar 1 15:54:59 2008 +0000
SameType;true;clojure.lang.PersistentArrayMap.Iter;clojure.lang.PersistentArrayMap.Iter;978af02b0a7e2b430c917b32b58215edcae2ad2d;Sat Mar 1 15:54:59 2008 +0000
SameMethod;true;clojure.lang.PersistentArrayMap.Iter#next();clojure.lang.PersistentArrayMap.Iter#next();978af02b0a7e2b430c917b32b58215edcae2ad2d;Sat Mar 1 15:54:59 2008 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;978af02b0a7e2b430c917b32b58215edcae2ad2d;Sat Mar 1 15:54:59 2008 +0000
SameType;true;clojure.lang.PersistentHashMap.LeafNode;clojure.lang.PersistentHashMap.LeafNode;978af02b0a7e2b430c917b32b58215edcae2ad2d;Sat Mar 1 15:54:59 2008 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;978af02b0a7e2b430c917b32b58215edcae2ad2d;Sat Mar 1 15:54:59 2008 +0000
SameType;true;clojure.lang.PersistentTreeMap.Node;clojure.lang.PersistentTreeMap.Node;978af02b0a7e2b430c917b32b58215edcae2ad2d;Sat Mar 1 15:54:59 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;978af02b0a7e2b430c917b32b58215edcae2ad2d;Sat Mar 1 15:54:59 2008 +0000
SameMethod;true;clojure.lang.RT#assoc(Object, Object, Object);clojure.lang.RT#assoc(Object, Object, Object);978af02b0a7e2b430c917b32b58215edcae2ad2d;Sat Mar 1 15:54:59 2008 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);978af02b0a7e2b430c917b32b58215edcae2ad2d;Sat Mar 1 15:54:59 2008 +0000
SameMethod;true;clojure.lang.RT#map(Object[]);clojure.lang.RT#map(Object[]);978af02b0a7e2b430c917b32b58215edcae2ad2d;Sat Mar 1 15:54:59 2008 +0000
ExtractMethod;true;clojure.lang.APersistentVector#equals(Object);clojure.lang.APersistentVector#doEquals(IPersistentVector, Object);7705d1c11ba26627f4889f7b6afceb1e634c7839;Sat Mar 1 16:34:39 2008 +0000
ExtractMethod;true;clojure.lang.AMapEntry#equals(Object);clojure.lang.APersistentVector#doEquals(IPersistentVector, Object);7705d1c11ba26627f4889f7b6afceb1e634c7839;Sat Mar 1 16:34:39 2008 +0000
SameType;true;clojure.lang.AMapEntry;clojure.lang.AMapEntry;7705d1c11ba26627f4889f7b6afceb1e634c7839;Sat Mar 1 16:34:39 2008 +0000
SameMethod;true;clojure.lang.AMapEntry#equals(Object);clojure.lang.AMapEntry#equals(Object);7705d1c11ba26627f4889f7b6afceb1e634c7839;Sat Mar 1 16:34:39 2008 +0000
SameMethod;true;clojure.lang.AMapEntry#hashCode();clojure.lang.AMapEntry#hashCode();7705d1c11ba26627f4889f7b6afceb1e634c7839;Sat Mar 1 16:34:39 2008 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;7705d1c11ba26627f4889f7b6afceb1e634c7839;Sat Mar 1 16:34:39 2008 +0000
SameMethod;true;clojure.lang.APersistentMap#cons(Object);clojure.lang.APersistentMap#cons(Object);7705d1c11ba26627f4889f7b6afceb1e634c7839;Sat Mar 1 16:34:39 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;7705d1c11ba26627f4889f7b6afceb1e634c7839;Sat Mar 1 16:34:39 2008 +0000
SameMethod;true;clojure.lang.APersistentVector#equals(Object);clojure.lang.APersistentVector#equals(Object);7705d1c11ba26627f4889f7b6afceb1e634c7839;Sat Mar 1 16:34:39 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;a3ed64875b5c587db63ae5e9a84095a4eaab5d60;Sun Mar 2 18:58:21 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;1eb86f5103d7aa46b40d1cdfca343a0e30f53237;Mon Mar 3 15:57:46 2008 +0000
SameMethod;true;clojure.lang.RT#seq(Object);clojure.lang.RT#seq(Object);1eb86f5103d7aa46b40d1cdfca343a0e30f53237;Mon Mar 3 15:57:46 2008 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;50eed41cee8a274ac37a5052ae1f3cd232750176;Mon Mar 3 21:14:24 2008 +0000
SameMethod;true;clojure.lang.APersistentMap#containsAll(Collection);clojure.lang.APersistentMap#containsAll(Collection);50eed41cee8a274ac37a5052ae1f3cd232750176;Mon Mar 3 21:14:24 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;1a399df8f3f3bcb9d3a92a584fa9714832ab550f;Tue Mar 4 02:43:23 2008 +0000
SameType;true;clojure.lang.Compiler.EmptyExpr;clojure.lang.Compiler.EmptyExpr;1a399df8f3f3bcb9d3a92a584fa9714832ab550f;Tue Mar 4 02:43:23 2008 +0000
SameMethod;true;clojure.lang.Compiler.EmptyExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.EmptyExpr#emit(C, FnExpr, GeneratorAdapter);1a399df8f3f3bcb9d3a92a584fa9714832ab550f;Tue Mar 4 02:43:23 2008 +0000
SameMethod;true;clojure.lang.Compiler.EmptyExpr#getJavaClass();clojure.lang.Compiler.EmptyExpr#getJavaClass();1a399df8f3f3bcb9d3a92a584fa9714832ab550f;Tue Mar 4 02:43:23 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);1a399df8f3f3bcb9d3a92a584fa9714832ab550f;Tue Mar 4 02:43:23 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;1a399df8f3f3bcb9d3a92a584fa9714832ab550f;Tue Mar 4 02:43:23 2008 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;1a399df8f3f3bcb9d3a92a584fa9714832ab550f;Tue Mar 4 02:43:23 2008 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);1a399df8f3f3bcb9d3a92a584fa9714832ab550f;Tue Mar 4 02:43:23 2008 +0000
SameType;true;clojure.lang.PersistentHashSet;clojure.lang.PersistentHashSet;1a399df8f3f3bcb9d3a92a584fa9714832ab550f;Tue Mar 4 02:43:23 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;1a399df8f3f3bcb9d3a92a584fa9714832ab550f;Tue Mar 4 02:43:23 2008 +0000
SameMethod;true;clojure.lang.RT#contains(Object, Object);clojure.lang.RT#contains(Object, Object);1a399df8f3f3bcb9d3a92a584fa9714832ab550f;Tue Mar 4 02:43:23 2008 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);1a399df8f3f3bcb9d3a92a584fa9714832ab550f;Tue Mar 4 02:43:23 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;99d9d2da0a3363c56714a6c44844f7e90ca2601e;Tue Mar 4 19:26:15 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;99d9d2da0a3363c56714a6c44844f7e90ca2601e;Tue Mar 4 19:26:15 2008 +0000
SameMethod;true;clojure.lang.Compiler.TryExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.TryExpr#emit(C, FnExpr, GeneratorAdapter);99d9d2da0a3363c56714a6c44844f7e90ca2601e;Tue Mar 4 19:26:15 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;8888d4dfd628a2d8d552b40190014e380168d3fa;Tue Mar 4 23:20:06 2008 +0000
SameMethod;true;clojure.lang.RT#init();clojure.lang.RT#init();8888d4dfd628a2d8d552b40190014e380168d3fa;Tue Mar 4 23:20:06 2008 +0000
SameType;true;clojure.lang.MapEntry;clojure.lang.MapEntry;bc6abe711da5fc60cb4684c81f99276dc4f02d7d;Wed Mar 5 17:59:26 2008 +0000
RenameMethod;false;clojure.lang.PersistentHashMap.BitmapIndexedNode#seq();clojure.lang.PersistentHashMap.BitmapIndexedNode#nodeSeq();91dd32a14013140d5321942cb041631109ba7480;Wed Mar 5 18:09:24 2008 +0000
RenameMethod;false;clojure.lang.PersistentHashMap.EmptyNode#seq();clojure.lang.PersistentHashMap.EmptyNode#nodeSeq();91dd32a14013140d5321942cb041631109ba7480;Wed Mar 5 18:09:24 2008 +0000
RenameMethod;false;clojure.lang.PersistentHashMap.FullNode#seq();clojure.lang.PersistentHashMap.FullNode#nodeSeq();91dd32a14013140d5321942cb041631109ba7480;Wed Mar 5 18:09:24 2008 +0000
RenameMethod;false;clojure.lang.PersistentHashMap.HashCollisionNode#seq();clojure.lang.PersistentHashMap.HashCollisionNode#nodeSeq();91dd32a14013140d5321942cb041631109ba7480;Wed Mar 5 18:09:24 2008 +0000
RenameMethod;false;clojure.lang.PersistentHashMap.LeafNode#seq();clojure.lang.PersistentHashMap.LeafNode#nodeSeq();91dd32a14013140d5321942cb041631109ba7480;Wed Mar 5 18:09:24 2008 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;91dd32a14013140d5321942cb041631109ba7480;Wed Mar 5 18:09:24 2008 +0000
SameMethod;true;clojure.lang.PersistentHashMap#seq();clojure.lang.PersistentHashMap#seq();91dd32a14013140d5321942cb041631109ba7480;Wed Mar 5 18:09:24 2008 +0000
SameType;true;clojure.lang.PersistentHashMap.INode;clojure.lang.PersistentHashMap.INode;91dd32a14013140d5321942cb041631109ba7480;Wed Mar 5 18:09:24 2008 +0000
SameType;true;clojure.lang.PersistentHashMap.EmptyNode;clojure.lang.PersistentHashMap.EmptyNode;91dd32a14013140d5321942cb041631109ba7480;Wed Mar 5 18:09:24 2008 +0000
SameType;true;clojure.lang.PersistentHashMap.FullNode;clojure.lang.PersistentHashMap.FullNode;91dd32a14013140d5321942cb041631109ba7480;Wed Mar 5 18:09:24 2008 +0000
SameType;true;clojure.lang.PersistentHashMap.FullNode.Seq;clojure.lang.PersistentHashMap.FullNode.Seq;91dd32a14013140d5321942cb041631109ba7480;Wed Mar 5 18:09:24 2008 +0000
SameMethod;true;clojure.lang.PersistentHashMap.FullNode.Seq#create(FullNode, int);clojure.lang.PersistentHashMap.FullNode.Seq#create(FullNode, int);91dd32a14013140d5321942cb041631109ba7480;Wed Mar 5 18:09:24 2008 +0000
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode;clojure.lang.PersistentHashMap.BitmapIndexedNode;91dd32a14013140d5321942cb041631109ba7480;Wed Mar 5 18:09:24 2008 +0000
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode.Seq;clojure.lang.PersistentHashMap.BitmapIndexedNode.Seq;91dd32a14013140d5321942cb041631109ba7480;Wed Mar 5 18:09:24 2008 +0000
SameMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode.Seq#create(BitmapIndexedNode, int);clojure.lang.PersistentHashMap.BitmapIndexedNode.Seq#create(BitmapIndexedNode, int);91dd32a14013140d5321942cb041631109ba7480;Wed Mar 5 18:09:24 2008 +0000
SameType;true;clojure.lang.PersistentHashMap.LeafNode;clojure.lang.PersistentHashMap.LeafNode;91dd32a14013140d5321942cb041631109ba7480;Wed Mar 5 18:09:24 2008 +0000
SameType;true;clojure.lang.PersistentHashMap.HashCollisionNode;clojure.lang.PersistentHashMap.HashCollisionNode;91dd32a14013140d5321942cb041631109ba7480;Wed Mar 5 18:09:24 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7b35e6b30952acb64e9cc472a700917de5785d84;Fri Mar 7 15:49:04 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;7b35e6b30952acb64e9cc472a700917de5785d84;Fri Mar 7 15:49:04 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();7b35e6b30952acb64e9cc472a700917de5785d84;Fri Mar 7 15:49:04 2008 +0000
RenameMethod;true;clojure.lang.PersistentVector#doCons(int, Object[], Object, Box);clojure.lang.PersistentVector#pushTail(int, Object[], Object[], Box);dd665dc8a62f7636c3e26dbbddd92b1089294e31;Sat Mar 8 19:32:36 2008 +0000
RenameMethod;true;clojure.lang.PersistentVector#doPop(int, Object[]);clojure.lang.PersistentVector#popTail(int, Object[], Box);dd665dc8a62f7636c3e26dbbddd92b1089294e31;Sat Mar 8 19:32:36 2008 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;dd665dc8a62f7636c3e26dbbddd92b1089294e31;Sat Mar 8 19:32:36 2008 +0000
SameMethod;true;clojure.lang.PersistentVector#create(Object[]);clojure.lang.PersistentVector#create(Object[]);dd665dc8a62f7636c3e26dbbddd92b1089294e31;Sat Mar 8 19:32:36 2008 +0000
SameMethod;true;clojure.lang.PersistentVector#nth(int);clojure.lang.PersistentVector#nth(int);dd665dc8a62f7636c3e26dbbddd92b1089294e31;Sat Mar 8 19:32:36 2008 +0000
SameMethod;true;clojure.lang.PersistentVector#assocN(int, Object);clojure.lang.PersistentVector#assocN(int, Object);dd665dc8a62f7636c3e26dbbddd92b1089294e31;Sat Mar 8 19:32:36 2008 +0000
SameMethod;true;clojure.lang.PersistentVector#withMeta(IPersistentMap);clojure.lang.PersistentVector#withMeta(IPersistentMap);dd665dc8a62f7636c3e26dbbddd92b1089294e31;Sat Mar 8 19:32:36 2008 +0000
SameMethod;true;clojure.lang.PersistentVector#cons(Object);clojure.lang.PersistentVector#cons(Object);dd665dc8a62f7636c3e26dbbddd92b1089294e31;Sat Mar 8 19:32:36 2008 +0000
SameMethod;true;clojure.lang.PersistentVector#pop();clojure.lang.PersistentVector#pop();dd665dc8a62f7636c3e26dbbddd92b1089294e31;Sat Mar 8 19:32:36 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;5dae36c1fe564299510a76324fc382b2b9374b9d;Mon Mar 10 14:05:24 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;5dae36c1fe564299510a76324fc382b2b9374b9d;Mon Mar 10 14:05:24 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);5dae36c1fe564299510a76324fc382b2b9374b9d;Mon Mar 10 14:05:24 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6ee1f3f74a64463ebaf5d0e9eaa456bf7dd10dfe;Mon Mar 10 14:20:42 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;6ee1f3f74a64463ebaf5d0e9eaa456bf7dd10dfe;Mon Mar 10 14:20:42 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);6ee1f3f74a64463ebaf5d0e9eaa456bf7dd10dfe;Mon Mar 10 14:20:42 2008 +0000
ExtractMethod;true;clojure.lang.RT#init();clojure.lang.RT#loadResourceScript(String);19449a772787d94dee4bb31f9b5081e934e79d90;Tue Mar 11 20:37:06 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;19449a772787d94dee4bb31f9b5081e934e79d90;Tue Mar 11 20:37:06 2008 +0000
SameType;true;clojure.lang.Compiler.AssignExpr;clojure.lang.Compiler.AssignExpr;19449a772787d94dee4bb31f9b5081e934e79d90;Tue Mar 11 20:37:06 2008 +0000
SameType;true;clojure.lang.Compiler.AssignExpr.Parser;clojure.lang.Compiler.AssignExpr.Parser;19449a772787d94dee4bb31f9b5081e934e79d90;Tue Mar 11 20:37:06 2008 +0000
SameMethod;true;clojure.lang.Compiler.AssignExpr.Parser#parse(C, Object);clojure.lang.Compiler.AssignExpr.Parser#parse(C, Object);19449a772787d94dee4bb31f9b5081e934e79d90;Tue Mar 11 20:37:06 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;19449a772787d94dee4bb31f9b5081e934e79d90;Tue Mar 11 20:37:06 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;19449a772787d94dee4bb31f9b5081e934e79d90;Tue Mar 11 20:37:06 2008 +0000
SameMethod;true;clojure.lang.RT#init();clojure.lang.RT#init();19449a772787d94dee4bb31f9b5081e934e79d90;Tue Mar 11 20:37:06 2008 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;1fa64dabf0f071a37fb9df6ff4a6575a2da21be5;Tue Mar 11 22:58:38 2008 +0000
SameMethod;true;clojure.lang.ASeq#toArray(Object[]);clojure.lang.ASeq#toArray(Object[]);1fa64dabf0f071a37fb9df6ff4a6575a2da21be5;Tue Mar 11 22:58:38 2008 +0000
SameType;true;clojure.lang.LineNumberingPushbackReader;clojure.lang.LineNumberingPushbackReader;6fd9ad3deb17e3979ebae6ba193dc042db1e5bc3;Tue Mar 11 23:51:21 2008 +0000
SameType;true;clojure.lang.AFn;clojure.lang.AFn;c51522e5fa50e9618fcaaa126376b73acdff351e;Wed Mar 12 01:17:20 2008 +0000
SameMethod;true;clojure.lang.AFn#throwArity();clojure.lang.AFn#throwArity();c51522e5fa50e9618fcaaa126376b73acdff351e;Wed Mar 12 01:17:20 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;6c695a0c02ab8f0997d185ad49757b640ccc86ca;Wed Mar 12 18:28:44 2008 +0000
SameType;true;clojure.lang.LispReader.FnReader;clojure.lang.LispReader.FnReader;6c695a0c02ab8f0997d185ad49757b640ccc86ca;Wed Mar 12 18:28:44 2008 +0000
SameMethod;true;clojure.lang.LispReader.FnReader#invoke(Object, Object);clojure.lang.LispReader.FnReader#invoke(Object, Object);6c695a0c02ab8f0997d185ad49757b640ccc86ca;Wed Mar 12 18:28:44 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;6c695a0c02ab8f0997d185ad49757b640ccc86ca;Wed Mar 12 18:28:44 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);6c695a0c02ab8f0997d185ad49757b640ccc86ca;Wed Mar 12 18:28:44 2008 +0000
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#call();clojure.lang.Keyword#call();8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke();clojure.lang.Keyword#invoke();8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object);clojure.lang.Keyword#invoke(Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object);clojure.lang.Keyword#invoke(Object, Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object, Object);clojure.lang.Keyword#invoke(Object, Object, Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object);clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object);clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object);clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);clojure.lang.Keyword#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);8a165b233e9beab13ed73bcf5d41f40affac6509;Wed Mar 12 18:33:49 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2e300c1a0a82c39d5e6b5766f1e8df422ebf31b1;Wed Mar 12 23:39:55 2008 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;2e300c1a0a82c39d5e6b5766f1e8df422ebf31b1;Wed Mar 12 23:39:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emit(C, FnExpr, GeneratorAdapter);2e300c1a0a82c39d5e6b5766f1e8df422ebf31b1;Wed Mar 12 23:39:55 2008 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;1527b871c6edb798c7b8877d95864fbba3aca5fc;Thu Mar 13 19:24:06 2008 +0000
SameType;true;clojure.lang.Agent.Action;clojure.lang.Agent.Action;1527b871c6edb798c7b8877d95864fbba3aca5fc;Thu Mar 13 19:24:06 2008 +0000
SameMethod;true;clojure.lang.Agent.Action#doRun(Action);clojure.lang.Agent.Action#doRun(Action);1527b871c6edb798c7b8877d95864fbba3aca5fc;Thu Mar 13 19:24:06 2008 +0000
SameMethod;true;clojure.lang.Agent#setState(Object);clojure.lang.Agent#setState(Object);1527b871c6edb798c7b8877d95864fbba3aca5fc;Thu Mar 13 19:24:06 2008 +0000
SameMethod;true;clojure.lang.Agent#enqueue(Action);clojure.lang.Agent#enqueue(Action);1527b871c6edb798c7b8877d95864fbba3aca5fc;Thu Mar 13 19:24:06 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;1527b871c6edb798c7b8877d95864fbba3aca5fc;Thu Mar 13 19:24:06 2008 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;783fda0cd273d56874e9e20dbda981b5a63bc41d;Thu Mar 13 19:27:21 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;18ba71fd4928f443aaae5bd9926f25ff62b44fb4;Fri Mar 14 12:10:23 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);18ba71fd4928f443aaae5bd9926f25ff62b44fb4;Fri Mar 14 12:10:23 2008 +0000
SameType;true;clojure.lang.Script;clojure.lang.Script;18ba71fd4928f443aaae5bd9926f25ff62b44fb4;Fri Mar 14 12:10:23 2008 +0000
SameMethod;true;clojure.lang.Script#main(String[]);clojure.lang.Script#main(String[]);18ba71fd4928f443aaae5bd9926f25ff62b44fb4;Fri Mar 14 12:10:23 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c5d47859139bb5fd0a8164aca15c896d19790645;Fri Mar 14 12:37:57 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);c5d47859139bb5fd0a8164aca15c896d19790645;Fri Mar 14 12:37:57 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;ab15ddd66221e6a0fdee99fc614b6b204524cb89;Sun Mar 16 19:21:59 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);ab15ddd66221e6a0fdee99fc614b6b204524cb89;Sun Mar 16 19:21:59 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;8f5eafce69ab8245a1cffaa38da8fcc332c1600b;Mon Mar 17 12:56:47 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);8f5eafce69ab8245a1cffaa38da8fcc332c1600b;Mon Mar 17 12:56:47 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;7a2d9951b93b6bcb7d32af70ebfba05612d3f6ad;Thu Mar 20 18:28:44 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);7a2d9951b93b6bcb7d32af70ebfba05612d3f6ad;Thu Mar 20 18:28:44 2008 +0000
SameType;true;clojure.lang.AFn;clojure.lang.AFn;26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(int, Expr, String, IPersistentVector);clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(int, Expr, String, IPersistentVector);26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(int, Class, String, IPersistentVector);clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(int, Class, String, IPersistentVector);26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#getJavaClass();clojure.lang.Compiler.FnExpr#getJavaClass();26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameType;true;clojure.lang.IFn;clojure.lang.IFn;26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameMethod;true;clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;26dc63797bf65aeedb91d01dbf6edf2f339e972a;Sun Mar 23 17:38:09 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;bb2105c6dd18f850b6d255d7959e7745f670ad90;Sun Mar 23 23:59:17 2008 +0000
SameMethod;true;clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);bb2105c6dd18f850b6d255d7959e7745f670ad90;Sun Mar 23 23:59:17 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e5f0446e668b7593a41fbe7bc9d7bbc268a8a98b;Mon Mar 24 13:54:39 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;e5f0446e668b7593a41fbe7bc9d7bbc268a8a98b;Mon Mar 24 13:54:39 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);e5f0446e668b7593a41fbe7bc9d7bbc268a8a98b;Mon Mar 24 13:54:39 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;135c7b3bf87ea2e9e201b52ae8ff48b44f2bd511;Mon Mar 24 14:34:32 2008 +0000
SameMethod;true;clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);135c7b3bf87ea2e9e201b52ae8ff48b44f2bd511;Mon Mar 24 14:34:32 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2053768cab92920c42406a893601ce7351605795;Tue Mar 25 13:11:44 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;2053768cab92920c42406a893601ce7351605795;Tue Mar 25 13:11:44 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);2053768cab92920c42406a893601ce7351605795;Tue Mar 25 13:11:44 2008 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;2053768cab92920c42406a893601ce7351605795;Tue Mar 25 13:11:44 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.StaticMethodExpr#emit(C, FnExpr, GeneratorAdapter);2053768cab92920c42406a893601ce7351605795;Tue Mar 25 13:11:44 2008 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;2053768cab92920c42406a893601ce7351605795;Tue Mar 25 13:11:44 2008 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.NewExpr#emit(C, FnExpr, GeneratorAdapter);2053768cab92920c42406a893601ce7351605795;Tue Mar 25 13:11:44 2008 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;2053768cab92920c42406a893601ce7351605795;Tue Mar 25 13:11:44 2008 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emit(C, FnExpr, GeneratorAdapter);2053768cab92920c42406a893601ce7351605795;Tue Mar 25 13:11:44 2008 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;2053768cab92920c42406a893601ce7351605795;Tue Mar 25 13:11:44 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#emit(FnExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#emit(FnExpr, ClassVisitor);2053768cab92920c42406a893601ce7351605795;Tue Mar 25 13:11:44 2008 +0000
RenameMethod;true;clojure.lang.Compiler.FnMethod#emitClearArgs(GeneratorAdapter);clojure.lang.Compiler.FnMethod#emitClearLocals(GeneratorAdapter);e9b69139a0b501c802707363275c19686399a428;Tue Mar 25 16:08:08 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e9b69139a0b501c802707363275c19686399a428;Tue Mar 25 16:08:08 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;e9b69139a0b501c802707363275c19686399a428;Tue Mar 25 16:08:08 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);e9b69139a0b501c802707363275c19686399a428;Tue Mar 25 16:08:08 2008 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;e9b69139a0b501c802707363275c19686399a428;Tue Mar 25 16:08:08 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.StaticMethodExpr#emit(C, FnExpr, GeneratorAdapter);e9b69139a0b501c802707363275c19686399a428;Tue Mar 25 16:08:08 2008 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;e9b69139a0b501c802707363275c19686399a428;Tue Mar 25 16:08:08 2008 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.NewExpr#emit(C, FnExpr, GeneratorAdapter);e9b69139a0b501c802707363275c19686399a428;Tue Mar 25 16:08:08 2008 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;e9b69139a0b501c802707363275c19686399a428;Tue Mar 25 16:08:08 2008 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emit(C, FnExpr, GeneratorAdapter);e9b69139a0b501c802707363275c19686399a428;Tue Mar 25 16:08:08 2008 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;e9b69139a0b501c802707363275c19686399a428;Tue Mar 25 16:08:08 2008 +0000
SameMethod;true;clojure.lang.Compiler#getAndIncLocalNum();clojure.lang.Compiler#getAndIncLocalNum();e9b69139a0b501c802707363275c19686399a428;Tue Mar 25 16:08:08 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7e7ddae9fb72ecc6bbcd5cf31be41b9ef34f2bdc;Tue Mar 25 20:38:37 2008 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;7e7ddae9fb72ecc6bbcd5cf31be41b9ef34f2bdc;Tue Mar 25 20:38:37 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#emitClearLocals(GeneratorAdapter);clojure.lang.Compiler.FnMethod#emitClearLocals(GeneratorAdapter);7e7ddae9fb72ecc6bbcd5cf31be41b9ef34f2bdc;Tue Mar 25 20:38:37 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;5880dfc45be9e7f565df67497001efca2e9f0634;Tue Mar 25 20:40:34 2008 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;5880dfc45be9e7f565df67497001efca2e9f0634;Tue Mar 25 20:40:34 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#emitClearLocals(GeneratorAdapter);clojure.lang.Compiler.FnMethod#emitClearLocals(GeneratorAdapter);5880dfc45be9e7f565df67497001efca2e9f0634;Tue Mar 25 20:40:34 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2e1c3f3074e07fb655d122b6f3d402a268dd877b;Wed Mar 26 12:52:24 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;2e1c3f3074e07fb655d122b6f3d402a268dd877b;Wed Mar 26 12:52:24 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;f514ad60efe36befa659f19ea5f3bf17b247aaed;Wed Mar 26 18:10:53 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;f514ad60efe36befa659f19ea5f3bf17b247aaed;Wed Mar 26 18:10:53 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;f514ad60efe36befa659f19ea5f3bf17b247aaed;Wed Mar 26 18:10:53 2008 +0000
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);f514ad60efe36befa659f19ea5f3bf17b247aaed;Wed Mar 26 18:10:53 2008 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;f514ad60efe36befa659f19ea5f3bf17b247aaed;Wed Mar 26 18:10:53 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#emitClearLocals(GeneratorAdapter);clojure.lang.Compiler.FnMethod#emitClearLocals(GeneratorAdapter);f514ad60efe36befa659f19ea5f3bf17b247aaed;Wed Mar 26 18:10:53 2008 +0000
SameMethod;true;clojure.lang.Compiler#referenceLocal(Symbol);clojure.lang.Compiler#referenceLocal(Symbol);f514ad60efe36befa659f19ea5f3bf17b247aaed;Wed Mar 26 18:10:53 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;ae70ddc083a10df807f8116444c669adddb46d95;Fri Mar 28 13:53:24 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;ae70ddc083a10df807f8116444c669adddb46d95;Fri Mar 28 13:53:24 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();ae70ddc083a10df807f8116444c669adddb46d95;Fri Mar 28 13:53:24 2008 +0000
SameMethod;true;clojure.lang.Compiler#load(Reader);clojure.lang.Compiler#load(Reader);ae70ddc083a10df807f8116444c669adddb46d95;Fri Mar 28 13:53:24 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;525baa5439997789cae4a27e21cff53817a0f622;Fri Mar 28 14:04:34 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;1e31c582bfa5fbf73285efdfcf5448efc3a3935a;Sat Mar 29 22:28:52 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;60ba730223166d984466ad174835fedf77814a1d;Sun Mar 30 13:45:25 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c66601446550a1edac179bb1000dfa3bd5325b72;Sun Mar 30 19:21:56 2008 +0000
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;c66601446550a1edac179bb1000dfa3bd5325b72;Sun Mar 30 19:21:56 2008 +0000
SameType;true;clojure.lang.Compiler.RecurExpr.Parser;clojure.lang.Compiler.RecurExpr.Parser;c66601446550a1edac179bb1000dfa3bd5325b72;Sun Mar 30 19:21:56 2008 +0000
SameMethod;true;clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);c66601446550a1edac179bb1000dfa3bd5325b72;Sun Mar 30 19:21:56 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;d236b1cac8ba1a243f61a7010da9bdd848563569;Tue Apr 1 10:41:35 2008 +0000
SameMethod;true;clojure.lang.Numbers#add(double[], double);clojure.lang.Numbers#add(double[], double);d236b1cac8ba1a243f61a7010da9bdd848563569;Tue Apr 1 10:41:35 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;a639a2d64ec8d555761598e3f613b145dbbb3341;Tue Apr 1 20:25:30 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;cf71a664aa513b3e4b232b0d3cccf1b3e2b88c4f;Wed Apr 2 03:13:50 2008 +0000
SameType;true;clojure.lang.APersistentVector.Seq;clojure.lang.APersistentVector.Seq;cf71a664aa513b3e4b232b0d3cccf1b3e2b88c4f;Wed Apr 2 03:13:50 2008 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;cf71a664aa513b3e4b232b0d3cccf1b3e2b88c4f;Wed Apr 2 03:13:50 2008 +0000
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;cf71a664aa513b3e4b232b0d3cccf1b3e2b88c4f;Wed Apr 2 03:13:50 2008 +0000
SameType;true;clojure.lang.ISeq;clojure.lang.ISeq;cf71a664aa513b3e4b232b0d3cccf1b3e2b88c4f;Wed Apr 2 03:13:50 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;cf71a664aa513b3e4b232b0d3cccf1b3e2b88c4f;Wed Apr 2 03:13:50 2008 +0000
SameMethod;true;clojure.lang.Numbers#toRatio(Object);clojure.lang.Numbers#toRatio(Object);cf71a664aa513b3e4b232b0d3cccf1b3e2b88c4f;Wed Apr 2 03:13:50 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;5cafae0d97585d06fc2508baa524c0e82ab2179c;Wed Apr 2 12:55:34 2008 +0000
SameType;true;clojure.lang.APersistentVector.Seq;clojure.lang.APersistentVector.Seq;5cafae0d97585d06fc2508baa524c0e82ab2179c;Wed Apr 2 12:55:34 2008 +0000
SameMethod;true;clojure.lang.APersistentVector.Seq#reduce(IFn);clojure.lang.APersistentVector.Seq#reduce(IFn);5cafae0d97585d06fc2508baa524c0e82ab2179c;Wed Apr 2 12:55:34 2008 +0000
SameMethod;true;clojure.lang.APersistentVector.Seq#reduce(IFn, Object);clojure.lang.APersistentVector.Seq#reduce(IFn, Object);5cafae0d97585d06fc2508baa524c0e82ab2179c;Wed Apr 2 12:55:34 2008 +0000
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;5cafae0d97585d06fc2508baa524c0e82ab2179c;Wed Apr 2 12:55:34 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#reduce(IFn);clojure.lang.ArraySeq#reduce(IFn);5cafae0d97585d06fc2508baa524c0e82ab2179c;Wed Apr 2 12:55:34 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#reduce(IFn, Object);clojure.lang.ArraySeq#reduce(IFn, Object);5cafae0d97585d06fc2508baa524c0e82ab2179c;Wed Apr 2 12:55:34 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;5cafae0d97585d06fc2508baa524c0e82ab2179c;Wed Apr 2 12:55:34 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;e6cbb863fb28cd6ed1712a8fac6f517b26ac1850;Wed Apr 2 20:08:43 2008 +0000
SameMethod;true;clojure.lang.RT#seq(Object);clojure.lang.RT#seq(Object);e6cbb863fb28cd6ed1712a8fac6f517b26ac1850;Wed Apr 2 20:08:43 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;19e048471fdcdaf9b7f13a9c486ec22c2361234f;Wed Apr 2 21:23:39 2008 +0000
SameMethod;true;clojure.lang.Numbers#reduce(BigInteger);clojure.lang.Numbers#reduce(BigInteger);19e048471fdcdaf9b7f13a9c486ec22c2361234f;Wed Apr 2 21:23:39 2008 +0000
SameMethod;true;clojure.lang.Numbers$1#add(Object, Object);clojure.lang.Numbers$1#add(Object, Object);19e048471fdcdaf9b7f13a9c486ec22c2361234f;Wed Apr 2 21:23:39 2008 +0000
SameMethod;true;clojure.lang.Numbers$2#add(Object, Object);clojure.lang.Numbers$2#add(Object, Object);19e048471fdcdaf9b7f13a9c486ec22c2361234f;Wed Apr 2 21:23:39 2008 +0000
SameMethod;true;clojure.lang.Numbers$3#add(Object, Object);clojure.lang.Numbers$3#add(Object, Object);19e048471fdcdaf9b7f13a9c486ec22c2361234f;Wed Apr 2 21:23:39 2008 +0000
SameMethod;true;clojure.lang.Numbers$4#add(Object, Object);clojure.lang.Numbers$4#add(Object, Object);19e048471fdcdaf9b7f13a9c486ec22c2361234f;Wed Apr 2 21:23:39 2008 +0000
SameMethod;true;clojure.lang.Numbers$5#add(Object, Object);clojure.lang.Numbers$5#add(Object, Object);19e048471fdcdaf9b7f13a9c486ec22c2361234f;Wed Apr 2 21:23:39 2008 +0000
SameMethod;true;clojure.lang.Numbers#ops(Object, Object);clojure.lang.Numbers#ops(Object, Object);19e048471fdcdaf9b7f13a9c486ec22c2361234f;Wed Apr 2 21:23:39 2008 +0000
SameType;true;clojure.lang.Num;clojure.lang.Num;790202489f743796c20536daa26e77091720cd5c;Thu Apr 3 13:55:13 2008 +0000
SameMethod;true;clojure.lang.Num#divide(Object, Object);clojure.lang.Num#divide(Object, Object);790202489f743796c20536daa26e77091720cd5c;Thu Apr 3 13:55:13 2008 +0000
SameMethod;true;clojure.lang.Num#divide(BigInteger, BigInteger);clojure.lang.Num#divide(BigInteger, BigInteger);790202489f743796c20536daa26e77091720cd5c;Thu Apr 3 13:55:13 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;189b4aaabd2d892f754ba716c29329dd6b5dbd0e;Thu Apr 3 14:51:17 2008 +0000
SameType;true;clojure.lang.Numbers.Ops;clojure.lang.Numbers.Ops;189b4aaabd2d892f754ba716c29329dd6b5dbd0e;Thu Apr 3 14:51:17 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;189b4aaabd2d892f754ba716c29329dd6b5dbd0e;Thu Apr 3 14:51:17 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;f1e899669768695b4471f60b01d843bf3405fa9a;Thu Apr 3 15:43:43 2008 +0000
RenameMethod;true;clojure.lang.Numbers#add(int, Object);clojure.lang.Numbers#ops(Object);a8948f6cec04ecc8abfaf8b75be1fd8537e50222;Thu Apr 3 21:47:45 2008 +0000
MoveMethod;true;clojure.lang.Numbers#add(int, int);clojure.lang.Numbers.IntegerOps#add(Object, Object);a8948f6cec04ecc8abfaf8b75be1fd8537e50222;Thu Apr 3 21:47:45 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;a8948f6cec04ecc8abfaf8b75be1fd8537e50222;Thu Apr 3 21:47:45 2008 +0000
SameType;true;clojure.lang.Numbers.Ops;clojure.lang.Numbers.Ops;a8948f6cec04ecc8abfaf8b75be1fd8537e50222;Thu Apr 3 21:47:45 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;dd837d94fca1f502f62def7d734d98bff3b0b20a;Sat Apr 5 21:36:24 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;dd837d94fca1f502f62def7d734d98bff3b0b20a;Sat Apr 5 21:36:24 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;dd837d94fca1f502f62def7d734d98bff3b0b20a;Sat Apr 5 21:36:24 2008 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);dd837d94fca1f502f62def7d734d98bff3b0b20a;Sat Apr 5 21:36:24 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;dd837d94fca1f502f62def7d734d98bff3b0b20a;Sat Apr 5 21:36:24 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#eval();clojure.lang.Compiler.InstanceFieldExpr#eval();dd837d94fca1f502f62def7d734d98bff3b0b20a;Sat Apr 5 21:36:24 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceFieldExpr#emit(C, FnExpr, GeneratorAdapter);dd837d94fca1f502f62def7d734d98bff3b0b20a;Sat Apr 5 21:36:24 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;dd837d94fca1f502f62def7d734d98bff3b0b20a;Sat Apr 5 21:36:24 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#macroexpand1(Object);ee2250dd7a5b6d6c99d276fa333ca663a555f5e8;Sat Apr 5 22:30:01 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;ee2250dd7a5b6d6c99d276fa333ca663a555f5e8;Sat Apr 5 22:30:01 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);ee2250dd7a5b6d6c99d276fa333ca663a555f5e8;Sat Apr 5 22:30:01 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;353cb958642c2230236e59eb65f974a21ad6eb8e;Sun Apr 6 12:21:55 2008 +0000
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);353cb958642c2230236e59eb65f974a21ad6eb8e;Sun Apr 6 12:21:55 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2c63d7b933fb7a02714cc7864498dea96ca87618;Sun Apr 6 12:39:43 2008 +0000
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);2c63d7b933fb7a02714cc7864498dea96ca87618;Sun Apr 6 12:39:43 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7105570fc4634d8702fb1e143ce64eb2f75ed56d;Sun Apr 6 13:04:49 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;7105570fc4634d8702fb1e143ce64eb2f75ed56d;Sun Apr 6 13:04:49 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceFieldExpr#emit(C, FnExpr, GeneratorAdapter);7105570fc4634d8702fb1e143ce64eb2f75ed56d;Sun Apr 6 13:04:49 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;33f3a467e9b445fa70bd58c84a614d77335947c2;Sun Apr 6 13:49:45 2008 +0000
SameMethod;true;clojure.lang.RT#get(Object, Object);clojure.lang.RT#get(Object, Object);33f3a467e9b445fa70bd58c84a614d77335947c2;Sun Apr 6 13:49:45 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;8352100cc39e3bf451341eff335e40db930c2aa7;Mon Apr 7 00:26:29 2008 +0000
SameMethod;true;clojure.lang.RT#get(Object, Object);clojure.lang.RT#get(Object, Object);8352100cc39e3bf451341eff335e40db930c2aa7;Mon Apr 7 00:26:29 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7772fd99465cd9ebf494e12235d8f5288ed47df7;Mon Apr 7 14:25:28 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;7772fd99465cd9ebf494e12235d8f5288ed47df7;Mon Apr 7 14:25:28 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#constantType(int);clojure.lang.Compiler.FnExpr#constantType(int);7772fd99465cd9ebf494e12235d8f5288ed47df7;Mon Apr 7 14:25:28 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;a6e022a6dbaed126101d7a39a1cec35cdd75d1a3;Mon Apr 7 16:03:06 2008 +0000
SameType;true;clojure.lang.Numbers.Ops;clojure.lang.Numbers.Ops;a6e022a6dbaed126101d7a39a1cec35cdd75d1a3;Mon Apr 7 16:03:06 2008 +0000
SameMethod;true;clojure.lang.Numbers#reduce(BigInteger);clojure.lang.Numbers#reduce(BigInteger);a6e022a6dbaed126101d7a39a1cec35cdd75d1a3;Mon Apr 7 16:03:06 2008 +0000
SameType;true;clojure.lang.Numbers.IntegerOps;clojure.lang.Numbers.IntegerOps;a6e022a6dbaed126101d7a39a1cec35cdd75d1a3;Mon Apr 7 16:03:06 2008 +0000
SameType;true;clojure.lang.Numbers.FloatOps;clojure.lang.Numbers.FloatOps;a6e022a6dbaed126101d7a39a1cec35cdd75d1a3;Mon Apr 7 16:03:06 2008 +0000
SameType;true;clojure.lang.Numbers.DoubleOps;clojure.lang.Numbers.DoubleOps;a6e022a6dbaed126101d7a39a1cec35cdd75d1a3;Mon Apr 7 16:03:06 2008 +0000
SameType;true;clojure.lang.Numbers.RatioOps;clojure.lang.Numbers.RatioOps;a6e022a6dbaed126101d7a39a1cec35cdd75d1a3;Mon Apr 7 16:03:06 2008 +0000
SameType;true;clojure.lang.Numbers.BigIntegerOps;clojure.lang.Numbers.BigIntegerOps;a6e022a6dbaed126101d7a39a1cec35cdd75d1a3;Mon Apr 7 16:03:06 2008 +0000
SameType;true;clojure.lang.Numbers.BigDecimalOps;clojure.lang.Numbers.BigDecimalOps;a6e022a6dbaed126101d7a39a1cec35cdd75d1a3;Mon Apr 7 16:03:06 2008 +0000
SameMethod;true;clojure.lang.Numbers#ops(Object);clojure.lang.Numbers#ops(Object);a6e022a6dbaed126101d7a39a1cec35cdd75d1a3;Mon Apr 7 16:03:06 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;2391006b61f59fc4e9b60befce05d45a19dcec11;Mon Apr 7 20:12:36 2008 +0000
SameType;true;clojure.lang.Numbers.Ops;clojure.lang.Numbers.Ops;2391006b61f59fc4e9b60befce05d45a19dcec11;Mon Apr 7 20:12:36 2008 +0000
SameMethod;true;clojure.lang.Numbers#subtract(Number, Number);clojure.lang.Numbers#subtract(Number, Number);2391006b61f59fc4e9b60befce05d45a19dcec11;Mon Apr 7 20:12:36 2008 +0000
SameMethod;true;clojure.lang.Numbers#divide(BigInteger, BigInteger);clojure.lang.Numbers#divide(BigInteger, BigInteger);2391006b61f59fc4e9b60befce05d45a19dcec11;Mon Apr 7 20:12:36 2008 +0000
SameType;true;clojure.lang.Numbers.IntegerOps;clojure.lang.Numbers.IntegerOps;2391006b61f59fc4e9b60befce05d45a19dcec11;Mon Apr 7 20:12:36 2008 +0000
SameType;true;clojure.lang.Numbers.FloatOps;clojure.lang.Numbers.FloatOps;2391006b61f59fc4e9b60befce05d45a19dcec11;Mon Apr 7 20:12:36 2008 +0000
SameType;true;clojure.lang.Numbers.DoubleOps;clojure.lang.Numbers.DoubleOps;2391006b61f59fc4e9b60befce05d45a19dcec11;Mon Apr 7 20:12:36 2008 +0000
SameType;true;clojure.lang.Numbers.RatioOps;clojure.lang.Numbers.RatioOps;2391006b61f59fc4e9b60befce05d45a19dcec11;Mon Apr 7 20:12:36 2008 +0000
SameMethod;true;clojure.lang.Numbers.RatioOps#add(Number, Number);clojure.lang.Numbers.RatioOps#add(Number, Number);2391006b61f59fc4e9b60befce05d45a19dcec11;Mon Apr 7 20:12:36 2008 +0000
SameType;true;clojure.lang.Numbers.BigIntegerOps;clojure.lang.Numbers.BigIntegerOps;2391006b61f59fc4e9b60befce05d45a19dcec11;Mon Apr 7 20:12:36 2008 +0000
SameType;true;clojure.lang.Numbers.BigDecimalOps;clojure.lang.Numbers.BigDecimalOps;2391006b61f59fc4e9b60befce05d45a19dcec11;Mon Apr 7 20:12:36 2008 +0000
SameType;true;clojure.lang.Ratio;clojure.lang.Ratio;2391006b61f59fc4e9b60befce05d45a19dcec11;Mon Apr 7 20:12:36 2008 +0000
SameType;true;clojure.lang.BigNum;clojure.lang.BigNum;0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameType;true;clojure.lang.DoubleNum;clojure.lang.DoubleNum;0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameType;true;clojure.lang.FixNum;clojure.lang.FixNum;0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameType;true;clojure.lang.FloatNum;clojure.lang.FloatNum;0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameType;true;clojure.lang.IntegerNum;clojure.lang.IntegerNum;0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameMethod;true;clojure.lang.LispReader#matchNumber(String);clojure.lang.LispReader#matchNumber(String);0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameType;true;clojure.lang.Num;clojure.lang.Num;0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameType;true;clojure.lang.Numbers.BigIntegerOps;clojure.lang.Numbers.BigIntegerOps;0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#isZero(Number);clojure.lang.Numbers.BigIntegerOps#isZero(Number);0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#isPos(Number);clojure.lang.Numbers.BigIntegerOps#isPos(Number);0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#isNeg(Number);clojure.lang.Numbers.BigIntegerOps#isNeg(Number);0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#negate(Number);clojure.lang.Numbers.BigIntegerOps#negate(Number);0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#inc(Number);clojure.lang.Numbers.BigIntegerOps#inc(Number);0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#dec(Number);clojure.lang.Numbers.BigIntegerOps#dec(Number);0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameMethod;true;clojure.lang.Numbers#ops(Object);clojure.lang.Numbers#ops(Object);0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameMethod;true;clojure.lang.RT#equal(Object, Object);clojure.lang.RT#equal(Object, Object);0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameMethod;true;clojure.lang.RT#box(byte);clojure.lang.RT#box(byte);0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameMethod;true;clojure.lang.RT#box(short);clojure.lang.RT#box(short);0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameMethod;true;clojure.lang.RT#box(int);clojure.lang.RT#box(int);0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameMethod;true;clojure.lang.RT#box(long);clojure.lang.RT#box(long);0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameMethod;true;clojure.lang.RT#box(float);clojure.lang.RT#box(float);0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameMethod;true;clojure.lang.RT#box(double);clojure.lang.RT#box(double);0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameType;true;clojure.lang.RatioNum;clojure.lang.RatioNum;0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameType;true;clojure.lang.RationalNum;clojure.lang.RationalNum;0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameType;true;clojure.lang.RealNum;clojure.lang.RealNum;0fc313a3ee8a6bcf71b13122cc24d0c221b77135;Mon Apr 7 23:44:07 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;ad1efab1ade0d675d15ea51648860e74c6be2b14;Tue Apr 8 00:58:29 2008 +0000
SameMethod;true;clojure.lang.LispReader#matchNumber(String);clojure.lang.LispReader#matchNumber(String);ad1efab1ade0d675d15ea51648860e74c6be2b14;Tue Apr 8 00:58:29 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;ad1efab1ade0d675d15ea51648860e74c6be2b14;Tue Apr 8 00:58:29 2008 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);ad1efab1ade0d675d15ea51648860e74c6be2b14;Tue Apr 8 00:58:29 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;0da93ff9864827b21f9f2050e3826cda52b1fab0;Tue Apr 8 15:01:54 2008 +0000
SameType;true;clojure.lang.LispReader.StringReader;clojure.lang.LispReader.StringReader;0da93ff9864827b21f9f2050e3826cda52b1fab0;Tue Apr 8 15:01:54 2008 +0000
SameMethod;true;clojure.lang.LispReader.StringReader#invoke(Object, Object);clojure.lang.LispReader.StringReader#invoke(Object, Object);0da93ff9864827b21f9f2050e3826cda52b1fab0;Tue Apr 8 15:01:54 2008 +0000
SameType;true;clojure.lang.LispReader.CharacterReader;clojure.lang.LispReader.CharacterReader;0da93ff9864827b21f9f2050e3826cda52b1fab0;Tue Apr 8 15:01:54 2008 +0000
SameMethod;true;clojure.lang.LispReader.CharacterReader#invoke(Object, Object);clojure.lang.LispReader.CharacterReader#invoke(Object, Object);0da93ff9864827b21f9f2050e3826cda52b1fab0;Tue Apr 8 15:01:54 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;0da93ff9864827b21f9f2050e3826cda52b1fab0;Tue Apr 8 15:01:54 2008 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);0da93ff9864827b21f9f2050e3826cda52b1fab0;Tue Apr 8 15:01:54 2008 +0000
SameMethod;true;clojure.lang.RT#formatStandard(Writer, Object);clojure.lang.RT#formatStandard(Writer, Object);0da93ff9864827b21f9f2050e3826cda52b1fab0;Tue Apr 8 15:01:54 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;ef4136b83f4ac033e7b38aaf4a2f2a9160d68135;Tue Apr 8 19:52:09 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;ef4136b83f4ac033e7b38aaf4a2f2a9160d68135;Tue Apr 8 19:52:09 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;182e2a0458c8c13704b6de0d235792cbd5e7ae63;Tue Apr 8 20:18:01 2008 +0000
SameType;true;clojure.lang.Numbers.BigDecimalOps;clojure.lang.Numbers.BigDecimalOps;182e2a0458c8c13704b6de0d235792cbd5e7ae63;Tue Apr 8 20:18:01 2008 +0000
SameMethod;true;clojure.lang.Numbers.BigDecimalOps#add(Number, Number);clojure.lang.Numbers.BigDecimalOps#add(Number, Number);182e2a0458c8c13704b6de0d235792cbd5e7ae63;Tue Apr 8 20:18:01 2008 +0000
SameMethod;true;clojure.lang.Numbers.BigDecimalOps#multiply(Number, Number);clojure.lang.Numbers.BigDecimalOps#multiply(Number, Number);182e2a0458c8c13704b6de0d235792cbd5e7ae63;Tue Apr 8 20:18:01 2008 +0000
SameMethod;true;clojure.lang.Numbers.BigDecimalOps#divide(Number, Number);clojure.lang.Numbers.BigDecimalOps#divide(Number, Number);182e2a0458c8c13704b6de0d235792cbd5e7ae63;Tue Apr 8 20:18:01 2008 +0000
SameMethod;true;clojure.lang.Numbers.BigDecimalOps#quotient(Number, Number);clojure.lang.Numbers.BigDecimalOps#quotient(Number, Number);182e2a0458c8c13704b6de0d235792cbd5e7ae63;Tue Apr 8 20:18:01 2008 +0000
SameMethod;true;clojure.lang.Numbers.BigDecimalOps#remainder(Number, Number);clojure.lang.Numbers.BigDecimalOps#remainder(Number, Number);182e2a0458c8c13704b6de0d235792cbd5e7ae63;Tue Apr 8 20:18:01 2008 +0000
SameMethod;true;clojure.lang.Numbers.BigDecimalOps#negate(Number);clojure.lang.Numbers.BigDecimalOps#negate(Number);182e2a0458c8c13704b6de0d235792cbd5e7ae63;Tue Apr 8 20:18:01 2008 +0000
SameMethod;true;clojure.lang.Numbers.BigDecimalOps#inc(Number);clojure.lang.Numbers.BigDecimalOps#inc(Number);182e2a0458c8c13704b6de0d235792cbd5e7ae63;Tue Apr 8 20:18:01 2008 +0000
SameMethod;true;clojure.lang.Numbers.BigDecimalOps#dec(Number);clojure.lang.Numbers.BigDecimalOps#dec(Number);182e2a0458c8c13704b6de0d235792cbd5e7ae63;Tue Apr 8 20:18:01 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;182e2a0458c8c13704b6de0d235792cbd5e7ae63;Tue Apr 8 20:18:01 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#load(Reader);clojure.lang.Compiler#load(Reader, String, String);914c26752481ffd380b5e4f8e7754a7a68d27adc;Thu Apr 10 00:09:06 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;914c26752481ffd380b5e4f8e7754a7a68d27adc;Thu Apr 10 00:09:06 2008 +0000
SameMethod;true;clojure.lang.Compiler#loadFile(String);clojure.lang.Compiler#loadFile(String);914c26752481ffd380b5e4f8e7754a7a68d27adc;Thu Apr 10 00:09:06 2008 +0000
SameMethod;true;clojure.lang.Compiler#load(Reader);clojure.lang.Compiler#load(Reader);914c26752481ffd380b5e4f8e7754a7a68d27adc;Thu Apr 10 00:09:06 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;039cc991390f9213192998c39828d0f60247c8d0;Fri Apr 11 14:59:15 2008 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;baca00d432120f6edef5b4ff2638accaeec190e3;Fri Apr 11 16:13:18 2008 +0000
SameType;true;clojure.lang.PersistentTreeMap.Seq;clojure.lang.PersistentTreeMap.Seq;baca00d432120f6edef5b4ff2638accaeec190e3;Fri Apr 11 16:13:18 2008 +0000
SameMethod;true;clojure.lang.PersistentTreeMap.Seq#count();clojure.lang.PersistentTreeMap.Seq#count();baca00d432120f6edef5b4ff2638accaeec190e3;Fri Apr 11 16:13:18 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;bacb2d4e4d2e7cd7d6784e595f7599ec6befadb6;Sun Apr 13 23:42:16 2008 +0000
SameMethod;true;clojure.lang.RT#loadResourceScript(String);clojure.lang.RT#loadResourceScript(String);bacb2d4e4d2e7cd7d6784e595f7599ec6befadb6;Sun Apr 13 23:42:16 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;51859f1b6f67bf10174b4008251ac5ed5428e0e6;Mon Apr 14 01:17:34 2008 +0000
SameType;true;clojure.lang.Numbers.IntegerBitOps;clojure.lang.Numbers.IntegerBitOps;51859f1b6f67bf10174b4008251ac5ed5428e0e6;Mon Apr 14 01:17:34 2008 +0000
SameMethod;true;clojure.lang.Numbers.IntegerBitOps#clearBit(Number, int);clojure.lang.Numbers.IntegerBitOps#clearBit(Number, int);51859f1b6f67bf10174b4008251ac5ed5428e0e6;Mon Apr 14 01:17:34 2008 +0000
SameMethod;true;clojure.lang.Numbers.IntegerBitOps#setBit(Number, int);clojure.lang.Numbers.IntegerBitOps#setBit(Number, int);51859f1b6f67bf10174b4008251ac5ed5428e0e6;Mon Apr 14 01:17:34 2008 +0000
SameMethod;true;clojure.lang.Numbers.IntegerBitOps#flipBit(Number, int);clojure.lang.Numbers.IntegerBitOps#flipBit(Number, int);51859f1b6f67bf10174b4008251ac5ed5428e0e6;Mon Apr 14 01:17:34 2008 +0000
SameMethod;true;clojure.lang.Numbers.IntegerBitOps#testBit(Number, int);clojure.lang.Numbers.IntegerBitOps#testBit(Number, int);51859f1b6f67bf10174b4008251ac5ed5428e0e6;Mon Apr 14 01:17:34 2008 +0000
SameMethod;true;clojure.lang.Numbers.IntegerBitOps#shiftLeft(Number, int);clojure.lang.Numbers.IntegerBitOps#shiftLeft(Number, int);51859f1b6f67bf10174b4008251ac5ed5428e0e6;Mon Apr 14 01:17:34 2008 +0000
SameType;true;clojure.lang.Numbers.LongBitOps;clojure.lang.Numbers.LongBitOps;51859f1b6f67bf10174b4008251ac5ed5428e0e6;Mon Apr 14 01:17:34 2008 +0000
SameMethod;true;clojure.lang.Numbers.LongBitOps#clearBit(Number, int);clojure.lang.Numbers.LongBitOps#clearBit(Number, int);51859f1b6f67bf10174b4008251ac5ed5428e0e6;Mon Apr 14 01:17:34 2008 +0000
SameMethod;true;clojure.lang.Numbers.LongBitOps#setBit(Number, int);clojure.lang.Numbers.LongBitOps#setBit(Number, int);51859f1b6f67bf10174b4008251ac5ed5428e0e6;Mon Apr 14 01:17:34 2008 +0000
SameMethod;true;clojure.lang.Numbers.LongBitOps#flipBit(Number, int);clojure.lang.Numbers.LongBitOps#flipBit(Number, int);51859f1b6f67bf10174b4008251ac5ed5428e0e6;Mon Apr 14 01:17:34 2008 +0000
SameMethod;true;clojure.lang.Numbers.LongBitOps#testBit(Number, int);clojure.lang.Numbers.LongBitOps#testBit(Number, int);51859f1b6f67bf10174b4008251ac5ed5428e0e6;Mon Apr 14 01:17:34 2008 +0000
SameMethod;true;clojure.lang.Numbers.LongBitOps#shiftLeft(Number, int);clojure.lang.Numbers.LongBitOps#shiftLeft(Number, int);51859f1b6f67bf10174b4008251ac5ed5428e0e6;Mon Apr 14 01:17:34 2008 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;cdc20d4fea74cf5fbe381d8617f1370703d49f94;Tue Apr 15 18:41:54 2008 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#PersistentTreeMap();clojure.lang.PersistentTreeMap#PersistentTreeMap();cdc20d4fea74cf5fbe381d8617f1370703d49f94;Tue Apr 15 18:41:54 2008 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#doCompare(Object, Object);clojure.lang.PersistentTreeMap#doCompare(Object, Object);cdc20d4fea74cf5fbe381d8617f1370703d49f94;Tue Apr 15 18:41:54 2008 +0000
SameType;true;clojure.lang.PersistentTreeSet;clojure.lang.PersistentTreeSet;cdc20d4fea74cf5fbe381d8617f1370703d49f94;Tue Apr 15 18:41:54 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;cdc20d4fea74cf5fbe381d8617f1370703d49f94;Tue Apr 15 18:41:54 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;9662e453029d853738614dc5eea2faa631ad6188;Tue Apr 15 23:14:20 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;9662e453029d853738614dc5eea2faa631ad6188;Tue Apr 15 23:14:20 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, Expr, String);clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, Expr, String);9662e453029d853738614dc5eea2faa631ad6188;Tue Apr 15 23:14:20 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#hasJavaClass();clojure.lang.Compiler.InstanceFieldExpr#hasJavaClass();9662e453029d853738614dc5eea2faa631ad6188;Tue Apr 15 23:14:20 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#getJavaClass();clojure.lang.Compiler.InstanceFieldExpr#getJavaClass();9662e453029d853738614dc5eea2faa631ad6188;Tue Apr 15 23:14:20 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;9662e453029d853738614dc5eea2faa631ad6188;Tue Apr 15 23:14:20 2008 +0000
SameMethod;true;clojure.lang.Reflector#getMethods(Class, int, String, boolean);clojure.lang.Reflector#getMethods(Class, int, String, boolean);9662e453029d853738614dc5eea2faa631ad6188;Tue Apr 15 23:14:20 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;9511034dda56770857cf596705b624c01e1fa127;Thu Apr 17 15:12:49 2008 +0000
SameMethod;true;clojure.lang.Var#toString();clojure.lang.Var#toString();9511034dda56770857cf596705b624c01e1fa127;Thu Apr 17 15:12:49 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.RT#makeClassLoader();7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#eval(Object);clojure.lang.RT#makeClassLoader();7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#main(String[]);clojure.lang.RT#makeClassLoader();7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameType;true;clojure.lang.AFn;clojure.lang.AFn;7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameMethod;true;clojure.lang.Compiler#eval(Object);clojure.lang.Compiler#eval(Object);7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.Compiler#load(Reader, String, String);7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameMethod;true;clojure.lang.Compiler#main(String[]);clojure.lang.Compiler#main(String[]);7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameType;true;clojure.lang.FnSeq;clojure.lang.FnSeq;7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameMethod;true;clojure.lang.FnSeq#rest();clojure.lang.FnSeq#rest();7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameMethod;true;clojure.lang.FnSeq#withMeta(IPersistentMap);clojure.lang.FnSeq#withMeta(IPersistentMap);7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameMethod;true;clojure.lang.LockingTransaction#run(IFn);clojure.lang.LockingTransaction#run(IFn);7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameType;true;clojure.lang.PersistentStructMap;clojure.lang.PersistentStructMap;7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameType;true;clojure.lang.PersistentStructMap.Def;clojure.lang.PersistentStructMap.Def;7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameType;true;clojure.lang.SeqIterator;clojure.lang.SeqIterator;7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameMethod;true;clojure.lang.SeqIterator#next();clojure.lang.SeqIterator#next();7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
SameMethod;true;clojure.lang.Var#toString();clojure.lang.Var#toString();7cd3b285328e7e7e71b23080303d66640e0f21e8;Fri Apr 18 13:40:31 2008 +0000
MoveMethod;false;clojure.lang.RT#equal(Object, Object);clojure.lang.Util#equal(Object, Object);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
MoveMethod;false;clojure.lang.RT#hash(Object);clojure.lang.Util#hash(Object);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
MoveMethod;false;clojure.lang.RT#hashCombine(int, int);clojure.lang.Util#hashCombine(int, int);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameType;true;clojure.lang.AMapEntry;clojure.lang.AMapEntry;9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.AMapEntry#hashCode();clojure.lang.AMapEntry#hashCode();9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.APersistentMap#equals(Object);clojure.lang.APersistentMap#equals(Object);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.APersistentMap#hashCode();clojure.lang.APersistentMap#hashCode();9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.APersistentMap#contains(Object);clojure.lang.APersistentMap#contains(Object);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.APersistentSet#hashCode();clojure.lang.APersistentSet#hashCode();9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.APersistentVector#doEquals(IPersistentVector, Object);clojure.lang.APersistentVector#doEquals(IPersistentVector, Object);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.APersistentVector#hashCode();clojure.lang.APersistentVector#hashCode();9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.APersistentVector#contains(Object);clojure.lang.APersistentVector#contains(Object);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.ASeq#equals(Object);clojure.lang.ASeq#equals(Object);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.ASeq#hashCode();clojure.lang.ASeq#hashCode();9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.ASeq#contains(Object);clojure.lang.ASeq#contains(Object);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameType;true;clojure.lang.Compiler.BodyExpr;clojure.lang.Compiler.BodyExpr;9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameType;true;clojure.lang.Compiler.BodyExpr.Parser;clojure.lang.Compiler.BodyExpr.Parser;9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.Compiler.BodyExpr.Parser#parse(C, Object);clojure.lang.Compiler.BodyExpr.Parser#parse(C, Object);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.PersistentHashMap#entryAt(Object);clojure.lang.PersistentHashMap#entryAt(Object);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.PersistentHashMap#assoc(Object, Object);clojure.lang.PersistentHashMap#assoc(Object, Object);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.PersistentHashMap#without(Object);clojure.lang.PersistentHashMap#without(Object);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameType;true;clojure.lang.PersistentHashMap.LeafNode;clojure.lang.PersistentHashMap.LeafNode;9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.PersistentHashMap.LeafNode#assoc(int, int, Object, Object, Box);clojure.lang.PersistentHashMap.LeafNode#assoc(int, int, Object, Object, Box);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.PersistentHashMap.LeafNode#without(int, Object);clojure.lang.PersistentHashMap.LeafNode#without(int, Object);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.PersistentHashMap.LeafNode#find(int, Object);clojure.lang.PersistentHashMap.LeafNode#find(int, Object);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameType;true;clojure.lang.PersistentHashMap.HashCollisionNode;clojure.lang.PersistentHashMap.HashCollisionNode;9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.PersistentHashMap.HashCollisionNode#assoc(int, int, Object, Object, Box);clojure.lang.PersistentHashMap.HashCollisionNode#assoc(int, int, Object, Object, Box);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.PersistentQueue#equals(Object);clojure.lang.PersistentQueue#equals(Object);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.PersistentQueue#hashCode();clojure.lang.PersistentQueue#hashCode();9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.PersistentQueue#contains(Object);clojure.lang.PersistentQueue#contains(Object);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.RT#init();clojure.lang.RT#init();9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.RT#hasTag(Object, Object);clojure.lang.RT#hasTag(Object, Object);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.RT#format(Object, String, Object[]);clojure.lang.RT#format(Object, String, Object[]);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameType;true;clojure.lang.Script;clojure.lang.Script;9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.Script#main(String[]);clojure.lang.Script#main(String[]);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.Symbol#Symbol(String, String);clojure.lang.Symbol#Symbol(String, String);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
SameMethod;true;clojure.lang.Symbol#Symbol(IPersistentMap, String, String);clojure.lang.Symbol#Symbol(IPersistentMap, String, String);9e24fabf1232f129e5aac45802cce6dfd5e300ce;Sat Apr 19 16:52:33 2008 +0000
ExtractMethod;true;clojure.lang.Compiler.HostExpr#maybeClass(Object, boolean);clojure.lang.RT#classForName(String);dff8bca0286f2af46ab5522cf9d86165ab83eaa6;Sun Apr 20 21:18:49 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#resolveIn(Namespace, Symbol);clojure.lang.RT#classForName(String);dff8bca0286f2af46ab5522cf9d86165ab83eaa6;Sun Apr 20 21:18:49 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#maybeResolveIn(Namespace, Symbol);clojure.lang.RT#classForName(String);dff8bca0286f2af46ab5522cf9d86165ab83eaa6;Sun Apr 20 21:18:49 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;dff8bca0286f2af46ab5522cf9d86165ab83eaa6;Sun Apr 20 21:18:49 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;dff8bca0286f2af46ab5522cf9d86165ab83eaa6;Sun Apr 20 21:18:49 2008 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#maybeClass(Object, boolean);clojure.lang.Compiler.HostExpr#maybeClass(Object, boolean);dff8bca0286f2af46ab5522cf9d86165ab83eaa6;Sun Apr 20 21:18:49 2008 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;dff8bca0286f2af46ab5522cf9d86165ab83eaa6;Sun Apr 20 21:18:49 2008 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.NewExpr#emit(C, FnExpr, GeneratorAdapter);dff8bca0286f2af46ab5522cf9d86165ab83eaa6;Sun Apr 20 21:18:49 2008 +0000
SameMethod;true;clojure.lang.Compiler#resolveIn(Namespace, Symbol);clojure.lang.Compiler#resolveIn(Namespace, Symbol);dff8bca0286f2af46ab5522cf9d86165ab83eaa6;Sun Apr 20 21:18:49 2008 +0000
SameMethod;true;clojure.lang.Compiler#maybeResolveIn(Namespace, Symbol);clojure.lang.Compiler#maybeResolveIn(Namespace, Symbol);dff8bca0286f2af46ab5522cf9d86165ab83eaa6;Sun Apr 20 21:18:49 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;dff8bca0286f2af46ab5522cf9d86165ab83eaa6;Sun Apr 20 21:18:49 2008 +0000
SameMethod;true;clojure.lang.RT#loadResourceScript(String);clojure.lang.RT#loadResourceScript(String);dff8bca0286f2af46ab5522cf9d86165ab83eaa6;Sun Apr 20 21:18:49 2008 +0000
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();dff8bca0286f2af46ab5522cf9d86165ab83eaa6;Sun Apr 20 21:18:49 2008 +0000
SameMethod;true;clojure.lang.RT#makeClassLoader();clojure.lang.RT#makeClassLoader();dff8bca0286f2af46ab5522cf9d86165ab83eaa6;Sun Apr 20 21:18:49 2008 +0000
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;29dd6d70b825b8127b0fc8db7ac6e053e797caa6;Mon Apr 21 02:21:25 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#first();clojure.lang.ArraySeq#first();29dd6d70b825b8127b0fc8db7ac6e053e797caa6;Mon Apr 21 02:21:25 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#rest();clojure.lang.ArraySeq#rest();29dd6d70b825b8127b0fc8db7ac6e053e797caa6;Mon Apr 21 02:21:25 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#count();clojure.lang.ArraySeq#count();29dd6d70b825b8127b0fc8db7ac6e053e797caa6;Mon Apr 21 02:21:25 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#reduce(IFn);clojure.lang.ArraySeq#reduce(IFn);29dd6d70b825b8127b0fc8db7ac6e053e797caa6;Mon Apr 21 02:21:25 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#reduce(IFn, Object);clojure.lang.ArraySeq#reduce(IFn, Object);29dd6d70b825b8127b0fc8db7ac6e053e797caa6;Mon Apr 21 02:21:25 2008 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;29dd6d70b825b8127b0fc8db7ac6e053e797caa6;Mon Apr 21 02:21:25 2008 +0000
SameMethod;true;clojure.lang.PersistentList$1#doInvoke(Object);clojure.lang.PersistentList$1#doInvoke(Object);29dd6d70b825b8127b0fc8db7ac6e053e797caa6;Mon Apr 21 02:21:25 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;29dd6d70b825b8127b0fc8db7ac6e053e797caa6;Mon Apr 21 02:21:25 2008 +0000
SameMethod;true;clojure.lang.RT#seq(Object);clojure.lang.RT#seq(Object);29dd6d70b825b8127b0fc8db7ac6e053e797caa6;Mon Apr 21 02:21:25 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;282d5a0e2ad4a87af87ac0e93c4f6933cf113d8a;Mon Apr 21 17:06:11 2008 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;282d5a0e2ad4a87af87ac0e93c4f6933cf113d8a;Mon Apr 21 17:06:11 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;e8eae6b151dbd0c46a6c1f5eabcb43a0e35df124;Tue Apr 22 22:11:53 2008 +0000
SameMethod;true;clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);e8eae6b151dbd0c46a6c1f5eabcb43a0e35df124;Tue Apr 22 22:11:53 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;c52489f5f95fe84210250601f5215d9433a1603c;Tue Apr 22 22:18:48 2008 +0000
SameMethod;true;clojure.lang.Reflector#getStaticField(String, String);clojure.lang.Reflector#getStaticField(String, String);c52489f5f95fe84210250601f5215d9433a1603c;Tue Apr 22 22:18:48 2008 +0000
SameMethod;true;clojure.lang.Reflector#setStaticField(String, String, Object);clojure.lang.Reflector#setStaticField(String, String, Object);c52489f5f95fe84210250601f5215d9433a1603c;Tue Apr 22 22:18:48 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;f2eda06519112088a9b802ba579c755de5748352;Wed Apr 23 00:23:19 2008 +0000
SameMethod;true;clojure.lang.Compiler#loadFile(String);clojure.lang.Compiler#loadFile(String);f2eda06519112088a9b802ba579c755de5748352;Wed Apr 23 00:23:19 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;6df462b88b9f2c5c9021313d7ef429b70027ce67;Wed Apr 23 01:14:15 2008 +0000
SameMethod;true;clojure.lang.RT#loadResourceScript(String);clojure.lang.RT#loadResourceScript(String);6df462b88b9f2c5c9021313d7ef429b70027ce67;Wed Apr 23 01:14:15 2008 +0000
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;69d9750e13fdce613aa8b9ca0028478be0bf177c;Wed Apr 23 03:07:05 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;5e9f2b293b307aa7953cd390360d24549e542b92;Sun Apr 27 00:48:52 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;5e9f2b293b307aa7953cd390360d24549e542b92;Sun Apr 27 00:48:52 2008 +0000
SameMethod;true;clojure.lang.Compiler.TryExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.TryExpr#emit(C, FnExpr, GeneratorAdapter);5e9f2b293b307aa7953cd390360d24549e542b92;Sun Apr 27 00:48:52 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;19759160d45f9fd4ab3aecd6c70e9522047615c5;Tue Apr 29 14:18:52 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);19759160d45f9fd4ab3aecd6c70e9522047615c5;Tue Apr 29 14:18:52 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;3c6d2a4969612c3e6463116c621f8dfb30af3fcc;Tue Apr 29 20:25:13 2008 +0000
SameMethod;true;clojure.lang.Var#isBound();clojure.lang.Var#isBound();3c6d2a4969612c3e6463116c621f8dfb30af3fcc;Tue Apr 29 20:25:13 2008 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;ddbc5777098d58296d52ee2872f8a79e72f48ff8;Wed Apr 30 04:02:50 2008 +0000
SameMethod;true;clojure.lang.APersistentMap#cons(Object);clojure.lang.APersistentMap#cons(Object);ddbc5777098d58296d52ee2872f8a79e72f48ff8;Wed Apr 30 04:02:50 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;ddbc5777098d58296d52ee2872f8a79e72f48ff8;Wed Apr 30 04:02:50 2008 +0000
SameMethod;true;clojure.lang.RT#find(Object, Object);clojure.lang.RT#find(Object, Object);ddbc5777098d58296d52ee2872f8a79e72f48ff8;Wed Apr 30 04:02:50 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;1f4466a7a54f26f78f47d4fa3f5b6e6d786aefcc;Wed Apr 30 21:15:01 2008 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;1f4466a7a54f26f78f47d4fa3f5b6e6d786aefcc;Wed Apr 30 21:15:01 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#emitClearLocals(GeneratorAdapter);clojure.lang.Compiler.FnMethod#emitClearLocals(GeneratorAdapter);1f4466a7a54f26f78f47d4fa3f5b6e6d786aefcc;Wed Apr 30 21:15:01 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;81eae9c78fadbcaf455a621022283ffc48689af3;Thu May 1 13:32:13 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;81eae9c78fadbcaf455a621022283ffc48689af3;Thu May 1 13:32:13 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);81eae9c78fadbcaf455a621022283ffc48689af3;Thu May 1 13:32:13 2008 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;81eae9c78fadbcaf455a621022283ffc48689af3;Thu May 1 13:32:13 2008 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emit(C, FnExpr, GeneratorAdapter);81eae9c78fadbcaf455a621022283ffc48689af3;Thu May 1 13:32:13 2008 +0000
ExtractMethod;true;clojure.lang.RT#loadResourceScript(String);clojure.lang.RT#loadResourceScript(Class, String);ab789fc2a395d19c1a8670765578fcda736e121c;Sat May 3 19:39:34 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;ab789fc2a395d19c1a8670765578fcda736e121c;Sat May 3 19:39:34 2008 +0000
SameMethod;true;clojure.lang.RT#loadResourceScript(String);clojure.lang.RT#loadResourceScript(String);ab789fc2a395d19c1a8670765578fcda736e121c;Sat May 3 19:39:34 2008 +0000
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();ab789fc2a395d19c1a8670765578fcda736e121c;Sat May 3 19:39:34 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c06e4e53bf344a1687eb80ce12a8894cf4b2dbf2;Sat May 3 23:07:34 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;c06e4e53bf344a1687eb80ce12a8894cf4b2dbf2;Sat May 3 23:07:34 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceFieldExpr#emit(C, FnExpr, GeneratorAdapter);c06e4e53bf344a1687eb80ce12a8894cf4b2dbf2;Sat May 3 23:07:34 2008 +0000
SameType;true;clojure.lang.Script;clojure.lang.Script;20bbbe02fd41ff11934be6344395b998ad4699e4;Sun May 4 18:37:01 2008 +0000
SameMethod;true;clojure.lang.Script#main(String[]);clojure.lang.Script#main(String[]);20bbbe02fd41ff11934be6344395b998ad4699e4;Sun May 4 18:37:01 2008 +0000
SameType;true;clojure.lang.DynamicClassLoader;clojure.lang.DynamicClassLoader;288d18fa2fdb293fde171a70e5cd8d63b8c30822;Mon May 12 19:49:46 2008 +0000
SameMethod;true;clojure.lang.DynamicClassLoader#DynamicClassLoader();clojure.lang.DynamicClassLoader#DynamicClassLoader();288d18fa2fdb293fde171a70e5cd8d63b8c30822;Mon May 12 19:49:46 2008 +0000
SameMethod;true;clojure.lang.DynamicClassLoader#DynamicClassLoader(ClassLoader);clojure.lang.DynamicClassLoader#DynamicClassLoader(ClassLoader);288d18fa2fdb293fde171a70e5cd8d63b8c30822;Mon May 12 19:49:46 2008 +0000
SameMethod;true;clojure.lang.DynamicClassLoader#findClass(String);clojure.lang.DynamicClassLoader#findClass(String);288d18fa2fdb293fde171a70e5cd8d63b8c30822;Mon May 12 19:49:46 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;288d18fa2fdb293fde171a70e5cd8d63b8c30822;Mon May 12 19:49:46 2008 +0000
SameType;true;clojure.lang.AMapEntry;clojure.lang.AMapEntry;f0562071873fbd9f8654bbb6663ad8a1a34e0c65;Wed May 14 18:37:04 2008 +0000
SameMethod;true;clojure.lang.AMapEntry#asVector();clojure.lang.AMapEntry#asVector();f0562071873fbd9f8654bbb6663ad8a1a34e0c65;Wed May 14 18:37:04 2008 +0000
SameMethod;true;clojure.lang.AMapEntry#pop();clojure.lang.AMapEntry#pop();f0562071873fbd9f8654bbb6663ad8a1a34e0c65;Wed May 14 18:37:04 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;f0562071873fbd9f8654bbb6663ad8a1a34e0c65;Wed May 14 18:37:04 2008 +0000
SameType;true;clojure.lang.APersistentVector.Seq;clojure.lang.APersistentVector.Seq;f0562071873fbd9f8654bbb6663ad8a1a34e0c65;Wed May 14 18:37:04 2008 +0000
SameMethod;true;clojure.lang.APersistentVector.Seq#rest();clojure.lang.APersistentVector.Seq#rest();f0562071873fbd9f8654bbb6663ad8a1a34e0c65;Wed May 14 18:37:04 2008 +0000
SameMethod;true;clojure.lang.APersistentVector.Seq#withMeta(IPersistentMap);clojure.lang.APersistentVector.Seq#withMeta(IPersistentMap);f0562071873fbd9f8654bbb6663ad8a1a34e0c65;Wed May 14 18:37:04 2008 +0000
SameType;true;clojure.lang.APersistentVector.RSeq;clojure.lang.APersistentVector.RSeq;f0562071873fbd9f8654bbb6663ad8a1a34e0c65;Wed May 14 18:37:04 2008 +0000
SameMethod;true;clojure.lang.APersistentVector.RSeq#rest();clojure.lang.APersistentVector.RSeq#rest();f0562071873fbd9f8654bbb6663ad8a1a34e0c65;Wed May 14 18:37:04 2008 +0000
SameMethod;true;clojure.lang.APersistentVector.RSeq#withMeta(IPersistentMap);clojure.lang.APersistentVector.RSeq#withMeta(IPersistentMap);f0562071873fbd9f8654bbb6663ad8a1a34e0c65;Wed May 14 18:37:04 2008 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;f0562071873fbd9f8654bbb6663ad8a1a34e0c65;Wed May 14 18:37:04 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;f0562071873fbd9f8654bbb6663ad8a1a34e0c65;Wed May 14 18:37:04 2008 +0000
SameType;true;clojure.lang.LispReader.VectorReader;clojure.lang.LispReader.VectorReader;f0562071873fbd9f8654bbb6663ad8a1a34e0c65;Wed May 14 18:37:04 2008 +0000
SameMethod;true;clojure.lang.LispReader.VectorReader#invoke(Object, Object);clojure.lang.LispReader.VectorReader#invoke(Object, Object);f0562071873fbd9f8654bbb6663ad8a1a34e0c65;Wed May 14 18:37:04 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;f0562071873fbd9f8654bbb6663ad8a1a34e0c65;Wed May 14 18:37:04 2008 +0000
SameMethod;true;clojure.lang.RT#vector(Object[]);clojure.lang.RT#vector(Object[]);f0562071873fbd9f8654bbb6663ad8a1a34e0c65;Wed May 14 18:37:04 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;91fa51c1107526ad4c7ed141c8a6a3b275bbb0e2;Wed May 14 21:40:14 2008 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;1611a163b2ce43ff63f7609f304fb0e2950f34e4;Thu May 15 20:32:08 2008 +0000
SameMethod;true;clojure.lang.APersistentMap#cons(Object);clojure.lang.APersistentMap#cons(Object);1611a163b2ce43ff63f7609f304fb0e2950f34e4;Thu May 15 20:32:08 2008 +0000
SameMethod;true;clojure.lang.APersistentMap#equals(Object);clojure.lang.APersistentMap#equals(Object);1611a163b2ce43ff63f7609f304fb0e2950f34e4;Thu May 15 20:32:08 2008 +0000
SameMethod;true;clojure.lang.APersistentMap#hashCode();clojure.lang.APersistentMap#hashCode();1611a163b2ce43ff63f7609f304fb0e2950f34e4;Thu May 15 20:32:08 2008 +0000
SameType;true;clojure.lang.APersistentMap.KeySeq;clojure.lang.APersistentMap.KeySeq;1611a163b2ce43ff63f7609f304fb0e2950f34e4;Thu May 15 20:32:08 2008 +0000
SameMethod;true;clojure.lang.APersistentMap.KeySeq#first();clojure.lang.APersistentMap.KeySeq#first();1611a163b2ce43ff63f7609f304fb0e2950f34e4;Thu May 15 20:32:08 2008 +0000
SameType;true;clojure.lang.APersistentMap.ValSeq;clojure.lang.APersistentMap.ValSeq;1611a163b2ce43ff63f7609f304fb0e2950f34e4;Thu May 15 20:32:08 2008 +0000
SameMethod;true;clojure.lang.APersistentMap.ValSeq#first();clojure.lang.APersistentMap.ValSeq#first();1611a163b2ce43ff63f7609f304fb0e2950f34e4;Thu May 15 20:32:08 2008 +0000
SameMethod;true;clojure.lang.APersistentMap#contains(Object);clojure.lang.APersistentMap#contains(Object);1611a163b2ce43ff63f7609f304fb0e2950f34e4;Thu May 15 20:32:08 2008 +0000
ExtractMethod;true;clojure.lang.LockingTransaction#run(IFn);clojure.lang.Agent#dispatchAction(Action);660f36af98afeb3c5c05a1ec7b3657a324abebba;Fri May 16 13:59:59 2008 +0000
ExtractMethod;true;clojure.lang.Agent#dispatch(IFn, ISeq, boolean);clojure.lang.Agent#dispatchAction(Action);660f36af98afeb3c5c05a1ec7b3657a324abebba;Fri May 16 13:59:59 2008 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;660f36af98afeb3c5c05a1ec7b3657a324abebba;Fri May 16 13:59:59 2008 +0000
SameMethod;true;clojure.lang.Agent#dispatch(IFn, ISeq, boolean);clojure.lang.Agent#dispatch(IFn, ISeq, boolean);660f36af98afeb3c5c05a1ec7b3657a324abebba;Fri May 16 13:59:59 2008 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;660f36af98afeb3c5c05a1ec7b3657a324abebba;Fri May 16 13:59:59 2008 +0000
SameMethod;true;clojure.lang.LockingTransaction#stop(int);clojure.lang.LockingTransaction#stop(int);660f36af98afeb3c5c05a1ec7b3657a324abebba;Fri May 16 13:59:59 2008 +0000
SameMethod;true;clojure.lang.LockingTransaction#run(IFn);clojure.lang.LockingTransaction#run(IFn);660f36af98afeb3c5c05a1ec7b3657a324abebba;Fri May 16 13:59:59 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;42f082dd7504de775f4ec62aee05c42fa3129f99;Fri May 16 18:13:39 2008 +0000
SameMethod;true;clojure.lang.RT#loadResourceScript(Class, String);clojure.lang.RT#loadResourceScript(Class, String);42f082dd7504de775f4ec62aee05c42fa3129f99;Fri May 16 18:13:39 2008 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;11028c5ec854dc1e009f13529aa1f1a924834b17;Fri May 16 20:53:40 2008 +0000
SameMethod;true;clojure.lang.Symbol#compareTo(Object);clojure.lang.Symbol#compareTo(Object);11028c5ec854dc1e009f13529aa1f1a924834b17;Fri May 16 20:53:40 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;1f5e61a179e7d409fcdd39d2bf89979e059acd54;Fri May 16 21:02:21 2008 +0000
SameMethod;true;clojure.lang.RT#seq(Object);clojure.lang.RT#seq(Object);1f5e61a179e7d409fcdd39d2bf89979e059acd54;Fri May 16 21:02:21 2008 +0000
SameMethod;true;clojure.lang.RT#count(Object);clojure.lang.RT#count(Object);1f5e61a179e7d409fcdd39d2bf89979e059acd54;Fri May 16 21:02:21 2008 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);1f5e61a179e7d409fcdd39d2bf89979e059acd54;Fri May 16 21:02:21 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;00f9c7b50c1b17af85fa58d1d8ac4f4027e88177;Sun May 18 20:13:09 2008 +0000
SameMethod;true;clojure.lang.Compiler#isMacro(Object);clojure.lang.Compiler#isMacro(Object);00f9c7b50c1b17af85fa58d1d8ac4f4027e88177;Sun May 18 20:13:09 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;2b2c841a1175df381669c4107c5a545adf8a9f11;Mon May 19 15:31:06 2008 +0000
SameMethod;true;clojure.lang.RT#get(Object, Object);clojure.lang.RT#get(Object, Object);2b2c841a1175df381669c4107c5a545adf8a9f11;Mon May 19 15:31:06 2008 +0000
SameMethod;true;clojure.lang.RT#get(Object, Object, Object);clojure.lang.RT#get(Object, Object, Object);2b2c841a1175df381669c4107c5a545adf8a9f11;Mon May 19 15:31:06 2008 +0000
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;14a585767d63b05a0a346da4031fe4664b6f49a5;Mon May 19 18:35:17 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object);clojure.lang.Keyword#invoke(Object);14a585767d63b05a0a346da4031fe4664b6f49a5;Mon May 19 18:35:17 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameType;true;clojure.lang.Compiler.VarExpr;clojure.lang.Compiler.VarExpr;71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.VarExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.VarExpr#emit(C, FnExpr, GeneratorAdapter);71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameType;true;clojure.lang.Compiler.TheVarExpr;clojure.lang.Compiler.TheVarExpr;71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.TheVarExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.TheVarExpr#emit(C, FnExpr, GeneratorAdapter);71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameType;true;clojure.lang.Compiler.KeywordExpr;clojure.lang.Compiler.KeywordExpr;71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.KeywordExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.KeywordExpr#emit(C, FnExpr, GeneratorAdapter);71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceFieldExpr#emit(C, FnExpr, GeneratorAdapter);71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameType;true;clojure.lang.Compiler.StaticFieldExpr;clojure.lang.Compiler.StaticFieldExpr;71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticFieldExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.StaticFieldExpr#emit(C, FnExpr, GeneratorAdapter);71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameType;true;clojure.lang.Compiler.ConstantExpr;clojure.lang.Compiler.ConstantExpr;71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.ConstantExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.ConstantExpr#emit(C, FnExpr, GeneratorAdapter);71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameType;true;clojure.lang.Compiler.NilExpr;clojure.lang.Compiler.NilExpr;71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.NilExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.NilExpr#emit(C, FnExpr, GeneratorAdapter);71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameType;true;clojure.lang.Compiler.BooleanExpr;clojure.lang.Compiler.BooleanExpr;71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.BooleanExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.BooleanExpr#emit(C, FnExpr, GeneratorAdapter);71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameType;true;clojure.lang.Compiler.MonitorEnterExpr;clojure.lang.Compiler.MonitorEnterExpr;71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.MonitorEnterExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.MonitorEnterExpr#emit(C, FnExpr, GeneratorAdapter);71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameType;true;clojure.lang.Compiler.MonitorExitExpr;clojure.lang.Compiler.MonitorExitExpr;71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.MonitorExitExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.MonitorExitExpr#emit(C, FnExpr, GeneratorAdapter);71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameType;true;clojure.lang.Compiler.MetaExpr;clojure.lang.Compiler.MetaExpr;71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.MetaExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.MetaExpr#emit(C, FnExpr, GeneratorAdapter);71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameType;true;clojure.lang.Compiler.EmptyExpr;clojure.lang.Compiler.EmptyExpr;71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.EmptyExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.EmptyExpr#emit(C, FnExpr, GeneratorAdapter);71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.FnExpr#emit(C, FnExpr, GeneratorAdapter);71532f7e0d7a45447771b5ee66ef9df4704d6f2d;Mon May 19 23:33:45 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;c33f417602d5fd305bb1ee3ed7e4349750448da4;Tue May 20 18:20:16 2008 +0000
SameMethod;true;clojure.lang.APersistentVector#assoc(Object, Object);clojure.lang.APersistentVector#assoc(Object, Object);c33f417602d5fd305bb1ee3ed7e4349750448da4;Tue May 20 18:20:16 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c33f417602d5fd305bb1ee3ed7e4349750448da4;Tue May 20 18:20:16 2008 +0000
SameMethod;true;clojure.lang.Compiler#isMacro(Object);clojure.lang.Compiler#isMacro(Object);c33f417602d5fd305bb1ee3ed7e4349750448da4;Tue May 20 18:20:16 2008 +0000
SameMethod;true;clojure.lang.Compiler#resolveIn(Namespace, Symbol);clojure.lang.Compiler#resolveIn(Namespace, Symbol);c33f417602d5fd305bb1ee3ed7e4349750448da4;Tue May 20 18:20:16 2008 +0000
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;c33f417602d5fd305bb1ee3ed7e4349750448da4;Tue May 20 18:20:16 2008 +0000
SameMethod;true;clojure.lang.Namespace#remove(Symbol);clojure.lang.Namespace#remove(Symbol);c33f417602d5fd305bb1ee3ed7e4349750448da4;Tue May 20 18:20:16 2008 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;c33f417602d5fd305bb1ee3ed7e4349750448da4;Tue May 20 18:20:16 2008 +0000
SameMethod;true;clojure.lang.PersistentVector#pop();clojure.lang.PersistentVector#pop();c33f417602d5fd305bb1ee3ed7e4349750448da4;Tue May 20 18:20:16 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;c33f417602d5fd305bb1ee3ed7e4349750448da4;Tue May 20 18:20:16 2008 +0000
SameMethod;true;clojure.lang.RT#seq(Object);clojure.lang.RT#seq(Object);c33f417602d5fd305bb1ee3ed7e4349750448da4;Tue May 20 18:20:16 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c5b02d1bf290cfd87df24e01b82831216c39df0a;Wed May 21 15:49:29 2008 +0000
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);c5b02d1bf290cfd87df24e01b82831216c39df0a;Wed May 21 15:49:29 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;e3d1a2bc418fc639e08db7b56b5503a28bde56f1;Wed May 21 19:47:05 2008 +0000
SameMethod;true;clojure.lang.Reflector#paramArgTypeMatch(Class, Class);clojure.lang.Reflector#paramArgTypeMatch(Class, Class);e3d1a2bc418fc639e08db7b56b5503a28bde56f1;Wed May 21 19:47:05 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;7077043e69164ea82c6707a3cfa40a91a64deb6f;Wed May 21 21:07:35 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;5d9e87e8a30dfc99fe41c3be0a8ddc5ddd4e1d8d;Fri May 23 16:09:37 2008 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;5d9e87e8a30dfc99fe41c3be0a8ddc5ddd4e1d8d;Fri May 23 16:09:37 2008 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emit(C, FnExpr, GeneratorAdapter);5d9e87e8a30dfc99fe41c3be0a8ddc5ddd4e1d8d;Fri May 23 16:09:37 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);5d9e87e8a30dfc99fe41c3be0a8ddc5ddd4e1d8d;Fri May 23 16:09:37 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;75867cb51ffae89047fdc2b699411b2e294abedc;Fri May 23 16:51:14 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;75867cb51ffae89047fdc2b699411b2e294abedc;Fri May 23 16:51:14 2008 +0000
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();75867cb51ffae89047fdc2b699411b2e294abedc;Fri May 23 16:51:14 2008 +0000
SameType;true;clojure.lang.AMapEntry;clojure.lang.AMapEntry;697b69fe9c8f5e2e8d40382e70d4ddd490c4a9ee;Tue May 27 12:55:25 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;697b69fe9c8f5e2e8d40382e70d4ddd490c4a9ee;Tue May 27 12:55:25 2008 +0000
SameType;true;clojure.lang.APersistentVector.SubVector;clojure.lang.APersistentVector.SubVector;697b69fe9c8f5e2e8d40382e70d4ddd490c4a9ee;Tue May 27 12:55:25 2008 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;697b69fe9c8f5e2e8d40382e70d4ddd490c4a9ee;Tue May 27 12:55:25 2008 +0000
SameType;true;clojure.lang.IPersistentCollection;clojure.lang.IPersistentCollection;697b69fe9c8f5e2e8d40382e70d4ddd490c4a9ee;Tue May 27 12:55:25 2008 +0000
SameType;true;clojure.lang.LazilyPersistentVector;clojure.lang.LazilyPersistentVector;697b69fe9c8f5e2e8d40382e70d4ddd490c4a9ee;Tue May 27 12:55:25 2008 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;697b69fe9c8f5e2e8d40382e70d4ddd490c4a9ee;Tue May 27 12:55:25 2008 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;697b69fe9c8f5e2e8d40382e70d4ddd490c4a9ee;Tue May 27 12:55:25 2008 +0000
SameType;true;clojure.lang.PersistentHashSet;clojure.lang.PersistentHashSet;697b69fe9c8f5e2e8d40382e70d4ddd490c4a9ee;Tue May 27 12:55:25 2008 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;697b69fe9c8f5e2e8d40382e70d4ddd490c4a9ee;Tue May 27 12:55:25 2008 +0000
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;697b69fe9c8f5e2e8d40382e70d4ddd490c4a9ee;Tue May 27 12:55:25 2008 +0000
SameType;true;clojure.lang.PersistentStructMap;clojure.lang.PersistentStructMap;697b69fe9c8f5e2e8d40382e70d4ddd490c4a9ee;Tue May 27 12:55:25 2008 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;697b69fe9c8f5e2e8d40382e70d4ddd490c4a9ee;Tue May 27 12:55:25 2008 +0000
SameType;true;clojure.lang.PersistentTreeSet;clojure.lang.PersistentTreeSet;697b69fe9c8f5e2e8d40382e70d4ddd490c4a9ee;Tue May 27 12:55:25 2008 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;697b69fe9c8f5e2e8d40382e70d4ddd490c4a9ee;Tue May 27 12:55:25 2008 +0000
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;8f1bdd060645a82b24ed732f73a4516fb12b563b;Tue May 27 20:22:07 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#createFromObject(Object);clojure.lang.ArraySeq#createFromObject(Object);8f1bdd060645a82b24ed732f73a4516fb12b563b;Tue May 27 20:22:07 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;8f1bdd060645a82b24ed732f73a4516fb12b563b;Tue May 27 20:22:07 2008 +0000
SameType;true;clojure.lang.Numbers.F;clojure.lang.Numbers.F;8f1bdd060645a82b24ed732f73a4516fb12b563b;Tue May 27 20:22:07 2008 +0000
SameType;true;clojure.lang.Numbers.D;clojure.lang.Numbers.D;8f1bdd060645a82b24ed732f73a4516fb12b563b;Tue May 27 20:22:07 2008 +0000
SameType;true;clojure.lang.Numbers.I;clojure.lang.Numbers.I;8f1bdd060645a82b24ed732f73a4516fb12b563b;Tue May 27 20:22:07 2008 +0000
SameType;true;clojure.lang.Numbers.L;clojure.lang.Numbers.L;8f1bdd060645a82b24ed732f73a4516fb12b563b;Tue May 27 20:22:07 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;8f1bdd060645a82b24ed732f73a4516fb12b563b;Tue May 27 20:22:07 2008 +0000
SameMethod;true;clojure.lang.RT#toArray(Object);clojure.lang.RT#toArray(Object);8f1bdd060645a82b24ed732f73a4516fb12b563b;Tue May 27 20:22:07 2008 +0000
RenameMethod;false;clojure.lang.Numbers.D#array(int, Object);clojure.lang.Numbers.D#vec(int, Object);69e5e3659b7cb45433333bd501cc82a4893cc3df;Wed May 28 00:38:24 2008 +0000
RenameMethod;false;clojure.lang.Numbers.F#array(int, Object);clojure.lang.Numbers.F#vec(int, Object);69e5e3659b7cb45433333bd501cc82a4893cc3df;Wed May 28 00:38:24 2008 +0000
RenameMethod;false;clojure.lang.Numbers.I#array(int, Object);clojure.lang.Numbers.I#vec(int, Object);69e5e3659b7cb45433333bd501cc82a4893cc3df;Wed May 28 00:38:24 2008 +0000
RenameMethod;false;clojure.lang.Numbers.L#array(int, Object);clojure.lang.Numbers.L#vec(int, Object);69e5e3659b7cb45433333bd501cc82a4893cc3df;Wed May 28 00:38:24 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;69e5e3659b7cb45433333bd501cc82a4893cc3df;Wed May 28 00:38:24 2008 +0000
SameType;true;clojure.lang.Numbers.F;clojure.lang.Numbers.F;69e5e3659b7cb45433333bd501cc82a4893cc3df;Wed May 28 00:38:24 2008 +0000
SameType;true;clojure.lang.Numbers.D;clojure.lang.Numbers.D;69e5e3659b7cb45433333bd501cc82a4893cc3df;Wed May 28 00:38:24 2008 +0000
SameType;true;clojure.lang.Numbers.I;clojure.lang.Numbers.I;69e5e3659b7cb45433333bd501cc82a4893cc3df;Wed May 28 00:38:24 2008 +0000
SameType;true;clojure.lang.Numbers.L;clojure.lang.Numbers.L;69e5e3659b7cb45433333bd501cc82a4893cc3df;Wed May 28 00:38:24 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;4173ff7ccc0079dac061bbbbed29445696599844;Wed May 28 14:50:12 2008 +0000
SameMethod;true;clojure.lang.Compiler#subsumes(Class[], Class[]);clojure.lang.Compiler#subsumes(Class[], Class[]);4173ff7ccc0079dac061bbbbed29445696599844;Wed May 28 14:50:12 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;4173ff7ccc0079dac061bbbbed29445696599844;Wed May 28 14:50:12 2008 +0000
SameMethod;true;clojure.lang.Reflector#getMethods(Class, int, String, boolean);clojure.lang.Reflector#getMethods(Class, int, String, boolean);4173ff7ccc0079dac061bbbbed29445696599844;Wed May 28 14:50:12 2008 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;ea72ff9b02a3736e0dc78ce694c76a5a3d73d6b3;Wed May 28 23:54:34 2008 +0000
SameMethod;true;clojure.lang.PersistentList$1#doInvoke(Object);clojure.lang.PersistentList$1#doInvoke(Object);ea72ff9b02a3736e0dc78ce694c76a5a3d73d6b3;Wed May 28 23:54:34 2008 +0000
SameMethod;true;clojure.lang.PersistentList#create(List);clojure.lang.PersistentList#create(List);ea72ff9b02a3736e0dc78ce694c76a5a3d73d6b3;Wed May 28 23:54:34 2008 +0000
SameMethod;true;clojure.lang.PersistentList#rest();clojure.lang.PersistentList#rest();ea72ff9b02a3736e0dc78ce694c76a5a3d73d6b3;Wed May 28 23:54:34 2008 +0000
SameType;true;clojure.lang.PersistentList.EmptyList;clojure.lang.PersistentList.EmptyList;ea72ff9b02a3736e0dc78ce694c76a5a3d73d6b3;Wed May 28 23:54:34 2008 +0000
SameMethod;true;clojure.lang.PersistentList.EmptyList#EmptyList(IPersistentMap);clojure.lang.PersistentList.EmptyList#EmptyList(IPersistentMap);ea72ff9b02a3736e0dc78ce694c76a5a3d73d6b3;Wed May 28 23:54:34 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;cf098f8998b7869dfc180b9fccb65ae6a8a9e70e;Fri May 30 11:56:04 2008 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);cf098f8998b7869dfc180b9fccb65ae6a8a9e70e;Fri May 30 11:56:04 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2c04ba2ab5288e9d0952a4174889da422d73783d;Fri May 30 19:47:39 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;2c04ba2ab5288e9d0952a4174889da422d73783d;Fri May 30 19:47:39 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;2c04ba2ab5288e9d0952a4174889da422d73783d;Fri May 30 19:47:39 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceFieldExpr#emit(C, FnExpr, GeneratorAdapter);2c04ba2ab5288e9d0952a4174889da422d73783d;Fri May 30 19:47:39 2008 +0000
SameType;true;clojure.lang.Compiler.StaticFieldExpr;clojure.lang.Compiler.StaticFieldExpr;2c04ba2ab5288e9d0952a4174889da422d73783d;Fri May 30 19:47:39 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticFieldExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.StaticFieldExpr#emit(C, FnExpr, GeneratorAdapter);2c04ba2ab5288e9d0952a4174889da422d73783d;Fri May 30 19:47:39 2008 +0000
SameType;true;clojure.lang.Compiler.MethodExpr;clojure.lang.Compiler.MethodExpr;2c04ba2ab5288e9d0952a4174889da422d73783d;Fri May 30 19:47:39 2008 +0000
SameMethod;true;clojure.lang.Compiler.MethodExpr#emitTypedArgs(FnExpr, GeneratorAdapter, Class[], IPersistentVector);clojure.lang.Compiler.MethodExpr#emitTypedArgs(FnExpr, GeneratorAdapter, Class[], IPersistentVector);2c04ba2ab5288e9d0952a4174889da422d73783d;Fri May 30 19:47:39 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;2c04ba2ab5288e9d0952a4174889da422d73783d;Fri May 30 19:47:39 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);2c04ba2ab5288e9d0952a4174889da422d73783d;Fri May 30 19:47:39 2008 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;2c04ba2ab5288e9d0952a4174889da422d73783d;Fri May 30 19:47:39 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.StaticMethodExpr#emit(C, FnExpr, GeneratorAdapter);2c04ba2ab5288e9d0952a4174889da422d73783d;Fri May 30 19:47:39 2008 +0000
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;2c04ba2ab5288e9d0952a4174889da422d73783d;Fri May 30 19:47:39 2008 +0000
SameMethod;true;clojure.lang.Compiler.IfExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.IfExpr#emit(C, FnExpr, GeneratorAdapter);2c04ba2ab5288e9d0952a4174889da422d73783d;Fri May 30 19:47:39 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;dbeb11e22fd1a30610b07cf27505e5ec0fd6e1e7;Fri May 30 21:23:25 2008 +0000
SameType;true;clojure.lang.Numbers.F;clojure.lang.Numbers.F;dbeb11e22fd1a30610b07cf27505e5ec0fd6e1e7;Fri May 30 21:23:25 2008 +0000
SameType;true;clojure.lang.Numbers.D;clojure.lang.Numbers.D;dbeb11e22fd1a30610b07cf27505e5ec0fd6e1e7;Fri May 30 21:23:25 2008 +0000
SameType;true;clojure.lang.Numbers.I;clojure.lang.Numbers.I;dbeb11e22fd1a30610b07cf27505e5ec0fd6e1e7;Fri May 30 21:23:25 2008 +0000
SameType;true;clojure.lang.Numbers.L;clojure.lang.Numbers.L;dbeb11e22fd1a30610b07cf27505e5ec0fd6e1e7;Fri May 30 21:23:25 2008 +0000
ExtractInterface;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.MaybePrimitiveExpr;c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
ExtractMethod;true;clojure.lang.Compiler.MethodExpr#emitTypedArgs(FnExpr, GeneratorAdapter, Class[], IPersistentVector);clojure.lang.Compiler#maybePrimitiveType(Expr);c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameType;true;clojure.lang.Compiler.MethodExpr;clojure.lang.Compiler.MethodExpr;c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameMethod;true;clojure.lang.Compiler.MethodExpr#emitTypedArgs(FnExpr, GeneratorAdapter, Class[], IPersistentVector);clojure.lang.Compiler.MethodExpr#emitTypedArgs(FnExpr, GeneratorAdapter, Class[], IPersistentVector);c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameMethod;true;clojure.lang.Compiler.IfExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.IfExpr#emit(C, FnExpr, GeneratorAdapter);c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emitLocal(GeneratorAdapter, LocalBinding);clojure.lang.Compiler.FnExpr#emitLocal(GeneratorAdapter, LocalBinding);c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameMethod;true;clojure.lang.Compiler.LocalBinding#LocalBinding(int, Symbol, Symbol, Expr);clojure.lang.Compiler.LocalBinding#LocalBinding(int, Symbol, Symbol, Expr);c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameType;true;clojure.lang.Compiler.LocalBindingExpr;clojure.lang.Compiler.LocalBindingExpr;c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameMethod;true;clojure.lang.Compiler.LocalBindingExpr#LocalBindingExpr(LocalBinding, Symbol);clojure.lang.Compiler.LocalBindingExpr#LocalBindingExpr(LocalBinding, Symbol);c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameMethod;true;clojure.lang.Compiler.LetExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.LetExpr#emit(C, FnExpr, GeneratorAdapter);c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameMethod;true;clojure.lang.Compiler.RecurExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.RecurExpr#emit(C, FnExpr, GeneratorAdapter);c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
SameType;true;clojure.lang.Util;clojure.lang.Util;c98a632c86515d2c7c133608d07b8b33bcfa75fc;Sun Jun 1 01:12:38 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_add(double, double);clojure.lang.Numbers#add(double, double);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_add(float, float);clojure.lang.Numbers#add(float, float);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_add(int, int);clojure.lang.Numbers#unchecked_add(int, int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_add(long, long);clojure.lang.Numbers#unchecked_add(long, long);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_dec(double);clojure.lang.Numbers#dec(double);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_dec(float);clojure.lang.Numbers#dec(float);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_dec(int);clojure.lang.Numbers#unchecked_dec(int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_dec(long);clojure.lang.Numbers#unchecked_dec(long);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_divide(double, double);clojure.lang.Numbers#divide(double, double);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_divide(float, float);clojure.lang.Numbers#divide(float, float);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_divide(int, int);clojure.lang.Numbers#divide(int, int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_divide(long, long);clojure.lang.Numbers#divide(long, long);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_equiv(double, double);clojure.lang.Numbers#equiv(double, double);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_equiv(float, float);clojure.lang.Numbers#equiv(float, float);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_equiv(int, int);clojure.lang.Numbers#equiv(int, int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_equiv(long, long);clojure.lang.Numbers#equiv(long, long);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_gt(double, double);clojure.lang.Numbers#gt(double, double);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_gt(float, float);clojure.lang.Numbers#gt(float, float);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_gt(int, int);clojure.lang.Numbers#gt(int, int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_gt(long, long);clojure.lang.Numbers#gt(long, long);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_gte(double, double);clojure.lang.Numbers#gte(double, double);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_gte(float, float);clojure.lang.Numbers#gte(float, float);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_gte(int, int);clojure.lang.Numbers#gte(int, int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_gte(long, long);clojure.lang.Numbers#gte(long, long);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_inc(double);clojure.lang.Numbers#inc(double);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_inc(float);clojure.lang.Numbers#inc(float);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_inc(int);clojure.lang.Numbers#unchecked_inc(int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_inc(long);clojure.lang.Numbers#unchecked_inc(long);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_isNeg(double);clojure.lang.Numbers#isNeg(double);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_isNeg(float);clojure.lang.Numbers#isNeg(float);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_isNeg(int);clojure.lang.Numbers#isNeg(int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_isNeg(long);clojure.lang.Numbers#isNeg(long);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_isPos(double);clojure.lang.Numbers#isPos(double);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_isPos(float);clojure.lang.Numbers#isPos(float);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_isPos(int);clojure.lang.Numbers#isPos(int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_isPos(long);clojure.lang.Numbers#isPos(long);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_isZero(double);clojure.lang.Numbers#isZero(double);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_isZero(float);clojure.lang.Numbers#isZero(float);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_isZero(int);clojure.lang.Numbers#isZero(int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_isZero(long);clojure.lang.Numbers#isZero(long);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_lt(double, double);clojure.lang.Numbers#lt(double, double);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_lt(float, float);clojure.lang.Numbers#lt(float, float);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_lt(int, int);clojure.lang.Numbers#lt(int, int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_lt(long, long);clojure.lang.Numbers#lt(long, long);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_lte(double, double);clojure.lang.Numbers#lte(double, double);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_lte(float, float);clojure.lang.Numbers#lte(float, float);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_lte(int, int);clojure.lang.Numbers#lte(int, int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_lte(long, long);clojure.lang.Numbers#lte(long, long);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_multiply(double, double);clojure.lang.Numbers#multiply(double, double);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_multiply(float, float);clojure.lang.Numbers#multiply(float, float);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_multiply(int, int);clojure.lang.Numbers#unchecked_multiply(int, int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_multiply(long, long);clojure.lang.Numbers#unchecked_multiply(long, long);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_negate(double);clojure.lang.Numbers#minus(double);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_negate(float);clojure.lang.Numbers#minus(float);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_negate(int);clojure.lang.Numbers#unchecked_negate(int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_negate(long);clojure.lang.Numbers#unchecked_negate(long);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_subtract(double, double);clojure.lang.Numbers#minus(double, double);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_subtract(float, float);clojure.lang.Numbers#minus(float, float);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_subtract(int, int);clojure.lang.Numbers#unchecked_subtract(int, int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;false;clojure.lang.Numbers#prim_subtract(long, long);clojure.lang.Numbers#unchecked_subtract(long, long);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;true;clojure.lang.Numbers#subtract(Number, Number);clojure.lang.Numbers#minus(Object, Object);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
RenameMethod;true;clojure.lang.Numbers#negate(Number);clojure.lang.Numbers#minus(Object);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
MoveMethod;false;clojure.lang.Numbers.D#aclone(double[]);clojure.lang.RT#aclone(Object[]);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
MoveMethod;false;clojure.lang.Numbers.D#aget(double[], int);clojure.lang.RT#aget(Object[], int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
MoveMethod;false;clojure.lang.Numbers.D#alength(double[]);clojure.lang.RT#alength(Object[]);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
MoveMethod;false;clojure.lang.Numbers.D#aset(double[], int, double);clojure.lang.RT#aset(Object[], int, Object);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
MoveMethod;false;clojure.lang.Numbers.F#aclone(float[]);clojure.lang.RT#aclone(Object[]);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
MoveMethod;false;clojure.lang.Numbers.F#aget(float[], int);clojure.lang.RT#aget(Object[], int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
MoveMethod;false;clojure.lang.Numbers.F#alength(float[]);clojure.lang.RT#alength(Object[]);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
MoveMethod;false;clojure.lang.Numbers.F#aset(float[], int, float);clojure.lang.RT#aset(Object[], int, Object);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
MoveMethod;false;clojure.lang.Numbers.I#aclone(int[]);clojure.lang.RT#aclone(Object[]);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
MoveMethod;false;clojure.lang.Numbers.I#aget(int[], int);clojure.lang.RT#aget(Object[], int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
MoveMethod;false;clojure.lang.Numbers.I#alength(int[]);clojure.lang.RT#alength(Object[]);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
MoveMethod;false;clojure.lang.Numbers.I#aset(int[], int, int);clojure.lang.RT#aset(Object[], int, Object);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
MoveMethod;false;clojure.lang.Numbers.L#aclone(long[]);clojure.lang.RT#aclone(Object[]);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
MoveMethod;false;clojure.lang.Numbers.L#aget(long[], int);clojure.lang.RT#aget(Object[], int);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
MoveMethod;false;clojure.lang.Numbers.L#alength(long[]);clojure.lang.RT#alength(Object[]);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
MoveMethod;false;clojure.lang.Numbers.L#aset(long[], int, long);clojure.lang.RT#aset(Object[], int, Object);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#maybeClass(Object, boolean);clojure.lang.Compiler.HostExpr#maybeClass(Object, boolean);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
SameType;true;clojure.lang.Compiler.EmptyExpr;clojure.lang.Compiler.EmptyExpr;2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
SameMethod;true;clojure.lang.Compiler.EmptyExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.EmptyExpr#emit(C, FnExpr, GeneratorAdapter);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
SameType;true;clojure.lang.Numbers.RatioOps;clojure.lang.Numbers.RatioOps;2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
SameMethod;true;clojure.lang.Numbers.RatioOps#remainder(Number, Number);clojure.lang.Numbers.RatioOps#remainder(Number, Number);2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();2c57f4b5cbb5608905f45cccad3958de51c62590;Sun Jun 1 22:20:02 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;b692f3e2697badd25b593298887ab5c3f91c5687;Mon Jun 2 13:26:33 2008 +0000
SameMethod;true;clojure.lang.Compiler#subsumes(Class[], Class[]);clojure.lang.Compiler#subsumes(Class[], Class[]);b692f3e2697badd25b593298887ab5c3f91c5687;Mon Jun 2 13:26:33 2008 +0000
RenameMethod;false;clojure.lang.Numbers#divide(int, int);clojure.lang.Numbers#unchecked_divide(int, int);1206781b751321716b1cd7a85331d9991a12f5bd;Mon Jun 2 14:34:42 2008 +0000
RenameMethod;false;clojure.lang.Numbers#divide(long, long);clojure.lang.Numbers#unchecked_divide(long, long);1206781b751321716b1cd7a85331d9991a12f5bd;Mon Jun 2 14:34:42 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;1206781b751321716b1cd7a85331d9991a12f5bd;Mon Jun 2 14:34:42 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;bdc3823cc58c986c7dcd6e3c098f10b9709fdc5c;Mon Jun 2 18:27:41 2008 +0000
SameMethod;true;clojure.lang.Compiler#getMatchingParams(String, ArrayList, IPersistentVector);clojure.lang.Compiler#getMatchingParams(String, ArrayList, IPersistentVector);bdc3823cc58c986c7dcd6e3c098f10b9709fdc5c;Mon Jun 2 18:27:41 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;b09988ee65939daca058c5f5430692f82b16b0c9;Mon Jun 2 18:28:22 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;221de6d1831af113648793a8f2b0a25222822314;Tue Jun 3 18:04:29 2008 +0000
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;221de6d1831af113648793a8f2b0a25222822314;Tue Jun 3 18:04:29 2008 +0000
SameMethod;true;clojure.lang.Compiler.LocalBinding#hasJavaClass();clojure.lang.Compiler.LocalBinding#hasJavaClass();221de6d1831af113648793a8f2b0a25222822314;Tue Jun 3 18:04:29 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;f13ecf38302b6bb284ae8722718b1fdcdeb1d5a2;Tue Jun 3 18:53:49 2008 +0000
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;f13ecf38302b6bb284ae8722718b1fdcdeb1d5a2;Tue Jun 3 18:53:49 2008 +0000
SameMethod;true;clojure.lang.Compiler.LocalBinding#hasJavaClass();clojure.lang.Compiler.LocalBinding#hasJavaClass();f13ecf38302b6bb284ae8722718b1fdcdeb1d5a2;Tue Jun 3 18:53:49 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;65cb1b97f60c995309e1bd8a2f93145b5dcc700f;Tue Jun 3 21:25:16 2008 +0000
SameType;true;clojure.lang.Compiler.MonitorEnterExpr;clojure.lang.Compiler.MonitorEnterExpr;65cb1b97f60c995309e1bd8a2f93145b5dcc700f;Tue Jun 3 21:25:16 2008 +0000
SameMethod;true;clojure.lang.Compiler.MonitorEnterExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.MonitorEnterExpr#emit(C, FnExpr, GeneratorAdapter);65cb1b97f60c995309e1bd8a2f93145b5dcc700f;Tue Jun 3 21:25:16 2008 +0000
SameType;true;clojure.lang.Compiler.MonitorExitExpr;clojure.lang.Compiler.MonitorExitExpr;65cb1b97f60c995309e1bd8a2f93145b5dcc700f;Tue Jun 3 21:25:16 2008 +0000
SameMethod;true;clojure.lang.Compiler.MonitorExitExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.MonitorExitExpr#emit(C, FnExpr, GeneratorAdapter);65cb1b97f60c995309e1bd8a2f93145b5dcc700f;Tue Jun 3 21:25:16 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;005ea1b5f96c5bb762e155032a865e29ad71bcf3;Wed Jun 4 01:21:43 2008 +0000
SameMethod;true;clojure.lang.LispReader#matchSymbol(String);clojure.lang.LispReader#matchSymbol(String);005ea1b5f96c5bb762e155032a865e29ad71bcf3;Wed Jun 4 01:21:43 2008 +0000
ExtractMethod;true;clojure.lang.Compiler.LocalBindingExpr#emitUnboxed(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.FnExpr#emitUnboxedLocal(GeneratorAdapter, LocalBinding);049b6b071da0d96d50b99a82817fdfa5e6f60204;Mon Jun 9 14:07:46 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;049b6b071da0d96d50b99a82817fdfa5e6f60204;Mon Jun 9 14:07:46 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;049b6b071da0d96d50b99a82817fdfa5e6f60204;Mon Jun 9 14:07:46 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();049b6b071da0d96d50b99a82817fdfa5e6f60204;Mon Jun 9 14:07:46 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.FnExpr#emit(C, FnExpr, GeneratorAdapter);049b6b071da0d96d50b99a82817fdfa5e6f60204;Mon Jun 9 14:07:46 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emitLocal(GeneratorAdapter, LocalBinding);clojure.lang.Compiler.FnExpr#emitLocal(GeneratorAdapter, LocalBinding);049b6b071da0d96d50b99a82817fdfa5e6f60204;Mon Jun 9 14:07:46 2008 +0000
SameType;true;clojure.lang.Compiler.LocalBindingExpr;clojure.lang.Compiler.LocalBindingExpr;049b6b071da0d96d50b99a82817fdfa5e6f60204;Mon Jun 9 14:07:46 2008 +0000
SameMethod;true;clojure.lang.Compiler.LocalBindingExpr#emitUnboxed(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.LocalBindingExpr#emitUnboxed(C, FnExpr, GeneratorAdapter);049b6b071da0d96d50b99a82817fdfa5e6f60204;Mon Jun 9 14:07:46 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3f4cc942979188f9abcf32c04bcdd308df143769;Tue Jun 10 13:15:40 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;3f4cc942979188f9abcf32c04bcdd308df143769;Tue Jun 10 13:15:40 2008 +0000
SameMethod;true;clojure.lang.Compiler.TryExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.TryExpr#emit(C, FnExpr, GeneratorAdapter);3f4cc942979188f9abcf32c04bcdd308df143769;Tue Jun 10 13:15:40 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;3f4cc942979188f9abcf32c04bcdd308df143769;Tue Jun 10 13:15:40 2008 +0000
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);3f4cc942979188f9abcf32c04bcdd308df143769;Tue Jun 10 13:15:40 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);3f4cc942979188f9abcf32c04bcdd308df143769;Tue Jun 10 13:15:40 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;4f14c794f51d942b9be046841ece5afe7bbfcf35;Tue Jun 10 15:49:42 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;4f14c794f51d942b9be046841ece5afe7bbfcf35;Tue Jun 10 15:49:42 2008 +0000
SameMethod;true;clojure.lang.Compiler.TryExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.TryExpr#emit(C, FnExpr, GeneratorAdapter);4f14c794f51d942b9be046841ece5afe7bbfcf35;Tue Jun 10 15:49:42 2008 +0000
ExtractInterface;true;clojure.lang.ArraySeq.ArraySeq_float;clojure.lang.IReduce;9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
ExtractInterface;true;clojure.lang.ArraySeq.ArraySeq_int;clojure.lang.IReduce;9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
ExtractInterface;true;clojure.lang.ArraySeq.ArraySeq_long;clojure.lang.IReduce;9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
ExtractInterface;true;clojure.lang.ArraySeq;clojure.lang.IReduce;9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
ExtractInterface;true;clojure.lang.Range;clojure.lang.IReduce;9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
ExtractInterface;true;clojure.lang.ArraySeq.ArraySeq_double;clojure.lang.IReduce;9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
ExtractInterface;true;clojure.lang.APersistentVector.Seq;clojure.lang.IReduce;9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
PushDownMethod;false;clojure.lang.ASeq#reduce(IFn);clojure.lang.PersistentList#reduce(IFn);9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
PushDownMethod;false;clojure.lang.ASeq#reduce(IFn, Object);clojure.lang.PersistentList#reduce(IFn, Object);9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
SameType;true;clojure.lang.APersistentVector.Seq;clojure.lang.APersistentVector.Seq;9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
SameType;true;clojure.lang.ArraySeq.ArraySeq_int;clojure.lang.ArraySeq.ArraySeq_int;9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
SameType;true;clojure.lang.ArraySeq.ArraySeq_float;clojure.lang.ArraySeq.ArraySeq_float;9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
SameType;true;clojure.lang.ArraySeq.ArraySeq_double;clojure.lang.ArraySeq.ArraySeq_double;9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
SameType;true;clojure.lang.ArraySeq.ArraySeq_long;clojure.lang.ArraySeq.ArraySeq_long;9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
SameType;true;clojure.lang.ISeq;clojure.lang.ISeq;9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
SameType;true;clojure.lang.Range;clojure.lang.Range;9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0;Wed Jun 11 21:28:44 2008 +0000
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;4ce1fc09273b2e2dafce015453a03319f5c11e28;Fri Jun 13 11:54:13 2008 +0000
SameMethod;true;clojure.lang.LazySeq#rest();clojure.lang.LazySeq#rest();4ce1fc09273b2e2dafce015453a03319f5c11e28;Fri Jun 13 11:54:13 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;4ce1fc09273b2e2dafce015453a03319f5c11e28;Fri Jun 13 11:54:13 2008 +0000
ExtractMethod;true;clojure.lang.RT#classForName(String);clojure.lang.RT#baseLoader();1cd6377ff7644f88680c7ec2107c0ff2b7997f22;Fri Jun 13 13:20:35 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;1cd6377ff7644f88680c7ec2107c0ff2b7997f22;Fri Jun 13 13:20:35 2008 +0000
SameMethod;true;clojure.lang.RT#makeClassLoader();clojure.lang.RT#makeClassLoader();1cd6377ff7644f88680c7ec2107c0ff2b7997f22;Fri Jun 13 13:20:35 2008 +0000
SameMethod;true;clojure.lang.RT#classForName(String);clojure.lang.RT#classForName(String);1cd6377ff7644f88680c7ec2107c0ff2b7997f22;Fri Jun 13 13:20:35 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;2ede5e60184145a082270b222023b0499ec2b736;Tue Jun 17 15:41:58 2008 +0000
SameMethod;true;clojure.lang.LispReader#readNumber(PushbackReader, char);clojure.lang.LispReader#readNumber(PushbackReader, char);2ede5e60184145a082270b222023b0499ec2b736;Tue Jun 17 15:41:58 2008 +0000
SameMethod;true;clojure.lang.LispReader#matchNumber(String);clojure.lang.LispReader#matchNumber(String);2ede5e60184145a082270b222023b0499ec2b736;Tue Jun 17 15:41:58 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;cc69bc7471f67b036798a65c13352c542aa1bb7a;Tue Jun 17 19:42:41 2008 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;cc69bc7471f67b036798a65c13352c542aa1bb7a;Tue Jun 17 19:42:41 2008 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);cc69bc7471f67b036798a65c13352c542aa1bb7a;Tue Jun 17 19:42:41 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;ee08483128f4df1a26fe4e18926938306ef8d419;Tue Jun 17 22:05:14 2008 +0000
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);ee08483128f4df1a26fe4e18926938306ef8d419;Tue Jun 17 22:05:14 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);ee08483128f4df1a26fe4e18926938306ef8d419;Tue Jun 17 22:05:14 2008 +0000
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Compiler#lookupVar(Symbol, boolean);ee08483128f4df1a26fe4e18926938306ef8d419;Tue Jun 17 22:05:14 2008 +0000
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;ea44ec5c859c11a482cc99a0688a4d4e1435ab35;Thu Jun 19 13:50:38 2008 +0000
SameMethod;true;clojure.lang.APersistentSet#invoke(Object);clojure.lang.APersistentSet#invoke(Object);ea44ec5c859c11a482cc99a0688a4d4e1435ab35;Thu Jun 19 13:50:38 2008 +0000
SameType;true;clojure.lang.IPersistentSet;clojure.lang.IPersistentSet;ea44ec5c859c11a482cc99a0688a4d4e1435ab35;Thu Jun 19 13:50:38 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;ea44ec5c859c11a482cc99a0688a4d4e1435ab35;Thu Jun 19 13:50:38 2008 +0000
SameMethod;true;clojure.lang.RT#get(Object, Object);clojure.lang.RT#get(Object, Object);ea44ec5c859c11a482cc99a0688a4d4e1435ab35;Thu Jun 19 13:50:38 2008 +0000
SameMethod;true;clojure.lang.RT#get(Object, Object, Object);clojure.lang.RT#get(Object, Object, Object);ea44ec5c859c11a482cc99a0688a4d4e1435ab35;Thu Jun 19 13:50:38 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;f67252e090fd6492efe1bb668ea545099ab75ad6;Fri Jun 20 03:09:07 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;f67252e090fd6492efe1bb668ea545099ab75ad6;Fri Jun 20 03:09:07 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();f67252e090fd6492efe1bb668ea545099ab75ad6;Fri Jun 20 03:09:07 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;4299c7689ac0238d5cfc388d260a400022f53a05;Fri Jun 20 21:23:43 2008 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);4299c7689ac0238d5cfc388d260a400022f53a05;Fri Jun 20 21:23:43 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;ff6e9a5e045b02352736048b0cf874b3fffd998f;Fri Jun 20 21:56:53 2008 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);ff6e9a5e045b02352736048b0cf874b3fffd998f;Fri Jun 20 21:56:53 2008 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int, Object);clojure.lang.RT#nth(Object, int, Object);ff6e9a5e045b02352736048b0cf874b3fffd998f;Fri Jun 20 21:56:53 2008 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;3b7c161286fd469857ff66013f785bef742e3b07;Sat Jun 21 14:12:21 2008 +0000
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;3b7c161286fd469857ff66013f785bef742e3b07;Sat Jun 21 14:12:21 2008 +0000
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object);clojure.lang.Keyword#invoke(Object, Object);3b7c161286fd469857ff66013f785bef742e3b07;Sat Jun 21 14:12:21 2008 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;3b7c161286fd469857ff66013f785bef742e3b07;Sat Jun 21 14:12:21 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;dc28ef14c6fe11543a82f998eca9e4fd706cd033;Sun Jun 22 13:34:10 2008 +0000
SameType;true;clojure.lang.LispReader.CharacterReader;clojure.lang.LispReader.CharacterReader;dc28ef14c6fe11543a82f998eca9e4fd706cd033;Sun Jun 22 13:34:10 2008 +0000
SameMethod;true;clojure.lang.LispReader.CharacterReader#invoke(Object, Object);clojure.lang.LispReader.CharacterReader#invoke(Object, Object);dc28ef14c6fe11543a82f998eca9e4fd706cd033;Sun Jun 22 13:34:10 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;dc28ef14c6fe11543a82f998eca9e4fd706cd033;Sun Jun 22 13:34:10 2008 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);dc28ef14c6fe11543a82f998eca9e4fd706cd033;Sun Jun 22 13:34:10 2008 +0000
SameType;true;clojure.lang.Util;clojure.lang.Util;6991ddb4c6c61c94f1eccd5ca42c9c0143fce910;Mon Jun 23 15:36:14 2008 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;ddf92b9b840ccaae9ba9dca9fd24175a865857cc;Tue Jun 24 12:34:30 2008 +0000
SameType;true;clojure.lang.PersistentHashMap.LeafNode;clojure.lang.PersistentHashMap.LeafNode;ddf92b9b840ccaae9ba9dca9fd24175a865857cc;Tue Jun 24 12:34:30 2008 +0000
SameMethod;true;clojure.lang.PersistentHashMap.LeafNode#assoc(int, int, Object, Object, Box);clojure.lang.PersistentHashMap.LeafNode#assoc(int, int, Object, Object, Box);ddf92b9b840ccaae9ba9dca9fd24175a865857cc;Tue Jun 24 12:34:30 2008 +0000
SameType;true;clojure.lang.PersistentHashMap.HashCollisionNode;clojure.lang.PersistentHashMap.HashCollisionNode;ddf92b9b840ccaae9ba9dca9fd24175a865857cc;Tue Jun 24 12:34:30 2008 +0000
SameMethod;true;clojure.lang.PersistentHashMap.HashCollisionNode#assoc(int, int, Object, Object, Box);clojure.lang.PersistentHashMap.HashCollisionNode#assoc(int, int, Object, Object, Box);ddf92b9b840ccaae9ba9dca9fd24175a865857cc;Tue Jun 24 12:34:30 2008 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;8e613118ff6757707ae26fcd102bec7273650628;Tue Jun 24 14:33:58 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;773decb73fafedd96436b962bac21e7d51ad511e;Thu Jun 26 13:26:22 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;773decb73fafedd96436b962bac21e7d51ad511e;Thu Jun 26 13:26:22 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;364476bded5679fcbe6f5be768d144dbe1d625d1;Sun Jun 29 21:22:29 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;1a7c8810b0c37f432a7c55ae51e64186c08bd30e;Wed Jul 2 23:59:20 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;1a7c8810b0c37f432a7c55ae51e64186c08bd30e;Wed Jul 2 23:59:20 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceFieldExpr#emit(C, FnExpr, GeneratorAdapter);1a7c8810b0c37f432a7c55ae51e64186c08bd30e;Wed Jul 2 23:59:20 2008 +0000
SameType;true;clojure.lang.Compiler.StaticFieldExpr;clojure.lang.Compiler.StaticFieldExpr;1a7c8810b0c37f432a7c55ae51e64186c08bd30e;Wed Jul 2 23:59:20 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticFieldExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.StaticFieldExpr#emit(C, FnExpr, GeneratorAdapter);1a7c8810b0c37f432a7c55ae51e64186c08bd30e;Wed Jul 2 23:59:20 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;1a7c8810b0c37f432a7c55ae51e64186c08bd30e;Wed Jul 2 23:59:20 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);1a7c8810b0c37f432a7c55ae51e64186c08bd30e;Wed Jul 2 23:59:20 2008 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;1a7c8810b0c37f432a7c55ae51e64186c08bd30e;Wed Jul 2 23:59:20 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.StaticMethodExpr#emit(C, FnExpr, GeneratorAdapter);1a7c8810b0c37f432a7c55ae51e64186c08bd30e;Wed Jul 2 23:59:20 2008 +0000
ExtractMethod;true;clojure.lang.Delay#invoke();clojure.lang.Delay#get();1d5027ce0b18e8c35d630632aade98399b9456fb;Thu Jul 3 20:05:32 2008 +0000
SameType;true;clojure.lang.Delay;clojure.lang.Delay;1d5027ce0b18e8c35d630632aade98399b9456fb;Thu Jul 3 20:05:32 2008 +0000
SameMethod;true;clojure.lang.Delay#Delay(IFn);clojure.lang.Delay#Delay(IFn);1d5027ce0b18e8c35d630632aade98399b9456fb;Thu Jul 3 20:05:32 2008 +0000
SameMethod;true;clojure.lang.Delay#invoke();clojure.lang.Delay#invoke();1d5027ce0b18e8c35d630632aade98399b9456fb;Thu Jul 3 20:05:32 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;88a55c0d9134084c9a12a6f028a520f8f7ad76f0;Sun Jul 13 13:10:50 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;88a55c0d9134084c9a12a6f028a520f8f7ad76f0;Sun Jul 13 13:10:50 2008 +0000
SameMethod;true;clojure.lang.Compiler.TryExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.TryExpr#emit(C, FnExpr, GeneratorAdapter);88a55c0d9134084c9a12a6f028a520f8f7ad76f0;Sun Jul 13 13:10:50 2008 +0000
SameType;true;clojure.lang.Script;clojure.lang.Script;62a1e8b8983b944ae178fe79dac1f6e769546aea;Sun Jul 13 20:38:08 2008 +0000
SameMethod;true;clojure.lang.Script#main(String[]);clojure.lang.Script#main(String[]);62a1e8b8983b944ae178fe79dac1f6e769546aea;Sun Jul 13 20:38:08 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3506190079411ca518cd2ca8ef12111a1e8221fa;Sun Jul 13 22:15:45 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;3506190079411ca518cd2ca8ef12111a1e8221fa;Sun Jul 13 22:15:45 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();3506190079411ca518cd2ca8ef12111a1e8221fa;Sun Jul 13 22:15:45 2008 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;5bf5f47ed3da327b86854e227936a8df21e3fada;Tue Jul 15 11:43:55 2008 +0000
SameMethod;true;clojure.lang.Ref#fn();clojure.lang.Ref#fn();5bf5f47ed3da327b86854e227936a8df21e3fada;Tue Jul 15 11:43:55 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;603ea94af6d4b5ab4597ebd3fdae5b56dc6a3330;Thu Jul 17 10:56:16 2008 +0000
SameMethod;true;clojure.lang.Compiler#eval(Object);clojure.lang.Compiler#eval(Object);603ea94af6d4b5ab4597ebd3fdae5b56dc6a3330;Thu Jul 17 10:56:16 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3fab5c8ca765624ee1aadd24fd26bfedbf9eb00d;Thu Jul 17 11:59:42 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;3fab5c8ca765624ee1aadd24fd26bfedbf9eb00d;Thu Jul 17 11:59:42 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;3fab5c8ca765624ee1aadd24fd26bfedbf9eb00d;Thu Jul 17 11:59:42 2008 +0000
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);3fab5c8ca765624ee1aadd24fd26bfedbf9eb00d;Thu Jul 17 11:59:42 2008 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;3fab5c8ca765624ee1aadd24fd26bfedbf9eb00d;Thu Jul 17 11:59:42 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);3fab5c8ca765624ee1aadd24fd26bfedbf9eb00d;Thu Jul 17 11:59:42 2008 +0000
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;3fab5c8ca765624ee1aadd24fd26bfedbf9eb00d;Thu Jul 17 11:59:42 2008 +0000
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;3fab5c8ca765624ee1aadd24fd26bfedbf9eb00d;Thu Jul 17 11:59:42 2008 +0000
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);3fab5c8ca765624ee1aadd24fd26bfedbf9eb00d;Thu Jul 17 11:59:42 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;bb875e47c98a8ddd7ae3166cf1989b89820952c4;Thu Jul 17 18:04:30 2008 +0000
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;bb875e47c98a8ddd7ae3166cf1989b89820952c4;Thu Jul 17 18:04:30 2008 +0000
SameMethod;true;clojure.lang.Symbol#intern(String);clojure.lang.Symbol#intern(String);bb875e47c98a8ddd7ae3166cf1989b89820952c4;Thu Jul 17 18:04:30 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;1b727af895074b180b9de6a9e65f99af2595361f;Thu Jul 17 21:34:15 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);1b727af895074b180b9de6a9e65f99af2595361f;Thu Jul 17 21:34:15 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;93f1b01bc4395211903b6d16267bf2c590c35006;Thu Jul 17 21:58:22 2008 +0000
SameMethod;true;clojure.lang.Reflector#invokeInstanceMethod(Object, String, Object[]);clojure.lang.Reflector#invokeInstanceMethod(Object, String, Object[]);93f1b01bc4395211903b6d16267bf2c590c35006;Thu Jul 17 21:58:22 2008 +0000
SameMethod;true;clojure.lang.Reflector#invokeConstructor(Class, Object[]);clojure.lang.Reflector#invokeConstructor(Class, Object[]);93f1b01bc4395211903b6d16267bf2c590c35006;Thu Jul 17 21:58:22 2008 +0000
SameMethod;true;clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);93f1b01bc4395211903b6d16267bf2c590c35006;Thu Jul 17 21:58:22 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;5f52000facfdbc65ee4e52834dfe9626040e54fe;Mon Jul 21 18:59:53 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;5f52000facfdbc65ee4e52834dfe9626040e54fe;Mon Jul 21 18:59:53 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);5f52000facfdbc65ee4e52834dfe9626040e54fe;Mon Jul 21 18:59:53 2008 +0000
SameMethod;true;clojure.lang.Compiler#eval(Object);clojure.lang.Compiler#eval(Object);5f52000facfdbc65ee4e52834dfe9626040e54fe;Mon Jul 21 18:59:53 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;5f52000facfdbc65ee4e52834dfe9626040e54fe;Mon Jul 21 18:59:53 2008 +0000
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();5f52000facfdbc65ee4e52834dfe9626040e54fe;Mon Jul 21 18:59:53 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;5f52000facfdbc65ee4e52834dfe9626040e54fe;Mon Jul 21 18:59:53 2008 +0000
SameMethod;true;clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);5f52000facfdbc65ee4e52834dfe9626040e54fe;Mon Jul 21 18:59:53 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#namespaceFor(Symbol);4c38b36cfb0fef594f06484cfaf99fb6a0b676de;Mon Jul 21 20:41:14 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#resolveIn(Namespace, Symbol);clojure.lang.Compiler#namespaceFor(Symbol);4c38b36cfb0fef594f06484cfaf99fb6a0b676de;Mon Jul 21 20:41:14 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#maybeResolveIn(Namespace, Symbol);clojure.lang.Compiler#namespaceFor(Symbol);4c38b36cfb0fef594f06484cfaf99fb6a0b676de;Mon Jul 21 20:41:14 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Compiler#namespaceFor(Symbol);4c38b36cfb0fef594f06484cfaf99fb6a0b676de;Mon Jul 21 20:41:14 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#namespaceFor(Symbol);4c38b36cfb0fef594f06484cfaf99fb6a0b676de;Mon Jul 21 20:41:14 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;4c38b36cfb0fef594f06484cfaf99fb6a0b676de;Mon Jul 21 20:41:14 2008 +0000
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);4c38b36cfb0fef594f06484cfaf99fb6a0b676de;Mon Jul 21 20:41:14 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);4c38b36cfb0fef594f06484cfaf99fb6a0b676de;Mon Jul 21 20:41:14 2008 +0000
SameMethod;true;clojure.lang.Compiler#resolveIn(Namespace, Symbol);clojure.lang.Compiler#resolveIn(Namespace, Symbol);4c38b36cfb0fef594f06484cfaf99fb6a0b676de;Mon Jul 21 20:41:14 2008 +0000
SameMethod;true;clojure.lang.Compiler#maybeResolveIn(Namespace, Symbol);clojure.lang.Compiler#maybeResolveIn(Namespace, Symbol);4c38b36cfb0fef594f06484cfaf99fb6a0b676de;Mon Jul 21 20:41:14 2008 +0000
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Compiler#lookupVar(Symbol, boolean);4c38b36cfb0fef594f06484cfaf99fb6a0b676de;Mon Jul 21 20:41:14 2008 +0000
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;4c38b36cfb0fef594f06484cfaf99fb6a0b676de;Mon Jul 21 20:41:14 2008 +0000
SameMethod;true;clojure.lang.Namespace#Namespace(Symbol);clojure.lang.Namespace#Namespace(Symbol);4c38b36cfb0fef594f06484cfaf99fb6a0b676de;Mon Jul 21 20:41:14 2008 +0000
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;c81e2a431edcbda8f7287418bc91f75a9e195a3a;Tue Jul 22 16:42:02 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;c81e2a431edcbda8f7287418bc91f75a9e195a3a;Tue Jul 22 16:42:02 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;eba20b3dcc401fb4c873afc5948cc92fbcb00097;Tue Jul 22 18:50:48 2008 +0000
SameMethod;true;clojure.lang.Numbers#float_array(Object);clojure.lang.Numbers#float_array(Object);eba20b3dcc401fb4c873afc5948cc92fbcb00097;Tue Jul 22 18:50:48 2008 +0000
SameMethod;true;clojure.lang.Numbers#double_array(Object);clojure.lang.Numbers#double_array(Object);eba20b3dcc401fb4c873afc5948cc92fbcb00097;Tue Jul 22 18:50:48 2008 +0000
SameMethod;true;clojure.lang.Numbers#long_array(Object);clojure.lang.Numbers#long_array(Object);eba20b3dcc401fb4c873afc5948cc92fbcb00097;Tue Jul 22 18:50:48 2008 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;ede290d6bafc2d01786e0b9551b7eaf4ea313959;Wed Jul 23 10:50:41 2008 +0000
SameMethod;true;clojure.lang.APersistentMap#toArray(Object[]);clojure.lang.APersistentMap#toArray(Object[]);ede290d6bafc2d01786e0b9551b7eaf4ea313959;Wed Jul 23 10:50:41 2008 +0000
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;ede290d6bafc2d01786e0b9551b7eaf4ea313959;Wed Jul 23 10:50:41 2008 +0000
SameMethod;true;clojure.lang.APersistentSet#toArray(Object[]);clojure.lang.APersistentSet#toArray(Object[]);ede290d6bafc2d01786e0b9551b7eaf4ea313959;Wed Jul 23 10:50:41 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;ede290d6bafc2d01786e0b9551b7eaf4ea313959;Wed Jul 23 10:50:41 2008 +0000
SameMethod;true;clojure.lang.APersistentVector#toArray(Object[]);clojure.lang.APersistentVector#toArray(Object[]);ede290d6bafc2d01786e0b9551b7eaf4ea313959;Wed Jul 23 10:50:41 2008 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;e2299ed977bf9fb0de155b0d4efd2737987855e6;Thu Jul 24 00:23:46 2008 +0000
SameMethod;true;clojure.lang.Agent#Agent(Object);clojure.lang.Agent#Agent(Object);e2299ed977bf9fb0de155b0d4efd2737987855e6;Thu Jul 24 00:23:46 2008 +0000
SameMethod;true;clojure.lang.Agent#setState(Object);clojure.lang.Agent#setState(Object);e2299ed977bf9fb0de155b0d4efd2737987855e6;Thu Jul 24 00:23:46 2008 +0000
SameType;true;clojure.lang.Delay;clojure.lang.Delay;e2299ed977bf9fb0de155b0d4efd2737987855e6;Thu Jul 24 00:23:46 2008 +0000
SameType;true;clojure.lang.IRef;clojure.lang.IRef;e2299ed977bf9fb0de155b0d4efd2737987855e6;Thu Jul 24 00:23:46 2008 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;e2299ed977bf9fb0de155b0d4efd2737987855e6;Thu Jul 24 00:23:46 2008 +0000
SameMethod;true;clojure.lang.LockingTransaction#run(IFn);clojure.lang.LockingTransaction#run(IFn);e2299ed977bf9fb0de155b0d4efd2737987855e6;Thu Jul 24 00:23:46 2008 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;e2299ed977bf9fb0de155b0d4efd2737987855e6;Thu Jul 24 00:23:46 2008 +0000
SameMethod;true;clojure.lang.Ref#Ref(Object);clojure.lang.Ref#Ref(Object);e2299ed977bf9fb0de155b0d4efd2737987855e6;Thu Jul 24 00:23:46 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;e2299ed977bf9fb0de155b0d4efd2737987855e6;Thu Jul 24 00:23:46 2008 +0000
SameMethod;true;clojure.lang.Var#set(Object);clojure.lang.Var#set(Object);e2299ed977bf9fb0de155b0d4efd2737987855e6;Thu Jul 24 00:23:46 2008 +0000
SameMethod;true;clojure.lang.Var#bindRoot(Object);clojure.lang.Var#bindRoot(Object);e2299ed977bf9fb0de155b0d4efd2737987855e6;Thu Jul 24 00:23:46 2008 +0000
SameMethod;true;clojure.lang.Var#commuteRoot(IFn);clojure.lang.Var#commuteRoot(IFn);e2299ed977bf9fb0de155b0d4efd2737987855e6;Thu Jul 24 00:23:46 2008 +0000
SameMethod;true;clojure.lang.Var#pushThreadBindings(Associative);clojure.lang.Var#pushThreadBindings(Associative);e2299ed977bf9fb0de155b0d4efd2737987855e6;Thu Jul 24 00:23:46 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;423d6832f374a32d11e11edb2cffa320789d0b62;Fri Jul 25 14:58:23 2008 +0000
SameMethod;true;clojure.lang.Compiler#resolveSymbol(Symbol);clojure.lang.Compiler#resolveSymbol(Symbol);423d6832f374a32d11e11edb2cffa320789d0b62;Fri Jul 25 14:58:23 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;8e7a9804b0aa8a6a75185aad42c1fec6990a6d17;Fri Jul 25 20:21:08 2008 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);8e7a9804b0aa8a6a75185aad42c1fec6990a6d17;Fri Jul 25 20:21:08 2008 +0000
RenameMethod;true;clojure.lang.MultiFn#assoc(Object, IFn);clojure.lang.MultiFn#addMethod(Object, IFn);00061735edd435995167ee7bbf01a17d8ae2cc66;Mon Jul 28 01:02:47 2008 +0000
RenameMethod;true;clojure.lang.MultiFn#dissoc(Object);clojure.lang.MultiFn#removeMethod(Object);00061735edd435995167ee7bbf01a17d8ae2cc66;Mon Jul 28 01:02:47 2008 +0000
ExtractMethod;true;clojure.lang.MultiFn#getFn(Object);clojure.lang.MultiFn#resetCache();00061735edd435995167ee7bbf01a17d8ae2cc66;Mon Jul 28 01:02:47 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;00061735edd435995167ee7bbf01a17d8ae2cc66;Mon Jul 28 01:02:47 2008 +0000
SameMethod;true;clojure.lang.LispReader#matchSymbol(String);clojure.lang.LispReader#matchSymbol(String);00061735edd435995167ee7bbf01a17d8ae2cc66;Mon Jul 28 01:02:47 2008 +0000
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;00061735edd435995167ee7bbf01a17d8ae2cc66;Mon Jul 28 01:02:47 2008 +0000
SameMethod;true;clojure.lang.MultiFn#MultiFn(IFn, Object);clojure.lang.MultiFn#MultiFn(IFn, Object);00061735edd435995167ee7bbf01a17d8ae2cc66;Mon Jul 28 01:02:47 2008 +0000
SameMethod;true;clojure.lang.MultiFn#getFn(Object);clojure.lang.MultiFn#getFn(Object);00061735edd435995167ee7bbf01a17d8ae2cc66;Mon Jul 28 01:02:47 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;00061735edd435995167ee7bbf01a17d8ae2cc66;Mon Jul 28 01:02:47 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;a63f62ee1ffcab5c042d42a1dbc01e59e5ec9960;Mon Jul 28 13:08:05 2008 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;a63f62ee1ffcab5c042d42a1dbc01e59e5ec9960;Mon Jul 28 13:08:05 2008 +0000
SameType;true;clojure.lang.Compiler.NewExpr.Parser;clojure.lang.Compiler.NewExpr.Parser;a63f62ee1ffcab5c042d42a1dbc01e59e5ec9960;Mon Jul 28 13:08:05 2008 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);a63f62ee1ffcab5c042d42a1dbc01e59e5ec9960;Mon Jul 28 13:08:05 2008 +0000
ExtractMethod;true;clojure.lang.MultiFn#findAndCacheBestMethod(Object);clojure.lang.MultiFn#isA(Object, Object);4b47829f59992f7de22a859fd32306bb512747de;Mon Jul 28 15:52:38 2008 +0000
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;4b47829f59992f7de22a859fd32306bb512747de;Mon Jul 28 15:52:38 2008 +0000
SameMethod;true;clojure.lang.MultiFn#MultiFn(IFn, Object);clojure.lang.MultiFn#MultiFn(IFn, Object);4b47829f59992f7de22a859fd32306bb512747de;Mon Jul 28 15:52:38 2008 +0000
SameMethod;true;clojure.lang.MultiFn#findAndCacheBestMethod(Object);clojure.lang.MultiFn#findAndCacheBestMethod(Object);4b47829f59992f7de22a859fd32306bb512747de;Mon Jul 28 15:52:38 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;1ddf3f466a0b9b57d3deec0c9b64a5e545144aa9;Tue Jul 29 11:24:26 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;b11b857af37611adc0739c801fbfb8c8aee6b8dd;Wed Jul 30 13:40:49 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;b11b857af37611adc0739c801fbfb8c8aee6b8dd;Wed Jul 30 13:40:49 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);b11b857af37611adc0739c801fbfb8c8aee6b8dd;Wed Jul 30 13:40:49 2008 +0000
ExtractMethod;true;clojure.lang.PersistentStructMap#withMeta(IPersistentMap);clojure.lang.PersistentStructMap#makeNew(IPersistentMap, Def, Object[], IPersistentMap);a8e7ec162fb395bd5d1a4f29a106dfc98333e85c;Wed Jul 30 13:52:30 2008 +0000
ExtractMethod;true;clojure.lang.PersistentStructMap#assoc(Object, Object);clojure.lang.PersistentStructMap#makeNew(IPersistentMap, Def, Object[], IPersistentMap);a8e7ec162fb395bd5d1a4f29a106dfc98333e85c;Wed Jul 30 13:52:30 2008 +0000
ExtractMethod;true;clojure.lang.PersistentStructMap#without(Object);clojure.lang.PersistentStructMap#makeNew(IPersistentMap, Def, Object[], IPersistentMap);a8e7ec162fb395bd5d1a4f29a106dfc98333e85c;Wed Jul 30 13:52:30 2008 +0000
SameType;true;clojure.lang.PersistentStructMap;clojure.lang.PersistentStructMap;a8e7ec162fb395bd5d1a4f29a106dfc98333e85c;Wed Jul 30 13:52:30 2008 +0000
SameMethod;true;clojure.lang.PersistentStructMap#withMeta(IPersistentMap);clojure.lang.PersistentStructMap#withMeta(IPersistentMap);a8e7ec162fb395bd5d1a4f29a106dfc98333e85c;Wed Jul 30 13:52:30 2008 +0000
SameMethod;true;clojure.lang.PersistentStructMap#assoc(Object, Object);clojure.lang.PersistentStructMap#assoc(Object, Object);a8e7ec162fb395bd5d1a4f29a106dfc98333e85c;Wed Jul 30 13:52:30 2008 +0000
SameMethod;true;clojure.lang.PersistentStructMap#without(Object);clojure.lang.PersistentStructMap#without(Object);a8e7ec162fb395bd5d1a4f29a106dfc98333e85c;Wed Jul 30 13:52:30 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;37d9b6c83b14a95a53f28ea7c63982aa716d9450;Thu Jul 31 20:52:47 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;37d9b6c83b14a95a53f28ea7c63982aa716d9450;Thu Jul 31 20:52:47 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;37d9b6c83b14a95a53f28ea7c63982aa716d9450;Thu Jul 31 20:52:47 2008 +0000
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);37d9b6c83b14a95a53f28ea7c63982aa716d9450;Thu Jul 31 20:52:47 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;37d9b6c83b14a95a53f28ea7c63982aa716d9450;Thu Jul 31 20:52:47 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);37d9b6c83b14a95a53f28ea7c63982aa716d9450;Thu Jul 31 20:52:47 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;924c78191c36ccdc070be40991487f3d0fe98ad7;Thu Jul 31 20:55:27 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;924c78191c36ccdc070be40991487f3d0fe98ad7;Thu Jul 31 20:55:27 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);924c78191c36ccdc070be40991487f3d0fe98ad7;Thu Jul 31 20:55:27 2008 +0000
SameType;true;clojure.lang.AFn;clojure.lang.AFn;66c871196e0f385aa7edf0bed906ce210804b2ae;Thu Jul 31 20:59:50 2008 +0000
SameMethod;true;clojure.lang.AFn#throwArity();clojure.lang.AFn#throwArity();66c871196e0f385aa7edf0bed906ce210804b2ae;Thu Jul 31 20:59:50 2008 +0000
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;1490b4026bfc5c61dd64cdc4d41d0df36553c274;Fri Aug 1 11:32:20 2008 +0000
SameMethod;true;clojure.lang.MultiFn#findAndCacheBestMethod(Object);clojure.lang.MultiFn#findAndCacheBestMethod(Object);1490b4026bfc5c61dd64cdc4d41d0df36553c274;Fri Aug 1 11:32:20 2008 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;0e6b9ecedba11faa156403e059a7aa8672a7f774;Fri Aug 1 13:34:02 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;bfdb7dca726854a491918e8e319815ceaa6196d0;Mon Aug 4 12:27:03 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;bfdb7dca726854a491918e8e319815ceaa6196d0;Mon Aug 4 12:27:03 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;bfdb7dca726854a491918e8e319815ceaa6196d0;Mon Aug 4 12:27:03 2008 +0000
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);bfdb7dca726854a491918e8e319815ceaa6196d0;Mon Aug 4 12:27:03 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;060aa171217ee2cff9616c3134e4c20d35134ab2;Mon Aug 4 21:28:21 2008 +0000
SameMethod;true;clojure.lang.RT#loadResourceScript(Class, String);clojure.lang.RT#loadResourceScript(Class, String);060aa171217ee2cff9616c3134e4c20d35134ab2;Mon Aug 4 21:28:21 2008 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;c4d627948776f6622ace56e931a1922911ff43c7;Wed Aug 6 14:20:35 2008 +0000
SameType;true;clojure.lang.PersistentList.EmptyList;clojure.lang.PersistentList.EmptyList;c4d627948776f6622ace56e931a1922911ff43c7;Wed Aug 6 14:20:35 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;fca8d50f0191456b3aa4e20824dae29e70a0b12d;Wed Aug 6 14:37:15 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);fca8d50f0191456b3aa4e20824dae29e70a0b12d;Wed Aug 6 14:37:15 2008 +0000
ExtractMethod;true;clojure.lang.RT#loadResourceScript(Class, String);clojure.lang.RT#loadResourceScript(Class, String, boolean);5c97b610426556b6d032084f1dc601e85000f829;Wed Aug 6 15:23:18 2008 +0000
ExtractMethod;true;clojure.lang.RT#loadResourceScript(String);clojure.lang.RT#loadResourceScript(String, boolean);5c97b610426556b6d032084f1dc601e85000f829;Wed Aug 6 15:23:18 2008 +0000
ExtractMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#maybeLoadResourceScript(String);5c97b610426556b6d032084f1dc601e85000f829;Wed Aug 6 15:23:18 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;5c97b610426556b6d032084f1dc601e85000f829;Wed Aug 6 15:23:18 2008 +0000
SameMethod;true;clojure.lang.RT#loadResourceScript(String);clojure.lang.RT#loadResourceScript(String);5c97b610426556b6d032084f1dc601e85000f829;Wed Aug 6 15:23:18 2008 +0000
SameMethod;true;clojure.lang.RT#loadResourceScript(Class, String);clojure.lang.RT#loadResourceScript(Class, String);5c97b610426556b6d032084f1dc601e85000f829;Wed Aug 6 15:23:18 2008 +0000
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();5c97b610426556b6d032084f1dc601e85000f829;Wed Aug 6 15:23:18 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;eebc10943d8daa1514e6a626dc29bebd1e1106a0;Wed Aug 6 22:05:04 2008 +0000
SameType;true;clojure.lang.Script;clojure.lang.Script;24118f2aca814de17946573930d174684a760ee8;Thu Aug 7 11:47:36 2008 +0000
SameMethod;true;clojure.lang.Script#main(String[]);clojure.lang.Script#main(String[]);24118f2aca814de17946573930d174684a760ee8;Thu Aug 7 11:47:36 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;158698c6ad3a95b52a3120be1bcdd381bc8750d5;Thu Aug 7 12:11:11 2008 +0000
SameMethod;true;clojure.lang.Compiler#loadFile(String);clojure.lang.Compiler#loadFile(String);158698c6ad3a95b52a3120be1bcdd381bc8750d5;Thu Aug 7 12:11:11 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;158698c6ad3a95b52a3120be1bcdd381bc8750d5;Thu Aug 7 12:11:11 2008 +0000
SameMethod;true;clojure.lang.RT#loadResourceScript(Class, String, boolean);clojure.lang.RT#loadResourceScript(Class, String, boolean);158698c6ad3a95b52a3120be1bcdd381bc8750d5;Thu Aug 7 12:11:11 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;158698c6ad3a95b52a3120be1bcdd381bc8750d5;Thu Aug 7 12:11:11 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);158698c6ad3a95b52a3120be1bcdd381bc8750d5;Thu Aug 7 12:11:11 2008 +0000
SameType;true;clojure.lang.Delay;clojure.lang.Delay;6b8b308e3a36a79489d7b923620b7d83cd0b6da5;Sat Aug 9 19:34:21 2008 +0000
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;6b8b308e3a36a79489d7b923620b7d83cd0b6da5;Sat Aug 9 19:34:21 2008 +0000
SameMethod;true;clojure.lang.LazySeq#first();clojure.lang.LazySeq#first();6b8b308e3a36a79489d7b923620b7d83cd0b6da5;Sat Aug 9 19:34:21 2008 +0000
SameMethod;true;clojure.lang.LazySeq#rest();clojure.lang.LazySeq#rest();6b8b308e3a36a79489d7b923620b7d83cd0b6da5;Sat Aug 9 19:34:21 2008 +0000
SameMethod;true;clojure.lang.LazySeq#withMeta(IPersistentMap);clojure.lang.LazySeq#withMeta(IPersistentMap);6b8b308e3a36a79489d7b923620b7d83cd0b6da5;Sat Aug 9 19:34:21 2008 +0000
SameType;true;clojure.lang.TransactionalHashMap;clojure.lang.TransactionalHashMap;6b8b308e3a36a79489d7b923620b7d83cd0b6da5;Sat Aug 9 19:34:21 2008 +0000
SameMethod;true;clojure.lang.TransactionalHashMap#binFor(Object);clojure.lang.TransactionalHashMap#binFor(Object);6b8b308e3a36a79489d7b923620b7d83cd0b6da5;Sat Aug 9 19:34:21 2008 +0000
ExtractMethod;true;clojure.lang.RT#seq(Object);clojure.lang.RT#seqFrom(Object);a8307cc884811af0a769023bf1459d77c1c02f7d;Sun Aug 10 23:34:15 2008 +0000
SameType;true;clojure.lang.LazyCons;clojure.lang.LazyCons;a8307cc884811af0a769023bf1459d77c1c02f7d;Sun Aug 10 23:34:15 2008 +0000
SameMethod;true;clojure.lang.LazyCons#first();clojure.lang.LazyCons#first();a8307cc884811af0a769023bf1459d77c1c02f7d;Sun Aug 10 23:34:15 2008 +0000
SameMethod;true;clojure.lang.LazyCons#rest();clojure.lang.LazyCons#rest();a8307cc884811af0a769023bf1459d77c1c02f7d;Sun Aug 10 23:34:15 2008 +0000
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;a8307cc884811af0a769023bf1459d77c1c02f7d;Sun Aug 10 23:34:15 2008 +0000
SameMethod;true;clojure.lang.LazySeq#rest();clojure.lang.LazySeq#rest();a8307cc884811af0a769023bf1459d77c1c02f7d;Sun Aug 10 23:34:15 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;a8307cc884811af0a769023bf1459d77c1c02f7d;Sun Aug 10 23:34:15 2008 +0000
SameMethod;true;clojure.lang.RT#seq(Object);clojure.lang.RT#seq(Object);a8307cc884811af0a769023bf1459d77c1c02f7d;Sun Aug 10 23:34:15 2008 +0000
SameMethod;true;clojure.lang.RT#meta(Object);clojure.lang.RT#meta(Object);a8307cc884811af0a769023bf1459d77c1c02f7d;Sun Aug 10 23:34:15 2008 +0000
SameMethod;true;clojure.lang.RT#first(Object);clojure.lang.RT#first(Object);a8307cc884811af0a769023bf1459d77c1c02f7d;Sun Aug 10 23:34:15 2008 +0000
SameMethod;true;clojure.lang.RT#rest(Object);clojure.lang.RT#rest(Object);a8307cc884811af0a769023bf1459d77c1c02f7d;Sun Aug 10 23:34:15 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;00acf5e69e4ccb4fb1a2717d0894d9ca01c7e91f;Wed Aug 13 15:06:51 2008 +0000
SameMethod;true;clojure.lang.Reflector#getMethods(Class, int, String, boolean);clojure.lang.Reflector#getMethods(Class, int, String, boolean);00acf5e69e4ccb4fb1a2717d0894d9ca01c7e91f;Wed Aug 13 15:06:51 2008 +0000
SameType;true;clojure.lang.Util;clojure.lang.Util;61963dff6ec188720e91847ab5305c091d9dc125;Fri Aug 15 12:53:06 2008 +0000
SameMethod;true;clojure.lang.Util#isPrimitive(Class);clojure.lang.Util#isPrimitive(Class);61963dff6ec188720e91847ab5305c091d9dc125;Fri Aug 15 12:53:06 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;4371ab9b199cd3b35660effd58c59069bdf4c7bc;Sat Aug 16 23:38:25 2008 +0000
SameType;true;clojure.lang.DynamicClassLoader;clojure.lang.DynamicClassLoader;4509f5c715dc69164a15391d80adae93f5223d00;Sun Aug 17 13:39:17 2008 +0000
SameType;true;clojure.lang.DynamicClassLoader;clojure.lang.DynamicClassLoader;8cb1bd3dc18b5379e5da87fd18de829d35f75a28;Sun Aug 17 14:13:06 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;2e9afaecf3623ea89002c8cd66d6a61b1e8a2bc5;Mon Aug 25 20:16:20 2008 +0000
SameMethod;true;clojure.lang.RT#seqFrom(Object);clojure.lang.RT#seqFrom(Object);2e9afaecf3623ea89002c8cd66d6a61b1e8a2bc5;Mon Aug 25 20:16:20 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;d48ddcdcd8edbbc6e40d4047f20e292f658f99b3;Sat Aug 30 00:59:24 2008 +0000
SameMethod;true;clojure.lang.RT#loadResourceScript(Class, String, boolean);clojure.lang.RT#loadResourceScript(Class, String, boolean);d48ddcdcd8edbbc6e40d4047f20e292f658f99b3;Sat Aug 30 00:59:24 2008 +0000
SameType;true;clojure.lang.LazyCons;clojure.lang.LazyCons;3469988d9ca4e03658e6e7fe380cce39dd58b340;Mon Sep 1 19:22:29 2008 +0000
SameMethod;true;clojure.lang.LazyCons#LazyCons(IFn);clojure.lang.LazyCons#LazyCons(IFn);3469988d9ca4e03658e6e7fe380cce39dd58b340;Mon Sep 1 19:22:29 2008 +0000
SameMethod;true;clojure.lang.LazyCons#LazyCons(IPersistentMap, Object, ISeq);clojure.lang.LazyCons#LazyCons(IPersistentMap, Object, ISeq);3469988d9ca4e03658e6e7fe380cce39dd58b340;Mon Sep 1 19:22:29 2008 +0000
SameMethod;true;clojure.lang.LazyCons#first();clojure.lang.LazyCons#first();3469988d9ca4e03658e6e7fe380cce39dd58b340;Mon Sep 1 19:22:29 2008 +0000
SameMethod;true;clojure.lang.LazyCons#rest();clojure.lang.LazyCons#rest();3469988d9ca4e03658e6e7fe380cce39dd58b340;Mon Sep 1 19:22:29 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;adbe5ac82a068512a96fee1fa826bd7f590f01e0;Wed Sep 3 20:21:54 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;fb3aa918c91c1b009c2e97436359c20f355e8430;Sat Sep 6 22:30:50 2008 +0000
SameMethod;true;clojure.lang.Compiler#resolveIn(Namespace, Symbol);clojure.lang.Compiler#resolveIn(Namespace, Symbol);fb3aa918c91c1b009c2e97436359c20f355e8430;Sat Sep 6 22:30:50 2008 +0000
SameMethod;true;clojure.lang.Compiler#maybeResolveIn(Namespace, Symbol);clojure.lang.Compiler#maybeResolveIn(Namespace, Symbol);fb3aa918c91c1b009c2e97436359c20f355e8430;Sat Sep 6 22:30:50 2008 +0000
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Compiler#lookupVar(Symbol, boolean);fb3aa918c91c1b009c2e97436359c20f355e8430;Sat Sep 6 22:30:50 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;fb3aa918c91c1b009c2e97436359c20f355e8430;Sat Sep 6 22:30:50 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;46e27a29fc72f573235cfa1c9cecf8b764a16e8f;Sun Sep 7 00:10:38 2008 +0000
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Compiler#lookupVar(Symbol, boolean);46e27a29fc72f573235cfa1c9cecf8b764a16e8f;Sun Sep 7 00:10:38 2008 +0000
ExtractMethod;true;clojure.lang.Compiler.FnExpr#eval();clojure.lang.Compiler.FnExpr#getCompiledClass();dcd325e36cffdb53fee52dac186bcf02b7220452;Fri Sep 12 14:09:48 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;dcd325e36cffdb53fee52dac186bcf02b7220452;Fri Sep 12 14:09:48 2008 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;dcd325e36cffdb53fee52dac186bcf02b7220452;Fri Sep 12 14:09:48 2008 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr#eval();clojure.lang.Compiler.DefExpr#eval();dcd325e36cffdb53fee52dac186bcf02b7220452;Fri Sep 12 14:09:48 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;dcd325e36cffdb53fee52dac186bcf02b7220452;Fri Sep 12 14:09:48 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();dcd325e36cffdb53fee52dac186bcf02b7220452;Fri Sep 12 14:09:48 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#eval();clojure.lang.Compiler.FnExpr#eval();dcd325e36cffdb53fee52dac186bcf02b7220452;Fri Sep 12 14:09:48 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.FnExpr#emit(C, FnExpr, GeneratorAdapter);dcd325e36cffdb53fee52dac186bcf02b7220452;Fri Sep 12 14:09:48 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;dcd325e36cffdb53fee52dac186bcf02b7220452;Fri Sep 12 14:09:48 2008 +0000
SameType;true;clojure.lang.LazyCons;clojure.lang.LazyCons;bba00b2841531a6900c47d1332e09beaa52f3218;Fri Sep 12 18:41:53 2008 +0000
SameMethod;true;clojure.lang.LazyCons#LazyCons(IPersistentMap, Object, ISeq);clojure.lang.LazyCons#LazyCons(IPersistentMap, Object, ISeq);bba00b2841531a6900c47d1332e09beaa52f3218;Fri Sep 12 18:41:53 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;49c9f8960ff07bf53a3a7eedbc52f7754b9cab3e;Sat Sep 13 18:46:00 2008 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int, Object);clojure.lang.RT#nth(Object, int, Object);49c9f8960ff07bf53a3a7eedbc52f7754b9cab3e;Sat Sep 13 18:46:00 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;f73bf9542f09528ab913da76b6bff661f3583e04;Mon Sep 15 22:29:00 2008 +0000
SameMethod;true;clojure.lang.Reflector#getMethods(Class, int, String, boolean);clojure.lang.Reflector#getMethods(Class, int, String, boolean);f73bf9542f09528ab913da76b6bff661f3583e04;Mon Sep 15 22:29:00 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;9016a7ed9e5e728dff5e7c855b1baabccaf272d2;Mon Sep 15 23:48:05 2008 +0000
SameMethod;true;clojure.lang.Reflector#getMethods(Class, int, String, boolean);clojure.lang.Reflector#getMethods(Class, int, String, boolean);9016a7ed9e5e728dff5e7c855b1baabccaf272d2;Mon Sep 15 23:48:05 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#namespaceFor(Symbol);clojure.lang.Compiler#namespaceFor(Namespace, Symbol);edf6f303654ae113d733ee7347200143c7fdd2de;Tue Sep 16 11:39:38 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;edf6f303654ae113d733ee7347200143c7fdd2de;Tue Sep 16 11:39:38 2008 +0000
SameMethod;true;clojure.lang.Compiler#namespaceFor(Symbol);clojure.lang.Compiler#namespaceFor(Symbol);edf6f303654ae113d733ee7347200143c7fdd2de;Tue Sep 16 11:39:38 2008 +0000
SameMethod;true;clojure.lang.Compiler#resolveIn(Namespace, Symbol);clojure.lang.Compiler#resolveIn(Namespace, Symbol);edf6f303654ae113d733ee7347200143c7fdd2de;Tue Sep 16 11:39:38 2008 +0000
SameMethod;true;clojure.lang.Compiler#maybeResolveIn(Namespace, Symbol);clojure.lang.Compiler#maybeResolveIn(Namespace, Symbol);edf6f303654ae113d733ee7347200143c7fdd2de;Tue Sep 16 11:39:38 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;9bc5b30329913113c8a8310260b2c8d17cb0e0e3;Thu Sep 18 13:17:02 2008 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;9bc5b30329913113c8a8310260b2c8d17cb0e0e3;Thu Sep 18 13:17:02 2008 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr#eval();clojure.lang.Compiler.DefExpr#eval();9bc5b30329913113c8a8310260b2c8d17cb0e0e3;Thu Sep 18 13:17:02 2008 +0000
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;9bc5b30329913113c8a8310260b2c8d17cb0e0e3;Thu Sep 18 13:17:02 2008 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);9bc5b30329913113c8a8310260b2c8d17cb0e0e3;Thu Sep 18 13:17:02 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;9bc5b30329913113c8a8310260b2c8d17cb0e0e3;Thu Sep 18 13:17:02 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;9bc5b30329913113c8a8310260b2c8d17cb0e0e3;Thu Sep 18 13:17:02 2008 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);9bc5b30329913113c8a8310260b2c8d17cb0e0e3;Thu Sep 18 13:17:02 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;9bc5b30329913113c8a8310260b2c8d17cb0e0e3;Thu Sep 18 13:17:02 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#eval();clojure.lang.Compiler.InstanceMethodExpr#eval();9bc5b30329913113c8a8310260b2c8d17cb0e0e3;Thu Sep 18 13:17:02 2008 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;9bc5b30329913113c8a8310260b2c8d17cb0e0e3;Thu Sep 18 13:17:02 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#eval();clojure.lang.Compiler.StaticMethodExpr#eval();9bc5b30329913113c8a8310260b2c8d17cb0e0e3;Thu Sep 18 13:17:02 2008 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;9bc5b30329913113c8a8310260b2c8d17cb0e0e3;Thu Sep 18 13:17:02 2008 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#eval();clojure.lang.Compiler.InvokeExpr#eval();9bc5b30329913113c8a8310260b2c8d17cb0e0e3;Thu Sep 18 13:17:02 2008 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);9bc5b30329913113c8a8310260b2c8d17cb0e0e3;Thu Sep 18 13:17:02 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);9bc5b30329913113c8a8310260b2c8d17cb0e0e3;Thu Sep 18 13:17:02 2008 +0000
SameMethod;true;clojure.lang.Compiler#eval(Object);clojure.lang.Compiler#eval(Object);9bc5b30329913113c8a8310260b2c8d17cb0e0e3;Thu Sep 18 13:17:02 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr#eval();clojure.lang.Compiler.DefExpr#eval();0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#eval();clojure.lang.Compiler.InstanceMethodExpr#eval();0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#eval();clojure.lang.Compiler.StaticMethodExpr#eval();0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#eval();clojure.lang.Compiler.InvokeExpr#eval();0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameType;true;clojure.lang.Compiler.CompilerException;clojure.lang.Compiler.CompilerException;0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameMethod;true;clojure.lang.Compiler#errorMsg(String, int, String);clojure.lang.Compiler#errorMsg(String, int, String);0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameMethod;true;clojure.lang.Compiler#eval(Object);clojure.lang.Compiler#eval(Object);0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);0f5bd2ae6cb5471fa8c174f28d707c191a98d8c1;Fri Sep 19 00:35:50 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;b5351ce1c2eb466376dae750658c67a6b6df7213;Fri Sep 19 15:25:44 2008 +0000
SameMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.Compiler#load(Reader, String, String);b5351ce1c2eb466376dae750658c67a6b6df7213;Fri Sep 19 15:25:44 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;b5351ce1c2eb466376dae750658c67a6b6df7213;Fri Sep 19 15:25:44 2008 +0000
SameMethod;true;clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);b5351ce1c2eb466376dae750658c67a6b6df7213;Fri Sep 19 15:25:44 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.C;clojure.lang.Compiler.C;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.UntypedExpr;clojure.lang.Compiler.UntypedExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.AssignExpr;clojure.lang.Compiler.AssignExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.VarExpr;clojure.lang.Compiler.VarExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.TheVarExpr;clojure.lang.Compiler.TheVarExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.KeywordExpr;clojure.lang.Compiler.KeywordExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.LiteralExpr;clojure.lang.Compiler.LiteralExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.StaticFieldExpr;clojure.lang.Compiler.StaticFieldExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.ConstantExpr;clojure.lang.Compiler.ConstantExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.BooleanExpr;clojure.lang.Compiler.BooleanExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.StringExpr;clojure.lang.Compiler.StringExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.TryExpr.CatchClause;clojure.lang.Compiler.TryExpr.CatchClause;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.ThrowExpr;clojure.lang.Compiler.ThrowExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.MetaExpr;clojure.lang.Compiler.MetaExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.EmptyExpr;clojure.lang.Compiler.EmptyExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.ListExpr;clojure.lang.Compiler.ListExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.MapExpr;clojure.lang.Compiler.MapExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.SetExpr;clojure.lang.Compiler.SetExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.VectorExpr;clojure.lang.Compiler.VectorExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.LocalBindingExpr;clojure.lang.Compiler.LocalBindingExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.BodyExpr;clojure.lang.Compiler.BodyExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.BindingInit;clojure.lang.Compiler.BindingInit;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameMethod;true;clojure.lang.Compiler#resolveIn(Namespace, Symbol);clojure.lang.Compiler#resolveIn(Namespace, Symbol);1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;1aa40dbfa8270e6d05469606be56a54a86b87909;Fri Sep 19 18:59:15 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;76081aa0420daebf9dee9495391b2c099300a4b9;Sun Sep 21 17:03:46 2008 +0000
SameMethod;true;clojure.lang.APersistentVector#invoke(Object);clojure.lang.APersistentVector#invoke(Object);76081aa0420daebf9dee9495391b2c099300a4b9;Sun Sep 21 17:03:46 2008 +0000
SameMethod;true;clojure.lang.APersistentVector#containsKey(Object);clojure.lang.APersistentVector#containsKey(Object);76081aa0420daebf9dee9495391b2c099300a4b9;Sun Sep 21 17:03:46 2008 +0000
SameMethod;true;clojure.lang.APersistentVector#entryAt(Object);clojure.lang.APersistentVector#entryAt(Object);76081aa0420daebf9dee9495391b2c099300a4b9;Sun Sep 21 17:03:46 2008 +0000
SameMethod;true;clojure.lang.APersistentVector#assoc(Object, Object);clojure.lang.APersistentVector#assoc(Object, Object);76081aa0420daebf9dee9495391b2c099300a4b9;Sun Sep 21 17:03:46 2008 +0000
SameMethod;true;clojure.lang.APersistentVector#valAt(Object, Object);clojure.lang.APersistentVector#valAt(Object, Object);76081aa0420daebf9dee9495391b2c099300a4b9;Sun Sep 21 17:03:46 2008 +0000
SameType;true;clojure.lang.Util;clojure.lang.Util;76081aa0420daebf9dee9495391b2c099300a4b9;Sun Sep 21 17:03:46 2008 +0000
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;454da80b478c4901c1d99cf56cb957b2aee7caac;Sun Sep 21 18:41:42 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#ArraySeq(Object, int);clojure.lang.ArraySeq#ArraySeq(Object, int);454da80b478c4901c1d99cf56cb957b2aee7caac;Sun Sep 21 18:41:42 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#ArraySeq(IPersistentMap, Object, int);clojure.lang.ArraySeq#ArraySeq(IPersistentMap, Object, int);454da80b478c4901c1d99cf56cb957b2aee7caac;Sun Sep 21 18:41:42 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#first();clojure.lang.ArraySeq#first();454da80b478c4901c1d99cf56cb957b2aee7caac;Sun Sep 21 18:41:42 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#rest();clojure.lang.ArraySeq#rest();454da80b478c4901c1d99cf56cb957b2aee7caac;Sun Sep 21 18:41:42 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#count();clojure.lang.ArraySeq#count();454da80b478c4901c1d99cf56cb957b2aee7caac;Sun Sep 21 18:41:42 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#reduce(IFn);clojure.lang.ArraySeq#reduce(IFn);454da80b478c4901c1d99cf56cb957b2aee7caac;Sun Sep 21 18:41:42 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#reduce(IFn, Object);clojure.lang.ArraySeq#reduce(IFn, Object);454da80b478c4901c1d99cf56cb957b2aee7caac;Sun Sep 21 18:41:42 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;ca5ba2de079ba6d18781c14c49136d5682934514;Mon Sep 22 13:49:13 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;ca5ba2de079ba6d18781c14c49136d5682934514;Mon Sep 22 13:49:13 2008 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);ca5ba2de079ba6d18781c14c49136d5682934514;Mon Sep 22 13:49:13 2008 +0000
RenameMethod;true;clojure.lang.Agent.Action#run();clojure.lang.Agent.Action#call();1c2a26ad5d07f6cc4175f86d9aa95656cf76c6f1;Tue Sep 23 13:37:42 2008 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;1c2a26ad5d07f6cc4175f86d9aa95656cf76c6f1;Tue Sep 23 13:37:42 2008 +0000
SameType;true;clojure.lang.Agent.Action;clojure.lang.Agent.Action;1c2a26ad5d07f6cc4175f86d9aa95656cf76c6f1;Tue Sep 23 13:37:42 2008 +0000
SameMethod;true;clojure.lang.Agent.Action#execute();clojure.lang.Agent.Action#execute();1c2a26ad5d07f6cc4175f86d9aa95656cf76c6f1;Tue Sep 23 13:37:42 2008 +0000
SameMethod;true;clojure.lang.Agent.Action#doRun(Action);clojure.lang.Agent.Action#doRun(Action);1c2a26ad5d07f6cc4175f86d9aa95656cf76c6f1;Tue Sep 23 13:37:42 2008 +0000
SameMethod;true;clojure.lang.Agent#setState(Object);clojure.lang.Agent#setState(Object);1c2a26ad5d07f6cc4175f86d9aa95656cf76c6f1;Tue Sep 23 13:37:42 2008 +0000
RenameMethod;true;clojure.lang.Agent.Action#call();clojure.lang.Agent.Action#run();9b9785d3877b10e0ada69eccedd471a17be2a6d2;Tue Sep 23 15:37:04 2008 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;9b9785d3877b10e0ada69eccedd471a17be2a6d2;Tue Sep 23 15:37:04 2008 +0000
SameType;true;clojure.lang.Agent.Action;clojure.lang.Agent.Action;9b9785d3877b10e0ada69eccedd471a17be2a6d2;Tue Sep 23 15:37:04 2008 +0000
SameMethod;true;clojure.lang.Agent.Action#execute();clojure.lang.Agent.Action#execute();9b9785d3877b10e0ada69eccedd471a17be2a6d2;Tue Sep 23 15:37:04 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;ac9339e1f9593af9f730585158fd354b2f9a80f7;Tue Sep 30 21:47:25 2008 +0000
SameMethod;true;clojure.lang.Reflector#prepRet(Class, Object);clojure.lang.Reflector#prepRet(Class, Object);ac9339e1f9593af9f730585158fd354b2f9a80f7;Tue Sep 30 21:47:25 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;c3ee71492663295b4c171493732506db6cbd610b;Sat Oct 4 20:12:07 2008 +0000
SameMethod;true;clojure.lang.Reflector#getMethods(Class, int, String, boolean);clojure.lang.Reflector#getMethods(Class, int, String, boolean);c3ee71492663295b4c171493732506db6cbd610b;Sat Oct 4 20:12:07 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;2394b54131cb9c7f64176b354c75a98f066ffd73;Sat Oct 4 20:15:22 2008 +0000
SameMethod;true;clojure.lang.Reflector#getMethods(Class, int, String, boolean);clojure.lang.Reflector#getMethods(Class, int, String, boolean);2394b54131cb9c7f64176b354c75a98f066ffd73;Sat Oct 4 20:15:22 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;75dcef321baeb94e4d35036fb7a7805e6350e662;Sat Oct 4 21:16:00 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);75dcef321baeb94e4d35036fb7a7805e6350e662;Sat Oct 4 21:16:00 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;52d295cb123671de01f1df9526e193e4b3967c82;Sat Oct 4 22:07:56 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;2763e3f0dea103890bb6f8fe407186f257a29e35;Sun Oct 5 15:02:27 2008 +0000
SameMethod;true;clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);2763e3f0dea103890bb6f8fe407186f257a29e35;Sun Oct 5 15:02:27 2008 +0000
SameMethod;true;clojure.lang.Reflector#invokeConstructor(Class, Object[]);clojure.lang.Reflector#invokeConstructor(Class, Object[]);2763e3f0dea103890bb6f8fe407186f257a29e35;Sun Oct 5 15:02:27 2008 +0000
SameMethod;true;clojure.lang.Reflector#getStaticField(Class, String);clojure.lang.Reflector#getStaticField(Class, String);2763e3f0dea103890bb6f8fe407186f257a29e35;Sun Oct 5 15:02:27 2008 +0000
SameMethod;true;clojure.lang.Reflector#setStaticField(Class, String, Object);clojure.lang.Reflector#setStaticField(Class, String, Object);2763e3f0dea103890bb6f8fe407186f257a29e35;Sun Oct 5 15:02:27 2008 +0000
SameMethod;true;clojure.lang.Reflector#getInstanceField(Object, String);clojure.lang.Reflector#getInstanceField(Object, String);2763e3f0dea103890bb6f8fe407186f257a29e35;Sun Oct 5 15:02:27 2008 +0000
SameMethod;true;clojure.lang.Reflector#setInstanceField(Object, String, Object);clojure.lang.Reflector#setInstanceField(Object, String, Object);2763e3f0dea103890bb6f8fe407186f257a29e35;Sun Oct 5 15:02:27 2008 +0000
RenameMethod;false;clojure.lang.APersistentMap#add(Object);clojure.lang.APersistentMap#put(Object, Object);7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
RenameMethod;false;clojure.lang.APersistentMap#addAll(Collection);clojure.lang.APersistentMap#putAll(Map);7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
RenameMethod;true;clojure.lang.APersistentMap#contains(Object);clojure.lang.APersistentMap#entrySet();7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
PullU Method;false;clojure.lang.MapEntry#setValue(Object);clojure.lang.AMapEntry#setValue(Object);7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
PullU Method;false;clojure.lang.PersistentHashMap.LeafNode#setValue(Object);clojure.lang.AMapEntry#setValue(Object);7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
PullU Method;false;clojure.lang.PersistentTreeMap.Node#setValue(Object);clojure.lang.AMapEntry#setValue(Object);7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameType;true;clojure.lang.AMapEntry;clojure.lang.AMapEntry;7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameMethod;true;clojure.lang.APersistentMap#equals(Object);clojure.lang.APersistentMap#equals(Object);7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameMethod;true;clojure.lang.APersistentMap#hashCode();clojure.lang.APersistentMap#hashCode();7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameMethod;true;clojure.lang.APersistentSet#equals(Object);clojure.lang.APersistentSet#equals(Object);7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameMethod;true;clojure.lang.APersistentSet#hashCode();clojure.lang.APersistentSet#hashCode();7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameMethod;true;clojure.lang.APersistentVector#doEquals(IPersistentVector, Object);clojure.lang.APersistentVector#doEquals(IPersistentVector, Object);7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameMethod;true;clojure.lang.APersistentVector#hashCode();clojure.lang.APersistentVector#hashCode();7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameMethod;true;clojure.lang.APersistentVector#listIterator(int);clojure.lang.APersistentVector#listIterator(int);7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameType;true;clojure.lang.MapEntry;clojure.lang.MapEntry;7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameType;true;clojure.lang.PersistentHashMap.LeafNode;clojure.lang.PersistentHashMap.LeafNode;7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameType;true;clojure.lang.PersistentTreeMap.Node;clojure.lang.PersistentTreeMap.Node;7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameMethod;true;clojure.lang.RT#toArray(Object);clojure.lang.RT#toArray(Object);7de158ba6ee7cbf73e9f91fce4d038dd73b40789;Mon Oct 6 13:26:31 2008 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;b66a3651835c6008c1564bd812a0bde62bff3c15;Mon Oct 6 17:15:07 2008 +0000
SameType;true;clojure.lang.ISeq;clojure.lang.ISeq;b66a3651835c6008c1564bd812a0bde62bff3c15;Mon Oct 6 17:15:07 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;70f9afeac049e469d701bce1d6214f655f4323bc;Wed Oct 8 11:31:06 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;70f9afeac049e469d701bce1d6214f655f4323bc;Wed Oct 8 11:31:06 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, Expr, String);clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, Expr, String);70f9afeac049e469d701bce1d6214f655f4323bc;Wed Oct 8 11:31:06 2008 +0000
SameType;true;clojure.lang.Compiler.MethodExpr;clojure.lang.Compiler.MethodExpr;70f9afeac049e469d701bce1d6214f655f4323bc;Wed Oct 8 11:31:06 2008 +0000
SameMethod;true;clojure.lang.Compiler.MethodExpr#emitTypedArgs(FnExpr, GeneratorAdapter, Class[], IPersistentVector);clojure.lang.Compiler.MethodExpr#emitTypedArgs(FnExpr, GeneratorAdapter, Class[], IPersistentVector);70f9afeac049e469d701bce1d6214f655f4323bc;Wed Oct 8 11:31:06 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;70f9afeac049e469d701bce1d6214f655f4323bc;Wed Oct 8 11:31:06 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Expr, String, IPersistentVector);clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Expr, String, IPersistentVector);70f9afeac049e469d701bce1d6214f655f4323bc;Wed Oct 8 11:31:06 2008 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;70f9afeac049e469d701bce1d6214f655f4323bc;Wed Oct 8 11:31:06 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, Class, String, IPersistentVector);clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, Class, String, IPersistentVector);70f9afeac049e469d701bce1d6214f655f4323bc;Wed Oct 8 11:31:06 2008 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;70f9afeac049e469d701bce1d6214f655f4323bc;Wed Oct 8 11:31:06 2008 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);70f9afeac049e469d701bce1d6214f655f4323bc;Wed Oct 8 11:31:06 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;70f9afeac049e469d701bce1d6214f655f4323bc;Wed Oct 8 11:31:06 2008 +0000
SameMethod;true;clojure.lang.RT#init();clojure.lang.RT#init();70f9afeac049e469d701bce1d6214f655f4323bc;Wed Oct 8 11:31:06 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;70f9afeac049e469d701bce1d6214f655f4323bc;Wed Oct 8 11:31:06 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);70f9afeac049e469d701bce1d6214f655f4323bc;Wed Oct 8 11:31:06 2008 +0000
SameType;true;clojure.lang.Script;clojure.lang.Script;70f9afeac049e469d701bce1d6214f655f4323bc;Wed Oct 8 11:31:06 2008 +0000
SameMethod;true;clojure.lang.Script#main(String[]);clojure.lang.Script#main(String[]);70f9afeac049e469d701bce1d6214f655f4323bc;Wed Oct 8 11:31:06 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;49022384daa01c2e0de497703a99627b748fd985;Thu Oct 9 21:57:38 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;53ec9af4fd879482a6b8e04cff029d5db9634870;Fri Oct 10 14:49:31 2008 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;53ec9af4fd879482a6b8e04cff029d5db9634870;Fri Oct 10 14:49:31 2008 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);53ec9af4fd879482a6b8e04cff029d5db9634870;Fri Oct 10 14:49:31 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#namesStaticMember(Symbol);2faa08e4d42feac84230d52272de6f10b0caa434;Sat Oct 11 01:02:30 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2faa08e4d42feac84230d52272de6f10b0caa434;Sat Oct 11 01:02:30 2008 +0000
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);2faa08e4d42feac84230d52272de6f10b0caa434;Sat Oct 11 01:02:30 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;2faa08e4d42feac84230d52272de6f10b0caa434;Sat Oct 11 01:02:30 2008 +0000
SameType;true;clojure.lang.LispReader.VarReader;clojure.lang.LispReader.VarReader;2faa08e4d42feac84230d52272de6f10b0caa434;Sat Oct 11 01:02:30 2008 +0000
SameMethod;true;clojure.lang.LispReader.VarReader#invoke(Object, Object);clojure.lang.LispReader.VarReader#invoke(Object, Object);2faa08e4d42feac84230d52272de6f10b0caa434;Sat Oct 11 01:02:30 2008 +0000
SameType;true;clojure.lang.LispReader.EvalReader;clojure.lang.LispReader.EvalReader;2faa08e4d42feac84230d52272de6f10b0caa434;Sat Oct 11 01:02:30 2008 +0000
SameMethod;true;clojure.lang.LispReader.EvalReader#invoke(Object, Object);clojure.lang.LispReader.EvalReader#invoke(Object, Object);2faa08e4d42feac84230d52272de6f10b0caa434;Sat Oct 11 01:02:30 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;2faa08e4d42feac84230d52272de6f10b0caa434;Sat Oct 11 01:02:30 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);2faa08e4d42feac84230d52272de6f10b0caa434;Sat Oct 11 01:02:30 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;3b3e540c03f726486ff5712354bc0a9796e7d570;Sat Oct 11 16:28:54 2008 +0000
SameType;true;clojure.lang.LispReader.VarReader;clojure.lang.LispReader.VarReader;3b3e540c03f726486ff5712354bc0a9796e7d570;Sat Oct 11 16:28:54 2008 +0000
SameMethod;true;clojure.lang.LispReader.VarReader#invoke(Object, Object);clojure.lang.LispReader.VarReader#invoke(Object, Object);3b3e540c03f726486ff5712354bc0a9796e7d570;Sat Oct 11 16:28:54 2008 +0000
SameType;true;clojure.lang.LispReader.EvalReader;clojure.lang.LispReader.EvalReader;3b3e540c03f726486ff5712354bc0a9796e7d570;Sat Oct 11 16:28:54 2008 +0000
SameMethod;true;clojure.lang.LispReader.EvalReader#invoke(Object, Object);clojure.lang.LispReader.EvalReader#invoke(Object, Object);3b3e540c03f726486ff5712354bc0a9796e7d570;Sat Oct 11 16:28:54 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;3b3e540c03f726486ff5712354bc0a9796e7d570;Sat Oct 11 16:28:54 2008 +0000
SameMethod;true;clojure.lang.Var#toString();clojure.lang.Var#toString();3b3e540c03f726486ff5712354bc0a9796e7d570;Sat Oct 11 16:28:54 2008 +0000
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;fafdad68d92dfc695a2f040a0422db691cbb5556;Sat Oct 11 19:33:56 2008 +0000
SameMethod;true;clojure.lang.MultiFn#prefers(Object, Object);clojure.lang.MultiFn#prefers(Object, Object);fafdad68d92dfc695a2f040a0422db691cbb5556;Sat Oct 11 19:33:56 2008 +0000
SameType;true;clojure.lang.TransactionalHashMap;clojure.lang.TransactionalHashMap;043093bd670d4981a3136294941831c4cfcb7bae;Sun Oct 12 14:47:24 2008 +0000
SameMethod;true;clojure.lang.TransactionalHashMap#entrySet();clojure.lang.TransactionalHashMap#entrySet();043093bd670d4981a3136294941831c4cfcb7bae;Sun Oct 12 14:47:24 2008 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;c176f33ca4ac30b577fe6d5dec43c8707d009533;Sun Oct 12 21:31:23 2008 +0000
SameMethod;true;clojure.lang.APersistentMap#toString();clojure.lang.APersistentMap#toString();c176f33ca4ac30b577fe6d5dec43c8707d009533;Sun Oct 12 21:31:23 2008 +0000
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;c176f33ca4ac30b577fe6d5dec43c8707d009533;Sun Oct 12 21:31:23 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;c176f33ca4ac30b577fe6d5dec43c8707d009533;Sun Oct 12 21:31:23 2008 +0000
SameMethod;true;clojure.lang.APersistentVector#toString();clojure.lang.APersistentVector#toString();c176f33ca4ac30b577fe6d5dec43c8707d009533;Sun Oct 12 21:31:23 2008 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;c176f33ca4ac30b577fe6d5dec43c8707d009533;Sun Oct 12 21:31:23 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c176f33ca4ac30b577fe6d5dec43c8707d009533;Sun Oct 12 21:31:23 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;c176f33ca4ac30b577fe6d5dec43c8707d009533;Sun Oct 12 21:31:23 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);c176f33ca4ac30b577fe6d5dec43c8707d009533;Sun Oct 12 21:31:23 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();c176f33ca4ac30b577fe6d5dec43c8707d009533;Sun Oct 12 21:31:23 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;c176f33ca4ac30b577fe6d5dec43c8707d009533;Sun Oct 12 21:31:23 2008 +0000
SameMethod;true;clojure.lang.LispReader#interpretToken(String);clojure.lang.LispReader#interpretToken(String);c176f33ca4ac30b577fe6d5dec43c8707d009533;Sun Oct 12 21:31:23 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;c176f33ca4ac30b577fe6d5dec43c8707d009533;Sun Oct 12 21:31:23 2008 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);c176f33ca4ac30b577fe6d5dec43c8707d009533;Sun Oct 12 21:31:23 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;170bace615638e8ef0aae1db1e86341b2032db2c;Mon Oct 13 00:57:36 2008 +0000
SameMethod;true;clojure.lang.Compiler#resolve(Symbol);clojure.lang.Compiler#resolve(Symbol);170bace615638e8ef0aae1db1e86341b2032db2c;Mon Oct 13 00:57:36 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;170bace615638e8ef0aae1db1e86341b2032db2c;Mon Oct 13 00:57:36 2008 +0000
SameType;true;clojure.lang.LispReader.EvalReader;clojure.lang.LispReader.EvalReader;170bace615638e8ef0aae1db1e86341b2032db2c;Mon Oct 13 00:57:36 2008 +0000
SameMethod;true;clojure.lang.LispReader.EvalReader#invoke(Object, Object);clojure.lang.LispReader.EvalReader#invoke(Object, Object);170bace615638e8ef0aae1db1e86341b2032db2c;Mon Oct 13 00:57:36 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;0809bec15d3dee4a81687bf7c1e399bf3c8d817d;Mon Oct 13 23:57:11 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;0809bec15d3dee4a81687bf7c1e399bf3c8d817d;Mon Oct 13 23:57:11 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();0809bec15d3dee4a81687bf7c1e399bf3c8d817d;Mon Oct 13 23:57:11 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#getCompiledClass();clojure.lang.Compiler.FnExpr#getCompiledClass();0809bec15d3dee4a81687bf7c1e399bf3c8d817d;Mon Oct 13 23:57:11 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#constantType(int);clojure.lang.Compiler.FnExpr#constantType(int);0809bec15d3dee4a81687bf7c1e399bf3c8d817d;Mon Oct 13 23:57:11 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;be542947ad5a96930fca37b760c93eb5ced10950;Wed Oct 15 17:07:55 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;be542947ad5a96930fca37b760c93eb5ced10950;Wed Oct 15 17:07:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);be542947ad5a96930fca37b760c93eb5ced10950;Wed Oct 15 17:07:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();be542947ad5a96930fca37b760c93eb5ced10950;Wed Oct 15 17:07:55 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#getCompiledClass();clojure.lang.Compiler.FnExpr#getCompiledClass();be542947ad5a96930fca37b760c93eb5ced10950;Wed Oct 15 17:07:55 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;bd0ca4e2dc44f98935db5806886be898313028e3;Wed Oct 15 21:02:08 2008 +0000
SameType;true;clojure.lang.LispReader.RegexReader;clojure.lang.LispReader.RegexReader;bd0ca4e2dc44f98935db5806886be898313028e3;Wed Oct 15 21:02:08 2008 +0000
SameMethod;true;clojure.lang.LispReader.RegexReader#invoke(Object, Object);clojure.lang.LispReader.RegexReader#invoke(Object, Object);bd0ca4e2dc44f98935db5806886be898313028e3;Wed Oct 15 21:02:08 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;6176d97fba40fcd8879045f60a3a970a98119603;Thu Oct 16 15:39:11 2008 +0000
SameType;true;clojure.lang.LispReader.MetaReader;clojure.lang.LispReader.MetaReader;6176d97fba40fcd8879045f60a3a970a98119603;Thu Oct 16 15:39:11 2008 +0000
SameMethod;true;clojure.lang.LispReader.MetaReader#invoke(Object, Object);clojure.lang.LispReader.MetaReader#invoke(Object, Object);6176d97fba40fcd8879045f60a3a970a98119603;Thu Oct 16 15:39:11 2008 +0000
ExtractMethod;true;clojure.lang.RT#seqToTypedArray(ISeq);clojure.lang.RT#seqToTypedArray(Class, ISeq);7c8af7266505c3425712f6b48b5f250114015c20;Fri Oct 17 23:58:53 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;7c8af7266505c3425712f6b48b5f250114015c20;Fri Oct 17 23:58:53 2008 +0000
SameMethod;true;clojure.lang.RT#seqToTypedArray(ISeq);clojure.lang.RT#seqToTypedArray(ISeq);7c8af7266505c3425712f6b48b5f250114015c20;Fri Oct 17 23:58:53 2008 +0000
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;89ad7793d4574d70e1c4ae237c8c50612c1f1739;Sun Oct 19 19:59:43 2008 +0000
SameMethod;true;clojure.lang.APersistentSet#equals(Object);clojure.lang.APersistentSet#equals(Object);89ad7793d4574d70e1c4ae237c8c50612c1f1739;Sun Oct 19 19:59:43 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;d073c63d6c1c802fc89936462dda74f1921c809e;Fri Oct 24 11:52:28 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);d073c63d6c1c802fc89936462dda74f1921c809e;Fri Oct 24 11:52:28 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;890ec0869e09143587e94d842b423c1d9a58670e;Sat Oct 25 21:43:54 2008 +0000
SameMethod;true;clojure.lang.Compiler#getMatchingParams(String, ArrayList, IPersistentVector);clojure.lang.Compiler#getMatchingParams(String, ArrayList, IPersistentVector);890ec0869e09143587e94d842b423c1d9a58670e;Sat Oct 25 21:43:54 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7d0f5d805e6588de1ddfe4c6f3dbe8280fefd9d3;Mon Oct 27 00:05:22 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;7d0f5d805e6588de1ddfe4c6f3dbe8280fefd9d3;Mon Oct 27 00:05:22 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();7d0f5d805e6588de1ddfe4c6f3dbe8280fefd9d3;Mon Oct 27 00:05:22 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;7d0f5d805e6588de1ddfe4c6f3dbe8280fefd9d3;Mon Oct 27 00:05:22 2008 +0000
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;9487d7cbec62893acb45d166b20ff1223ba3934f;Mon Oct 27 18:09:57 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#count();clojure.lang.ArraySeq#count();9487d7cbec62893acb45d166b20ff1223ba3934f;Mon Oct 27 18:09:57 2008 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;8dad2038fd97dc5757ca95a6ea515860f227502c;Tue Oct 28 22:10:13 2008 +0000
SameMethod;true;clojure.lang.LockingTransaction#run(Callable);clojure.lang.LockingTransaction#run(Callable);8dad2038fd97dc5757ca95a6ea515860f227502c;Tue Oct 28 22:10:13 2008 +0000
ExtractMethod;true;clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);clojure.lang.Reflector#noMethodReport(String, Object);d3d2b3a1523aac31887b7670a56fcf472a588771;Wed Oct 29 12:42:40 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;d3d2b3a1523aac31887b7670a56fcf472a588771;Wed Oct 29 12:42:40 2008 +0000
SameMethod;true;clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);d3d2b3a1523aac31887b7670a56fcf472a588771;Wed Oct 29 12:42:40 2008 +0000
SameType;true;clojure.lang.AFn;clojure.lang.AFn;67975cdedfa8a2f7780062cb67182aff32e7679e;Thu Nov 6 18:54:51 2008 +0000
SameMethod;true;clojure.lang.AFn#compare(Object, Object);clojure.lang.AFn#compare(Object, Object);67975cdedfa8a2f7780062cb67182aff32e7679e;Thu Nov 6 18:54:51 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;003b78dc22e84cf149eada4307c7c53cd79528af;Sat Nov 8 01:06:34 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;003b78dc22e84cf149eada4307c7c53cd79528af;Sat Nov 8 01:06:34 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();003b78dc22e84cf149eada4307c7c53cd79528af;Sat Nov 8 01:06:34 2008 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;003b78dc22e84cf149eada4307c7c53cd79528af;Sat Nov 8 01:06:34 2008 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;003b78dc22e84cf149eada4307c7c53cd79528af;Sat Nov 8 01:06:34 2008 +0000
SameType;true;clojure.lang.PersistentHashSet;clojure.lang.PersistentHashSet;003b78dc22e84cf149eada4307c7c53cd79528af;Sat Nov 8 01:06:34 2008 +0000
SameMethod;true;clojure.lang.PersistentHashSet#create(List);clojure.lang.PersistentHashSet#create(List);003b78dc22e84cf149eada4307c7c53cd79528af;Sat Nov 8 01:06:34 2008 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;003b78dc22e84cf149eada4307c7c53cd79528af;Sat Nov 8 01:06:34 2008 +0000
SameType;true;clojure.lang.PersistentTreeSet;clojure.lang.PersistentTreeSet;003b78dc22e84cf149eada4307c7c53cd79528af;Sat Nov 8 01:06:34 2008 +0000
SameMethod;true;clojure.lang.PersistentTreeSet#create(List);clojure.lang.PersistentTreeSet#create(List);003b78dc22e84cf149eada4307c7c53cd79528af;Sat Nov 8 01:06:34 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;003b78dc22e84cf149eada4307c7c53cd79528af;Sat Nov 8 01:06:34 2008 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);003b78dc22e84cf149eada4307c7c53cd79528af;Sat Nov 8 01:06:34 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;003b78dc22e84cf149eada4307c7c53cd79528af;Sat Nov 8 01:06:34 2008 +0000
SameMethod;true;clojure.lang.Var#toString();clojure.lang.Var#toString();003b78dc22e84cf149eada4307c7c53cd79528af;Sat Nov 8 01:06:34 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3d1daab442b6f6067d5f2fff066bdcee60f9379a;Sat Nov 8 18:53:02 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;3d1daab442b6f6067d5f2fff066bdcee60f9379a;Sat Nov 8 18:53:02 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);3d1daab442b6f6067d5f2fff066bdcee60f9379a;Sat Nov 8 18:53:02 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();3d1daab442b6f6067d5f2fff066bdcee60f9379a;Sat Nov 8 18:53:02 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#getCompiledClass();clojure.lang.Compiler.FnExpr#getCompiledClass();3d1daab442b6f6067d5f2fff066bdcee60f9379a;Sat Nov 8 18:53:02 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.FnExpr#emit(C, FnExpr, GeneratorAdapter);3d1daab442b6f6067d5f2fff066bdcee60f9379a;Sat Nov 8 18:53:02 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;3d1daab442b6f6067d5f2fff066bdcee60f9379a;Sat Nov 8 18:53:02 2008 +0000
SameMethod;true;clojure.lang.LispReader#interpretToken(String);clojure.lang.LispReader#interpretToken(String);3d1daab442b6f6067d5f2fff066bdcee60f9379a;Sat Nov 8 18:53:02 2008 +0000
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;3d1daab442b6f6067d5f2fff066bdcee60f9379a;Sat Nov 8 18:53:02 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;3d1daab442b6f6067d5f2fff066bdcee60f9379a;Sat Nov 8 18:53:02 2008 +0000
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();3d1daab442b6f6067d5f2fff066bdcee60f9379a;Sat Nov 8 18:53:02 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;3d1daab442b6f6067d5f2fff066bdcee60f9379a;Sat Nov 8 18:53:02 2008 +0000
ExtractMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler#writeClassFile(String, byte[]);240969a3af34ff0661238d03c006cc5a74dc1698;Mon Nov 10 23:43:53 2008 +0000
ExtractMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#emitConstants(GeneratorAdapter);240969a3af34ff0661238d03c006cc5a74dc1698;Mon Nov 10 23:43:53 2008 +0000
ExtractMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler.FnExpr#emitConstants(GeneratorAdapter);240969a3af34ff0661238d03c006cc5a74dc1698;Mon Nov 10 23:43:53 2008 +0000
ExtractMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#loadLib(String);240969a3af34ff0661238d03c006cc5a74dc1698;Mon Nov 10 23:43:53 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;240969a3af34ff0661238d03c006cc5a74dc1698;Mon Nov 10 23:43:53 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;240969a3af34ff0661238d03c006cc5a74dc1698;Mon Nov 10 23:43:53 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();240969a3af34ff0661238d03c006cc5a74dc1698;Mon Nov 10 23:43:53 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#getCompiledClass();clojure.lang.Compiler.FnExpr#getCompiledClass();240969a3af34ff0661238d03c006cc5a74dc1698;Mon Nov 10 23:43:53 2008 +0000
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);240969a3af34ff0661238d03c006cc5a74dc1698;Mon Nov 10 23:43:53 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;240969a3af34ff0661238d03c006cc5a74dc1698;Mon Nov 10 23:43:53 2008 +0000
SameType;true;clojure.lang.LispReader.EvalReader;clojure.lang.LispReader.EvalReader;240969a3af34ff0661238d03c006cc5a74dc1698;Mon Nov 10 23:43:53 2008 +0000
SameMethod;true;clojure.lang.LispReader.EvalReader#invoke(Object, Object);clojure.lang.LispReader.EvalReader#invoke(Object, Object);240969a3af34ff0661238d03c006cc5a74dc1698;Mon Nov 10 23:43:53 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;240969a3af34ff0661238d03c006cc5a74dc1698;Mon Nov 10 23:43:53 2008 +0000
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();240969a3af34ff0661238d03c006cc5a74dc1698;Mon Nov 10 23:43:53 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;240969a3af34ff0661238d03c006cc5a74dc1698;Mon Nov 10 23:43:53 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);240969a3af34ff0661238d03c006cc5a74dc1698;Mon Nov 10 23:43:53 2008 +0000
RenameMethod;true;clojure.lang.RT#loadLib(String, boolean);clojure.lang.RT#load(String, boolean);a25af8d4b183e0bd3220e155e41efc4baa991922;Wed Nov 12 20:59:16 2008 +0000
RenameMethod;true;clojure.lang.RT#compileLib(String);clojure.lang.RT#compile(String);a25af8d4b183e0bd3220e155e41efc4baa991922;Wed Nov 12 20:59:16 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;a25af8d4b183e0bd3220e155e41efc4baa991922;Wed Nov 12 20:59:16 2008 +0000
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);a25af8d4b183e0bd3220e155e41efc4baa991922;Wed Nov 12 20:59:16 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;a25af8d4b183e0bd3220e155e41efc4baa991922;Wed Nov 12 20:59:16 2008 +0000
SameMethod;true;clojure.lang.RT#loadResourceScript(Class, String, boolean);clojure.lang.RT#loadResourceScript(Class, String, boolean);a25af8d4b183e0bd3220e155e41efc4baa991922;Wed Nov 12 20:59:16 2008 +0000
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();a25af8d4b183e0bd3220e155e41efc4baa991922;Wed Nov 12 20:59:16 2008 +0000
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;25b429e8b94352679c781369f37914bb2ea5cb76;Wed Nov 12 22:38:28 2008 +0000
SameMethod;true;clojure.lang.Namespace#toString();clojure.lang.Namespace#toString();25b429e8b94352679c781369f37914bb2ea5cb76;Wed Nov 12 22:38:28 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;c362926ed1e9cfb0f7b97491bef8a5624e41c226;Fri Nov 14 12:44:33 2008 +0000
SameType;true;clojure.lang.LispReader.StringReader;clojure.lang.LispReader.StringReader;c362926ed1e9cfb0f7b97491bef8a5624e41c226;Fri Nov 14 12:44:33 2008 +0000
SameMethod;true;clojure.lang.LispReader.StringReader#invoke(Object, Object);clojure.lang.LispReader.StringReader#invoke(Object, Object);c362926ed1e9cfb0f7b97491bef8a5624e41c226;Fri Nov 14 12:44:33 2008 +0000
SameType;true;clojure.lang.LispReader.CharacterReader;clojure.lang.LispReader.CharacterReader;c362926ed1e9cfb0f7b97491bef8a5624e41c226;Fri Nov 14 12:44:33 2008 +0000
SameMethod;true;clojure.lang.LispReader.CharacterReader#invoke(Object, Object);clojure.lang.LispReader.CharacterReader#invoke(Object, Object);c362926ed1e9cfb0f7b97491bef8a5624e41c226;Fri Nov 14 12:44:33 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;1fd3602858cfe6578199a4f08f20014b1612d2e5;Sat Nov 15 15:07:46 2008 +0000
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);1fd3602858cfe6578199a4f08f20014b1612d2e5;Sat Nov 15 15:07:46 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;1fd3602858cfe6578199a4f08f20014b1612d2e5;Sat Nov 15 15:07:46 2008 +0000
SameMethod;true;clojure.lang.Var#get();clojure.lang.Var#get();1fd3602858cfe6578199a4f08f20014b1612d2e5;Sat Nov 15 15:07:46 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;26bffe645489466191981bffb30e7586b9520dc3;Sat Nov 15 17:07:27 2008 +0000
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);26bffe645489466191981bffb30e7586b9520dc3;Sat Nov 15 17:07:27 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;277a070955e86697c2e0f38883ccab945c47e50a;Sun Nov 16 13:51:23 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;2f66b5c5290fbc7ff2b02365a3530cefb7e991d4;Mon Nov 17 20:32:06 2008 +0000
SameMethod;true;clojure.lang.APersistentVector#containsAll(Collection);clojure.lang.APersistentVector#containsAll(Collection);2f66b5c5290fbc7ff2b02365a3530cefb7e991d4;Mon Nov 17 20:32:06 2008 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;2f66b5c5290fbc7ff2b02365a3530cefb7e991d4;Mon Nov 17 20:32:06 2008 +0000
SameMethod;true;clojure.lang.ASeq#containsAll(Collection);clojure.lang.ASeq#containsAll(Collection);2f66b5c5290fbc7ff2b02365a3530cefb7e991d4;Mon Nov 17 20:32:06 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;97c187fbae66df23d6716538b64ba46d67847792;Tue Nov 18 03:30:57 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;97c187fbae66df23d6716538b64ba46d67847792;Tue Nov 18 03:30:57 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);97c187fbae66df23d6716538b64ba46d67847792;Tue Nov 18 03:30:57 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#getCompiledClass();clojure.lang.Compiler.FnExpr#getCompiledClass();97c187fbae66df23d6716538b64ba46d67847792;Tue Nov 18 03:30:57 2008 +0000
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);97c187fbae66df23d6716538b64ba46d67847792;Tue Nov 18 03:30:57 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;97c187fbae66df23d6716538b64ba46d67847792;Tue Nov 18 03:30:57 2008 +0000
SameMethod;true;clojure.lang.RT#load(String, boolean);clojure.lang.RT#load(String, boolean);97c187fbae66df23d6716538b64ba46d67847792;Tue Nov 18 03:30:57 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;914c6af02006b6c650493716c7fc15b4e42a837b;Tue Nov 18 11:28:34 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;d10f462699a029fa22f6e7fde59af945b5eff9b4;Tue Nov 18 19:46:41 2008 +0000
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);d10f462699a029fa22f6e7fde59af945b5eff9b4;Tue Nov 18 19:46:41 2008 +0000
SameMethod;true;clojure.lang.RT#loadClassForName(String);clojure.lang.RT#loadClassForName(String);d10f462699a029fa22f6e7fde59af945b5eff9b4;Tue Nov 18 19:46:41 2008 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;d10f462699a029fa22f6e7fde59af945b5eff9b4;Tue Nov 18 19:46:41 2008 +0000
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;dcc03cfbcadf6897aa49728f8b10656472193c7f;Wed Nov 19 19:16:47 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#first();clojure.lang.ArraySeq#first();dcc03cfbcadf6897aa49728f8b10656472193c7f;Wed Nov 19 19:16:47 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#reduce(IFn);clojure.lang.ArraySeq#reduce(IFn);dcc03cfbcadf6897aa49728f8b10656472193c7f;Wed Nov 19 19:16:47 2008 +0000
SameMethod;true;clojure.lang.ArraySeq#reduce(IFn, Object);clojure.lang.ArraySeq#reduce(IFn, Object);dcc03cfbcadf6897aa49728f8b10656472193c7f;Wed Nov 19 19:16:47 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;dcc03cfbcadf6897aa49728f8b10656472193c7f;Wed Nov 19 19:16:47 2008 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);dcc03cfbcadf6897aa49728f8b10656472193c7f;Wed Nov 19 19:16:47 2008 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int, Object);clojure.lang.RT#nth(Object, int, Object);dcc03cfbcadf6897aa49728f8b10656472193c7f;Wed Nov 19 19:16:47 2008 +0000
SameMethod;true;clojure.lang.RT#aget(Object, int);clojure.lang.RT#aget(Object, int);dcc03cfbcadf6897aa49728f8b10656472193c7f;Wed Nov 19 19:16:47 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;dcc03cfbcadf6897aa49728f8b10656472193c7f;Wed Nov 19 19:16:47 2008 +0000
SameMethod;true;clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);dcc03cfbcadf6897aa49728f8b10656472193c7f;Wed Nov 19 19:16:47 2008 +0000
SameMethod;true;clojure.lang.Reflector#getStaticField(Class, String);clojure.lang.Reflector#getStaticField(Class, String);dcc03cfbcadf6897aa49728f8b10656472193c7f;Wed Nov 19 19:16:47 2008 +0000
SameMethod;true;clojure.lang.Reflector#getInstanceField(Object, String);clojure.lang.Reflector#getInstanceField(Object, String);dcc03cfbcadf6897aa49728f8b10656472193c7f;Wed Nov 19 19:16:47 2008 +0000
SameMethod;true;clojure.lang.Reflector#invokeInstanceMember(Object, String);clojure.lang.Reflector#invokeInstanceMember(Object, String);dcc03cfbcadf6897aa49728f8b10656472193c7f;Wed Nov 19 19:16:47 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;514833953fe1e0e1c9cbc31937acd2f8c8d2ead2;Wed Nov 19 20:40:15 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;514833953fe1e0e1c9cbc31937acd2f8c8d2ead2;Wed Nov 19 20:40:15 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();514833953fe1e0e1c9cbc31937acd2f8c8d2ead2;Wed Nov 19 20:40:15 2008 +0000
SameType;true;clojure.lang.LazilyPersistentVector;clojure.lang.LazilyPersistentVector;be6a69e30036f81035a63d13187540ffc7a4feee;Thu Nov 20 01:45:20 2008 +0000
SameMethod;true;clojure.lang.LazilyPersistentVector#toArray();clojure.lang.LazilyPersistentVector#toArray();be6a69e30036f81035a63d13187540ffc7a4feee;Thu Nov 20 01:45:20 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;62e887e25e1c202c956a3f39429953923289a73c;Thu Nov 20 13:08:03 2008 +0000
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);62e887e25e1c202c956a3f39429953923289a73c;Thu Nov 20 13:08:03 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;97a38f89aefec829cd9371452384e1e5dc0b6795;Thu Nov 20 14:57:08 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;97a38f89aefec829cd9371452384e1e5dc0b6795;Thu Nov 20 14:57:08 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();97a38f89aefec829cd9371452384e1e5dc0b6795;Thu Nov 20 14:57:08 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.FnExpr#emit(C, FnExpr, GeneratorAdapter);97a38f89aefec829cd9371452384e1e5dc0b6795;Thu Nov 20 14:57:08 2008 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;083c5e1c61096f70d783bfad4d3319d9a5242171;Thu Nov 20 16:56:17 2008 +0000
SameMethod;true;clojure.lang.Reflector#getMethods(Class, int, String, boolean);clojure.lang.Reflector#getMethods(Class, int, String, boolean);083c5e1c61096f70d783bfad4d3319d9a5242171;Thu Nov 20 16:56:17 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;61137136b2039322512b5f65a35ecd669af194a6;Thu Nov 20 18:44:54 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;61137136b2039322512b5f65a35ecd669af194a6;Thu Nov 20 18:44:54 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();61137136b2039322512b5f65a35ecd669af194a6;Thu Nov 20 18:44:54 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;61137136b2039322512b5f65a35ecd669af194a6;Thu Nov 20 18:44:54 2008 +0000
SameMethod;true;clojure.lang.LispReader#matchSymbol(String);clojure.lang.LispReader#matchSymbol(String);61137136b2039322512b5f65a35ecd669af194a6;Thu Nov 20 18:44:54 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.LispReader.ReaderException;clojure.lang.LispReader.ReaderException;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.LispReader.RegexReader;clojure.lang.LispReader.RegexReader;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.LispReader.StringReader;clojure.lang.LispReader.StringReader;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.LispReader.CommentReader;clojure.lang.LispReader.CommentReader;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.LispReader.WrappingReader;clojure.lang.LispReader.WrappingReader;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.LispReader.VarReader;clojure.lang.LispReader.VarReader;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.LispReader.DispatchReader;clojure.lang.LispReader.DispatchReader;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.LispReader.FnReader;clojure.lang.LispReader.FnReader;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.LispReader.MetaReader;clojure.lang.LispReader.MetaReader;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.LispReader.CharacterReader;clojure.lang.LispReader.CharacterReader;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.LispReader.ListReader;clojure.lang.LispReader.ListReader;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.LispReader.EvalReader;clojure.lang.LispReader.EvalReader;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.LispReader.VectorReader;clojure.lang.LispReader.VectorReader;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.LispReader.MapReader;clojure.lang.LispReader.MapReader;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.LispReader.SetReader;clojure.lang.LispReader.SetReader;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.LispReader.UnmatchedDelimiterReader;clojure.lang.LispReader.UnmatchedDelimiterReader;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.LispReader.UnreadableReader;clojure.lang.LispReader.UnreadableReader;d2706baf239e2b6a8db5fd277fca9a78cfcd9b6a;Fri Nov 21 17:11:54 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;10541c0254973ce045305499d4b5622073ede622;Tue Nov 25 13:51:30 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;10541c0254973ce045305499d4b5622073ede622;Tue Nov 25 13:51:30 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();10541c0254973ce045305499d4b5622073ede622;Tue Nov 25 13:51:30 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;09c2d0dd2eff4fbe7962d6f68492d3dc1e07d4ff;Fri Nov 28 17:52:40 2008 +0000
SameMethod;true;clojure.lang.Compiler#writeClassFile(String, byte[]);clojure.lang.Compiler#writeClassFile(String, byte[]);09c2d0dd2eff4fbe7962d6f68492d3dc1e07d4ff;Fri Nov 28 17:52:40 2008 +0000
SameType;true;clojure.lang.Compile;clojure.lang.Compile;a4f923670d89fd7f4d72f39ec85ec8f46ea43bdc;Sat Nov 29 18:42:17 2008 +0000
SameMethod;true;clojure.lang.Compile#main(String[]);clojure.lang.Compile#main(String[]);a4f923670d89fd7f4d72f39ec85ec8f46ea43bdc;Sat Nov 29 18:42:17 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;a4f923670d89fd7f4d72f39ec85ec8f46ea43bdc;Sat Nov 29 18:42:17 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);a4f923670d89fd7f4d72f39ec85ec8f46ea43bdc;Sat Nov 29 18:42:17 2008 +0000
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);a4f923670d89fd7f4d72f39ec85ec8f46ea43bdc;Sat Nov 29 18:42:17 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;a4f923670d89fd7f4d72f39ec85ec8f46ea43bdc;Sat Nov 29 18:42:17 2008 +0000
SameMethod;true;clojure.lang.RT#load(String, boolean);clojure.lang.RT#load(String, boolean);a4f923670d89fd7f4d72f39ec85ec8f46ea43bdc;Sat Nov 29 18:42:17 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;9e27e6428c2b9cb5bef9e0d0129d45b8033af52a;Mon Dec 1 02:40:10 2008 +0000
SameMethod;true;clojure.lang.RT#loadClassForName(String);clojure.lang.RT#loadClassForName(String);9e27e6428c2b9cb5bef9e0d0129d45b8033af52a;Mon Dec 1 02:40:10 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;fd1e3675562235ba3d0d869bdae2301bb1260591;Mon Dec 1 16:53:49 2008 +0000
SameMethod;true;clojure.lang.RT#loadClassForName(String);clojure.lang.RT#loadClassForName(String);fd1e3675562235ba3d0d869bdae2301bb1260591;Mon Dec 1 16:53:49 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;65ae7482a9b09c69d2eb8355a8ecfb43441d584e;Tue Dec 2 17:05:50 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;65ae7482a9b09c69d2eb8355a8ecfb43441d584e;Tue Dec 2 17:05:50 2008 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#maybeClass(Object, boolean);clojure.lang.Compiler.HostExpr#maybeClass(Object, boolean);65ae7482a9b09c69d2eb8355a8ecfb43441d584e;Tue Dec 2 17:05:50 2008 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#tagToClass(Object);clojure.lang.Compiler.HostExpr#tagToClass(Object);65ae7482a9b09c69d2eb8355a8ecfb43441d584e;Tue Dec 2 17:05:50 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;b73a2a6f0025e585bf2fc16503e2388fad52d8d6;Thu Dec 4 12:53:40 2008 +0000
SameMethod;true;clojure.lang.APersistentVector#compareTo(Object);clojure.lang.APersistentVector#compareTo(Object);b73a2a6f0025e585bf2fc16503e2388fad52d8d6;Thu Dec 4 12:53:40 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;d301ab5f90a33cba11d83b9c10b0b9f5e7683c6f;Fri Dec 5 00:19:17 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;c244cef69bef5461c16774c7542e8f2bc849a310;Sun Dec 7 14:14:16 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;c5cac92d5a1583e00bcb29d7f8a4f50f13fe69d2;Mon Dec 8 01:44:50 2008 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;c5e8c6f06292fab26d29cb951d8400394e0f8258;Thu Dec 11 14:28:00 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;8aaeff138f515fff4291fe61330b5f69cb7e3ce9;Thu Dec 11 20:20:10 2008 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);8aaeff138f515fff4291fe61330b5f69cb7e3ce9;Thu Dec 11 20:20:10 2008 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int, Object);clojure.lang.RT#nth(Object, int, Object);8aaeff138f515fff4291fe61330b5f69cb7e3ce9;Thu Dec 11 20:20:10 2008 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;14d49b3eafae4a2095f5b80e47afa2b2878567ea;Thu Dec 11 20:27:17 2008 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;14d49b3eafae4a2095f5b80e47afa2b2878567ea;Thu Dec 11 20:27:17 2008 +0000
SameType;true;clojure.lang.Range;clojure.lang.Range;14d49b3eafae4a2095f5b80e47afa2b2878567ea;Thu Dec 11 20:27:17 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;175669e2e27f2397e67ca48e5194b6181aed3ea8;Fri Dec 12 03:29:28 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;175669e2e27f2397e67ca48e5194b6181aed3ea8;Fri Dec 12 03:29:28 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emitConstants(GeneratorAdapter);clojure.lang.Compiler.FnExpr#emitConstants(GeneratorAdapter);175669e2e27f2397e67ca48e5194b6181aed3ea8;Fri Dec 12 03:29:28 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#constantType(int);clojure.lang.Compiler.FnExpr#constantType(int);175669e2e27f2397e67ca48e5194b6181aed3ea8;Fri Dec 12 03:29:28 2008 +0000
SameMethod;true;clojure.lang.Compiler#registerConstant(Object);clojure.lang.Compiler#registerConstant(Object);175669e2e27f2397e67ca48e5194b6181aed3ea8;Fri Dec 12 03:29:28 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e2b6e9c143616f0b399fd046392818ce9d32e18b;Fri Dec 12 16:46:32 2008 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);e2b6e9c143616f0b399fd046392818ce9d32e18b;Fri Dec 12 16:46:32 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3aee36c87f6592f563ef814adb1431bdc4e740cf;Fri Dec 12 20:00:49 2008 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;3aee36c87f6592f563ef814adb1431bdc4e740cf;Fri Dec 12 20:00:49 2008 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr#tagToClass(Object);clojure.lang.Compiler.HostExpr#tagToClass(Object);3aee36c87f6592f563ef814adb1431bdc4e740cf;Fri Dec 12 20:00:49 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6f913b4c17b5053bac20941339e5b2de4dd4fc7a;Fri Dec 12 22:37:08 2008 +0000
SameMethod;true;clojure.lang.Compiler#registerConstant(Object);clojure.lang.Compiler#registerConstant(Object);6f913b4c17b5053bac20941339e5b2de4dd4fc7a;Fri Dec 12 22:37:08 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;f95175264df36c3d8fe2113aa9af92cda0f2f5c8;Sat Dec 13 02:37:12 2008 +0000
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);f95175264df36c3d8fe2113aa9af92cda0f2f5c8;Sat Dec 13 02:37:12 2008 +0000
SameType;true;clojure.lang.IProxy;clojure.lang.IProxy;044419862707c9a540b8e42faad0f69bc66fe1fd;Sat Dec 13 19:25:10 2008 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;044419862707c9a540b8e42faad0f69bc66fe1fd;Sat Dec 13 19:25:10 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;044419862707c9a540b8e42faad0f69bc66fe1fd;Sat Dec 13 19:25:10 2008 +0000
SameMethod;true;clojure.lang.RT#map(Object[]);clojure.lang.RT#map(Object[]);044419862707c9a540b8e42faad0f69bc66fe1fd;Sat Dec 13 19:25:10 2008 +0000
PushDownMethod;false;clojure.lang.AFn#compare(Object, Object);clojure.lang.AFunction#compare(Object, Object);56431834457820979e55c066e995ffe961ca11b3;Tue Dec 16 13:28:29 2008 +0000
SameType;true;clojure.lang.AFn;clojure.lang.AFn;56431834457820979e55c066e995ffe961ca11b3;Tue Dec 16 13:28:29 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;56431834457820979e55c066e995ffe961ca11b3;Tue Dec 16 13:28:29 2008 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;56431834457820979e55c066e995ffe961ca11b3;Tue Dec 16 13:28:29 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();56431834457820979e55c066e995ffe961ca11b3;Tue Dec 16 13:28:29 2008 +0000
SameType;true;clojure.lang.RestFn;clojure.lang.RestFn;56431834457820979e55c066e995ffe961ca11b3;Tue Dec 16 13:28:29 2008 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;6e5647c5d811f37e7a03ab7975908436d7995cde;Thu Dec 18 22:55:21 2008 +0000
SameMethod;true;clojure.lang.PersistentArrayMap#entryAt(Object);clojure.lang.PersistentArrayMap#entryAt(Object);6e5647c5d811f37e7a03ab7975908436d7995cde;Thu Dec 18 22:55:21 2008 +0000
SameType;true;clojure.lang.PersistentStructMap;clojure.lang.PersistentStructMap;6e5647c5d811f37e7a03ab7975908436d7995cde;Thu Dec 18 22:55:21 2008 +0000
SameMethod;true;clojure.lang.PersistentStructMap#entryAt(Object);clojure.lang.PersistentStructMap#entryAt(Object);6e5647c5d811f37e7a03ab7975908436d7995cde;Thu Dec 18 22:55:21 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;6e5647c5d811f37e7a03ab7975908436d7995cde;Thu Dec 18 22:55:21 2008 +0000
SameMethod;true;clojure.lang.RT#find(Object, Object);clojure.lang.RT#find(Object, Object);6e5647c5d811f37e7a03ab7975908436d7995cde;Thu Dec 18 22:55:21 2008 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;ef945679e95e08e03d4c8b3cd62b6c09ef08e996;Mon Dec 22 14:30:14 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;db7f3d1cea1b380ddad39cfb2e5b62efe78047ea;Tue Dec 23 14:23:54 2008 +0000
SameType;true;clojure.lang.Compiler.EmptyExpr;clojure.lang.Compiler.EmptyExpr;db7f3d1cea1b380ddad39cfb2e5b62efe78047ea;Tue Dec 23 14:23:54 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;db7f3d1cea1b380ddad39cfb2e5b62efe78047ea;Tue Dec 23 14:23:54 2008 +0000
SameType;true;clojure.lang.LispReader.MapReader;clojure.lang.LispReader.MapReader;db7f3d1cea1b380ddad39cfb2e5b62efe78047ea;Tue Dec 23 14:23:54 2008 +0000
SameMethod;true;clojure.lang.LispReader.MapReader#invoke(Object, Object);clojure.lang.LispReader.MapReader#invoke(Object, Object);db7f3d1cea1b380ddad39cfb2e5b62efe78047ea;Tue Dec 23 14:23:54 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;7d603560e3a43ba8e787a38312319ff0d6139b54;Tue Dec 23 15:53:00 2008 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;7d603560e3a43ba8e787a38312319ff0d6139b54;Tue Dec 23 15:53:00 2008 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);7d603560e3a43ba8e787a38312319ff0d6139b54;Tue Dec 23 15:53:00 2008 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#sqExpandList(ISeq);clojure.lang.LispReader.SyntaxQuoteReader#sqExpandList(ISeq);7d603560e3a43ba8e787a38312319ff0d6139b54;Tue Dec 23 15:53:00 2008 +0000
SameType;true;clojure.lang.LispReader.UnquoteReader;clojure.lang.LispReader.UnquoteReader;7d603560e3a43ba8e787a38312319ff0d6139b54;Tue Dec 23 15:53:00 2008 +0000
SameMethod;true;clojure.lang.LispReader.UnquoteReader#invoke(Object, Object);clojure.lang.LispReader.UnquoteReader#invoke(Object, Object);7d603560e3a43ba8e787a38312319ff0d6139b54;Tue Dec 23 15:53:00 2008 +0000
ExtractMethod;true;clojure.lang.Agent.Action#doRun(Action);clojure.lang.Agent#releasePendingSends();c29ccf985770f751a41f7e5728938af0316b5dfe;Tue Dec 23 19:23:34 2008 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;c29ccf985770f751a41f7e5728938af0316b5dfe;Tue Dec 23 19:23:34 2008 +0000
SameType;true;clojure.lang.Agent.Action;clojure.lang.Agent.Action;c29ccf985770f751a41f7e5728938af0316b5dfe;Tue Dec 23 19:23:34 2008 +0000
SameMethod;true;clojure.lang.Agent.Action#doRun(Action);clojure.lang.Agent.Action#doRun(Action);c29ccf985770f751a41f7e5728938af0316b5dfe;Tue Dec 23 19:23:34 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;8fb9bddb590c10431ccff3e9383ba651f8b9663b;Mon Dec 29 05:19:27 2008 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;8fb9bddb590c10431ccff3e9383ba651f8b9663b;Mon Dec 29 05:19:27 2008 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#emitClearLocals(GeneratorAdapter);clojure.lang.Compiler.FnMethod#emitClearLocals(GeneratorAdapter);8fb9bddb590c10431ccff3e9383ba651f8b9663b;Mon Dec 29 05:19:27 2008 +0000
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;8fb9bddb590c10431ccff3e9383ba651f8b9663b;Mon Dec 29 05:19:27 2008 +0000
SameMethod;true;clojure.lang.Compiler.LetExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.LetExpr#emit(C, FnExpr, GeneratorAdapter);8fb9bddb590c10431ccff3e9383ba651f8b9663b;Mon Dec 29 05:19:27 2008 +0000
SameMethod;true;clojure.lang.Compiler#registerLocal(Symbol, Symbol, Expr);clojure.lang.Compiler#registerLocal(Symbol, Symbol, Expr);8fb9bddb590c10431ccff3e9383ba651f8b9663b;Mon Dec 29 05:19:27 2008 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;8fb9bddb590c10431ccff3e9383ba651f8b9663b;Mon Dec 29 05:19:27 2008 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;8fb9bddb590c10431ccff3e9383ba651f8b9663b;Mon Dec 29 05:19:27 2008 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);8fb9bddb590c10431ccff3e9383ba651f8b9663b;Mon Dec 29 05:19:27 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e6fed020c75318cd3afa110d3213efaed2bf6988;Mon Dec 29 05:55:16 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;e6fed020c75318cd3afa110d3213efaed2bf6988;Mon Dec 29 05:55:16 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#emitUnboxed(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceMethodExpr#emitUnboxed(C, FnExpr, GeneratorAdapter);e6fed020c75318cd3afa110d3213efaed2bf6988;Mon Dec 29 05:55:16 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);e6fed020c75318cd3afa110d3213efaed2bf6988;Mon Dec 29 05:55:16 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;db598ed1a8d2105f552e1dcdaf2b37b781f015e0;Mon Dec 29 17:00:39 2008 +0000
SameMethod;true;clojure.lang.RT#load(String, boolean);clojure.lang.RT#load(String, boolean);db598ed1a8d2105f552e1dcdaf2b37b781f015e0;Mon Dec 29 17:00:39 2008 +0000
ExtractMethod;true;clojure.lang.Repl#main(String[]);clojure.main#legacy_repl(String[]);49063a9bba42d14f83474802b3240f13e75bcb36;Mon Dec 29 19:40:17 2008 +0000
ExtractMethod;true;clojure.lang.Script#main(String[]);clojure.main#legacy_script(String[]);49063a9bba42d14f83474802b3240f13e75bcb36;Mon Dec 29 19:40:17 2008 +0000
SameType;true;clojure.lang.LineNumberingPushbackReader;clojure.lang.LineNumberingPushbackReader;49063a9bba42d14f83474802b3240f13e75bcb36;Mon Dec 29 19:40:17 2008 +0000
SameMethod;true;clojure.lang.LineNumberingPushbackReader#readLine();clojure.lang.LineNumberingPushbackReader#readLine();49063a9bba42d14f83474802b3240f13e75bcb36;Mon Dec 29 19:40:17 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;49063a9bba42d14f83474802b3240f13e75bcb36;Mon Dec 29 19:40:17 2008 +0000
SameMethod;true;clojure.lang.Repl#main(String[]);clojure.lang.Repl#main(String[]);49063a9bba42d14f83474802b3240f13e75bcb36;Mon Dec 29 19:40:17 2008 +0000
SameType;true;clojure.lang.Script;clojure.lang.Script;49063a9bba42d14f83474802b3240f13e75bcb36;Mon Dec 29 19:40:17 2008 +0000
SameMethod;true;clojure.lang.Script#main(String[]);clojure.lang.Script#main(String[]);49063a9bba42d14f83474802b3240f13e75bcb36;Mon Dec 29 19:40:17 2008 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;80a77a6271dd90317558239f589bb5720f9640ef;Mon Dec 29 20:24:20 2008 +0000
SameType;true;clojure.lang.Numbers.Ops;clojure.lang.Numbers.Ops;80a77a6271dd90317558239f589bb5720f9640ef;Mon Dec 29 20:24:20 2008 +0000
SameMethod;true;clojure.lang.Numbers#reduce(BigInteger);clojure.lang.Numbers#reduce(BigInteger);80a77a6271dd90317558239f589bb5720f9640ef;Mon Dec 29 20:24:20 2008 +0000
SameType;true;clojure.lang.Numbers.IntegerOps;clojure.lang.Numbers.IntegerOps;80a77a6271dd90317558239f589bb5720f9640ef;Mon Dec 29 20:24:20 2008 +0000
SameType;true;clojure.lang.Numbers.FloatOps;clojure.lang.Numbers.FloatOps;80a77a6271dd90317558239f589bb5720f9640ef;Mon Dec 29 20:24:20 2008 +0000
SameType;true;clojure.lang.Numbers.DoubleOps;clojure.lang.Numbers.DoubleOps;80a77a6271dd90317558239f589bb5720f9640ef;Mon Dec 29 20:24:20 2008 +0000
SameType;true;clojure.lang.Numbers.RatioOps;clojure.lang.Numbers.RatioOps;80a77a6271dd90317558239f589bb5720f9640ef;Mon Dec 29 20:24:20 2008 +0000
SameType;true;clojure.lang.Numbers.BigIntegerOps;clojure.lang.Numbers.BigIntegerOps;80a77a6271dd90317558239f589bb5720f9640ef;Mon Dec 29 20:24:20 2008 +0000
SameType;true;clojure.lang.Numbers.BigDecimalOps;clojure.lang.Numbers.BigDecimalOps;80a77a6271dd90317558239f589bb5720f9640ef;Mon Dec 29 20:24:20 2008 +0000
SameMethod;true;clojure.lang.Numbers#ops(Object);clojure.lang.Numbers#ops(Object);80a77a6271dd90317558239f589bb5720f9640ef;Mon Dec 29 20:24:20 2008 +0000
SameMethod;true;clojure.lang.Numbers#inc(long);clojure.lang.Numbers#inc(long);80a77a6271dd90317558239f589bb5720f9640ef;Mon Dec 29 20:24:20 2008 +0000
SameMethod;true;clojure.lang.Numbers#dec(long);clojure.lang.Numbers#dec(long);80a77a6271dd90317558239f589bb5720f9640ef;Mon Dec 29 20:24:20 2008 +0000
SameType;true;clojure.lang.Repl;clojure.lang.Repl;43e0f98f4ddd2e3ba9f907542a35aebe02546076;Tue Dec 30 01:05:12 2008 +0000
SameType;true;clojure.lang.Script;clojure.lang.Script;43e0f98f4ddd2e3ba9f907542a35aebe02546076;Tue Dec 30 01:05:12 2008 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;96757ae6fe6651f2753f7495a6ff476ed72c1798;Tue Dec 30 18:25:36 2008 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;96757ae6fe6651f2753f7495a6ff476ed72c1798;Tue Dec 30 18:25:36 2008 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Expr, String, IPersistentVector);clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Expr, String, IPersistentVector);96757ae6fe6651f2753f7495a6ff476ed72c1798;Tue Dec 30 18:25:36 2008 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;96757ae6fe6651f2753f7495a6ff476ed72c1798;Tue Dec 30 18:25:36 2008 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, Class, String, IPersistentVector);clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, Class, String, IPersistentVector);96757ae6fe6651f2753f7495a6ff476ed72c1798;Tue Dec 30 18:25:36 2008 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;96757ae6fe6651f2753f7495a6ff476ed72c1798;Tue Dec 30 18:25:36 2008 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);96757ae6fe6651f2753f7495a6ff476ed72c1798;Tue Dec 30 18:25:36 2008 +0000
SameType;true;clojure.lang.DynamicClassLoader;clojure.lang.DynamicClassLoader;96757ae6fe6651f2753f7495a6ff476ed72c1798;Tue Dec 30 18:25:36 2008 +0000
SameMethod;true;clojure.lang.DynamicClassLoader#DynamicClassLoader();clojure.lang.DynamicClassLoader#DynamicClassLoader();96757ae6fe6651f2753f7495a6ff476ed72c1798;Tue Dec 30 18:25:36 2008 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;96757ae6fe6651f2753f7495a6ff476ed72c1798;Tue Dec 30 18:25:36 2008 +0000
SameMethod;true;clojure.lang.RT#load(String, boolean);clojure.lang.RT#load(String, boolean);96757ae6fe6651f2753f7495a6ff476ed72c1798;Tue Dec 30 18:25:36 2008 +0000
ExtractInterface;true;clojure.lang.IObj;clojure.lang.IMeta;8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
PullU Method;false;clojure.lang.Agent#getValidator();clojure.lang.ARef#getValidator();8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
PullU Method;false;clojure.lang.Var#meta();clojure.lang.AReference#meta();8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
PullU Method;true;clojure.lang.Agent#validate(IFn, Object);clojure.lang.ARef#validate(IFn, Object);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
PullU Method;true;clojure.lang.Agent#setValidator(IFn);clojure.lang.ARef#setValidator(IFn);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
ExtractMethod;true;clojure.lang.Agent#setState(Object);clojure.lang.ARef#validate(Object);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
ExtractMethod;true;clojure.lang.Var#setTag(Symbol);clojure.lang.AReference#alterMeta(IFn, ISeq);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
ExtractMethod;true;clojure.lang.Var#bindRoot(Object);clojure.lang.AReference#alterMeta(IFn, ISeq);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
ExtractMethod;true;clojure.lang.Var#setMacro();clojure.lang.AReference#alterMeta(IFn, ISeq);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
ExtractMethod;true;clojure.lang.Var#setMeta(IPersistentMap);clojure.lang.AReference#resetMeta(IPersistentMap);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameMethod;true;clojure.lang.Agent#setState(Object);clojure.lang.Agent#setState(Object);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameType;true;clojure.lang.Box;clojure.lang.Box;8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameMethod;true;clojure.lang.Compiler#tagOf(Object);clojure.lang.Compiler#tagOf(Object);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameType;true;clojure.lang.IObj;clojure.lang.IObj;8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameType;true;clojure.lang.LispReader.MetaReader;clojure.lang.LispReader.MetaReader;8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameMethod;true;clojure.lang.LispReader.MetaReader#invoke(Object, Object);clojure.lang.LispReader.MetaReader#invoke(Object, Object);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameMethod;true;clojure.lang.RT#meta(Object);clojure.lang.RT#meta(Object);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameMethod;true;clojure.lang.RT#hasTag(Object, Object);clojure.lang.RT#hasTag(Object, Object);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameMethod;true;clojure.lang.Ref#compareTo(Ref);clojure.lang.Ref#compareTo(Ref);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameMethod;true;clojure.lang.Ref#validate(IFn, Object);clojure.lang.Ref#validate(IFn, Object);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameMethod;true;clojure.lang.Var#validate(IFn, Object);clojure.lang.Var#validate(IFn, Object);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameMethod;true;clojure.lang.Var#setMeta(IPersistentMap);clojure.lang.Var#setMeta(IPersistentMap);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameMethod;true;clojure.lang.Var#setMacro();clojure.lang.Var#setMacro();8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameMethod;true;clojure.lang.Var#isMacro();clojure.lang.Var#isMacro();8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameMethod;true;clojure.lang.Var#isPublic();clojure.lang.Var#isPublic();8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameMethod;true;clojure.lang.Var#getTag();clojure.lang.Var#getTag();8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameMethod;true;clojure.lang.Var#setTag(Symbol);clojure.lang.Var#setTag(Symbol);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
SameMethod;true;clojure.lang.Var#bindRoot(Object);clojure.lang.Var#bindRoot(Object);8a6c52556d92ab6ab369c7bf2a8c956add582de9;Thu Jan 1 20:52:00 2009 +0000
PullU Method;true;clojure.lang.Agent#removeWatch(Object);clojure.lang.ARef#removeWatch(Agent);e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
PullU Method;true;clojure.lang.Agent#addWatch(Object, IFn);clojure.lang.ARef#addWatch(Agent, IFn, boolean);e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
ExtractMethod;true;clojure.lang.Agent.Action#doRun(Action);clojure.lang.ARef#notifyWatches();e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameType;true;clojure.lang.ARef;clojure.lang.ARef;e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameType;true;clojure.lang.Agent.Action;clojure.lang.Agent.Action;e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameMethod;true;clojure.lang.Agent.Action#doRun(Action);clojure.lang.Agent.Action#doRun(Action);e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameMethod;true;clojure.lang.Agent#dispatch(IFn, ISeq, boolean);clojure.lang.Agent#dispatch(IFn, ISeq, boolean);e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameType;true;clojure.lang.Atom;clojure.lang.Atom;e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameMethod;true;clojure.lang.Atom#swap(IFn, ISeq);clojure.lang.Atom#swap(IFn, ISeq);e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameMethod;true;clojure.lang.Atom#compareAndSet(Object, Object);clojure.lang.Atom#compareAndSet(Object, Object);e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameMethod;true;clojure.lang.Atom#reset(Object);clojure.lang.Atom#reset(Object);e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameType;true;clojure.lang.IRef;clojure.lang.IRef;e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameMethod;true;clojure.lang.LockingTransaction#run(Callable);clojure.lang.LockingTransaction#run(Callable);e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameMethod;true;clojure.lang.Var#bindRoot(Object);clojure.lang.Var#bindRoot(Object);e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameMethod;true;clojure.lang.Var#swapRoot(Object);clojure.lang.Var#swapRoot(Object);e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameMethod;true;clojure.lang.Var#commuteRoot(IFn);clojure.lang.Var#commuteRoot(IFn);e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameMethod;true;clojure.lang.Var#alterRoot(IFn, ISeq);clojure.lang.Var#alterRoot(IFn, ISeq);e26c24712a9e0f94e25aa6e9bdadea7835a7bec3;Fri Jan 2 02:58:51 2009 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;467568d55ae4f099106107a56dd249fec8c41f5e;Tue Jan 6 19:23:15 2009 +0000
SameMethod;true;clojure.lang.ASeq#hashCode();clojure.lang.ASeq#hashCode();467568d55ae4f099106107a56dd249fec8c41f5e;Tue Jan 6 19:23:15 2009 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;467568d55ae4f099106107a56dd249fec8c41f5e;Tue Jan 6 19:23:15 2009 +0000
SameType;true;clojure.lang.PersistentList.EmptyList;clojure.lang.PersistentList.EmptyList;467568d55ae4f099106107a56dd249fec8c41f5e;Tue Jan 6 19:23:15 2009 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;37d0ce606937ce086b37f461e2616b09263c3110;Wed Jan 7 15:54:51 2009 +0000
SameType;true;clojure.lang.Agent.Action;clojure.lang.Agent.Action;37d0ce606937ce086b37f461e2616b09263c3110;Wed Jan 7 15:54:51 2009 +0000
SameMethod;true;clojure.lang.Agent.Action#doRun(Action);clojure.lang.Agent.Action#doRun(Action);37d0ce606937ce086b37f461e2616b09263c3110;Wed Jan 7 15:54:51 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;f8eea33039908560cb6fc564aea8341af4b0d7c7;Wed Jan 7 20:43:39 2009 +0000
SameMethod;true;clojure.lang.RT#lastModified(URL, String);clojure.lang.RT#lastModified(URL, String);f8eea33039908560cb6fc564aea8341af4b0d7c7;Wed Jan 7 20:43:39 2009 +0000
ExtractMethod;true;clojure.lang.RT#addURL(Object);clojure.lang.RT#getRootClassLoader();51ed068c679a4a65a2aa3552f8d088a1b787b08b;Thu Jan 8 00:25:53 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;51ed068c679a4a65a2aa3552f8d088a1b787b08b;Thu Jan 8 00:25:53 2009 +0000
SameMethod;true;clojure.lang.RT#addURL(Object);clojure.lang.RT#addURL(Object);51ed068c679a4a65a2aa3552f8d088a1b787b08b;Thu Jan 8 00:25:53 2009 +0000
SameMethod;true;clojure.lang.RT#makeClassLoader();clojure.lang.RT#makeClassLoader();51ed068c679a4a65a2aa3552f8d088a1b787b08b;Thu Jan 8 00:25:53 2009 +0000
SameMethod;true;clojure.lang.RT#baseLoader();clojure.lang.RT#baseLoader();51ed068c679a4a65a2aa3552f8d088a1b787b08b;Thu Jan 8 00:25:53 2009 +0000
SameMethod;true;clojure.lang.RT#classForName(String);clojure.lang.RT#classForName(String);51ed068c679a4a65a2aa3552f8d088a1b787b08b;Thu Jan 8 00:25:53 2009 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;3c0439b77fd9dfb520e8a1bfc9656bfc6d9b0c42;Thu Jan 8 00:52:51 2009 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;3c0439b77fd9dfb520e8a1bfc9656bfc6d9b0c42;Thu Jan 8 00:52:51 2009 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);3c0439b77fd9dfb520e8a1bfc9656bfc6d9b0c42;Thu Jan 8 00:52:51 2009 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;59f0b4054666b684a16500c84f51134f099a0191;Thu Jan 8 01:08:31 2009 +0000
SameType;true;clojure.lang.Numbers.IntegerOps;clojure.lang.Numbers.IntegerOps;59f0b4054666b684a16500c84f51134f099a0191;Thu Jan 8 01:08:31 2009 +0000
SameMethod;true;clojure.lang.Numbers.IntegerOps#negate(Number);clojure.lang.Numbers.IntegerOps#negate(Number);59f0b4054666b684a16500c84f51134f099a0191;Thu Jan 8 01:08:31 2009 +0000
SameType;true;clojure.lang.Numbers.LongOps;clojure.lang.Numbers.LongOps;59f0b4054666b684a16500c84f51134f099a0191;Thu Jan 8 01:08:31 2009 +0000
SameMethod;true;clojure.lang.Numbers.LongOps#negate(Number);clojure.lang.Numbers.LongOps#negate(Number);59f0b4054666b684a16500c84f51134f099a0191;Thu Jan 8 01:08:31 2009 +0000
SameType;true;clojure.lang.Range;clojure.lang.Range;d799f3878f483f6c207387ffc5c567f6132d7c23;Thu Jan 8 01:17:23 2009 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;9bb07a5c13445cfcf4b6a4f23f1fb0b6315b7ce7;Wed Jan 14 22:47:39 2009 +0000
SameType;true;clojure.lang.PersistentList.EmptyList;clojure.lang.PersistentList.EmptyList;9bb07a5c13445cfcf4b6a4f23f1fb0b6315b7ce7;Wed Jan 14 22:47:39 2009 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;bde3591fd2e6069a6a88f0bfeb0d2941cec34387;Wed Jan 14 23:35:00 2009 +0000
SameMethod;true;clojure.lang.Numbers#minus(int, int);clojure.lang.Numbers#minus(int, int);bde3591fd2e6069a6a88f0bfeb0d2941cec34387;Wed Jan 14 23:35:00 2009 +0000
SameMethod;true;clojure.lang.Numbers#minus(long, long);clojure.lang.Numbers#minus(long, long);bde3591fd2e6069a6a88f0bfeb0d2941cec34387;Wed Jan 14 23:35:00 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;da42d50d0754edf0039cebc6b97a9a464381c3d0;Wed Jan 14 23:43:05 2009 +0000
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);da42d50d0754edf0039cebc6b97a9a464381c3d0;Wed Jan 14 23:43:05 2009 +0000
RenameMethod;true;clojure.lang.Util#equal(Object, Object);clojure.lang.Util#equiv(Object, Object);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
ExtractMethod;true;clojure.lang.ASeq#equals(Object);clojure.lang.Util#equals(Object, Object);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.APersistentMap#equals(Object);clojure.lang.APersistentMap#equals(Object);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.APersistentMap#entrySet();clojure.lang.APersistentMap#entrySet();8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.APersistentVector#doEquals(IPersistentVector, Object);clojure.lang.APersistentVector#doEquals(IPersistentVector, Object);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.APersistentVector#indexOf(Object);clojure.lang.APersistentVector#indexOf(Object);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.APersistentVector#lastIndexOf(Object);clojure.lang.APersistentVector#lastIndexOf(Object);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.APersistentVector#contains(Object);clojure.lang.APersistentVector#contains(Object);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.ASeq#equals(Object);clojure.lang.ASeq#equals(Object);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.ASeq#contains(Object);clojure.lang.ASeq#contains(Object);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameType;true;clojure.lang.Compiler.BodyExpr;clojure.lang.Compiler.BodyExpr;8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameType;true;clojure.lang.Compiler.BodyExpr.Parser;clojure.lang.Compiler.BodyExpr.Parser;8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.Compiler.BodyExpr.Parser#parse(C, Object);clojure.lang.Compiler.BodyExpr.Parser#parse(C, Object);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameType;true;clojure.lang.IPersistentCollection;clojure.lang.IPersistentCollection;8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameType;true;clojure.lang.PersistentHashMap.LeafNode;clojure.lang.PersistentHashMap.LeafNode;8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.PersistentHashMap.LeafNode#assoc(int, int, Object, Object, Box);clojure.lang.PersistentHashMap.LeafNode#assoc(int, int, Object, Object, Box);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.PersistentHashMap.LeafNode#without(int, Object);clojure.lang.PersistentHashMap.LeafNode#without(int, Object);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.PersistentHashMap.LeafNode#find(int, Object);clojure.lang.PersistentHashMap.LeafNode#find(int, Object);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameType;true;clojure.lang.PersistentList.EmptyList;clojure.lang.PersistentList.EmptyList;8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.PersistentList.EmptyList#equals(Object);clojure.lang.PersistentList.EmptyList#equals(Object);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.PersistentQueue#equals(Object);clojure.lang.PersistentQueue#equals(Object);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.PersistentQueue#contains(Object);clojure.lang.PersistentQueue#contains(Object);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.RT#hasTag(Object, Object);clojure.lang.RT#hasTag(Object, Object);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameMethod;true;clojure.lang.RT#format(Object, String, Object[]);clojure.lang.RT#format(Object, String, Object[]);8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameType;true;clojure.lang.Util;clojure.lang.Util;8f0a24409ce9e905222b03377175533e1cab3be6;Thu Jan 15 15:50:30 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;50e4a0758da3a9a5a9d4f44358dab4e56d466de9;Fri Jan 16 13:43:58 2009 +0000
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;50e4a0758da3a9a5a9d4f44358dab4e56d466de9;Fri Jan 16 13:43:58 2009 +0000
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;50e4a0758da3a9a5a9d4f44358dab4e56d466de9;Fri Jan 16 13:43:58 2009 +0000
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);50e4a0758da3a9a5a9d4f44358dab4e56d466de9;Fri Jan 16 13:43:58 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;9c1ca8132937642298ad3c4b4cee6fa464a36633;Tue Jan 20 14:57:59 2009 +0000
SameMethod;true;clojure.lang.Compiler#closeOver(LocalBinding, FnMethod);clojure.lang.Compiler#closeOver(LocalBinding, FnMethod);9c1ca8132937642298ad3c4b4cee6fa464a36633;Tue Jan 20 14:57:59 2009 +0000
SameMethod;true;clojure.lang.Compiler#referenceLocal(Symbol);clojure.lang.Compiler#referenceLocal(Symbol);9c1ca8132937642298ad3c4b4cee6fa464a36633;Tue Jan 20 14:57:59 2009 +0000
SameType;true;clojure.lang.Atom;clojure.lang.Atom;06d3b59c23ef90c9410470652ed6fc408d360716;Tue Jan 20 23:48:34 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;06d3b59c23ef90c9410470652ed6fc408d360716;Tue Jan 20 23:48:34 2009 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int, Object);clojure.lang.RT#nth(Object, int, Object);06d3b59c23ef90c9410470652ed6fc408d360716;Tue Jan 20 23:48:34 2009 +0000
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;5d0ac342b80b5f60b9d2e9986c0c601f6cba0674;Wed Jan 21 00:27:43 2009 +0000
SameMethod;true;clojure.lang.MultiFn#MultiFn(IFn, Object);clojure.lang.MultiFn#MultiFn(IFn, Object);5d0ac342b80b5f60b9d2e9986c0c601f6cba0674;Wed Jan 21 00:27:43 2009 +0000
SameMethod;true;clojure.lang.MultiFn#addMethod(Object, IFn);clojure.lang.MultiFn#addMethod(Object, IFn);5d0ac342b80b5f60b9d2e9986c0c601f6cba0674;Wed Jan 21 00:27:43 2009 +0000
SameMethod;true;clojure.lang.MultiFn#removeMethod(Object);clojure.lang.MultiFn#removeMethod(Object);5d0ac342b80b5f60b9d2e9986c0c601f6cba0674;Wed Jan 21 00:27:43 2009 +0000
SameMethod;true;clojure.lang.MultiFn#preferMethod(Object, Object);clojure.lang.MultiFn#preferMethod(Object, Object);5d0ac342b80b5f60b9d2e9986c0c601f6cba0674;Wed Jan 21 00:27:43 2009 +0000
SameMethod;true;clojure.lang.MultiFn#prefers(Object, Object);clojure.lang.MultiFn#prefers(Object, Object);5d0ac342b80b5f60b9d2e9986c0c601f6cba0674;Wed Jan 21 00:27:43 2009 +0000
SameMethod;true;clojure.lang.MultiFn#resetCache();clojure.lang.MultiFn#resetCache();5d0ac342b80b5f60b9d2e9986c0c601f6cba0674;Wed Jan 21 00:27:43 2009 +0000
SameMethod;true;clojure.lang.MultiFn#getFn(Object);clojure.lang.MultiFn#getFn(Object);5d0ac342b80b5f60b9d2e9986c0c601f6cba0674;Wed Jan 21 00:27:43 2009 +0000
SameMethod;true;clojure.lang.MultiFn#findAndCacheBestMethod(Object);clojure.lang.MultiFn#findAndCacheBestMethod(Object);5d0ac342b80b5f60b9d2e9986c0c601f6cba0674;Wed Jan 21 00:27:43 2009 +0000
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;21caa3eb5209802f0359b00801eca6943c78580a;Fri Jan 23 01:18:36 2009 +0000
SameMethod;true;clojure.lang.Namespace#Namespace(Symbol);clojure.lang.Namespace#Namespace(Symbol);21caa3eb5209802f0359b00801eca6943c78580a;Fri Jan 23 01:18:36 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;a4142dc9c2e107528b90bb885ed5e8d92fd3f621;Sun Jan 25 13:32:58 2009 +0000
SameMethod;true;clojure.lang.Compiler#eval(Object);clojure.lang.Compiler#eval(Object);a4142dc9c2e107528b90bb885ed5e8d92fd3f621;Sun Jan 25 13:32:58 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;5577a47a390782d7ab911c2e3c4c8be1b0341aa8;Sat Feb 7 14:46:56 2009 +0000
SameMethod;true;clojure.lang.Compiler#writeClassFile(String, byte[]);clojure.lang.Compiler#writeClassFile(String, byte[]);5577a47a390782d7ab911c2e3c4c8be1b0341aa8;Sat Feb 7 14:46:56 2009 +0000
RenameMethod;false;clojure.lang.Agent#get();clojure.lang.Agent#deref();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
RenameMethod;false;clojure.lang.Atom#get();clojure.lang.Atom#deref();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
RenameMethod;false;clojure.lang.Delay#get();clojure.lang.Delay#deref();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
RenameMethod;false;clojure.lang.Ref#get();clojure.lang.Ref#deref();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
ExtractMethod;false;clojure.lang.Var#get();clojure.lang.Var#deref();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.ARef;clojure.lang.ARef;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.ARef#setValidator(IFn);clojure.lang.ARef#setValidator(IFn);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.ARef#getWatches();clojure.lang.ARef#getWatches();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.ARef#addWatch(Agent, IFn, boolean);clojure.lang.ARef#addWatch(Agent, IFn, boolean);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.ARef#removeWatch(Agent);clojure.lang.ARef#removeWatch(Agent);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.ARef#notifyWatches();clojure.lang.ARef#notifyWatches();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Atom;clojure.lang.Atom;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Atom#swap(IFn);clojure.lang.Atom#swap(IFn);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Atom#swap(IFn, Object);clojure.lang.Atom#swap(IFn, Object);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Atom#swap(IFn, Object, Object);clojure.lang.Atom#swap(IFn, Object, Object);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Atom#swap(IFn, Object, Object, ISeq);clojure.lang.Atom#swap(IFn, Object, Object, ISeq);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compile;clojure.lang.Compile;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compile#main(String[]);clojure.lang.Compile#main(String[]);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.VarExpr;clojure.lang.Compiler.VarExpr;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.VarExpr#eval();clojure.lang.Compiler.VarExpr#eval();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, Expr, String);clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, Expr, String);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.MethodExpr;clojure.lang.Compiler.MethodExpr;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.MethodExpr#emitTypedArgs(FnExpr, GeneratorAdapter, Class[], IPersistentVector);clojure.lang.Compiler.MethodExpr#emitTypedArgs(FnExpr, GeneratorAdapter, Class[], IPersistentVector);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Expr, String, IPersistentVector);clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Expr, String, IPersistentVector);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#emitUnboxed(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceMethodExpr#emitUnboxed(C, FnExpr, GeneratorAdapter);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceMethodExpr#emit(C, FnExpr, GeneratorAdapter);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, Class, String, IPersistentVector);clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, Class, String, IPersistentVector);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#emitUnboxed(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.StaticMethodExpr#emitUnboxed(C, FnExpr, GeneratorAdapter);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.StaticMethodExpr#emit(C, FnExpr, GeneratorAdapter);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.NewExpr#emit(C, FnExpr, GeneratorAdapter);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.NewExpr.Parser;clojure.lang.Compiler.NewExpr.Parser;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.IfExpr.Parser;clojure.lang.Compiler.IfExpr.Parser;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.IfExpr.Parser#parse(C, Object);clojure.lang.Compiler.IfExpr.Parser#parse(C, Object);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emit(C, FnExpr, GeneratorAdapter);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#getCompiledClass();clojure.lang.Compiler.FnExpr#getCompiledClass();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.RecurExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.RecurExpr#emit(C, FnExpr, GeneratorAdapter);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Compiler.RecurExpr.Parser;clojure.lang.Compiler.RecurExpr.Parser;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler#registerLocal(Symbol, Symbol, Expr);clojure.lang.Compiler#registerLocal(Symbol, Symbol, Expr);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler#getAndIncLocalNum();clojure.lang.Compiler#getAndIncLocalNum();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler#eval(Object);clojure.lang.Compiler#eval(Object);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler#registerConstant(Object);clojure.lang.Compiler#registerConstant(Object);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler#registerKeyword(Keyword);clojure.lang.Compiler#registerKeyword(Keyword);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler#resolveIn(Namespace, Symbol, boolean);clojure.lang.Compiler#resolveIn(Namespace, Symbol, boolean);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler#registerVar(Var);clojure.lang.Compiler#registerVar(Var);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler#currentNS();clojure.lang.Compiler#currentNS();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler#closeOver(LocalBinding, FnMethod);clojure.lang.Compiler#closeOver(LocalBinding, FnMethod);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler#referenceLocal(Symbol);clojure.lang.Compiler#referenceLocal(Symbol);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.Compiler#load(Reader, String, String);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler#writeClassFile(String, byte[]);clojure.lang.Compiler#writeClassFile(String, byte[]);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Delay;clojure.lang.Delay;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Delay#force(Object);clojure.lang.Delay#force(Object);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.IRef;clojure.lang.IRef;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.LispReader.FnReader;clojure.lang.LispReader.FnReader;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.LispReader.FnReader#invoke(Object, Object);clojure.lang.LispReader.FnReader#invoke(Object, Object);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.LispReader#registerArg(int);clojure.lang.LispReader#registerArg(int);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.MultiFn#resetCache();clojure.lang.MultiFn#resetCache();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.MultiFn#getFn(Object);clojure.lang.MultiFn#getFn(Object);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.MultiFn#findAndCacheBestMethod(Object);clojure.lang.MultiFn#findAndCacheBestMethod(Object);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Numbers.BigDecimalOps;clojure.lang.Numbers.BigDecimalOps;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Numbers.BigDecimalOps#add(Number, Number);clojure.lang.Numbers.BigDecimalOps#add(Number, Number);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Numbers.BigDecimalOps#multiply(Number, Number);clojure.lang.Numbers.BigDecimalOps#multiply(Number, Number);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Numbers.BigDecimalOps#divide(Number, Number);clojure.lang.Numbers.BigDecimalOps#divide(Number, Number);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Numbers.BigDecimalOps#quotient(Number, Number);clojure.lang.Numbers.BigDecimalOps#quotient(Number, Number);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Numbers.BigDecimalOps#remainder(Number, Number);clojure.lang.Numbers.BigDecimalOps#remainder(Number, Number);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Numbers.BigDecimalOps#negate(Number);clojure.lang.Numbers.BigDecimalOps#negate(Number);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Numbers.BigDecimalOps#inc(Number);clojure.lang.Numbers.BigDecimalOps#inc(Number);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Numbers.BigDecimalOps#dec(Number);clojure.lang.Numbers.BigDecimalOps#dec(Number);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.RT#init();clojure.lang.RT#init();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.RT#load(String, boolean);clojure.lang.RT#load(String, boolean);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.RT#format(Object, String, Object[]);clojure.lang.RT#format(Object, String, Object[]);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.RT#baseLoader();clojure.lang.RT#baseLoader();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Ref;clojure.lang.Ref;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Ref#fn();clojure.lang.Ref#fn();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.TransactionalHashMap;clojure.lang.TransactionalHashMap;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.TransactionalHashMap#mapAt(int);clojure.lang.TransactionalHashMap#mapAt(int);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.TransactionalHashMap#put(K, V);clojure.lang.TransactionalHashMap#put(K, V);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.TransactionalHashMap#remove(Object);clojure.lang.TransactionalHashMap#remove(Object);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.TransactionalHashMap#clear();clojure.lang.TransactionalHashMap#clear();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.TransactionalHashMap#putIfAbsent(K, V);clojure.lang.TransactionalHashMap#putIfAbsent(K, V);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.TransactionalHashMap#remove(Object, Object);clojure.lang.TransactionalHashMap#remove(Object, Object);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.TransactionalHashMap#replace(K, V, V);clojure.lang.TransactionalHashMap#replace(K, V, V);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.TransactionalHashMap#replace(K, V);clojure.lang.TransactionalHashMap#replace(K, V);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Var#get();clojure.lang.Var#get();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Var#alter(IFn, ISeq);clojure.lang.Var#alter(IFn, ISeq);f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameMethod;true;clojure.lang.Var#fn();clojure.lang.Var#fn();f1daffdbae886dab563f5653ffd78db40403115c;Mon Feb 9 16:08:22 2009 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;e5b8b24e16caf251ec9bcaffdd3b573fd56c4886;Mon Feb 9 16:57:55 2009 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;e5b8b24e16caf251ec9bcaffdd3b573fd56c4886;Mon Feb 9 16:57:55 2009 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);e5b8b24e16caf251ec9bcaffdd3b573fd56c4886;Mon Feb 9 16:57:55 2009 +0000
SameType;true;clojure.lang.Ratio;clojure.lang.Ratio;b839feb8acfa87d500c4d1bd273e801429dce8ea;Mon Feb 9 17:11:59 2009 +0000
SameMethod;true;clojure.lang.Ratio#doubleValue();clojure.lang.Ratio#doubleValue();b839feb8acfa87d500c4d1bd273e801429dce8ea;Mon Feb 9 17:11:59 2009 +0000
SameType;true;clojure.lang.Compile;clojure.lang.Compile;6b6bad7dfa49674b73147a671e1606b2b1bf253c;Mon Feb 9 18:28:52 2009 +0000
SameMethod;true;clojure.lang.Compile#main(String[]);clojure.lang.Compile#main(String[]);6b6bad7dfa49674b73147a671e1606b2b1bf253c;Mon Feb 9 18:28:52 2009 +0000
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;2c0b7f60cbbc26b9efbf1a687b86d18bb39003a2;Tue Feb 10 01:05:10 2009 +0000
SameMethod;true;clojure.lang.MultiFn#isA(Object, Object);clojure.lang.MultiFn#isA(Object, Object);2c0b7f60cbbc26b9efbf1a687b86d18bb39003a2;Tue Feb 10 01:05:10 2009 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;dd6c6176eac1fa58a330fb768a0d57a422da3efd;Tue Feb 10 01:11:47 2009 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;dd6c6176eac1fa58a330fb768a0d57a422da3efd;Tue Feb 10 01:11:47 2009 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);dd6c6176eac1fa58a330fb768a0d57a422da3efd;Tue Feb 10 01:11:47 2009 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#sqExpandList(ISeq);clojure.lang.LispReader.SyntaxQuoteReader#sqExpandList(ISeq);dd6c6176eac1fa58a330fb768a0d57a422da3efd;Tue Feb 10 01:11:47 2009 +0000
SameType;true;clojure.lang.LispReader.UnquoteReader;clojure.lang.LispReader.UnquoteReader;dd6c6176eac1fa58a330fb768a0d57a422da3efd;Tue Feb 10 01:11:47 2009 +0000
SameMethod;true;clojure.lang.LispReader.UnquoteReader#invoke(Object, Object);clojure.lang.LispReader.UnquoteReader#invoke(Object, Object);dd6c6176eac1fa58a330fb768a0d57a422da3efd;Tue Feb 10 01:11:47 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3e4c6f003de2a50d164a90defb566dba93f465a1;Tue Feb 10 17:07:19 2009 +0000
SameMethod;true;clojure.lang.Compiler#getMatchingParams(String, ArrayList, IPersistentVector, List);clojure.lang.Compiler#getMatchingParams(String, ArrayList, IPersistentVector, List);3e4c6f003de2a50d164a90defb566dba93f465a1;Tue Feb 10 17:07:19 2009 +0000
ExtractInterface;true;clojure.lang.PersistentList.EmptyList;clojure.lang.Counted;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
ExtractInterface;true;clojure.lang.APersistentVector.RSeq;clojure.lang.Counted;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
ExtractInterface;true;clojure.lang.Range;clojure.lang.Counted;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
ExtractInterface;true;clojure.lang.PersistentArrayMap.Seq;clojure.lang.Counted;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
ExtractInterface;true;clojure.lang.PersistentList;clojure.lang.Counted;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
SameType;true;clojure.lang.APersistentVector.RSeq;clojure.lang.APersistentVector.RSeq;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
SameMethod;true;clojure.lang.ASeq#count();clojure.lang.ASeq#count();f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
SameType;true;clojure.lang.Cons;clojure.lang.Cons;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
SameType;true;clojure.lang.IPersistentMap;clojure.lang.IPersistentMap;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
SameType;true;clojure.lang.IPersistentSet;clojure.lang.IPersistentSet;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
SameType;true;clojure.lang.IPersistentVector;clojure.lang.IPersistentVector;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
SameType;true;clojure.lang.IndexedSeq;clojure.lang.IndexedSeq;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
SameType;true;clojure.lang.PersistentArrayMap.Seq;clojure.lang.PersistentArrayMap.Seq;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
SameType;true;clojure.lang.PersistentList.EmptyList;clojure.lang.PersistentList.EmptyList;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
SameMethod;true;clojure.lang.RT#count(Object);clojure.lang.RT#count(Object);f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
SameType;true;clojure.lang.Range;clojure.lang.Range;f5ebf8fee9420b79cca1f74a7f2cd7d9cb7ca7ad;Wed Feb 11 02:53:36 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;57b8c85d080d228f550d40309fa974d5508af93f;Wed Feb 11 15:11:39 2009 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;57b8c85d080d228f550d40309fa974d5508af93f;Wed Feb 11 15:11:39 2009 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);57b8c85d080d228f550d40309fa974d5508af93f;Wed Feb 11 15:11:39 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;d209040102e3a2cb855fd8f8c67c255efe202230;Fri Feb 13 14:50:57 2009 +0000
ExtractInterface;true;clojure.lang.IPersistentCollection;clojure.lang.Seqable;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;false;clojure.lang.APersistentVector.RSeq#rest();clojure.lang.APersistentVector.RSeq#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;false;clojure.lang.APersistentVector.Seq#rest();clojure.lang.APersistentVector.Seq#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;false;clojure.lang.ArraySeq#rest();clojure.lang.ArraySeq#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;false;clojure.lang.ArraySeq.ArraySeq_double#rest();clojure.lang.ArraySeq.ArraySeq_double#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;false;clojure.lang.ArraySeq.ArraySeq_float#rest();clojure.lang.ArraySeq.ArraySeq_float#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;false;clojure.lang.ArraySeq.ArraySeq_int#rest();clojure.lang.ArraySeq.ArraySeq_int#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;false;clojure.lang.ArraySeq.ArraySeq_long#rest();clojure.lang.ArraySeq.ArraySeq_long#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;false;clojure.lang.EnumerationSeq#rest();clojure.lang.EnumerationSeq#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;false;clojure.lang.IteratorSeq#rest();clojure.lang.IteratorSeq#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;false;clojure.lang.LazyCons#rest();clojure.lang.LazyCons#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;false;clojure.lang.PersistentArrayMap.Seq#rest();clojure.lang.PersistentArrayMap.Seq#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;false;clojure.lang.PersistentList#rest();clojure.lang.PersistentList#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;false;clojure.lang.Range#rest();clojure.lang.Range#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;false;clojure.lang.StreamSeq#rest();clojure.lang.StreamSeq#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;false;clojure.lang.StringSeq#rest();clojure.lang.StringSeq#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;true;clojure.lang.PersistentTreeMap.Seq#rest();clojure.lang.PersistentTreeMap.Seq#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;true;clojure.lang.PersistentQueue.Seq#rest();clojure.lang.PersistentQueue.Seq#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode.Seq#rest();clojure.lang.PersistentHashMap.BitmapIndexedNode.Seq#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;true;clojure.lang.PersistentHashMap.FullNode.Seq#rest();clojure.lang.PersistentHashMap.FullNode.Seq#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;true;clojure.lang.PersistentStructMap.Seq#rest();clojure.lang.PersistentStructMap.Seq#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;true;clojure.lang.RT#rest(Object);clojure.lang.RT#next(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;true;clojure.lang.LazySeq#rest();clojure.lang.LazySeq#seq();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;true;clojure.lang.APersistentMap.KeySeq#rest();clojure.lang.APersistentMap.KeySeq#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
RenameMethod;true;clojure.lang.APersistentMap.ValSeq#rest();clojure.lang.APersistentMap.ValSeq#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.AFn;clojure.lang.AFn;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.AFn#applyToHelper(IFn, ISeq);clojure.lang.AFn#applyToHelper(IFn, ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.APersistentMap#cons(Object);clojure.lang.APersistentMap#cons(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.APersistentMap#equals(Object);clojure.lang.APersistentMap#equals(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.APersistentMap#equiv(Object);clojure.lang.APersistentMap#equiv(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.APersistentMap#hashCode();clojure.lang.APersistentMap#hashCode();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.APersistentMap.KeySeq;clojure.lang.APersistentMap.KeySeq;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.APersistentMap.ValSeq;clojure.lang.APersistentMap.ValSeq;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.APersistentSet#hashCode();clojure.lang.APersistentSet#hashCode();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.APersistentSet#toArray(Object[]);clojure.lang.APersistentSet#toArray(Object[]);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.APersistentVector#doEquals(IPersistentVector, Object);clojure.lang.APersistentVector#doEquals(IPersistentVector, Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.APersistentVector#doEquiv(IPersistentVector, Object);clojure.lang.APersistentVector#doEquiv(IPersistentVector, Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.APersistentVector#toArray(Object[]);clojure.lang.APersistentVector#toArray(Object[]);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.APersistentVector#contains(Object);clojure.lang.APersistentVector#contains(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.APersistentVector.Seq;clojure.lang.APersistentVector.Seq;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.APersistentVector.RSeq;clojure.lang.APersistentVector.RSeq;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.ARef;clojure.lang.ARef;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.ARef#notifyWatches();clojure.lang.ARef#notifyWatches();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.ASeq#equiv(Object);clojure.lang.ASeq#equiv(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.ASeq#equals(Object);clojure.lang.ASeq#equals(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.ASeq#hashCode();clojure.lang.ASeq#hashCode();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.ASeq#count();clojure.lang.ASeq#count();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.ASeq#toArray(Object[]);clojure.lang.ASeq#toArray(Object[]);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.ASeq#isEmpty();clojure.lang.ASeq#isEmpty();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.ASeq#contains(Object);clojure.lang.ASeq#contains(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.ASeq.Stream;clojure.lang.ASeq.Stream;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.ASeq.Stream#next();clojure.lang.ASeq.Stream#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.ASeq#indexOf(Object);clojure.lang.ASeq#indexOf(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.ArraySeq.ArraySeq_int;clojure.lang.ArraySeq.ArraySeq_int;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.ArraySeq.ArraySeq_float;clojure.lang.ArraySeq.ArraySeq_float;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.ArraySeq.ArraySeq_double;clojure.lang.ArraySeq.ArraySeq_double;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.ArraySeq.ArraySeq_long;clojure.lang.ArraySeq.ArraySeq_long;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler#getMatchingParams(String, ArrayList, IPersistentVector, List);clojure.lang.Compiler#getMatchingParams(String, ArrayList, IPersistentVector, List);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Compiler.NewExpr.Parser;clojure.lang.Compiler.NewExpr.Parser;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Compiler.MapExpr;clojure.lang.Compiler.MapExpr;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler.MapExpr#parse(C, IPersistentMap);clojure.lang.Compiler.MapExpr#parse(C, IPersistentMap);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Compiler.SetExpr;clojure.lang.Compiler.SetExpr;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler.SetExpr#parse(C, IPersistentSet);clojure.lang.Compiler.SetExpr#parse(C, IPersistentSet);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#ctorTypes();clojure.lang.Compiler.FnExpr#ctorTypes();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emitConstants(GeneratorAdapter);clojure.lang.Compiler.FnExpr#emitConstants(GeneratorAdapter);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.FnExpr#emit(C, FnExpr, GeneratorAdapter);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);clojure.lang.Compiler.FnMethod#parse(FnExpr, ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#emit(FnExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#emit(FnExpr, ClassVisitor);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler.FnMethod#emitClearLocals(GeneratorAdapter);clojure.lang.Compiler.FnMethod#emitClearLocals(GeneratorAdapter);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Compiler.BodyExpr;clojure.lang.Compiler.BodyExpr;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Compiler.BodyExpr.Parser;clojure.lang.Compiler.BodyExpr.Parser;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler.BodyExpr.Parser#parse(C, Object);clojure.lang.Compiler.BodyExpr.Parser#parse(C, Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler.LetExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.LetExpr#emit(C, FnExpr, GeneratorAdapter);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Compiler.RecurExpr.Parser;clojure.lang.Compiler.RecurExpr.Parser;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Cons;clojure.lang.Cons;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Cons#Cons(Object, ISeq);clojure.lang.Cons#Cons(Object, ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Cons#Cons(IPersistentMap, Object, ISeq);clojure.lang.Cons#Cons(IPersistentMap, Object, ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Cons#withMeta(IPersistentMap);clojure.lang.Cons#withMeta(IPersistentMap);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.EnumerationSeq;clojure.lang.EnumerationSeq;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.IPersistentCollection;clojure.lang.IPersistentCollection;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.ISeq;clojure.lang.ISeq;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.IteratorSeq;clojure.lang.IteratorSeq;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.LazyCons;clojure.lang.LazyCons;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.LazyCons#withMeta(IPersistentMap);clojure.lang.LazyCons#withMeta(IPersistentMap);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.LazySeq#first();clojure.lang.LazySeq#first();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#sqExpandList(ISeq);clojure.lang.LispReader.SyntaxQuoteReader#sqExpandList(ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#flattenMap(Object);clojure.lang.LispReader.SyntaxQuoteReader#flattenMap(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.LispReader.EvalReader;clojure.lang.LispReader.EvalReader;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.LispReader.EvalReader#invoke(Object, Object);clojure.lang.LispReader.EvalReader#invoke(Object, Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.MultiFn#prefers(Object, Object);clojure.lang.MultiFn#prefers(Object, Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Numbers#float_array(int, Object);clojure.lang.Numbers#float_array(int, Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Numbers#float_array(Object);clojure.lang.Numbers#float_array(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Numbers#double_array(int, Object);clojure.lang.Numbers#double_array(int, Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Numbers#double_array(Object);clojure.lang.Numbers#double_array(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Numbers#int_array(int, Object);clojure.lang.Numbers#int_array(int, Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Numbers#int_array(Object);clojure.lang.Numbers#int_array(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Numbers#long_array(int, Object);clojure.lang.Numbers#long_array(int, Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Numbers#long_array(Object);clojure.lang.Numbers#long_array(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.PersistentArrayMap.Seq;clojure.lang.PersistentArrayMap.Seq;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentHashMap#create(ISeq);clojure.lang.PersistentHashMap#create(ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.PersistentHashMap.FullNode;clojure.lang.PersistentHashMap.FullNode;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.PersistentHashMap.FullNode.Seq;clojure.lang.PersistentHashMap.FullNode.Seq;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode;clojure.lang.PersistentHashMap.BitmapIndexedNode;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode.Seq;clojure.lang.PersistentHashMap.BitmapIndexedNode.Seq;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.PersistentHashSet;clojure.lang.PersistentHashSet;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentHashSet#create(ISeq);clojure.lang.PersistentHashSet#create(ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentList$1#doInvoke(Object);clojure.lang.PersistentList$1#doInvoke(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentList#reduce(IFn);clojure.lang.PersistentList#reduce(IFn);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentList#reduce(IFn, Object);clojure.lang.PersistentList#reduce(IFn, Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.PersistentList.EmptyList;clojure.lang.PersistentList.EmptyList;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentList.EmptyList#indexOf(Object);clojure.lang.PersistentList.EmptyList#indexOf(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentQueue#equiv(Object);clojure.lang.PersistentQueue#equiv(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentQueue#equals(Object);clojure.lang.PersistentQueue#equals(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentQueue#hashCode();clojure.lang.PersistentQueue#hashCode();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentQueue#pop();clojure.lang.PersistentQueue#pop();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.PersistentQueue.Seq;clojure.lang.PersistentQueue.Seq;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentQueue#toArray(Object[]);clojure.lang.PersistentQueue#toArray(Object[]);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentQueue#contains(Object);clojure.lang.PersistentQueue#contains(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.PersistentStructMap;clojure.lang.PersistentStructMap;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentStructMap#createSlotMap(ISeq);clojure.lang.PersistentStructMap#createSlotMap(ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentStructMap#create(Def, ISeq);clojure.lang.PersistentStructMap#create(Def, ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentStructMap#construct(Def, ISeq);clojure.lang.PersistentStructMap#construct(Def, ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.PersistentStructMap.Seq;clojure.lang.PersistentStructMap.Seq;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#create(ISeq);clojure.lang.PersistentTreeMap#create(ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentTreeMap#create(Comparator, ISeq);clojure.lang.PersistentTreeMap#create(Comparator, ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.PersistentTreeMap.Seq;clojure.lang.PersistentTreeMap.Seq;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.PersistentTreeSet;clojure.lang.PersistentTreeSet;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentTreeSet#create(ISeq);clojure.lang.PersistentTreeSet#create(ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.PersistentVector#create(ISeq);clojure.lang.PersistentVector#create(ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RT#seq(Object);clojure.lang.RT#seq(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RT#seqFrom(Object);clojure.lang.RT#seqFrom(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RT#count(Object);clojure.lang.RT#count(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RT#cons(Object, Object);clojure.lang.RT#cons(Object, Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RT#second(Object);clojure.lang.RT#second(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RT#third(Object);clojure.lang.RT#third(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RT#fourth(Object);clojure.lang.RT#fourth(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RT#findKey(Keyword, ISeq);clojure.lang.RT#findKey(Keyword, ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int, Object);clojure.lang.RT#nth(Object, int, Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RT#toArray(Object);clojure.lang.RT#toArray(Object);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RT#seqToArray(ISeq);clojure.lang.RT#seqToArray(ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RT#seqToTypedArray(Class, ISeq);clojure.lang.RT#seqToTypedArray(Class, ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RT#length(ISeq);clojure.lang.RT#length(ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RT#boundedLength(ISeq, int);clojure.lang.RT#boundedLength(ISeq, int);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RT#printInnerSeq(ISeq, Writer);clojure.lang.RT#printInnerSeq(ISeq, Writer);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RT#doFormat(Writer, String, ISeq);clojure.lang.RT#doFormat(Writer, String, ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Range;clojure.lang.Range;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.RestFn;clojure.lang.RestFn;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RestFn#applyTo(ISeq);clojure.lang.RestFn#applyTo(ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.RestFn#findKey(Object, ISeq);clojure.lang.RestFn#findKey(Object, ISeq);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.SeqEnumeration;clojure.lang.SeqEnumeration;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.SeqEnumeration#nextElement();clojure.lang.SeqEnumeration#nextElement();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.SeqIterator;clojure.lang.SeqIterator;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.SeqIterator#next();clojure.lang.SeqIterator#next();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.StreamSeq;clojure.lang.StreamSeq;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.StreamSeq#withMeta(IPersistentMap);clojure.lang.StreamSeq#withMeta(IPersistentMap);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.StringSeq;clojure.lang.StringSeq;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Var#pushThreadBindings(Associative);clojure.lang.Var#pushThreadBindings(Associative);b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Var#popThreadBindings();clojure.lang.Var#popThreadBindings();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameMethod;true;clojure.lang.Var#releaseThreadBindings();clojure.lang.Var#releaseThreadBindings();b8e333fb3437dca760f16136ed074a4dd463fe35;Tue Feb 17 19:29:19 2009 +0000
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;b2f8fe721181e43ee4a1f0d1171b0c069f20e845;Wed Feb 18 02:38:28 2009 +0000
SameMethod;true;clojure.lang.LazySeq#equiv(Object);clojure.lang.LazySeq#equiv(Object);b2f8fe721181e43ee4a1f0d1171b0c069f20e845;Wed Feb 18 02:38:28 2009 +0000
SameMethod;true;clojure.lang.LazySeq#equals(Object);clojure.lang.LazySeq#equals(Object);b2f8fe721181e43ee4a1f0d1171b0c069f20e845;Wed Feb 18 02:38:28 2009 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;b2f8fe721181e43ee4a1f0d1171b0c069f20e845;Wed Feb 18 02:38:28 2009 +0000
SameType;true;clojure.lang.PersistentList.EmptyList;clojure.lang.PersistentList.EmptyList;b2f8fe721181e43ee4a1f0d1171b0c069f20e845;Wed Feb 18 02:38:28 2009 +0000
SameMethod;true;clojure.lang.PersistentList.EmptyList#equals(Object);clojure.lang.PersistentList.EmptyList#equals(Object);b2f8fe721181e43ee4a1f0d1171b0c069f20e845;Wed Feb 18 02:38:28 2009 +0000
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;569829c42d44b70452e79e2b625b92808db5abc9;Wed Feb 18 16:17:25 2009 +0000
SameMethod;true;clojure.lang.LazySeq#equals(Object);clojure.lang.LazySeq#equals(Object);569829c42d44b70452e79e2b625b92808db5abc9;Wed Feb 18 16:17:25 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;bfa0d637f188969d886a4628e36f61b52f96dc39;Thu Feb 19 20:10:10 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;aac37e59bfe1970d4bfe7b4b7c47e2f2faaa414b;Fri Feb 20 15:10:45 2009 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;aac37e59bfe1970d4bfe7b4b7c47e2f2faaa414b;Fri Feb 20 15:10:45 2009 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#constantType(int);clojure.lang.Compiler.FnExpr#constantType(int);aac37e59bfe1970d4bfe7b4b7c47e2f2faaa414b;Fri Feb 20 15:10:45 2009 +0000
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);aac37e59bfe1970d4bfe7b4b7c47e2f2faaa414b;Fri Feb 20 15:10:45 2009 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;933a0f601e68655f69defd13bb2666a1620371fd;Fri Feb 20 20:17:02 2009 +0000
SameMethod;true;clojure.lang.ASeq#reify();clojure.lang.ASeq#reify();933a0f601e68655f69defd13bb2666a1620371fd;Fri Feb 20 20:17:02 2009 +0000
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;933a0f601e68655f69defd13bb2666a1620371fd;Fri Feb 20 20:17:02 2009 +0000
SameType;true;clojure.lang.PersistentList.EmptyList;clojure.lang.PersistentList.EmptyList;933a0f601e68655f69defd13bb2666a1620371fd;Fri Feb 20 20:17:02 2009 +0000
SameMethod;true;clojure.lang.PersistentList.EmptyList#reify();clojure.lang.PersistentList.EmptyList#reify();933a0f601e68655f69defd13bb2666a1620371fd;Fri Feb 20 20:17:02 2009 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;9253928ba2330b9929eb26577ba20047fb24c5de;Mon Feb 23 17:07:12 2009 +0000
SameMethod;true;clojure.lang.ASeq#more();clojure.lang.ASeq#more();9253928ba2330b9929eb26577ba20047fb24c5de;Mon Feb 23 17:07:12 2009 +0000
SameType;true;clojure.lang.Cons;clojure.lang.Cons;9253928ba2330b9929eb26577ba20047fb24c5de;Mon Feb 23 17:07:12 2009 +0000
SameMethod;true;clojure.lang.Cons#more();clojure.lang.Cons#more();9253928ba2330b9929eb26577ba20047fb24c5de;Mon Feb 23 17:07:12 2009 +0000
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;9253928ba2330b9929eb26577ba20047fb24c5de;Mon Feb 23 17:07:12 2009 +0000
SameMethod;true;clojure.lang.LazySeq#seq();clojure.lang.LazySeq#seq();9253928ba2330b9929eb26577ba20047fb24c5de;Mon Feb 23 17:07:12 2009 +0000
SameMethod;true;clojure.lang.LazySeq#first();clojure.lang.LazySeq#first();9253928ba2330b9929eb26577ba20047fb24c5de;Mon Feb 23 17:07:12 2009 +0000
SameMethod;true;clojure.lang.LazySeq#next();clojure.lang.LazySeq#next();9253928ba2330b9929eb26577ba20047fb24c5de;Mon Feb 23 17:07:12 2009 +0000
SameMethod;true;clojure.lang.LazySeq#more();clojure.lang.LazySeq#more();9253928ba2330b9929eb26577ba20047fb24c5de;Mon Feb 23 17:07:12 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;9253928ba2330b9929eb26577ba20047fb24c5de;Mon Feb 23 17:07:12 2009 +0000
SameMethod;true;clojure.lang.RT#seq(Object);clojure.lang.RT#seq(Object);9253928ba2330b9929eb26577ba20047fb24c5de;Mon Feb 23 17:07:12 2009 +0000
SameMethod;true;clojure.lang.RT#seqFrom(Object);clojure.lang.RT#seqFrom(Object);9253928ba2330b9929eb26577ba20047fb24c5de;Mon Feb 23 17:07:12 2009 +0000
SameMethod;true;clojure.lang.RT#more(Object);clojure.lang.RT#more(Object);9253928ba2330b9929eb26577ba20047fb24c5de;Mon Feb 23 17:07:12 2009 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;8b16bff0cb7cd3f84f1eb8609b6dce4b2a77f0c4;Tue Feb 24 00:51:09 2009 +0000
SameMethod;true;clojure.lang.Reflector#invokeInstanceMethod(Object, String, Object[]);clojure.lang.Reflector#invokeInstanceMethod(Object, String, Object[]);8b16bff0cb7cd3f84f1eb8609b6dce4b2a77f0c4;Tue Feb 24 00:51:09 2009 +0000
SameMethod;true;clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);8b16bff0cb7cd3f84f1eb8609b6dce4b2a77f0c4;Tue Feb 24 00:51:09 2009 +0000
SameMethod;true;clojure.lang.Reflector#invokeConstructor(Class, Object[]);clojure.lang.Reflector#invokeConstructor(Class, Object[]);8b16bff0cb7cd3f84f1eb8609b6dce4b2a77f0c4;Tue Feb 24 00:51:09 2009 +0000
SameMethod;true;clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);8b16bff0cb7cd3f84f1eb8609b6dce4b2a77f0c4;Tue Feb 24 00:51:09 2009 +0000
SameType;true;clojure.lang.ARef;clojure.lang.ARef;2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameMethod;true;clojure.lang.ARef#getWatches();clojure.lang.ARef#getWatches();2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameType;true;clojure.lang.Agent.Action;clojure.lang.Agent.Action;2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameMethod;true;clojure.lang.Agent.Action#doRun(Action);clojure.lang.Agent.Action#doRun(Action);2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameType;true;clojure.lang.Atom;clojure.lang.Atom;2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameMethod;true;clojure.lang.Atom#swap(IFn);clojure.lang.Atom#swap(IFn);2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameMethod;true;clojure.lang.Atom#swap(IFn, Object);clojure.lang.Atom#swap(IFn, Object);2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameMethod;true;clojure.lang.Atom#swap(IFn, Object, Object);clojure.lang.Atom#swap(IFn, Object, Object);2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameMethod;true;clojure.lang.Atom#swap(IFn, Object, Object, ISeq);clojure.lang.Atom#swap(IFn, Object, Object, ISeq);2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameMethod;true;clojure.lang.Atom#compareAndSet(Object, Object);clojure.lang.Atom#compareAndSet(Object, Object);2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameMethod;true;clojure.lang.Atom#reset(Object);clojure.lang.Atom#reset(Object);2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameType;true;clojure.lang.IRef;clojure.lang.IRef;2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameMethod;true;clojure.lang.LockingTransaction#run(Callable);clojure.lang.LockingTransaction#run(Callable);2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameType;true;clojure.lang.Var;clojure.lang.Var;2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameMethod;true;clojure.lang.Var#setValidator(IFn);clojure.lang.Var#setValidator(IFn);2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameMethod;true;clojure.lang.Var#getRoot();clojure.lang.Var#getRoot();2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameMethod;true;clojure.lang.Var#bindRoot(Object);clojure.lang.Var#bindRoot(Object);2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameMethod;true;clojure.lang.Var#swapRoot(Object);clojure.lang.Var#swapRoot(Object);2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameMethod;true;clojure.lang.Var#commuteRoot(IFn);clojure.lang.Var#commuteRoot(IFn);2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameMethod;true;clojure.lang.Var#alterRoot(IFn, ISeq);clojure.lang.Var#alterRoot(IFn, ISeq);2ea56006cb0ee74559ecd5d97e05944c6ee21fc4;Thu Feb 26 15:34:41 2009 +0000
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;6018e1c033c2eac2bc4452fc0f5e2b1b93d6df4e;Thu Feb 26 20:24:19 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;7059dd1345ffa8ee9a5da96bc8aa5ead227a50a5;Sat Feb 28 15:46:52 2009 +0000
SameMethod;true;clojure.lang.RT#load(String, boolean);clojure.lang.RT#load(String, boolean);7059dd1345ffa8ee9a5da96bc8aa5ead227a50a5;Sat Feb 28 15:46:52 2009 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;748c9ca640eb899b581fff479114b6cc3beade4c;Sat Feb 28 20:06:47 2009 +0000
SameType;true;clojure.lang.APersistentVector.SubVector;clojure.lang.APersistentVector.SubVector;748c9ca640eb899b581fff479114b6cc3beade4c;Sat Feb 28 20:06:47 2009 +0000
SameMethod;true;clojure.lang.APersistentVector.SubVector#SubVector(IPersistentMap, IPersistentVector, int, int);clojure.lang.APersistentVector.SubVector#SubVector(IPersistentMap, IPersistentVector, int, int);748c9ca640eb899b581fff479114b6cc3beade4c;Sat Feb 28 20:06:47 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2fd3186c3502e34201a9803a1bb62bb7a9b01604;Sat Feb 28 23:14:03 2009 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;2fd3186c3502e34201a9803a1bb62bb7a9b01604;Sat Feb 28 23:14:03 2009 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.FnExpr#compile();2fd3186c3502e34201a9803a1bb62bb7a9b01604;Sat Feb 28 23:14:03 2009 +0000
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;2fd3186c3502e34201a9803a1bb62bb7a9b01604;Sat Feb 28 23:14:03 2009 +0000
SameType;true;clojure.lang.Agent;clojure.lang.Agent;115bbb2f79465010dde4dc189af10fc9d4f1f4b4;Sun Mar 1 22:53:55 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;b2ab19657eb41a7fbf4fced6ef216b8b0fe5d633;Mon Mar 2 23:10:57 2009 +0000
SameMethod;true;clojure.lang.RT#load(String, boolean);clojure.lang.RT#load(String, boolean);b2ab19657eb41a7fbf4fced6ef216b8b0fe5d633;Mon Mar 2 23:10:57 2009 +0000
ExtractMethod;true;clojure.lang.Compiler.FnExpr#emitConstants(GeneratorAdapter);clojure.lang.Compiler.FnExpr#emitValue(Object, GeneratorAdapter);9723a7b5d693bec38dc57269b423094ababa9dd1;Tue Mar 3 14:59:55 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;9723a7b5d693bec38dc57269b423094ababa9dd1;Tue Mar 3 14:59:55 2009 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;9723a7b5d693bec38dc57269b423094ababa9dd1;Tue Mar 3 14:59:55 2009 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emitConstants(GeneratorAdapter);clojure.lang.Compiler.FnExpr#emitConstants(GeneratorAdapter);9723a7b5d693bec38dc57269b423094ababa9dd1;Tue Mar 3 14:59:55 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;69728918d3e00f821903e7e12771d4332937e288;Tue Mar 3 22:31:55 2009 +0000
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;69728918d3e00f821903e7e12771d4332937e288;Tue Mar 3 22:31:55 2009 +0000
SameMethod;true;clojure.lang.Compiler.FnExpr#emitValue(Object, GeneratorAdapter);clojure.lang.Compiler.FnExpr#emitValue(Object, GeneratorAdapter);69728918d3e00f821903e7e12771d4332937e288;Tue Mar 3 22:31:55 2009 +0000
RenameClass;true;clojure.lang.ASeq.Stream;clojure.lang.ASeq.Src;ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
RenameMethod;true;clojure.lang.IteratorStream#next();clojure.lang.IteratorStream#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
RenameMethod;true;clojure.lang.ArrayStream#next();clojure.lang.ArrayStream#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
RenameMethod;true;clojure.lang.ArrayStream.ArrayStream_boolean#next();clojure.lang.ArrayStream.ArrayStream_boolean#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
RenameMethod;true;clojure.lang.ArrayStream.ArrayStream_byte#next();clojure.lang.ArrayStream.ArrayStream_byte#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
RenameMethod;true;clojure.lang.ArrayStream.ArrayStream_char#next();clojure.lang.ArrayStream.ArrayStream_char#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
RenameMethod;true;clojure.lang.ArrayStream.ArrayStream_double#next();clojure.lang.ArrayStream.ArrayStream_double#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
RenameMethod;true;clojure.lang.ArrayStream.ArrayStream_float#next();clojure.lang.ArrayStream.ArrayStream_float#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
RenameMethod;true;clojure.lang.ArrayStream.ArrayStream_int#next();clojure.lang.ArrayStream.ArrayStream_int#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
RenameMethod;true;clojure.lang.ArrayStream.ArrayStream_long#next();clojure.lang.ArrayStream.ArrayStream_long#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
RenameMethod;true;clojure.lang.ArrayStream.ArrayStream_short#next();clojure.lang.ArrayStream.ArrayStream_short#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
RenameMethod;true;clojure.lang.ASeq.Stream#next();clojure.lang.ASeq.Src#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
InlineMethod;true;clojure.lang.RT#eos();clojure.lang.ArrayStream.ArrayStream_double#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
InlineMethod;true;clojure.lang.RT#eos();clojure.lang.ArrayStream.ArrayStream_char#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
InlineMethod;true;clojure.lang.RT#eos();clojure.lang.ArrayStream.ArrayStream_byte#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
InlineMethod;true;clojure.lang.RT#eos();clojure.lang.ArrayStream#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
InlineMethod;true;clojure.lang.RT#eos();clojure.lang.ArrayStream.ArrayStream_short#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
InlineMethod;true;clojure.lang.RT#eos();clojure.lang.ArrayStream.ArrayStream_int#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
InlineMethod;true;clojure.lang.RT#eos();clojure.lang.ArrayStream.ArrayStream_boolean#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
InlineMethod;true;clojure.lang.RT#eos();clojure.lang.ArrayStream.ArrayStream_long#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
InlineMethod;true;clojure.lang.RT#eos();clojure.lang.IteratorStream#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
InlineMethod;true;clojure.lang.RT#eos();clojure.lang.ASeq.Src#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
InlineMethod;true;clojure.lang.RT#eos();clojure.lang.ArrayStream.ArrayStream_float#invoke();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameMethod;true;clojure.lang.APersistentVector#stream();clojure.lang.APersistentVector#stream();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameMethod;true;clojure.lang.ASeq#stream();clojure.lang.ASeq#stream();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameType;true;clojure.lang.ArrayStream;clojure.lang.ArrayStream;ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameMethod;true;clojure.lang.ArrayStream#createFromObject(Object);clojure.lang.ArrayStream#createFromObject(Object);ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameType;true;clojure.lang.ArrayStream.ArrayStream_int;clojure.lang.ArrayStream.ArrayStream_int;ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameType;true;clojure.lang.ArrayStream.ArrayStream_long;clojure.lang.ArrayStream.ArrayStream_long;ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameType;true;clojure.lang.ArrayStream.ArrayStream_float;clojure.lang.ArrayStream.ArrayStream_float;ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameType;true;clojure.lang.ArrayStream.ArrayStream_double;clojure.lang.ArrayStream.ArrayStream_double;ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameType;true;clojure.lang.ArrayStream.ArrayStream_char;clojure.lang.ArrayStream.ArrayStream_char;ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameType;true;clojure.lang.ArrayStream.ArrayStream_byte;clojure.lang.ArrayStream.ArrayStream_byte;ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameType;true;clojure.lang.ArrayStream.ArrayStream_short;clojure.lang.ArrayStream.ArrayStream_short;ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameType;true;clojure.lang.ArrayStream.ArrayStream_boolean;clojure.lang.ArrayStream.ArrayStream_boolean;ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameType;true;clojure.lang.IteratorStream;clojure.lang.IteratorStream;ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameMethod;true;clojure.lang.RT#stream(Object);clojure.lang.RT#stream(Object);ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameType;true;clojure.lang.Range;clojure.lang.Range;ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameMethod;true;clojure.lang.Range#stream();clojure.lang.Range#stream();ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameType;true;clojure.lang.Streamable;clojure.lang.Streamable;ed1a4e373ad3bfce7acae1fed7a64144fc3d26df;Fri Mar 6 00:57:10 2009 +0000
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;f015ab4f71a680f6c526a17e61f41da9529597bf;Tue Mar 17 12:54:07 2009 +0000
SameMethod;true;clojure.lang.ASeq#empty();clojure.lang.ASeq#empty();f015ab4f71a680f6c526a17e61f41da9529597bf;Tue Mar 17 12:54:07 2009 +0000
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;80f00b18ace76faf1fb512c972cf539a37c36ccf;Tue Mar 17 13:47:06 2009 +0000
SameMethod;true;clojure.lang.LazySeq#empty();clojure.lang.LazySeq#empty();80f00b18ace76faf1fb512c972cf539a37c36ccf;Tue Mar 17 13:47:06 2009 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;487b713ce0f6fe49470a7f0aa7acf14bdb58c985;Sun Mar 22 17:07:47 2009 +0000
SameMethod;true;clojure.lang.LispReader#isUnquoteSplicing(Object);clojure.lang.LispReader#isUnquoteSplicing(Object);487b713ce0f6fe49470a7f0aa7acf14bdb58c985;Sun Mar 22 17:07:47 2009 +0000
SameMethod;true;clojure.lang.LispReader#isUnquote(Object);clojure.lang.LispReader#isUnquote(Object);487b713ce0f6fe49470a7f0aa7acf14bdb58c985;Sun Mar 22 17:07:47 2009 +0000
ExtractMethod;true;clojure.lang.MultiFn#getFn(Object);clojure.lang.MultiFn#getMethod(Object);37606d41d3dcc574dd6b755de4849fe899c01af2;Wed Apr 1 12:39:39 2009 +0000
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;37606d41d3dcc574dd6b755de4849fe899c01af2;Wed Apr 1 12:39:39 2009 +0000
SameMethod;true;clojure.lang.MultiFn#getFn(Object);clojure.lang.MultiFn#getFn(Object);37606d41d3dcc574dd6b755de4849fe899c01af2;Wed Apr 1 12:39:39 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;d5ed6f9dfc014f9ff0e73b48e49dd7063b2c3096;Thu Apr 9 15:23:55 2009 +0000
SameMethod;true;clojure.lang.RT#loadClassForName(String);clojure.lang.RT#loadClassForName(String);d5ed6f9dfc014f9ff0e73b48e49dd7063b2c3096;Thu Apr 9 15:23:55 2009 +0000
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;653d6ee1fc4ffe7e60487a401298832faac18b48;Thu Apr 9 19:32:49 2009 +0000
SameMethod;true;clojure.lang.MultiFn#preferMethod(Object, Object);clojure.lang.MultiFn#preferMethod(Object, Object);653d6ee1fc4ffe7e60487a401298832faac18b48;Thu Apr 9 19:32:49 2009 +0000
SameMethod;true;clojure.lang.MultiFn#getFn(Object);clojure.lang.MultiFn#getFn(Object);653d6ee1fc4ffe7e60487a401298832faac18b48;Thu Apr 9 19:32:49 2009 +0000
SameMethod;true;clojure.lang.MultiFn#findAndCacheBestMethod(Object);clojure.lang.MultiFn#findAndCacheBestMethod(Object);653d6ee1fc4ffe7e60487a401298832faac18b48;Thu Apr 9 19:32:49 2009 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;50238129f1393f9b7087669984f6300b16c740e3;Fri Apr 10 00:12:44 2009 +0000
SameMethod;true;clojure.lang.Numbers#minus(int, int);clojure.lang.Numbers#minus(int, int);50238129f1393f9b7087669984f6300b16c740e3;Fri Apr 10 00:12:44 2009 +0000
SameMethod;true;clojure.lang.Numbers#minus(long, long);clojure.lang.Numbers#minus(long, long);50238129f1393f9b7087669984f6300b16c740e3;Fri Apr 10 00:12:44 2009 +0000
SameMethod;true;clojure.lang.Numbers#minus(long);clojure.lang.Numbers#minus(long);50238129f1393f9b7087669984f6300b16c740e3;Fri Apr 10 00:12:44 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2d6dc41d0f5985b278969131edbce4703d674a8f;Sun Apr 12 13:06:43 2009 +0000
SameMethod;true;clojure.lang.Compiler#getMatchingParams(String, ArrayList, IPersistentVector, List);clojure.lang.Compiler#getMatchingParams(String, ArrayList, IPersistentVector, List);2d6dc41d0f5985b278969131edbce4703d674a8f;Sun Apr 12 13:06:43 2009 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;ac2374f91a047f119127163a96158d2eb9a204b7;Sun Apr 12 13:50:39 2009 +0000
SameType;true;clojure.lang.LispReader.EvalReader;clojure.lang.LispReader.EvalReader;ac2374f91a047f119127163a96158d2eb9a204b7;Sun Apr 12 13:50:39 2009 +0000
SameMethod;true;clojure.lang.LispReader.EvalReader#invoke(Object, Object);clojure.lang.LispReader.EvalReader#invoke(Object, Object);ac2374f91a047f119127163a96158d2eb9a204b7;Sun Apr 12 13:50:39 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;ac2374f91a047f119127163a96158d2eb9a204b7;Sun Apr 12 13:50:39 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e05a1ad58a40a80f2a33e390184e109d5a8bce4f;Sun Apr 12 14:05:29 2009 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;e05a1ad58a40a80f2a33e390184e109d5a8bce4f;Sun Apr 12 14:05:29 2009 +0000
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;e05a1ad58a40a80f2a33e390184e109d5a8bce4f;Sun Apr 12 14:05:29 2009 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);e05a1ad58a40a80f2a33e390184e109d5a8bce4f;Sun Apr 12 14:05:29 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3dd4c1cf18ea8456b5b4aec607cd54ecfdd85eea;Tue Apr 14 11:57:00 2009 +0000
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;3dd4c1cf18ea8456b5b4aec607cd54ecfdd85eea;Tue Apr 14 11:57:00 2009 +0000
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, Expr, String);clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, Expr, String);3dd4c1cf18ea8456b5b4aec607cd54ecfdd85eea;Tue Apr 14 11:57:00 2009 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;3dd4c1cf18ea8456b5b4aec607cd54ecfdd85eea;Tue Apr 14 11:57:00 2009 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Expr, String, IPersistentVector);clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Expr, String, IPersistentVector);3dd4c1cf18ea8456b5b4aec607cd54ecfdd85eea;Tue Apr 14 11:57:00 2009 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;3dd4c1cf18ea8456b5b4aec607cd54ecfdd85eea;Tue Apr 14 11:57:00 2009 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, Class, String, IPersistentVector);clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, Class, String, IPersistentVector);3dd4c1cf18ea8456b5b4aec607cd54ecfdd85eea;Tue Apr 14 11:57:00 2009 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;3dd4c1cf18ea8456b5b4aec607cd54ecfdd85eea;Tue Apr 14 11:57:00 2009 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);3dd4c1cf18ea8456b5b4aec607cd54ecfdd85eea;Tue Apr 14 11:57:00 2009 +0000
RenameMethod;true;clojure.lang.Stream#makeSeq(IFn);clojure.lang.Stream#makeSequence(IFn);be925c49b9d7c9e799711fd4caa4cf248ac16023;Mon Apr 27 17:10:12 2009 +0000
ExtractMethod;true;clojure.lang.Stream#seq();clojure.lang.Stream#sequence();be925c49b9d7c9e799711fd4caa4cf248ac16023;Mon Apr 27 17:10:12 2009 +0000
SameType;true;clojure.lang.Stream;clojure.lang.Stream;be925c49b9d7c9e799711fd4caa4cf248ac16023;Mon Apr 27 17:10:12 2009 +0000
SameMethod;true;clojure.lang.Stream#seq();clojure.lang.Stream#seq();be925c49b9d7c9e799711fd4caa4cf248ac16023;Mon Apr 27 17:10:12 2009 +0000
SameMethod;true;clojure.lang.Stream$1#invoke();clojure.lang.Stream$1#invoke();be925c49b9d7c9e799711fd4caa4cf248ac16023;Mon Apr 27 17:10:12 2009 +0000
SameMethod;true;clojure.lang.Stream#makeTap(IFn, IFn);clojure.lang.Stream#makeTap(IFn, IFn);be925c49b9d7c9e799711fd4caa4cf248ac16023;Mon Apr 27 17:10:12 2009 +0000
SameMethod;true;clojure.lang.Stream$2#invoke();clojure.lang.Stream$2#invoke();be925c49b9d7c9e799711fd4caa4cf248ac16023;Mon Apr 27 17:10:12 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e9212ed36488b6fab3809082e8771c19be81da84;Mon Apr 27 17:37:21 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3548ed6bb5a29b64ff62c5832cdbc01b8efbad93;Tue Apr 28 11:27:20 2009 +0000
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);3548ed6bb5a29b64ff62c5832cdbc01b8efbad93;Tue Apr 28 11:27:20 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;32429bec7e42fb1365706b275a2e3dd7e7761b34;Wed Apr 29 18:35:36 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;56dc8bc5e6fdfd3e358e4c0d0428ce3067485f4d;Fri May 8 20:10:48 2009 +0000
SameType;true;clojure.lang.Compiler.StaticFieldExpr;clojure.lang.Compiler.StaticFieldExpr;56dc8bc5e6fdfd3e358e4c0d0428ce3067485f4d;Fri May 8 20:10:48 2009 +0000
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;56dc8bc5e6fdfd3e358e4c0d0428ce3067485f4d;Fri May 8 20:10:48 2009 +0000
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.StaticMethodExpr#emit(C, FnExpr, GeneratorAdapter);56dc8bc5e6fdfd3e358e4c0d0428ce3067485f4d;Fri May 8 20:10:48 2009 +0000
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;56dc8bc5e6fdfd3e358e4c0d0428ce3067485f4d;Fri May 8 20:10:48 2009 +0000
SameMethod;true;clojure.lang.Compiler.NewExpr#emit(C, FnExpr, GeneratorAdapter);clojure.lang.Compiler.NewExpr#emit(C, FnExpr, GeneratorAdapter);56dc8bc5e6fdfd3e358e4c0d0428ce3067485f4d;Fri May 8 20:10:48 2009 +0000
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;56dc8bc5e6fdfd3e358e4c0d0428ce3067485f4d;Fri May 8 20:10:48 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;56dc8bc5e6fdfd3e358e4c0d0428ce3067485f4d;Fri May 8 20:10:48 2009 +0000
SameMethod;true;clojure.lang.RT#baseLoader();clojure.lang.RT#baseLoader();56dc8bc5e6fdfd3e358e4c0d0428ce3067485f4d;Fri May 8 20:10:48 2009 +0000
SameType;true;clojure.main;clojure.main;479b43a6fa675f34f1d88703adda742a0bd4f888;Thu May 14 11:30:04 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;939976735ea071cb00944b066392ab8b8d749918;Fri May 15 15:46:17 2009 +0000
SameMethod;true;clojure.lang.RT#makeClassLoader();clojure.lang.RT#makeClassLoader();939976735ea071cb00944b066392ab8b8d749918;Fri May 15 15:46:17 2009 +0000
ExtractMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile1(GeneratorAdapter, FnExpr, Object);dbb85aafafc90a9b6021ef58c5cd4bd8a20600fc;Sat May 16 20:18:43 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;dbb85aafafc90a9b6021ef58c5cd4bd8a20600fc;Sat May 16 20:18:43 2009 +0000
SameMethod;true;clojure.lang.Compiler#eval(Object);clojure.lang.Compiler#eval(Object);dbb85aafafc90a9b6021ef58c5cd4bd8a20600fc;Sat May 16 20:18:43 2009 +0000
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);dbb85aafafc90a9b6021ef58c5cd4bd8a20600fc;Sat May 16 20:18:43 2009 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;2cdd5ec3aa03204722a84d86841011a1b0d8d764;Mon May 18 18:31:18 2009 +0000
SameMethod;true;clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);2cdd5ec3aa03204722a84d86841011a1b0d8d764;Mon May 18 18:31:18 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;abc7dbfeaf68954182078037442c40aace5d3c95;Fri May 22 12:50:33 2009 +0000
SameMethod;true;clojure.lang.Compiler#eval(Object);clojure.lang.Compiler#eval(Object);abc7dbfeaf68954182078037442c40aace5d3c95;Fri May 22 12:50:33 2009 +0000
SameMethod;true;clojure.lang.Compiler#compile1(GeneratorAdapter, FnExpr, Object);clojure.lang.Compiler#compile1(GeneratorAdapter, FnExpr, Object);abc7dbfeaf68954182078037442c40aace5d3c95;Fri May 22 12:50:33 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;92ae58a35e3d2efbfc8f9cf4ba3767a32aaec29f;Mon May 25 23:59:52 2009 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;92ae58a35e3d2efbfc8f9cf4ba3767a32aaec29f;Mon May 25 23:59:52 2009 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Expr, String, IPersistentVector);clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Expr, String, IPersistentVector);92ae58a35e3d2efbfc8f9cf4ba3767a32aaec29f;Mon May 25 23:59:52 2009 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;d0fe0d1c544fb4d8d05ba3c7b6bf83fc2f4692a3;Tue May 26 00:14:49 2009 +0000
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;d0fe0d1c544fb4d8d05ba3c7b6bf83fc2f4692a3;Tue May 26 00:14:49 2009 +0000
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Expr, String, IPersistentVector);clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Expr, String, IPersistentVector);d0fe0d1c544fb4d8d05ba3c7b6bf83fc2f4692a3;Tue May 26 00:14:49 2009 +0000
InlineMethod;true;clojure.lang.RT#getRootClassLoader();clojure.lang.RT#addURL(Object);b045a379215d1f48e6a2e6cedcdb41526cd5bb25;Wed May 27 17:54:36 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;b045a379215d1f48e6a2e6cedcdb41526cd5bb25;Wed May 27 17:54:36 2009 +0000
SameMethod;true;clojure.lang.RT#addURL(Object);clojure.lang.RT#addURL(Object);b045a379215d1f48e6a2e6cedcdb41526cd5bb25;Wed May 27 17:54:36 2009 +0000
SameMethod;true;clojure.lang.RT#baseLoader();clojure.lang.RT#baseLoader();b045a379215d1f48e6a2e6cedcdb41526cd5bb25;Wed May 27 17:54:36 2009 +0000
ExtractInterface;true;clojure.lang.IPersistentVector;clojure.lang.Indexed;ff27522840fb3c1681c331ad1fb44a313bd44e0a;Thu May 28 13:42:16 2009 +0000
ExtractMethod;true;clojure.lang.LazySeq#seq();clojure.lang.LazySeq#sval();ff27522840fb3c1681c331ad1fb44a313bd44e0a;Thu May 28 13:42:16 2009 +0000
ExtractMethod;true;clojure.lang.PersistentVector#nth(int);clojure.lang.PersistentVector#nodeFor(int);ff27522840fb3c1681c331ad1fb44a313bd44e0a;Thu May 28 13:42:16 2009 +0000
SameType;true;clojure.lang.IPersistentVector;clojure.lang.IPersistentVector;ff27522840fb3c1681c331ad1fb44a313bd44e0a;Thu May 28 13:42:16 2009 +0000
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;ff27522840fb3c1681c331ad1fb44a313bd44e0a;Thu May 28 13:42:16 2009 +0000
SameMethod;true;clojure.lang.LazySeq#seq();clojure.lang.LazySeq#seq();ff27522840fb3c1681c331ad1fb44a313bd44e0a;Thu May 28 13:42:16 2009 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;ff27522840fb3c1681c331ad1fb44a313bd44e0a;Thu May 28 13:42:16 2009 +0000
SameMethod;true;clojure.lang.PersistentVector#nth(int);clojure.lang.PersistentVector#nth(int);ff27522840fb3c1681c331ad1fb44a313bd44e0a;Thu May 28 13:42:16 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;ff27522840fb3c1681c331ad1fb44a313bd44e0a;Thu May 28 13:42:16 2009 +0000
SameMethod;true;clojure.lang.RT#count(Object);clojure.lang.RT#count(Object);ff27522840fb3c1681c331ad1fb44a313bd44e0a;Thu May 28 13:42:16 2009 +0000
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);ff27522840fb3c1681c331ad1fb44a313bd44e0a;Thu May 28 13:42:16 2009 +0000
SameType;true;clojure.lang.ArrayChunk;clojure.lang.ArrayChunk;d702ebaf3bf40bd7367496a9f67dd5d0d81f68ae;Thu May 28 13:42:32 2009 +0000
SameType;true;clojure.lang.RT;clojure.lang.RT;d702ebaf3bf40bd7367496a9f67dd5d0d81f68ae;Thu May 28 13:42:32 2009 +0000
SameType;true;clojure.lang.ArrayChunk;clojure.lang.ArrayChunk;0d0fd4889328e589198b6bd7d4b1f9b32dd41fcf;Thu May 28 13:42:46 2009 +0000
SameMethod;true;clojure.lang.ArrayChunk#ArrayChunk(Object[], int);clojure.lang.ArrayChunk#ArrayChunk(Object[], int);0d0fd4889328e589198b6bd7d4b1f9b32dd41fcf;Thu May 28 13:42:46 2009 +0000
SameMethod;true;clojure.lang.ArrayChunk#count();clojure.lang.ArrayChunk#count();0d0fd4889328e589198b6bd7d4b1f9b32dd41fcf;Thu May 28 13:42:46 2009 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;91f8beb650a37705dc72cf4b0ec489e2344716a3;Thu May 28 13:42:58 2009 +0000
SameMethod;true;clojure.lang.Numbers#quotient(Number, Number);clojure.lang.Numbers#quotient(Number, Number);91f8beb650a37705dc72cf4b0ec489e2344716a3;Thu May 28 13:42:58 2009 +0000
SameMethod;true;clojure.lang.Numbers#remainder(Number, Number);clojure.lang.Numbers#remainder(Number, Number);91f8beb650a37705dc72cf4b0ec489e2344716a3;Thu May 28 13:42:58 2009 +0000
SameType;true;clojure.lang.LazilyPersistentVector;clojure.lang.LazilyPersistentVector;902a54421b8d2372587d2d9a34abb803624a4911;Thu May 28 14:47:11 2009 +0000
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;902a54421b8d2372587d2d9a34abb803624a4911;Thu May 28 14:47:11 2009 +0000
ExtractMethod;false;clojure.lang.RT#nth(Object, int);clojure.lang.RT#do_nth(Object, int);f79e724224f86d938cd6ed287355808233c899e9;Fri Jun 19 07:28:59 2009 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;f79e724224f86d938cd6ed287355808233c899e9;Fri Jun 19 07:28:59 2009 -0400
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);f79e724224f86d938cd6ed287355808233c899e9;Fri Jun 19 07:28:59 2009 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;f1d13b8f1fbda376352caf85857cc0585717bcd9;Mon May 4 00:00:00 2009 -0400
SameMethod;true;clojure.lang.LispReader#matchNumber(String);clojure.lang.LispReader#matchNumber(String);f1d13b8f1fbda376352caf85857cc0585717bcd9;Mon May 4 00:00:00 2009 -0400
SameType;true;clojure.lang.Compile;clojure.lang.Compile;fa3d24973fc415b35ae6ec8d84b61ace76bd4133;Mon Jun 1 00:00:00 2009 -0400
SameMethod;true;clojure.lang.Compile#main(String[]);clojure.lang.Compile#main(String[]);fa3d24973fc415b35ae6ec8d84b61ace76bd4133;Mon Jun 1 00:00:00 2009 -0400
SameType;true;clojure.lang.Compile;clojure.lang.Compile;895b39dabc17b3fd766fdbac3b0757edb0d4b60d;Mon Jun 22 17:07:36 2009 -0400
SameMethod;true;clojure.lang.Compile#main(String[]);clojure.lang.Compile#main(String[]);895b39dabc17b3fd766fdbac3b0757edb0d4b60d;Mon Jun 22 17:07:36 2009 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;ff26acc38d33b1cf17adce156a458b7df6588a3e;Wed Jun 24 15:18:22 2009 -0400
SameType;true;clojure.lang.LispReader.ArgReader;clojure.lang.LispReader.ArgReader;ff26acc38d33b1cf17adce156a458b7df6588a3e;Wed Jun 24 15:18:22 2009 -0400
SameMethod;true;clojure.lang.LispReader.ArgReader#invoke(Object, Object);clojure.lang.LispReader.ArgReader#invoke(Object, Object);ff26acc38d33b1cf17adce156a458b7df6588a3e;Wed Jun 24 15:18:22 2009 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;0ac482878a1dd520cbee2faa0f5f6ab1082ffa76;Wed Jun 24 15:21:42 2009 -0400
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;6201f5e2ddd52f1b483d75563b0380deba59777c;Tue Jun 30 11:22:39 2009 -0400
SameMethod;true;clojure.lang.LockingTransaction#run(Callable);clojure.lang.LockingTransaction#run(Callable);6201f5e2ddd52f1b483d75563b0380deba59777c;Tue Jun 30 11:22:39 2009 -0400
SameType;true;clojure.lang.Ref;clojure.lang.Ref;6201f5e2ddd52f1b483d75563b0380deba59777c;Tue Jun 30 11:22:39 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c4a5cd208aef54ae5b292fa41c4880017315e553;Fri Jul 3 07:58:26 2009 -0400
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;c4a5cd208aef54ae5b292fa41c4880017315e553;Fri Jul 3 07:58:26 2009 -0400
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#emitAssign(C, FnExpr, GeneratorAdapter, Expr);clojure.lang.Compiler.InstanceFieldExpr#emitAssign(C, FnExpr, GeneratorAdapter, Expr);c4a5cd208aef54ae5b292fa41c4880017315e553;Fri Jul 3 07:58:26 2009 -0400
InlineMethod;false;clojure.lang.RT#do_nth(Object, int);clojure.lang.RT#nth(Object, int);a1397390d8b3b63f2039359520629d87b152d717;Sat Jul 4 12:45:33 2009 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;a1397390d8b3b63f2039359520629d87b152d717;Sat Jul 4 12:45:33 2009 -0400
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);a1397390d8b3b63f2039359520629d87b152d717;Sat Jul 4 12:45:33 2009 -0400
SameType;true;clojure.lang.Var;clojure.lang.Var;1066534db4cf27c110f1c817b1032f20d50ab7bf;Thu Jul 16 17:08:43 2009 -0400
SameType;true;clojure.lang.ArrayChunk;clojure.lang.ArrayChunk;fe6eddf66e8e6a66c9f462b125a7740e900dde21;Sun Jul 19 07:38:18 2009 -0400
SameType;true;clojure.lang.ChunkBuffer;clojure.lang.ChunkBuffer;fe6eddf66e8e6a66c9f462b125a7740e900dde21;Sun Jul 19 07:38:18 2009 -0400
SameMethod;true;clojure.lang.ChunkBuffer#ChunkBuffer(int);clojure.lang.ChunkBuffer#ChunkBuffer(int);fe6eddf66e8e6a66c9f462b125a7740e900dde21;Sun Jul 19 07:38:18 2009 -0400
SameMethod;true;clojure.lang.ChunkBuffer#add(Object);clojure.lang.ChunkBuffer#add(Object);fe6eddf66e8e6a66c9f462b125a7740e900dde21;Sun Jul 19 07:38:18 2009 -0400
SameMethod;true;clojure.lang.ChunkBuffer#chunk();clojure.lang.ChunkBuffer#chunk();fe6eddf66e8e6a66c9f462b125a7740e900dde21;Sun Jul 19 07:38:18 2009 -0400
SameMethod;true;clojure.lang.ChunkBuffer#count();clojure.lang.ChunkBuffer#count();fe6eddf66e8e6a66c9f462b125a7740e900dde21;Sun Jul 19 07:38:18 2009 -0400
SameType;true;clojure.lang.ChunkedCons;clojure.lang.ChunkedCons;fe6eddf66e8e6a66c9f462b125a7740e900dde21;Sun Jul 19 07:38:18 2009 -0400
SameMethod;true;clojure.lang.ChunkedCons#withMeta(IPersistentMap);clojure.lang.ChunkedCons#withMeta(IPersistentMap);fe6eddf66e8e6a66c9f462b125a7740e900dde21;Sun Jul 19 07:38:18 2009 -0400
SameMethod;true;clojure.lang.ChunkedCons#first();clojure.lang.ChunkedCons#first();fe6eddf66e8e6a66c9f462b125a7740e900dde21;Sun Jul 19 07:38:18 2009 -0400
SameMethod;true;clojure.lang.ChunkedCons#next();clojure.lang.ChunkedCons#next();fe6eddf66e8e6a66c9f462b125a7740e900dde21;Sun Jul 19 07:38:18 2009 -0400
SameMethod;true;clojure.lang.ChunkedCons#more();clojure.lang.ChunkedCons#more();fe6eddf66e8e6a66c9f462b125a7740e900dde21;Sun Jul 19 07:38:18 2009 -0400
SameType;true;clojure.lang.IChunkedSeq;clojure.lang.IChunkedSeq;fe6eddf66e8e6a66c9f462b125a7740e900dde21;Sun Jul 19 07:38:18 2009 -0400
SameType;true;clojure.lang.LazilyPersistentVector;clojure.lang.LazilyPersistentVector;fe6eddf66e8e6a66c9f462b125a7740e900dde21;Sun Jul 19 07:38:18 2009 -0400
SameType;true;clojure.lang.LazilyPersistentVector.ChunkedSeq;clojure.lang.LazilyPersistentVector.ChunkedSeq;fe6eddf66e8e6a66c9f462b125a7740e900dde21;Sun Jul 19 07:38:18 2009 -0400
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;fe6eddf66e8e6a66c9f462b125a7740e900dde21;Sun Jul 19 07:38:18 2009 -0400
SameType;true;clojure.lang.PersistentVector.ChunkedSeq;clojure.lang.PersistentVector.ChunkedSeq;fe6eddf66e8e6a66c9f462b125a7740e900dde21;Sun Jul 19 07:38:18 2009 -0400
RenameClass;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.ObjMethod;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
ExtractSuperclass;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.ObjExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
ExtractMethod;true;clojure.lang.Compiler.FnExpr#compile();clojure.lang.Compiler.ObjExpr#emitMethods(ClassVisitor);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.Expr;clojure.lang.Compiler.Expr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.AssignExpr;clojure.lang.Compiler.AssignExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.VarExpr;clojure.lang.Compiler.VarExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.TheVarExpr;clojure.lang.Compiler.TheVarExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.KeywordExpr;clojure.lang.Compiler.KeywordExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.ImportExpr;clojure.lang.Compiler.ImportExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.AssignableExpr;clojure.lang.Compiler.AssignableExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.MaybePrimitiveExpr;clojure.lang.Compiler.MaybePrimitiveExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.StaticFieldExpr;clojure.lang.Compiler.StaticFieldExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.MethodExpr;clojure.lang.Compiler.MethodExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.UnresolvedVarExpr;clojure.lang.Compiler.UnresolvedVarExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.ConstantExpr;clojure.lang.Compiler.ConstantExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.NilExpr;clojure.lang.Compiler.NilExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.BooleanExpr;clojure.lang.Compiler.BooleanExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.StringExpr;clojure.lang.Compiler.StringExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.MonitorEnterExpr;clojure.lang.Compiler.MonitorEnterExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.MonitorExitExpr;clojure.lang.Compiler.MonitorExitExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.ThrowExpr;clojure.lang.Compiler.ThrowExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.NewExpr.Parser;clojure.lang.Compiler.NewExpr.Parser;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.MetaExpr;clojure.lang.Compiler.MetaExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.EmptyExpr;clojure.lang.Compiler.EmptyExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.ListExpr;clojure.lang.Compiler.ListExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.MapExpr;clojure.lang.Compiler.MapExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.SetExpr;clojure.lang.Compiler.SetExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.VectorExpr;clojure.lang.Compiler.VectorExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.Compiler.FnExpr#FnExpr(Object);clojure.lang.Compiler.FnExpr#FnExpr(Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#emitClearLocals(GeneratorAdapter);clojure.lang.Compiler.ObjMethod#emitClearLocals(GeneratorAdapter);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.LocalBindingExpr;clojure.lang.Compiler.LocalBindingExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.BodyExpr;clojure.lang.Compiler.BodyExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.LetFnExpr;clojure.lang.Compiler.LetFnExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.Compiler#registerLocal(Symbol, Symbol, Expr);clojure.lang.Compiler#registerLocal(Symbol, Symbol, Expr);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.Compiler#getAndIncLocalNum();clojure.lang.Compiler#getAndIncLocalNum();332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.Compiler#eval(Object);clojure.lang.Compiler#eval(Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.Compiler#referenceLocal(Symbol);clojure.lang.Compiler#referenceLocal(Symbol);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameType;true;clojure.lang.RestFn;clojure.lang.RestFn;332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#applyTo(ISeq);clojure.lang.RestFn#applyTo(ISeq);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke();clojure.lang.RestFn#invoke();332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object);clojure.lang.RestFn#invoke(Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object);clojure.lang.RestFn#invoke(Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);332a5a472b2f6d831580ccc6f81acc9581559893;Mon Jul 27 13:15:44 2009 -0400
PushDownMethod;false;clojure.lang.Compiler.ObjMethod#isVariadic();clojure.lang.Compiler.FnMethod#isVariadic();c5ff863c30917cbc4eb728583f494886806a064e;Wed Jul 29 21:06:44 2009 -0400
PushDownMethod;false;clojure.lang.Compiler.ObjMethod#reqParms();clojure.lang.Compiler.FnMethod#reqParms();c5ff863c30917cbc4eb728583f494886806a064e;Wed Jul 29 21:06:44 2009 -0400
PushDownMethod;false;clojure.lang.Compiler.ObjMethod#restParm();clojure.lang.Compiler.FnMethod#restParm();c5ff863c30917cbc4eb728583f494886806a064e;Wed Jul 29 21:06:44 2009 -0400
PushDownMethod;true;clojure.lang.Compiler.ObjMethod#parse(ObjExpr, ISeq);clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq);c5ff863c30917cbc4eb728583f494886806a064e;Wed Jul 29 21:06:44 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c5ff863c30917cbc4eb728583f494886806a064e;Wed Jul 29 21:06:44 2009 -0400
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;c5ff863c30917cbc4eb728583f494886806a064e;Wed Jul 29 21:06:44 2009 -0400
SameType;true;clojure.lang.Compiler.NewExpr.Parser;clojure.lang.Compiler.NewExpr.Parser;c5ff863c30917cbc4eb728583f494886806a064e;Wed Jul 29 21:06:44 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);c5ff863c30917cbc4eb728583f494886806a064e;Wed Jul 29 21:06:44 2009 -0400
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;c5ff863c30917cbc4eb728583f494886806a064e;Wed Jul 29 21:06:44 2009 -0400
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);c5ff863c30917cbc4eb728583f494886806a064e;Wed Jul 29 21:06:44 2009 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;c5ff863c30917cbc4eb728583f494886806a064e;Wed Jul 29 21:06:44 2009 -0400
SameType;true;clojure.lang.Compiler.ObjMethod;clojure.lang.Compiler.ObjMethod;c5ff863c30917cbc4eb728583f494886806a064e;Wed Jul 29 21:06:44 2009 -0400
SameMethod;true;clojure.lang.Compiler.ObjMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.ObjMethod#emit(ObjExpr, ClassVisitor);c5ff863c30917cbc4eb728583f494886806a064e;Wed Jul 29 21:06:44 2009 -0400
SameMethod;true;clojure.lang.Compiler.ObjMethod#emitClearLocals(GeneratorAdapter);clojure.lang.Compiler.ObjMethod#emitClearLocals(GeneratorAdapter);c5ff863c30917cbc4eb728583f494886806a064e;Wed Jul 29 21:06:44 2009 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;c5ff863c30917cbc4eb728583f494886806a064e;Wed Jul 29 21:06:44 2009 -0400
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;0570b48c72eb566b4520d6a0b3478fe6d6c6f6f2;Thu Jul 30 12:11:08 2009 -0400
SameMethod;true;clojure.lang.Reflector#boxArg(Class, Object);clojure.lang.Reflector#boxArg(Class, Object);0570b48c72eb566b4520d6a0b3478fe6d6c6f6f2;Thu Jul 30 12:11:08 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;48f4803d942721e15a0b1b1c1a7610eba345a688;Thu Jul 30 12:11:25 2009 -0400
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;48f4803d942721e15a0b1b1c1a7610eba345a688;Thu Jul 30 12:11:25 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);48f4803d942721e15a0b1b1c1a7610eba345a688;Thu Jul 30 12:11:25 2009 -0400
SameType;true;clojure.lang.Compiler.MethodParamExpr;clojure.lang.Compiler.MethodParamExpr;48f4803d942721e15a0b1b1c1a7610eba345a688;Thu Jul 30 12:11:25 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c7347544a9f192d98c05981ceab3afb3f237b3c2;Thu Jul 30 13:00:51 2009 -0400
SameType;true;clojure.lang.Compiler.MaybePrimitiveExpr;clojure.lang.Compiler.MaybePrimitiveExpr;c7347544a9f192d98c05981ceab3afb3f237b3c2;Thu Jul 30 13:00:51 2009 -0400
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;c7347544a9f192d98c05981ceab3afb3f237b3c2;Thu Jul 30 13:00:51 2009 -0400
SameType;true;clojure.lang.Compiler.StaticFieldExpr;clojure.lang.Compiler.StaticFieldExpr;c7347544a9f192d98c05981ceab3afb3f237b3c2;Thu Jul 30 13:00:51 2009 -0400
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;c7347544a9f192d98c05981ceab3afb3f237b3c2;Thu Jul 30 13:00:51 2009 -0400
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;c7347544a9f192d98c05981ceab3afb3f237b3c2;Thu Jul 30 13:00:51 2009 -0400
SameType;true;clojure.lang.Compiler.LocalBindingExpr;clojure.lang.Compiler.LocalBindingExpr;c7347544a9f192d98c05981ceab3afb3f237b3c2;Thu Jul 30 13:00:51 2009 -0400
SameType;true;clojure.lang.Compiler.BodyExpr;clojure.lang.Compiler.BodyExpr;c7347544a9f192d98c05981ceab3afb3f237b3c2;Thu Jul 30 13:00:51 2009 -0400
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;c7347544a9f192d98c05981ceab3afb3f237b3c2;Thu Jul 30 13:00:51 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);c7347544a9f192d98c05981ceab3afb3f237b3c2;Thu Jul 30 13:00:51 2009 -0400
SameType;true;clojure.lang.Compiler.MethodParamExpr;clojure.lang.Compiler.MethodParamExpr;c7347544a9f192d98c05981ceab3afb3f237b3c2;Thu Jul 30 13:00:51 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3c15d0eb6bdc279c801dd984a3524666d7c5cfbe;Thu Jul 30 15:46:32 2009 -0400
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;3c15d0eb6bdc279c801dd984a3524666d7c5cfbe;Thu Jul 30 15:46:32 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);3c15d0eb6bdc279c801dd984a3524666d7c5cfbe;Thu Jul 30 15:46:32 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e35c4688f30a542d3585e72cfe9bc66936ca5afe;Thu Jul 30 18:36:25 2009 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;e35c4688f30a542d3585e72cfe9bc66936ca5afe;Thu Jul 30 18:36:25 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#parse(C, ISeq);clojure.lang.Compiler.NewInstanceExpr#parse(C, ISeq);e35c4688f30a542d3585e72cfe9bc66936ca5afe;Thu Jul 30 18:36:25 2009 -0400
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;e35c4688f30a542d3585e72cfe9bc66936ca5afe;Thu Jul 30 18:36:25 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitLocal(GeneratorAdapter, LocalBinding);clojure.lang.Compiler.ObjExpr#emitLocal(GeneratorAdapter, LocalBinding);17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitUnboxedLocal(GeneratorAdapter, LocalBinding);clojure.lang.Compiler.ObjExpr#emitUnboxedLocal(GeneratorAdapter, LocalBinding);17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq);clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq);17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameType;true;clojure.lang.Compiler.ObjMethod;clojure.lang.Compiler.ObjMethod;17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameMethod;true;clojure.lang.Compiler.ObjMethod#emitClearLocals(GeneratorAdapter);clojure.lang.Compiler.ObjMethod#emitClearLocals(GeneratorAdapter);17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameType;true;clojure.lang.Compiler.LetFnExpr;clojure.lang.Compiler.LetFnExpr;17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameType;true;clojure.lang.Compiler.LetFnExpr.Parser;clojure.lang.Compiler.LetFnExpr.Parser;17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameMethod;true;clojure.lang.Compiler.LetFnExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetFnExpr.Parser#parse(C, Object);17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameMethod;true;clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Map, Map);clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Map, Map);17284e6696c888e586d7c03db46065efdf82f50f;Fri Jul 31 20:14:21 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;0bd86ba81d15584b0e12ce6d783e41bcd916b95f;Sat Aug 1 08:19:57 2009 -0400
SameMethod;true;clojure.lang.Compiler#maybePrimitiveType(Expr);clojure.lang.Compiler#maybePrimitiveType(Expr);0bd86ba81d15584b0e12ce6d783e41bcd916b95f;Sat Aug 1 08:19:57 2009 -0400
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;0bd86ba81d15584b0e12ce6d783e41bcd916b95f;Sat Aug 1 08:19:57 2009 -0400
SameMethod;true;clojure.lang.Compiler.IfExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.IfExpr#emit(C, ObjExpr, GeneratorAdapter);0bd86ba81d15584b0e12ce6d783e41bcd916b95f;Sat Aug 1 08:19:57 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;cff83ebc8e8f81f11ec7e76cc055cff693bd1b28;Sat Aug 1 17:43:24 2009 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;cff83ebc8e8f81f11ec7e76cc055cff693bd1b28;Sat Aug 1 17:43:24 2009 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);cff83ebc8e8f81f11ec7e76cc055cff693bd1b28;Sat Aug 1 17:43:24 2009 -0400
SameType;true;clojure.lang.Compiler.LocalBindingExpr;clojure.lang.Compiler.LocalBindingExpr;cff83ebc8e8f81f11ec7e76cc055cff693bd1b28;Sat Aug 1 17:43:24 2009 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;cff83ebc8e8f81f11ec7e76cc055cff693bd1b28;Sat Aug 1 17:43:24 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#parse(C, ISeq);clojure.lang.Compiler.NewInstanceExpr#parse(C, ISeq);cff83ebc8e8f81f11ec7e76cc055cff693bd1b28;Sat Aug 1 17:43:24 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3d69750b26d41d72920264ce8d338c20be7383a9;Thu Aug 6 13:10:33 2009 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;3d69750b26d41d72920264ce8d338c20be7383a9;Thu Aug 6 13:10:33 2009 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);3d69750b26d41d72920264ce8d338c20be7383a9;Thu Aug 6 13:10:33 2009 -0400
ExtractInterface;true;clojure.lang.Associative;clojure.lang.ILookup;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
RenameMethod;true;clojure.lang.PersistentVector#nodeFor(int);clojure.lang.PersistentVector#arrayFor(int);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
RenameMethod;true;clojure.lang.PersistentHashMap.HashCollisionNode#find(int, Object);clojure.lang.PersistentHashMap.HashCollisionNode#without(int, int, Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
MoveMethod;false;clojure.lang.PersistentHashMap.BitmapIndexedNode#bitpos(int, int);clojure.lang.PersistentHashMap#bitpos(int, int);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
MoveMethod;false;clojure.lang.PersistentHashMap.BitmapIndexedNode.Seq#first();clojure.lang.PersistentHashMap.ArrayNode.Seq#first();c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
MoveMethod;false;clojure.lang.PersistentHashMap.FullNode#bitpos(int, int);clojure.lang.PersistentHashMap#bitpos(int, int);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
MoveMethod;false;clojure.lang.PersistentHashMap.FullNode.Seq#first();clojure.lang.PersistentHashMap.ArrayNode.Seq#first();c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
MoveMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode.Seq#withMeta(IPersistentMap);clojure.lang.PersistentHashMap.ArrayNode.Seq#withMeta(IPersistentMap);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
MoveMethod;true;clojure.lang.PersistentHashMap.FullNode.Seq#withMeta(IPersistentMap);clojure.lang.PersistentHashMap.ArrayNode.Seq#withMeta(IPersistentMap);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
MoveMethod;true;clojure.lang.PersistentHashMap.FullNode#nodeSeq();clojure.lang.PersistentHashMap.ArrayNode#nodeSeq();c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
MoveMethod;true;clojure.lang.LazilyPersistentVector#count();clojure.lang.ArraySeq.ArraySeq_boolean#count();c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
MoveMethod;true;clojure.lang.LazilyPersistentVector.ChunkedSeq#count();clojure.lang.ArraySeq.ArraySeq_boolean#count();c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
MoveMethod;true;clojure.lang.LazilyPersistentVector.ChunkedSeq#first();clojure.lang.ArraySeq.ArraySeq_boolean#first();c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
ExtractMethod;true;clojure.lang.LockingTransaction#lock(Ref);clojure.lang.LockingTransaction#blockAndBail(Info);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
ExtractMethod;true;clojure.lang.LockingTransaction#lock(Ref);clojure.lang.LockingTransaction#releaseIfEnsured(Ref);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
ExtractMethod;true;clojure.lang.LockingTransaction#run(Callable);clojure.lang.LockingTransaction#tryWriteLock(Ref);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
ExtractMethod;true;clojure.lang.LockingTransaction#lock(Ref);clojure.lang.LockingTransaction#tryWriteLock(Ref);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
ExtractMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#assoc(int, int, Object, Object, Box);clojure.lang.PersistentHashMap#cloneAndSet(Object[], int, Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
ExtractMethod;true;clojure.lang.PersistentHashMap.HashCollisionNode#assoc(int, int, Object, Object, Box);clojure.lang.PersistentHashMap#cloneAndSet(Object[], int, Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
ExtractMethod;true;clojure.lang.PersistentHashMap.FullNode#nodeSeq();clojure.lang.PersistentHashMap.ArrayNode.Seq#create(INode[]);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
ExtractMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#nodeSeq();clojure.lang.PersistentHashMap.NodeSeq#create(Object[]);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
InlineMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#create(int, INode[], int);clojure.lang.PersistentHashMap.BitmapIndexedNode#assoc(int, int, Object, Object, Box);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.ArraySeq#createFromObject(Object);clojure.lang.ArraySeq#createFromObject(Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_int;clojure.lang.ArraySeq.ArraySeq_int;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_float;clojure.lang.ArraySeq.ArraySeq_float;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_double;clojure.lang.ArraySeq.ArraySeq_double;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_long;clojure.lang.ArraySeq.ArraySeq_long;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.Associative;clojure.lang.Associative;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.Compiler.HostExpr#tagToClass(Object);clojure.lang.Compiler.HostExpr#tagToClass(Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.LazilyPersistentVector;clojure.lang.LazilyPersistentVector;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.LazilyPersistentVector#createOwning(Object[]);clojure.lang.LazilyPersistentVector#createOwning(Object[]);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.LazilyPersistentVector#create(Collection);clojure.lang.LazilyPersistentVector#create(Collection);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.LockingTransaction.Info;clojure.lang.LockingTransaction.Info;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.LockingTransaction.Info#Info(int, long);clojure.lang.LockingTransaction.Info#Info(int, long);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.LockingTransaction#stop(int);clojure.lang.LockingTransaction#stop(int);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.LockingTransaction#lock(Ref);clojure.lang.LockingTransaction#lock(Ref);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.LockingTransaction#barge(Info);clojure.lang.LockingTransaction#barge(Info);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.LockingTransaction#run(Callable);clojure.lang.LockingTransaction#run(Callable);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.Numbers#float_array(Object);clojure.lang.Numbers#float_array(Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.Numbers#double_array(Object);clojure.lang.Numbers#double_array(Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.Numbers#int_array(Object);clojure.lang.Numbers#int_array(Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.Numbers#long_array(Object);clojure.lang.Numbers#long_array(Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentArrayMap#create(Map);clojure.lang.PersistentArrayMap#create(Map);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentHashMap#create(Map);clojure.lang.PersistentHashMap#create(Map);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentHashMap#create(Object[]);clojure.lang.PersistentHashMap#create(Object[]);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentHashMap#create(List);clojure.lang.PersistentHashMap#create(List);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentHashMap#create(ISeq);clojure.lang.PersistentHashMap#create(ISeq);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentHashMap#create(IPersistentMap, Object[]);clojure.lang.PersistentHashMap#create(IPersistentMap, Object[]);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentHashMap#containsKey(Object);clojure.lang.PersistentHashMap#containsKey(Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentHashMap#entryAt(Object);clojure.lang.PersistentHashMap#entryAt(Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentHashMap#assoc(Object, Object);clojure.lang.PersistentHashMap#assoc(Object, Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentHashMap#valAt(Object, Object);clojure.lang.PersistentHashMap#valAt(Object, Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentHashMap#without(Object);clojure.lang.PersistentHashMap#without(Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentHashMap#seq();clojure.lang.PersistentHashMap#seq();c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentHashMap#withMeta(IPersistentMap);clojure.lang.PersistentHashMap#withMeta(IPersistentMap);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.PersistentHashMap.INode;clojure.lang.PersistentHashMap.INode;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode;clojure.lang.PersistentHashMap.BitmapIndexedNode;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#assoc(int, int, Object, Object, Box);clojure.lang.PersistentHashMap.BitmapIndexedNode#assoc(int, int, Object, Object, Box);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#nodeSeq();clojure.lang.PersistentHashMap.BitmapIndexedNode#nodeSeq();c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.PersistentHashMap.HashCollisionNode;clojure.lang.PersistentHashMap.HashCollisionNode;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentHashMap.HashCollisionNode#assoc(int, int, Object, Object, Box);clojure.lang.PersistentHashMap.HashCollisionNode#assoc(int, int, Object, Object, Box);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentHashMap.HashCollisionNode#nodeSeq();clojure.lang.PersistentHashMap.HashCollisionNode#nodeSeq();c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.PersistentHashSet;clojure.lang.PersistentHashSet;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentVector#create(ISeq);clojure.lang.PersistentVector#create(ISeq);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentVector#create(List);clojure.lang.PersistentVector#create(List);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentVector#create(Object[]);clojure.lang.PersistentVector#create(Object[]);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentVector#tailoff();clojure.lang.PersistentVector#tailoff();c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentVector#nth(int);clojure.lang.PersistentVector#nth(int);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentVector#cons(Object);clojure.lang.PersistentVector#cons(Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.PersistentVector.ChunkedSeq;clojure.lang.PersistentVector.ChunkedSeq;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentVector.ChunkedSeq#ChunkedSeq(PersistentVector, int, int);clojure.lang.PersistentVector.ChunkedSeq#ChunkedSeq(PersistentVector, int, int);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.PersistentVector#pop();clojure.lang.PersistentVector#pop();c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.RT#seqFrom(Object);clojure.lang.RT#seqFrom(Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.RT#get(Object, Object);clojure.lang.RT#get(Object, Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.RT#get(Object, Object, Object);clojure.lang.RT#get(Object, Object, Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.RT#nth(Object, int, Object);clojure.lang.RT#nth(Object, int, Object);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.Ref;clojure.lang.Ref;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.Ref#touch();clojure.lang.Ref#touch();c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.StringSeq;clojure.lang.StringSeq;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
SameMethod;true;clojure.lang.Symbol#intern(String);clojure.lang.Symbol#intern(String);c0218cfc80ba9ae4c1808e8f5644e14c464a5268;Thu Oct 22 18:33:32 2009 -0400
ExtractMethod;true;clojure.lang.Compiler#eval(Object);clojure.lang.Compiler#eval(Object, boolean);893a0e5601b207bfe852421e394322c64fdcad48;Sat Oct 24 10:04:37 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;893a0e5601b207bfe852421e394322c64fdcad48;Sat Oct 24 10:04:37 2009 -0400
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;893a0e5601b207bfe852421e394322c64fdcad48;Sat Oct 24 10:04:37 2009 -0400
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);893a0e5601b207bfe852421e394322c64fdcad48;Sat Oct 24 10:04:37 2009 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;893a0e5601b207bfe852421e394322c64fdcad48;Sat Oct 24 10:04:37 2009 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emit(C, ObjExpr, GeneratorAdapter);893a0e5601b207bfe852421e394322c64fdcad48;Sat Oct 24 10:04:37 2009 -0400
SameMethod;true;clojure.lang.Compiler#eval(Object);clojure.lang.Compiler#eval(Object);893a0e5601b207bfe852421e394322c64fdcad48;Sat Oct 24 10:04:37 2009 -0400
SameMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.Compiler#load(Reader, String, String);893a0e5601b207bfe852421e394322c64fdcad48;Sat Oct 24 10:04:37 2009 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;893a0e5601b207bfe852421e394322c64fdcad48;Sat Oct 24 10:04:37 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#parse(C, ISeq);clojure.lang.Compiler.NewInstanceExpr#parse(C, ISeq);893a0e5601b207bfe852421e394322c64fdcad48;Sat Oct 24 10:04:37 2009 -0400
ExtractMethod;true;clojure.lang.Compiler.NewInstanceExpr#parse(C, ISeq);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, ISeq);712fd91105ae257ec09005e793ede1eed39a167c;Sat Oct 24 17:13:54 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;712fd91105ae257ec09005e793ede1eed39a167c;Sat Oct 24 17:13:54 2009 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;712fd91105ae257ec09005e793ede1eed39a167c;Sat Oct 24 17:13:54 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#parse(C, ISeq);clojure.lang.Compiler.NewInstanceExpr#parse(C, ISeq);712fd91105ae257ec09005e793ede1eed39a167c;Sat Oct 24 17:13:54 2009 -0400
MoveMethod;false;clojure.lang.Compiler.NewInstanceMethod#primClass(Symbol);clojure.lang.Compiler#primClass(Symbol);2ebf995173c5c6ee89cc753f059d4ba044e6d073;Sat Oct 24 20:45:07 2009 -0400
MoveMethod;false;clojure.lang.Compiler.NewInstanceMethod#tagClass(Object);clojure.lang.Compiler#tagClass(Object);2ebf995173c5c6ee89cc753f059d4ba044e6d073;Sat Oct 24 20:45:07 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2ebf995173c5c6ee89cc753f059d4ba044e6d073;Sat Oct 24 20:45:07 2009 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;2ebf995173c5c6ee89cc753f059d4ba044e6d073;Sat Oct 24 20:45:07 2009 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);2ebf995173c5c6ee89cc753f059d4ba044e6d073;Sat Oct 24 20:45:07 2009 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#eval();clojure.lang.Compiler.ObjExpr#eval();2ebf995173c5c6ee89cc753f059d4ba044e6d073;Sat Oct 24 20:45:07 2009 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emit(C, ObjExpr, GeneratorAdapter);2ebf995173c5c6ee89cc753f059d4ba044e6d073;Sat Oct 24 20:45:07 2009 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;2ebf995173c5c6ee89cc753f059d4ba044e6d073;Sat Oct 24 20:45:07 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, ISeq);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, ISeq);2ebf995173c5c6ee89cc753f059d4ba044e6d073;Sat Oct 24 20:45:07 2009 -0400
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;2ebf995173c5c6ee89cc753f059d4ba044e6d073;Sat Oct 24 20:45:07 2009 -0400
ExtractMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, ISeq);clojure.lang.Compiler.NewInstanceExpr#interfaceNames(IPersistentVector);6362e0f2522c4f7b2b2e626016b291d4832bb58a;Mon Oct 26 10:10:06 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6362e0f2522c4f7b2b2e626016b291d4832bb58a;Mon Oct 26 10:10:06 2009 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;6362e0f2522c4f7b2b2e626016b291d4832bb58a;Mon Oct 26 10:10:06 2009 -0400
SameMethod;true;clojure.lang.Compiler.HostExpr#maybeClass(Object, boolean);clojure.lang.Compiler.HostExpr#maybeClass(Object, boolean);6362e0f2522c4f7b2b2e626016b291d4832bb58a;Mon Oct 26 10:10:06 2009 -0400
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;6362e0f2522c4f7b2b2e626016b291d4832bb58a;Mon Oct 26 10:10:06 2009 -0400
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceFieldExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);6362e0f2522c4f7b2b2e626016b291d4832bb58a;Mon Oct 26 10:10:06 2009 -0400
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceFieldExpr#emit(C, ObjExpr, GeneratorAdapter);6362e0f2522c4f7b2b2e626016b291d4832bb58a;Mon Oct 26 10:10:06 2009 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;6362e0f2522c4f7b2b2e626016b291d4832bb58a;Mon Oct 26 10:10:06 2009 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);6362e0f2522c4f7b2b2e626016b291d4832bb58a;Mon Oct 26 10:10:06 2009 -0400
SameMethod;true;clojure.lang.Compiler#resolveIn(Namespace, Symbol, boolean);clojure.lang.Compiler#resolveIn(Namespace, Symbol, boolean);6362e0f2522c4f7b2b2e626016b291d4832bb58a;Mon Oct 26 10:10:06 2009 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;6362e0f2522c4f7b2b2e626016b291d4832bb58a;Mon Oct 26 10:10:06 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, ISeq);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, ISeq);6362e0f2522c4f7b2b2e626016b291d4832bb58a;Mon Oct 26 10:10:06 2009 -0400
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;6362e0f2522c4f7b2b2e626016b291d4832bb58a;Mon Oct 26 10:10:06 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6fae6b41cc61657340b075b49b85e05753b8b321;Mon Oct 26 10:41:51 2009 -0400
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;6fae6b41cc61657340b075b49b85e05753b8b321;Mon Oct 26 10:41:51 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.NewExpr#emit(C, ObjExpr, GeneratorAdapter);6fae6b41cc61657340b075b49b85e05753b8b321;Mon Oct 26 10:41:51 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;91c9d60398d2187b433b2b296ba25fa312344e7e;Mon Oct 26 16:24:36 2009 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;91c9d60398d2187b433b2b296ba25fa312344e7e;Mon Oct 26 16:24:36 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, ISeq);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, ISeq);91c9d60398d2187b433b2b296ba25fa312344e7e;Mon Oct 26 16:24:36 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#emitMethods(ClassVisitor);clojure.lang.Compiler.NewInstanceExpr#emitMethods(ClassVisitor);91c9d60398d2187b433b2b296ba25fa312344e7e;Mon Oct 26 16:24:36 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#msig(java.lang.reflect.Method);clojure.lang.Compiler.NewInstanceExpr#msig(java.lang.reflect.Method);91c9d60398d2187b433b2b296ba25fa312344e7e;Mon Oct 26 16:24:36 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#gatherMethods(Class, ISeq);clojure.lang.Compiler.NewInstanceExpr#gatherMethods(Class, ISeq);91c9d60398d2187b433b2b296ba25fa312344e7e;Mon Oct 26 16:24:36 2009 -0400
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;91c9d60398d2187b433b2b296ba25fa312344e7e;Mon Oct 26 16:24:36 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;5f090a0925f3dcbd3fa8b7104cd59b6d4c087413;Wed Oct 28 14:54:39 2009 -0400
SameMethod;true;clojure.lang.Compiler#eval(Object, boolean);clojure.lang.Compiler#eval(Object, boolean);5f090a0925f3dcbd3fa8b7104cd59b6d4c087413;Wed Oct 28 14:54:39 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;5ebed57e1d6d7dc8230fa51e6cd34e22dc1f3a42;Thu Oct 29 18:13:46 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;aa3f0e61a4f8f2837cd5147cfa72e61418d7b0d8;Thu Oct 29 21:46:44 2009 -0400
SameType;true;clojure.lang.Compiler.CaseExpr;clojure.lang.Compiler.CaseExpr;aa3f0e61a4f8f2837cd5147cfa72e61418d7b0d8;Thu Oct 29 21:46:44 2009 -0400
SameMethod;true;clojure.lang.Compiler.CaseExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.CaseExpr#emit(C, ObjExpr, GeneratorAdapter);aa3f0e61a4f8f2837cd5147cfa72e61418d7b0d8;Thu Oct 29 21:46:44 2009 -0400
SameType;true;clojure.lang.Compiler.CaseExpr.Parser;clojure.lang.Compiler.CaseExpr.Parser;aa3f0e61a4f8f2837cd5147cfa72e61418d7b0d8;Thu Oct 29 21:46:44 2009 -0400
SameMethod;true;clojure.lang.Compiler.CaseExpr.Parser#parse(C, Object);clojure.lang.Compiler.CaseExpr.Parser#parse(C, Object);aa3f0e61a4f8f2837cd5147cfa72e61418d7b0d8;Thu Oct 29 21:46:44 2009 -0400
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;aa3f0e61a4f8f2837cd5147cfa72e61418d7b0d8;Thu Oct 29 21:46:44 2009 -0400
SameMethod;true;clojure.lang.Keyword#Keyword(Symbol);clojure.lang.Keyword#Keyword(Symbol);aa3f0e61a4f8f2837cd5147cfa72e61418d7b0d8;Thu Oct 29 21:46:44 2009 -0400
SameMethod;true;clojure.lang.Keyword#hashCode();clojure.lang.Keyword#hashCode();aa3f0e61a4f8f2837cd5147cfa72e61418d7b0d8;Thu Oct 29 21:46:44 2009 -0400
SameMethod;true;clojure.lang.Keyword#invoke(Object);clojure.lang.Keyword#invoke(Object);aa3f0e61a4f8f2837cd5147cfa72e61418d7b0d8;Thu Oct 29 21:46:44 2009 -0400
SameMethod;true;clojure.lang.Keyword#invoke(Object, Object);clojure.lang.Keyword#invoke(Object, Object);aa3f0e61a4f8f2837cd5147cfa72e61418d7b0d8;Thu Oct 29 21:46:44 2009 -0400
MoveMethod;true;clojure.lang.Compiler.NewInstanceExpr#parse(C, ISeq);clojure.lang.Compiler.NewInstanceExpr.ReifyParser#parse(C, Object);1c8e76b1a0e6616c780902a317a7ab9a8423288b;Fri Oct 30 12:19:39 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;1c8e76b1a0e6616c780902a317a7ab9a8423288b;Fri Oct 30 12:19:39 2009 -0400
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;1c8e76b1a0e6616c780902a317a7ab9a8423288b;Fri Oct 30 12:19:39 2009 -0400
SameType;true;clojure.lang.Compiler.NewExpr.Parser;clojure.lang.Compiler.NewExpr.Parser;1c8e76b1a0e6616c780902a317a7ab9a8423288b;Fri Oct 30 12:19:39 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);1c8e76b1a0e6616c780902a317a7ab9a8423288b;Fri Oct 30 12:19:39 2009 -0400
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);1c8e76b1a0e6616c780902a317a7ab9a8423288b;Fri Oct 30 12:19:39 2009 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;1c8e76b1a0e6616c780902a317a7ab9a8423288b;Fri Oct 30 12:19:39 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, ISeq);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, ISeq);1c8e76b1a0e6616c780902a317a7ab9a8423288b;Fri Oct 30 12:19:39 2009 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;9c3e97a85c042d2c3f276f0c1e0d270db35553aa;Fri Oct 30 13:23:13 2009 -0400
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;9c3e97a85c042d2c3f276f0c1e0d270db35553aa;Fri Oct 30 13:23:13 2009 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);9c3e97a85c042d2c3f276f0c1e0d270db35553aa;Fri Oct 30 13:23:13 2009 -0400
SameType;true;clojure.lang.PersistentStructMap;clojure.lang.PersistentStructMap;f1133b97df5384f3336ba79fdc6d0acd2f4f3eed;Mon Nov 2 10:40:24 2009 -0500
SameMethod;true;clojure.lang.PersistentStructMap#createSlotMap(ISeq);clojure.lang.PersistentStructMap#createSlotMap(ISeq);f1133b97df5384f3336ba79fdc6d0acd2f4f3eed;Mon Nov 2 10:40:24 2009 -0500
SameMethod;true;clojure.lang.PersistentStructMap#valAt(Object);clojure.lang.PersistentStructMap#valAt(Object);f1133b97df5384f3336ba79fdc6d0acd2f4f3eed;Mon Nov 2 10:40:24 2009 -0500
SameMethod;true;clojure.lang.PersistentStructMap#valAt(Object, Object);clojure.lang.PersistentStructMap#valAt(Object, Object);f1133b97df5384f3336ba79fdc6d0acd2f4f3eed;Mon Nov 2 10:40:24 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;bb51320ebeac95ca137148e16da9b09fc29f2b66;Mon Nov 2 14:06:18 2009 -0500
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;bb51320ebeac95ca137148e16da9b09fc29f2b66;Mon Nov 2 14:06:18 2009 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);bb51320ebeac95ca137148e16da9b09fc29f2b66;Mon Nov 2 14:06:18 2009 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;bb51320ebeac95ca137148e16da9b09fc29f2b66;Mon Nov 2 14:06:18 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);bb51320ebeac95ca137148e16da9b09fc29f2b66;Mon Nov 2 14:06:18 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);bb51320ebeac95ca137148e16da9b09fc29f2b66;Mon Nov 2 14:06:18 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#constantType(int);clojure.lang.Compiler.ObjExpr#constantType(int);bb51320ebeac95ca137148e16da9b09fc29f2b66;Mon Nov 2 14:06:18 2009 -0500
SameType;true;clojure.lang.Compiler.CaseExpr;clojure.lang.Compiler.CaseExpr;bb51320ebeac95ca137148e16da9b09fc29f2b66;Mon Nov 2 14:06:18 2009 -0500
SameMethod;true;clojure.lang.Compiler.CaseExpr#CaseExpr(int, Expr, int, int, int, int, Expr, HashMap, HashMap, boolean);clojure.lang.Compiler.CaseExpr#CaseExpr(int, Expr, int, int, int, int, Expr, HashMap, HashMap, boolean);bb51320ebeac95ca137148e16da9b09fc29f2b66;Mon Nov 2 14:06:18 2009 -0500
SameMethod;true;clojure.lang.Compiler.CaseExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.CaseExpr#emit(C, ObjExpr, GeneratorAdapter);bb51320ebeac95ca137148e16da9b09fc29f2b66;Mon Nov 2 14:06:18 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;679c79508713acddca1e18d1e28dafae885e5096;Mon Nov 2 14:13:06 2009 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;679c79508713acddca1e18d1e28dafae885e5096;Mon Nov 2 14:13:06 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);679c79508713acddca1e18d1e28dafae885e5096;Mon Nov 2 14:13:06 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#constantType(int);clojure.lang.Compiler.ObjExpr#constantType(int);679c79508713acddca1e18d1e28dafae885e5096;Mon Nov 2 14:13:06 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;a88ce1882218c83e410d430fab63fbc9331aaba0;Tue Nov 3 11:16:25 2009 -0500
SameType;true;clojure.lang.Compiler.KeywordInvokeExpr;clojure.lang.Compiler.KeywordInvokeExpr;a88ce1882218c83e410d430fab63fbc9331aaba0;Tue Nov 3 11:16:25 2009 -0500
SameMethod;true;clojure.lang.Compiler.KeywordInvokeExpr#KeywordInvokeExpr(String, int, Symbol, KeywordExpr, Expr);clojure.lang.Compiler.KeywordInvokeExpr#KeywordInvokeExpr(String, int, Symbol, KeywordExpr, Expr);a88ce1882218c83e410d430fab63fbc9331aaba0;Tue Nov 3 11:16:25 2009 -0500
SameMethod;true;clojure.lang.Compiler.KeywordInvokeExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.KeywordInvokeExpr#emit(C, ObjExpr, GeneratorAdapter);a88ce1882218c83e410d430fab63fbc9331aaba0;Tue Nov 3 11:16:25 2009 -0500
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;a88ce1882218c83e410d430fab63fbc9331aaba0;Tue Nov 3 11:16:25 2009 -0500
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);a88ce1882218c83e410d430fab63fbc9331aaba0;Tue Nov 3 11:16:25 2009 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;a88ce1882218c83e410d430fab63fbc9331aaba0;Tue Nov 3 11:16:25 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);a88ce1882218c83e410d430fab63fbc9331aaba0;Tue Nov 3 11:16:25 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;a88ce1882218c83e410d430fab63fbc9331aaba0;Tue Nov 3 11:16:25 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, ISeq);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, ISeq);a88ce1882218c83e410d430fab63fbc9331aaba0;Tue Nov 3 11:16:25 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;d8ae62ddb57de78e1f35b86dc179a1faf1717055;Tue Nov 3 17:06:36 2009 -0500
SameType;true;clojure.lang.Compiler.KeywordInvokeExpr;clojure.lang.Compiler.KeywordInvokeExpr;d8ae62ddb57de78e1f35b86dc179a1faf1717055;Tue Nov 3 17:06:36 2009 -0500
SameMethod;true;clojure.lang.Compiler.KeywordInvokeExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.KeywordInvokeExpr#emit(C, ObjExpr, GeneratorAdapter);d8ae62ddb57de78e1f35b86dc179a1faf1717055;Tue Nov 3 17:06:36 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;d8ae62ddb57de78e1f35b86dc179a1faf1717055;Tue Nov 3 17:06:36 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#compileLookupThunk(NewInstanceExpr, Symbol);clojure.lang.Compiler.NewInstanceExpr#compileLookupThunk(NewInstanceExpr, Symbol);d8ae62ddb57de78e1f35b86dc179a1faf1717055;Tue Nov 3 17:06:36 2009 -0500
SameType;true;clojure.lang.ILookupThunk;clojure.lang.ILookupThunk;d8ae62ddb57de78e1f35b86dc179a1faf1717055;Tue Nov 3 17:06:36 2009 -0500
SameType;true;clojure.lang.KeywordLookupSite;clojure.lang.KeywordLookupSite;d8ae62ddb57de78e1f35b86dc179a1faf1717055;Tue Nov 3 17:06:36 2009 -0500
SameMethod;true;clojure.lang.KeywordLookupSite#fault(Object, ILookupHost);clojure.lang.KeywordLookupSite#fault(Object, ILookupHost);d8ae62ddb57de78e1f35b86dc179a1faf1717055;Tue Nov 3 17:06:36 2009 -0500
SameMethod;true;clojure.lang.KeywordLookupSite#install(Object, ILookupHost);clojure.lang.KeywordLookupSite#install(Object, ILookupHost);d8ae62ddb57de78e1f35b86dc179a1faf1717055;Tue Nov 3 17:06:36 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;34fce89fc2365c128c1e492f559f9acb9f3741b2;Tue Nov 3 18:23:39 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;34fce89fc2365c128c1e492f559f9acb9f3741b2;Tue Nov 3 18:23:39 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#compileLookupThunk(NewInstanceExpr, Symbol);clojure.lang.Compiler.NewInstanceExpr#compileLookupThunk(NewInstanceExpr, Symbol);34fce89fc2365c128c1e492f559f9acb9f3741b2;Tue Nov 3 18:23:39 2009 -0500
SameType;true;clojure.lang.PersistentStructMap;clojure.lang.PersistentStructMap;41df729352e53631faf93d657c542cb4a37e6e2e;Tue Nov 3 19:48:13 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;406fc1c00f8138d47445047c9e17a8af12fefcff;Wed Nov 4 11:11:39 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;406fc1c00f8138d47445047c9e17a8af12fefcff;Wed Nov 4 11:11:39 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);406fc1c00f8138d47445047c9e17a8af12fefcff;Wed Nov 4 11:11:39 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);406fc1c00f8138d47445047c9e17a8af12fefcff;Wed Nov 4 11:11:39 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7a10c9077b5d037e782b2bc63c821f42337e9e04;Wed Nov 4 12:31:34 2009 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;7a10c9077b5d037e782b2bc63c821f42337e9e04;Wed Nov 4 12:31:34 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);7a10c9077b5d037e782b2bc63c821f42337e9e04;Wed Nov 4 12:31:34 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;7a10c9077b5d037e782b2bc63c821f42337e9e04;Wed Nov 4 12:31:34 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, ISeq);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, ISeq);7a10c9077b5d037e782b2bc63c821f42337e9e04;Wed Nov 4 12:31:34 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#compileStub(String, NewInstanceExpr, String[]);clojure.lang.Compiler.NewInstanceExpr#compileStub(String, NewInstanceExpr, String[]);7a10c9077b5d037e782b2bc63c821f42337e9e04;Wed Nov 4 12:31:34 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;73d51aef645c6103eb641dbc19a50dd868df64f1;Thu Nov 5 11:27:13 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;73d51aef645c6103eb641dbc19a50dd868df64f1;Thu Nov 5 11:27:13 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#compileLookupThunk(NewInstanceExpr, Symbol);clojure.lang.Compiler.NewInstanceExpr#compileLookupThunk(NewInstanceExpr, Symbol);73d51aef645c6103eb641dbc19a50dd868df64f1;Thu Nov 5 11:27:13 2009 -0500
ExtractMethod;true;clojure.lang.KeywordLookupSite#fault(Object, ILookupHost);clojure.lang.KeywordLookupSite#ilookupThunk(Class);2e7e41c9788b9cc02fe070d8e5319929d996ee32;Thu Nov 5 12:07:43 2009 -0500
SameType;true;clojure.lang.KeywordLookupSite;clojure.lang.KeywordLookupSite;2e7e41c9788b9cc02fe070d8e5319929d996ee32;Thu Nov 5 12:07:43 2009 -0500
SameMethod;true;clojure.lang.KeywordLookupSite#fault(Object, ILookupHost);clojure.lang.KeywordLookupSite#fault(Object, ILookupHost);2e7e41c9788b9cc02fe070d8e5319929d996ee32;Thu Nov 5 12:07:43 2009 -0500
SameMethod;true;clojure.lang.KeywordLookupSite#install(Object, ILookupHost);clojure.lang.KeywordLookupSite#install(Object, ILookupHost);2e7e41c9788b9cc02fe070d8e5319929d996ee32;Thu Nov 5 12:07:43 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c58a6cfaf5788a104f4a1dcb488f731ad94a2da0;Wed Nov 11 21:57:47 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;c58a6cfaf5788a104f4a1dcb488f731ad94a2da0;Wed Nov 11 21:57:47 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#compileLookupThunk(NewInstanceExpr, Symbol);clojure.lang.Compiler.NewInstanceExpr#compileLookupThunk(NewInstanceExpr, Symbol);c58a6cfaf5788a104f4a1dcb488f731ad94a2da0;Wed Nov 11 21:57:47 2009 -0500
RenameClass;true;clojure.lang.Compiler.NewInstanceExpr.DefclassParser;clojure.lang.Compiler.NewInstanceExpr.DeftypeParser;292836f87260fdb994d25a98ef65b4edebf9d09e;Thu Nov 12 12:52:37 2009 -0500
RenameMethod;false;clojure.lang.Compiler.ObjExpr#isDefclass();clojure.lang.Compiler.ObjExpr#isDeftype();292836f87260fdb994d25a98ef65b4edebf9d09e;Thu Nov 12 12:52:37 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;292836f87260fdb994d25a98ef65b4edebf9d09e;Thu Nov 12 12:52:37 2009 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;292836f87260fdb994d25a98ef65b4edebf9d09e;Thu Nov 12 12:52:37 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);292836f87260fdb994d25a98ef65b4edebf9d09e;Thu Nov 12 12:52:37 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#eval();clojure.lang.Compiler.ObjExpr#eval();292836f87260fdb994d25a98ef65b4edebf9d09e;Thu Nov 12 12:52:37 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emit(C, ObjExpr, GeneratorAdapter);292836f87260fdb994d25a98ef65b4edebf9d09e;Thu Nov 12 12:52:37 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;292836f87260fdb994d25a98ef65b4edebf9d09e;Thu Nov 12 12:52:37 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr.DefclassParser#parse(C, Object);clojure.lang.Compiler.NewInstanceExpr.DeftypeParser#parse(C, Object);292836f87260fdb994d25a98ef65b4edebf9d09e;Thu Nov 12 12:52:37 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceExpr.ReifyParser;clojure.lang.Compiler.NewInstanceExpr.ReifyParser;292836f87260fdb994d25a98ef65b4edebf9d09e;Thu Nov 12 12:52:37 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr.ReifyParser#parse(C, Object);clojure.lang.Compiler.NewInstanceExpr.ReifyParser#parse(C, Object);292836f87260fdb994d25a98ef65b4edebf9d09e;Thu Nov 12 12:52:37 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;efc54c000445f8b3d8d2e75d560fa02397951598;Thu Nov 12 17:19:19 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;efc54c000445f8b3d8d2e75d560fa02397951598;Thu Nov 12 17:19:19 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, String, Symbol, ISeq);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, String, Symbol, ISeq);efc54c000445f8b3d8d2e75d560fa02397951598;Thu Nov 12 17:19:19 2009 -0500
SameType;true;clojure.lang.AFunction;clojure.lang.AFunction;8c16415f8206f023eb932a99428a61b91fc10200;Sat Nov 14 13:54:14 2009 -0500
ExtractMethod;true;clojure.lang.Compiler.InvokeExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emitArgsAndCall(int, C, ObjExpr, GeneratorAdapter);a64704a9f163ed7271e527587c4d27073c25fc48;Sat Nov 14 17:38:51 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;a64704a9f163ed7271e527587c4d27073c25fc48;Sat Nov 14 17:38:51 2009 -0500
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;a64704a9f163ed7271e527587c4d27073c25fc48;Sat Nov 14 17:38:51 2009 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);a64704a9f163ed7271e527587c4d27073c25fc48;Sat Nov 14 17:38:51 2009 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emit(C, ObjExpr, GeneratorAdapter);a64704a9f163ed7271e527587c4d27073c25fc48;Sat Nov 14 17:38:51 2009 -0500
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;a64704a9f163ed7271e527587c4d27073c25fc48;Sat Nov 14 17:38:51 2009 -0500
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);a64704a9f163ed7271e527587c4d27073c25fc48;Sat Nov 14 17:38:51 2009 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;a64704a9f163ed7271e527587c4d27073c25fc48;Sat Nov 14 17:38:51 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);a64704a9f163ed7271e527587c4d27073c25fc48;Sat Nov 14 17:38:51 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;a64704a9f163ed7271e527587c4d27073c25fc48;Sat Nov 14 17:38:51 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, String, Symbol, ISeq);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, String, Symbol, ISeq);a64704a9f163ed7271e527587c4d27073c25fc48;Sat Nov 14 17:38:51 2009 -0500
SameType;true;clojure.lang.Var;clojure.lang.Var;a64704a9f163ed7271e527587c4d27073c25fc48;Sat Nov 14 17:38:51 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;ecd7161bf4397f04385fdaf9e5c6168580676ffa;Sun Nov 15 12:37:32 2009 -0500
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;ecd7161bf4397f04385fdaf9e5c6168580676ffa;Sun Nov 15 12:37:32 2009 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emitProto(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emitProto(C, ObjExpr, GeneratorAdapter);ecd7161bf4397f04385fdaf9e5c6168580676ffa;Sun Nov 15 12:37:32 2009 -0500
SameType;true;clojure.lang.MethodImplCache;clojure.lang.MethodImplCache;ecd7161bf4397f04385fdaf9e5c6168580676ffa;Sun Nov 15 12:37:32 2009 -0500
SameMethod;true;clojure.lang.MethodImplCache#MethodImplCache(IPersistentMap, Keyword, int, int, Object[]);clojure.lang.MethodImplCache#MethodImplCache(IPersistentMap, Keyword, int, int, Object[]);ecd7161bf4397f04385fdaf9e5c6168580676ffa;Sun Nov 15 12:37:32 2009 -0500
SameMethod;true;clojure.lang.MethodImplCache#fnFor(Class);clojure.lang.MethodImplCache#fnFor(Class);ecd7161bf4397f04385fdaf9e5c6168580676ffa;Sun Nov 15 12:37:32 2009 -0500
SameType;true;clojure.lang.Util;clojure.lang.Util;ecd7161bf4397f04385fdaf9e5c6168580676ffa;Sun Nov 15 12:37:32 2009 -0500
SameType;true;clojure.lang.Var;clojure.lang.Var;ecd7161bf4397f04385fdaf9e5c6168580676ffa;Sun Nov 15 12:37:32 2009 -0500
SameMethod;true;clojure.lang.Var#get();clojure.lang.Var#get();ecd7161bf4397f04385fdaf9e5c6168580676ffa;Sun Nov 15 12:37:32 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3682e8823c429debf435b4830eba2ea0680b37b3;Sun Nov 15 15:40:11 2009 -0500
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;3682e8823c429debf435b4830eba2ea0680b37b3;Sun Nov 15 15:40:11 2009 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);3682e8823c429debf435b4830eba2ea0680b37b3;Sun Nov 15 15:40:11 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;d923bb2443b15753bccfa753e9677504ffb90188;Sat Nov 21 10:52:15 2009 -0500
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;d923bb2443b15753bccfa753e9677504ffb90188;Sat Nov 21 10:52:15 2009 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);d923bb2443b15753bccfa753e9677504ffb90188;Sat Nov 21 10:52:15 2009 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emit(C, ObjExpr, GeneratorAdapter);d923bb2443b15753bccfa753e9677504ffb90188;Sat Nov 21 10:52:15 2009 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emitProto(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emitProto(C, ObjExpr, GeneratorAdapter);d923bb2443b15753bccfa753e9677504ffb90188;Sat Nov 21 10:52:15 2009 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emitArgsAndCall(int, C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emitArgsAndCall(int, C, ObjExpr, GeneratorAdapter);d923bb2443b15753bccfa753e9677504ffb90188;Sat Nov 21 10:52:15 2009 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);d923bb2443b15753bccfa753e9677504ffb90188;Sat Nov 21 10:52:15 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;98366f353463afdc195b9b8fdf9d220bca7d0d6a;Sat Nov 21 17:15:44 2009 -0500
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;98366f353463afdc195b9b8fdf9d220bca7d0d6a;Sat Nov 21 17:15:44 2009 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);98366f353463afdc195b9b8fdf9d220bca7d0d6a;Sat Nov 21 17:15:44 2009 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);98366f353463afdc195b9b8fdf9d220bca7d0d6a;Sat Nov 21 17:15:44 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;4d08439a9cf79f34a730714f12edd5959aae126e;Tue Nov 24 07:51:02 2009 -0500
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;4d08439a9cf79f34a730714f12edd5959aae126e;Tue Nov 24 07:51:02 2009 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);4d08439a9cf79f34a730714f12edd5959aae126e;Tue Nov 24 07:51:02 2009 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emit(C, ObjExpr, GeneratorAdapter);4d08439a9cf79f34a730714f12edd5959aae126e;Tue Nov 24 07:51:02 2009 -0500
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;4d08439a9cf79f34a730714f12edd5959aae126e;Tue Nov 24 07:51:02 2009 -0500
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);4d08439a9cf79f34a730714f12edd5959aae126e;Tue Nov 24 07:51:02 2009 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;4d08439a9cf79f34a730714f12edd5959aae126e;Tue Nov 24 07:51:02 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);4d08439a9cf79f34a730714f12edd5959aae126e;Tue Nov 24 07:51:02 2009 -0500
SameMethod;true;clojure.lang.Compiler#registerKeywordCallsite(Keyword);clojure.lang.Compiler#registerKeywordCallsite(Keyword);4d08439a9cf79f34a730714f12edd5959aae126e;Tue Nov 24 07:51:02 2009 -0500
SameMethod;true;clojure.lang.Compiler#registerProtocolCallsite(Var);clojure.lang.Compiler#registerProtocolCallsite(Var);4d08439a9cf79f34a730714f12edd5959aae126e;Tue Nov 24 07:51:02 2009 -0500
SameMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.Compiler#load(Reader, String, String);4d08439a9cf79f34a730714f12edd5959aae126e;Tue Nov 24 07:51:02 2009 -0500
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);4d08439a9cf79f34a730714f12edd5959aae126e;Tue Nov 24 07:51:02 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;4d08439a9cf79f34a730714f12edd5959aae126e;Tue Nov 24 07:51:02 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, String, Symbol, ISeq);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, String, Symbol, ISeq);4d08439a9cf79f34a730714f12edd5959aae126e;Tue Nov 24 07:51:02 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#hasJavaClass();clojure.lang.Compiler.InstanceFieldExpr#hasJavaClass();c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#getJavaClass();clojure.lang.Compiler.InstanceFieldExpr#getJavaClass();c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameType;true;clojure.lang.Compiler.StaticFieldExpr;clojure.lang.Compiler.StaticFieldExpr;c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameMethod;true;clojure.lang.Compiler.StaticFieldExpr#getJavaClass();clojure.lang.Compiler.StaticFieldExpr#getJavaClass();c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#hasJavaClass();clojure.lang.Compiler.InstanceMethodExpr#hasJavaClass();c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#getJavaClass();clojure.lang.Compiler.InstanceMethodExpr#getJavaClass();c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#hasJavaClass();clojure.lang.Compiler.StaticMethodExpr#hasJavaClass();c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#getJavaClass();clojure.lang.Compiler.StaticMethodExpr#getJavaClass();c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameType;true;clojure.lang.PersistentTreeSet;clojure.lang.PersistentTreeSet;c88ba226d4d64529dee3120719e48e0b08439eaa;Wed Nov 25 16:11:43 2009 -0500
SameType;true;clojure.lang.PersistentTreeSet;clojure.lang.PersistentTreeSet;6144e64432dde85838703371dd1fb1d47e7c6e31;Wed Nov 25 18:04:46 2009 -0500
SameType;true;clojure.lang.AFn;clojure.lang.AFn;4d98e904d2802a6630eeb4d2e5429c7e9c3fd638;Sat Nov 28 13:48:18 2009 -0500
SameMethod;true;clojure.lang.AFn#applyTo(ISeq);clojure.lang.AFn#applyTo(ISeq);4d98e904d2802a6630eeb4d2e5429c7e9c3fd638;Sat Nov 28 13:48:18 2009 -0500
SameMethod;true;clojure.lang.AFn#applyToHelper(IFn, ISeq);clojure.lang.AFn#applyToHelper(IFn, ISeq);4d98e904d2802a6630eeb4d2e5429c7e9c3fd638;Sat Nov 28 13:48:18 2009 -0500
SameType;true;clojure.lang.RestFn;clojure.lang.RestFn;4d98e904d2802a6630eeb4d2e5429c7e9c3fd638;Sat Nov 28 13:48:18 2009 -0500
SameMethod;true;clojure.lang.RestFn#applyTo(ISeq);clojure.lang.RestFn#applyTo(ISeq);4d98e904d2802a6630eeb4d2e5429c7e9c3fd638;Sat Nov 28 13:48:18 2009 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object);clojure.lang.RestFn#invoke(Object);4d98e904d2802a6630eeb4d2e5429c7e9c3fd638;Sat Nov 28 13:48:18 2009 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object);clojure.lang.RestFn#invoke(Object, Object);4d98e904d2802a6630eeb4d2e5429c7e9c3fd638;Sat Nov 28 13:48:18 2009 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object);4d98e904d2802a6630eeb4d2e5429c7e9c3fd638;Sat Nov 28 13:48:18 2009 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object);4d98e904d2802a6630eeb4d2e5429c7e9c3fd638;Sat Nov 28 13:48:18 2009 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object);4d98e904d2802a6630eeb4d2e5429c7e9c3fd638;Sat Nov 28 13:48:18 2009 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object);4d98e904d2802a6630eeb4d2e5429c7e9c3fd638;Sat Nov 28 13:48:18 2009 -0500
SameType;true;clojure.lang.Util;clojure.lang.Util;4d98e904d2802a6630eeb4d2e5429c7e9c3fd638;Sat Nov 28 13:48:18 2009 -0500
SameType;true;clojure.lang.DynamicClassLoader;clojure.lang.DynamicClassLoader;046908b8775e43e3a96d28bebe46dc34f4332644;Mon Nov 30 08:28:33 2009 -0500
SameMethod;true;clojure.lang.DynamicClassLoader#defineClass(String, byte[]);clojure.lang.DynamicClassLoader#defineClass(String, byte[]);046908b8775e43e3a96d28bebe46dc34f4332644;Mon Nov 30 08:28:33 2009 -0500
SameMethod;true;clojure.lang.DynamicClassLoader#findClass(String);clojure.lang.DynamicClassLoader#findClass(String);046908b8775e43e3a96d28bebe46dc34f4332644;Mon Nov 30 08:28:33 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;77173bbf8eea48729deaf4cac0dc10918b3720e9;Mon Nov 30 13:39:19 2009 -0500
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;77173bbf8eea48729deaf4cac0dc10918b3720e9;Mon Nov 30 13:39:19 2009 -0500
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;77173bbf8eea48729deaf4cac0dc10918b3720e9;Mon Nov 30 13:39:19 2009 -0500
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);77173bbf8eea48729deaf4cac0dc10918b3720e9;Mon Nov 30 13:39:19 2009 -0500
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;77173bbf8eea48729deaf4cac0dc10918b3720e9;Mon Nov 30 13:39:19 2009 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);77173bbf8eea48729deaf4cac0dc10918b3720e9;Mon Nov 30 13:39:19 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;77173bbf8eea48729deaf4cac0dc10918b3720e9;Mon Nov 30 13:39:19 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);77173bbf8eea48729deaf4cac0dc10918b3720e9;Mon Nov 30 13:39:19 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;a84a4e1ff36b85ec2afa4df41c5affca1a76c78a;Mon Nov 30 19:34:45 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;a84a4e1ff36b85ec2afa4df41c5affca1a76c78a;Mon Nov 30 19:34:45 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceExpr.DeftypeParser;clojure.lang.Compiler.NewInstanceExpr.DeftypeParser;a84a4e1ff36b85ec2afa4df41c5affca1a76c78a;Mon Nov 30 19:34:45 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr.DeftypeParser#parse(C, Object);clojure.lang.Compiler.NewInstanceExpr.DeftypeParser#parse(C, Object);a84a4e1ff36b85ec2afa4df41c5affca1a76c78a;Mon Nov 30 19:34:45 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceExpr.ReifyParser;clojure.lang.Compiler.NewInstanceExpr.ReifyParser;a84a4e1ff36b85ec2afa4df41c5affca1a76c78a;Mon Nov 30 19:34:45 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr.ReifyParser#parse(C, Object);clojure.lang.Compiler.NewInstanceExpr.ReifyParser#parse(C, Object);a84a4e1ff36b85ec2afa4df41c5affca1a76c78a;Mon Nov 30 19:34:45 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;a84a4e1ff36b85ec2afa4df41c5affca1a76c78a;Mon Nov 30 19:34:45 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);a84a4e1ff36b85ec2afa4df41c5affca1a76c78a;Mon Nov 30 19:34:45 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;53697c984fe0daea6cb85622286fb263ee0d69ca;Mon Nov 30 21:14:00 2009 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;53697c984fe0daea6cb85622286fb263ee0d69ca;Mon Nov 30 21:14:00 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);53697c984fe0daea6cb85622286fb263ee0d69ca;Mon Nov 30 21:14:00 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;4d3c5e9f522b5a510224ab3c980c571b0a2cd05b;Fri Dec 4 10:25:34 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;4d3c5e9f522b5a510224ab3c980c571b0a2cd05b;Fri Dec 4 10:25:34 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);4d3c5e9f522b5a510224ab3c980c571b0a2cd05b;Fri Dec 4 10:25:34 2009 -0500
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;c6b6f8b5437dc6c3605fc7e15a8b905ccebd983e;Fri Dec 4 10:52:13 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameType;true;clojure.lang.Compiler.IfExpr.Parser;clojure.lang.Compiler.IfExpr.Parser;76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameMethod;true;clojure.lang.Compiler.IfExpr.Parser#parse(C, Object);clojure.lang.Compiler.IfExpr.Parser#parse(C, Object);76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitLetFnInits(GeneratorAdapter, ObjExpr, IPersistentSet);clojure.lang.Compiler.ObjExpr#emitLetFnInits(GeneratorAdapter, ObjExpr, IPersistentSet);76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emit(C, ObjExpr, GeneratorAdapter);76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq);clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq);76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameType;true;clojure.lang.Compiler.ObjMethod;clojure.lang.Compiler.ObjMethod;76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjMethod#emitClearLocals(GeneratorAdapter);clojure.lang.Compiler.ObjMethod#emitClearLocals(GeneratorAdapter);76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameType;true;clojure.lang.Compiler.LocalBindingExpr;clojure.lang.Compiler.LocalBindingExpr;76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameMethod;true;clojure.lang.Compiler.LocalBindingExpr#LocalBindingExpr(LocalBinding, Symbol);clojure.lang.Compiler.LocalBindingExpr#LocalBindingExpr(LocalBinding, Symbol);76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameMethod;true;clojure.lang.Compiler.LocalBindingExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.LocalBindingExpr#emit(C, ObjExpr, GeneratorAdapter);76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameMethod;true;clojure.lang.Compiler.LocalBindingExpr#emitAssign(C, ObjExpr, GeneratorAdapter, Expr);clojure.lang.Compiler.LocalBindingExpr#emitAssign(C, ObjExpr, GeneratorAdapter, Expr);76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameMethod;true;clojure.lang.Compiler#registerLocal(Symbol, Symbol, Expr, boolean);clojure.lang.Compiler#registerLocal(Symbol, Symbol, Expr, boolean);76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, String, Symbol, ISeq);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, String, Symbol, ISeq);76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameType;true;clojure.lang.Compiler.CaseExpr;clojure.lang.Compiler.CaseExpr;76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameType;true;clojure.lang.Compiler.CaseExpr.Parser;clojure.lang.Compiler.CaseExpr.Parser;76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameMethod;true;clojure.lang.Compiler.CaseExpr.Parser#parse(C, Object);clojure.lang.Compiler.CaseExpr.Parser#parse(C, Object);76c8f45293987b80e3599535dd86482e1180661d;Mon Dec 7 15:07:41 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6c0c37e048f49ee5cd3afa79ce461abbc6a0c367;Mon Dec 7 16:25:34 2009 -0500
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;6c0c37e048f49ee5cd3afa79ce461abbc6a0c367;Mon Dec 7 16:25:34 2009 -0500
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;6c0c37e048f49ee5cd3afa79ce461abbc6a0c367;Mon Dec 7 16:25:34 2009 -0500
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);6c0c37e048f49ee5cd3afa79ce461abbc6a0c367;Mon Dec 7 16:25:34 2009 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;6c0c37e048f49ee5cd3afa79ce461abbc6a0c367;Mon Dec 7 16:25:34 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitLocal(GeneratorAdapter, LocalBinding, boolean);clojure.lang.Compiler.ObjExpr#emitLocal(GeneratorAdapter, LocalBinding, boolean);6c0c37e048f49ee5cd3afa79ce461abbc6a0c367;Mon Dec 7 16:25:34 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;1da63ad10d2531264e86eb705a10b3cebc9b1067;Mon Dec 7 16:44:41 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6d40a76e8a012909f2d2a594ce66a78318889799;Tue Dec 8 10:02:06 2009 -0500
SameType;true;clojure.lang.Compiler.CaseExpr;clojure.lang.Compiler.CaseExpr;6d40a76e8a012909f2d2a594ce66a78318889799;Tue Dec 8 10:02:06 2009 -0500
SameType;true;clojure.lang.Compiler.CaseExpr.Parser;clojure.lang.Compiler.CaseExpr.Parser;6d40a76e8a012909f2d2a594ce66a78318889799;Tue Dec 8 10:02:06 2009 -0500
SameMethod;true;clojure.lang.Compiler.CaseExpr.Parser#parse(C, Object);clojure.lang.Compiler.CaseExpr.Parser#parse(C, Object);6d40a76e8a012909f2d2a594ce66a78318889799;Tue Dec 8 10:02:06 2009 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;42e45b9988bfa17584f259d422b39c64cebabcce;Fri Dec 11 07:02:23 2009 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;42e45b9988bfa17584f259d422b39c64cebabcce;Fri Dec 11 07:02:23 2009 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitLocal(GeneratorAdapter, LocalBinding, boolean);clojure.lang.Compiler.ObjExpr#emitLocal(GeneratorAdapter, LocalBinding, boolean);42e45b9988bfa17584f259d422b39c64cebabcce;Fri Dec 11 07:02:23 2009 -0500
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;42e45b9988bfa17584f259d422b39c64cebabcce;Fri Dec 11 07:02:23 2009 -0500
SameType;true;clojure.lang.Compiler.LetFnExpr;clojure.lang.Compiler.LetFnExpr;42e45b9988bfa17584f259d422b39c64cebabcce;Fri Dec 11 07:02:23 2009 -0500
SameType;true;clojure.lang.Compiler.LetFnExpr.Parser;clojure.lang.Compiler.LetFnExpr.Parser;42e45b9988bfa17584f259d422b39c64cebabcce;Fri Dec 11 07:02:23 2009 -0500
SameMethod;true;clojure.lang.Compiler.LetFnExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetFnExpr.Parser#parse(C, Object);42e45b9988bfa17584f259d422b39c64cebabcce;Fri Dec 11 07:02:23 2009 -0500
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;16e042af56334d00838cbfbb1d4467a99f7f5910;Wed Dec 23 09:12:16 2009 -0500
SameType;true;clojure.lang.PersistentArrayMap.TransientArrayMap;clojure.lang.PersistentArrayMap.TransientArrayMap;16e042af56334d00838cbfbb1d4467a99f7f5910;Wed Dec 23 09:12:16 2009 -0500
SameMethod;true;clojure.lang.PersistentArrayMap.TransientArrayMap#doPersistent();clojure.lang.PersistentArrayMap.TransientArrayMap#doPersistent();16e042af56334d00838cbfbb1d4467a99f7f5910;Wed Dec 23 09:12:16 2009 -0500
SameMethod;true;clojure.lang.PersistentArrayMap.TransientArrayMap#ensureEditable();clojure.lang.PersistentArrayMap.TransientArrayMap#ensureEditable();16e042af56334d00838cbfbb1d4467a99f7f5910;Wed Dec 23 09:12:16 2009 -0500
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;16e042af56334d00838cbfbb1d4467a99f7f5910;Wed Dec 23 09:12:16 2009 -0500
SameType;true;clojure.lang.PersistentHashMap.TransientHashMap;clojure.lang.PersistentHashMap.TransientHashMap;16e042af56334d00838cbfbb1d4467a99f7f5910;Wed Dec 23 09:12:16 2009 -0500
SameMethod;true;clojure.lang.PersistentHashMap.TransientHashMap#ensureEditable();clojure.lang.PersistentHashMap.TransientHashMap#ensureEditable();16e042af56334d00838cbfbb1d4467a99f7f5910;Wed Dec 23 09:12:16 2009 -0500
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;16e042af56334d00838cbfbb1d4467a99f7f5910;Wed Dec 23 09:12:16 2009 -0500
SameMethod;true;clojure.lang.PersistentTreeMap#empty();clojure.lang.PersistentTreeMap#empty();16e042af56334d00838cbfbb1d4467a99f7f5910;Wed Dec 23 09:12:16 2009 -0500
SameType;true;clojure.lang.PersistentTreeSet;clojure.lang.PersistentTreeSet;16e042af56334d00838cbfbb1d4467a99f7f5910;Wed Dec 23 09:12:16 2009 -0500
SameMethod;true;clojure.lang.PersistentTreeSet#empty();clojure.lang.PersistentTreeSet#empty();16e042af56334d00838cbfbb1d4467a99f7f5910;Wed Dec 23 09:12:16 2009 -0500
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;16e042af56334d00838cbfbb1d4467a99f7f5910;Wed Dec 23 09:12:16 2009 -0500
SameType;true;clojure.lang.PersistentVector.TransientVector;clojure.lang.PersistentVector.TransientVector;16e042af56334d00838cbfbb1d4467a99f7f5910;Wed Dec 23 09:12:16 2009 -0500
SameMethod;true;clojure.lang.PersistentVector.TransientVector#ensureEditable();clojure.lang.PersistentVector.TransientVector#ensureEditable();16e042af56334d00838cbfbb1d4467a99f7f5910;Wed Dec 23 09:12:16 2009 -0500
SameType;true;clojure.lang.Agent;clojure.lang.Agent;b63af1ad6ce38b50552be3c424ea166cb063ee7c;Mon Jan 11 02:04:32 2010 -0500
SameType;true;clojure.lang.Agent.Action;clojure.lang.Agent.Action;b63af1ad6ce38b50552be3c424ea166cb063ee7c;Mon Jan 11 02:04:32 2010 -0500
SameMethod;true;clojure.lang.Agent.Action#execute();clojure.lang.Agent.Action#execute();b63af1ad6ce38b50552be3c424ea166cb063ee7c;Mon Jan 11 02:04:32 2010 -0500
SameMethod;true;clojure.lang.Agent.Action#doRun(Action);clojure.lang.Agent.Action#doRun(Action);b63af1ad6ce38b50552be3c424ea166cb063ee7c;Mon Jan 11 02:04:32 2010 -0500
SameMethod;true;clojure.lang.Agent#deref();clojure.lang.Agent#deref();b63af1ad6ce38b50552be3c424ea166cb063ee7c;Mon Jan 11 02:04:32 2010 -0500
SameMethod;true;clojure.lang.Agent#dispatch(IFn, ISeq, boolean);clojure.lang.Agent#dispatch(IFn, ISeq, boolean);b63af1ad6ce38b50552be3c424ea166cb063ee7c;Mon Jan 11 02:04:32 2010 -0500
SameMethod;true;clojure.lang.Agent#enqueue(Action);clojure.lang.Agent#enqueue(Action);b63af1ad6ce38b50552be3c424ea166cb063ee7c;Mon Jan 11 02:04:32 2010 -0500
SameMethod;true;clojure.lang.Agent#getQueueCount();clojure.lang.Agent#getQueueCount();b63af1ad6ce38b50552be3c424ea166cb063ee7c;Mon Jan 11 02:04:32 2010 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e6a315bd3d514c6af10d2e7a853b693aa5f4520d;Thu Jan 14 14:44:08 2010 -0500
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;e6a315bd3d514c6af10d2e7a853b693aa5f4520d;Thu Jan 14 14:44:08 2010 -0500
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq);clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq);e6a315bd3d514c6af10d2e7a853b693aa5f4520d;Thu Jan 14 14:44:08 2010 -0500
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;e6a315bd3d514c6af10d2e7a853b693aa5f4520d;Thu Jan 14 14:44:08 2010 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);e6a315bd3d514c6af10d2e7a853b693aa5f4520d;Thu Jan 14 14:44:08 2010 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;277f0235c1387ddd6247a72857597814a3e10bc3;Thu Jan 14 19:27:54 2010 -0500
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);277f0235c1387ddd6247a72857597814a3e10bc3;Thu Jan 14 19:27:54 2010 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;277f0235c1387ddd6247a72857597814a3e10bc3;Thu Jan 14 19:27:54 2010 -0500
SameType;true;clojure.lang.AFn;clojure.lang.AFn;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.AFunction;clojure.lang.AFunction;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.APersistentVector.SubVector;clojure.lang.APersistentVector.SubVector;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.APersistentVector.SubVector#SubVector(IPersistentMap, IPersistentVector, int, int);clojure.lang.APersistentVector.SubVector#SubVector(IPersistentMap, IPersistentVector, int, int);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#ctorTypes();clojure.lang.Compiler.ObjExpr#ctorTypes();430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emit(C, ObjExpr, GeneratorAdapter);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.Compiler#registerConstant(Object);clojure.lang.Compiler#registerConstant(Object);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, String, Symbol, ISeq);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, String, Symbol, ISeq);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.PersistentArrayMap#PersistentArrayMap();clojure.lang.PersistentArrayMap#PersistentArrayMap();430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.PersistentArrayMap#PersistentArrayMap(Object[]);clojure.lang.PersistentArrayMap#PersistentArrayMap(Object[]);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.PersistentArrayMap#PersistentArrayMap(IPersistentMap, Object[]);clojure.lang.PersistentArrayMap#PersistentArrayMap(IPersistentMap, Object[]);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.PersistentHashMap#PersistentHashMap(int, INode, boolean, Object);clojure.lang.PersistentHashMap#PersistentHashMap(int, INode, boolean, Object);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.PersistentHashMap#PersistentHashMap(IPersistentMap, int, INode, boolean, Object);clojure.lang.PersistentHashMap#PersistentHashMap(IPersistentMap, int, INode, boolean, Object);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.PersistentHashSet;clojure.lang.PersistentHashSet;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.PersistentHashSet#PersistentHashSet(IPersistentMap, IPersistentMap);clojure.lang.PersistentHashSet#PersistentHashSet(IPersistentMap, IPersistentMap);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.PersistentStructMap;clojure.lang.PersistentStructMap;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.PersistentStructMap#PersistentStructMap(IPersistentMap, Def, Object[], IPersistentMap);clojure.lang.PersistentStructMap#PersistentStructMap(IPersistentMap, Def, Object[], IPersistentMap);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.PersistentTreeMap#PersistentTreeMap(IPersistentMap, Comparator);clojure.lang.PersistentTreeMap#PersistentTreeMap(IPersistentMap, Comparator);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.PersistentTreeMap#PersistentTreeMap(IPersistentMap, Comparator, Node, int);clojure.lang.PersistentTreeMap#PersistentTreeMap(IPersistentMap, Comparator, Node, int);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.PersistentTreeMap#PersistentTreeMap(Comparator, Node, int, IPersistentMap);clojure.lang.PersistentTreeMap#PersistentTreeMap(Comparator, Node, int, IPersistentMap);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.PersistentTreeSet;clojure.lang.PersistentTreeSet;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.PersistentTreeSet#PersistentTreeSet(IPersistentMap, IPersistentMap);clojure.lang.PersistentTreeSet#PersistentTreeSet(IPersistentMap, IPersistentMap);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.PersistentVector#PersistentVector(int, int, Node, Object[]);clojure.lang.PersistentVector#PersistentVector(int, int, Node, Object[]);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.PersistentVector#PersistentVector(IPersistentMap, int, int, Node, Object[]);clojure.lang.PersistentVector#PersistentVector(IPersistentMap, int, int, Node, Object[]);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.Symbol#Symbol(String, String);clojure.lang.Symbol#Symbol(String, String);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameMethod;true;clojure.lang.Symbol#Symbol(IPersistentMap, String, String);clojure.lang.Symbol#Symbol(IPersistentMap, String, String);430dd4fa711d0008137d7a82d4b4cd27b6e2d6d1;Tue Jan 19 14:25:26 2010 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;c8070cdd6fb6e8a70e5fff5815a7f184559d558a;Thu Jan 21 13:56:19 2010 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;bac6f727dce54c224ff2649095e4c7b5d4495694;Wed Jan 27 16:30:04 2010 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;bac6f727dce54c224ff2649095e4c7b5d4495694;Wed Jan 27 16:30:04 2010 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);bac6f727dce54c224ff2649095e4c7b5d4495694;Wed Jan 27 16:30:04 2010 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;d4bfd14ddd426b9d6f72fb52d8fa5257a62fd55c;Tue Feb 9 14:51:24 2010 -0500
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;f612ecffe2c47fa8df2ded84b36e4137f5eb4f6d;Wed Feb 10 16:51:45 2010 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;f612ecffe2c47fa8df2ded84b36e4137f5eb4f6d;Wed Feb 10 16:51:45 2010 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;d0e1eef26abd215668ed27357839b2bba4ba095c;Thu Feb 11 14:42:14 2010 -0500
SameMethod;true;clojure.lang.RT#charCast(Object);clojure.lang.RT#charCast(Object);d0e1eef26abd215668ed27357839b2bba4ba095c;Thu Feb 11 14:42:14 2010 -0500
SameMethod;true;clojure.lang.RT#byteCast(Object);clojure.lang.RT#byteCast(Object);d0e1eef26abd215668ed27357839b2bba4ba095c;Thu Feb 11 14:42:14 2010 -0500
SameMethod;true;clojure.lang.RT#shortCast(Object);clojure.lang.RT#shortCast(Object);d0e1eef26abd215668ed27357839b2bba4ba095c;Thu Feb 11 14:42:14 2010 -0500
SameMethod;true;clojure.lang.RT#intCast(Object);clojure.lang.RT#intCast(Object);d0e1eef26abd215668ed27357839b2bba4ba095c;Thu Feb 11 14:42:14 2010 -0500
SameMethod;true;clojure.lang.RT#intCast(float);clojure.lang.RT#intCast(float);d0e1eef26abd215668ed27357839b2bba4ba095c;Thu Feb 11 14:42:14 2010 -0500
SameMethod;true;clojure.lang.RT#intCast(long);clojure.lang.RT#intCast(long);d0e1eef26abd215668ed27357839b2bba4ba095c;Thu Feb 11 14:42:14 2010 -0500
SameMethod;true;clojure.lang.RT#intCast(double);clojure.lang.RT#intCast(double);d0e1eef26abd215668ed27357839b2bba4ba095c;Thu Feb 11 14:42:14 2010 -0500
SameMethod;true;clojure.lang.RT#longCast(float);clojure.lang.RT#longCast(float);d0e1eef26abd215668ed27357839b2bba4ba095c;Thu Feb 11 14:42:14 2010 -0500
SameMethod;true;clojure.lang.RT#longCast(double);clojure.lang.RT#longCast(double);d0e1eef26abd215668ed27357839b2bba4ba095c;Thu Feb 11 14:42:14 2010 -0500
SameMethod;true;clojure.lang.RT#floatCast(Object);clojure.lang.RT#floatCast(Object);d0e1eef26abd215668ed27357839b2bba4ba095c;Thu Feb 11 14:42:14 2010 -0500
SameMethod;true;clojure.lang.RT#floatCast(double);clojure.lang.RT#floatCast(double);d0e1eef26abd215668ed27357839b2bba4ba095c;Thu Feb 11 14:42:14 2010 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;23f612edadfd629315c68d8962eaf86ee177d687;Tue Feb 16 11:23:42 2010 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;23f612edadfd629315c68d8962eaf86ee177d687;Tue Feb 16 11:23:42 2010 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);23f612edadfd629315c68d8962eaf86ee177d687;Tue Feb 16 11:23:42 2010 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#isVolatile(LocalBinding);clojure.lang.Compiler.ObjExpr#isVolatile(LocalBinding);23f612edadfd629315c68d8962eaf86ee177d687;Tue Feb 16 11:23:42 2010 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitAssignLocal(GeneratorAdapter, LocalBinding, Expr);clojure.lang.Compiler.ObjExpr#emitAssignLocal(GeneratorAdapter, LocalBinding, Expr);23f612edadfd629315c68d8962eaf86ee177d687;Tue Feb 16 11:23:42 2010 -0500
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;23f612edadfd629315c68d8962eaf86ee177d687;Tue Feb 16 11:23:42 2010 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#compileStub(String, NewInstanceExpr, String[]);clojure.lang.Compiler.NewInstanceExpr#compileStub(String, NewInstanceExpr, String[]);23f612edadfd629315c68d8962eaf86ee177d687;Tue Feb 16 11:23:42 2010 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;49a7d6b8e14050a45df5332e768ba6647752215d;Tue Feb 16 20:20:33 2010 -0500
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;45255d5c87f4fcfa48c13889a912c225dafc0ee4;Mon Mar 1 08:42:42 2010 -0500
SameMethod;true;clojure.lang.LispReader#garg(int);clojure.lang.LispReader#garg(int);45255d5c87f4fcfa48c13889a912c225dafc0ee4;Mon Mar 1 08:42:42 2010 -0500
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;237c1db2980be7d4336aa48e20c53517988f14b6;Thu Mar 11 06:46:43 2010 -0500
SameType;true;clojure.lang.Numbers.IntegerOps;clojure.lang.Numbers.IntegerOps;237c1db2980be7d4336aa48e20c53517988f14b6;Thu Mar 11 06:46:43 2010 -0500
SameMethod;true;clojure.lang.Numbers.IntegerOps#inc(Number);clojure.lang.Numbers.IntegerOps#inc(Number);237c1db2980be7d4336aa48e20c53517988f14b6;Thu Mar 11 06:46:43 2010 -0500
SameMethod;true;clojure.lang.Numbers.IntegerOps#dec(Number);clojure.lang.Numbers.IntegerOps#dec(Number);237c1db2980be7d4336aa48e20c53517988f14b6;Thu Mar 11 06:46:43 2010 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;dc71e66bd8c6f0e918d471a5cdff2655ab90cdb0;Thu Mar 11 07:38:13 2010 -0500
SameMethod;true;clojure.lang.Compiler#isInline(Object, int);clojure.lang.Compiler#isInline(Object, int);dc71e66bd8c6f0e918d471a5cdff2655ab90cdb0;Thu Mar 11 07:38:13 2010 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;109b015af4a0ca873412875b6e7705bec067640e;Fri Mar 19 09:03:32 2010 -0400
SameMethod;true;clojure.lang.RT#seqFrom(Object);clojure.lang.RT#seqFrom(Object);109b015af4a0ca873412875b6e7705bec067640e;Fri Mar 19 09:03:32 2010 -0400
SameMethod;true;clojure.lang.RT#count(Object);clojure.lang.RT#count(Object);109b015af4a0ca873412875b6e7705bec067640e;Fri Mar 19 09:03:32 2010 -0400
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);109b015af4a0ca873412875b6e7705bec067640e;Fri Mar 19 09:03:32 2010 -0400
SameMethod;true;clojure.lang.RT#nth(Object, int, Object);clojure.lang.RT#nth(Object, int, Object);109b015af4a0ca873412875b6e7705bec067640e;Fri Mar 19 09:03:32 2010 -0400
SameType;true;clojure.lang.StringSeq;clojure.lang.StringSeq;109b015af4a0ca873412875b6e7705bec067640e;Fri Mar 19 09:03:32 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;67864eb0d91867ff03b87d6874be28f1476d27df;Fri Mar 19 12:10:46 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;67864eb0d91867ff03b87d6874be28f1476d27df;Fri Mar 19 12:10:46 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr.ReifyParser;clojure.lang.Compiler.NewInstanceExpr.ReifyParser;67864eb0d91867ff03b87d6874be28f1476d27df;Fri Mar 19 12:10:46 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr.ReifyParser#parse(C, Object);clojure.lang.Compiler.NewInstanceExpr.ReifyParser#parse(C, Object);67864eb0d91867ff03b87d6874be28f1476d27df;Fri Mar 19 12:10:46 2010 -0400
RenameMethod;true;clojure.lang.PersistentHashMap#create(List);clojure.lang.PersistentHashMap#createWithCheck(ISeq);e6e39d5931fbdf3dfa68cd2d059b8e26ce45c965;Mon Apr 5 11:02:09 2010 -0400
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;e6e39d5931fbdf3dfa68cd2d059b8e26ce45c965;Mon Apr 5 11:02:09 2010 -0400
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;e6e39d5931fbdf3dfa68cd2d059b8e26ce45c965;Mon Apr 5 11:02:09 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;e6e39d5931fbdf3dfa68cd2d059b8e26ce45c965;Mon Apr 5 11:02:09 2010 -0400
SameMethod;true;clojure.lang.RT#map(Object[]);clojure.lang.RT#map(Object[]);e6e39d5931fbdf3dfa68cd2d059b8e26ce45c965;Mon Apr 5 11:02:09 2010 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;c733148ba0fb3ff7bbab133f5375422972e62d08;Mon Apr 5 11:23:55 2010 -0400
SameType;true;clojure.lang.LispReader.SetReader;clojure.lang.LispReader.SetReader;c733148ba0fb3ff7bbab133f5375422972e62d08;Mon Apr 5 11:23:55 2010 -0400
SameMethod;true;clojure.lang.LispReader.SetReader#invoke(Object, Object);clojure.lang.LispReader.SetReader#invoke(Object, Object);c733148ba0fb3ff7bbab133f5375422972e62d08;Mon Apr 5 11:23:55 2010 -0400
SameType;true;clojure.lang.PersistentHashSet;clojure.lang.PersistentHashSet;c733148ba0fb3ff7bbab133f5375422972e62d08;Mon Apr 5 11:23:55 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;c733148ba0fb3ff7bbab133f5375422972e62d08;Mon Apr 5 11:23:55 2010 -0400
SameMethod;true;clojure.lang.RT#set(Object[]);clojure.lang.RT#set(Object[]);c733148ba0fb3ff7bbab133f5375422972e62d08;Mon Apr 5 11:23:55 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;54ab7bd6b6b2894923cc0a9333a5ea39738ae4f6;Mon Apr 5 17:52:55 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;54ab7bd6b6b2894923cc0a9333a5ea39738ae4f6;Mon Apr 5 17:52:55 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, String, Symbol, ISeq);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, String, Symbol, ISeq);54ab7bd6b6b2894923cc0a9333a5ea39738ae4f6;Mon Apr 5 17:52:55 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;68322a4c604693e8b51802abba70861a87adfaf0;Mon Apr 5 20:31:38 2010 -0400
ExtractMethod;true;clojure.lang.RT#count(Object);clojure.lang.RT#countFrom(Object);f81e612cc9ff91ddefc1d86e270cd7f018701802;Tue Apr 6 11:39:00 2010 -0400
ExtractMethod;true;clojure.lang.RT#get(Object, Object);clojure.lang.RT#getFrom(Object, Object);f81e612cc9ff91ddefc1d86e270cd7f018701802;Tue Apr 6 11:39:00 2010 -0400
ExtractMethod;true;clojure.lang.RT#get(Object, Object, Object);clojure.lang.RT#getFrom(Object, Object, Object);f81e612cc9ff91ddefc1d86e270cd7f018701802;Tue Apr 6 11:39:00 2010 -0400
ExtractMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nthFrom(Object, int);f81e612cc9ff91ddefc1d86e270cd7f018701802;Tue Apr 6 11:39:00 2010 -0400
ExtractMethod;true;clojure.lang.RT#nth(Object, int, Object);clojure.lang.RT#nthFrom(Object, int, Object);f81e612cc9ff91ddefc1d86e270cd7f018701802;Tue Apr 6 11:39:00 2010 -0400
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;f81e612cc9ff91ddefc1d86e270cd7f018701802;Tue Apr 6 11:39:00 2010 -0400
SameType;true;clojure.lang.ArrayChunk;clojure.lang.ArrayChunk;f81e612cc9ff91ddefc1d86e270cd7f018701802;Tue Apr 6 11:39:00 2010 -0400
SameType;true;clojure.lang.Indexed;clojure.lang.Indexed;f81e612cc9ff91ddefc1d86e270cd7f018701802;Tue Apr 6 11:39:00 2010 -0400
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;f81e612cc9ff91ddefc1d86e270cd7f018701802;Tue Apr 6 11:39:00 2010 -0400
SameType;true;clojure.lang.PersistentVector.TransientVector;clojure.lang.PersistentVector.TransientVector;f81e612cc9ff91ddefc1d86e270cd7f018701802;Tue Apr 6 11:39:00 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;f81e612cc9ff91ddefc1d86e270cd7f018701802;Tue Apr 6 11:39:00 2010 -0400
SameMethod;true;clojure.lang.RT#count(Object);clojure.lang.RT#count(Object);f81e612cc9ff91ddefc1d86e270cd7f018701802;Tue Apr 6 11:39:00 2010 -0400
SameMethod;true;clojure.lang.RT#get(Object, Object);clojure.lang.RT#get(Object, Object);f81e612cc9ff91ddefc1d86e270cd7f018701802;Tue Apr 6 11:39:00 2010 -0400
SameMethod;true;clojure.lang.RT#get(Object, Object, Object);clojure.lang.RT#get(Object, Object, Object);f81e612cc9ff91ddefc1d86e270cd7f018701802;Tue Apr 6 11:39:00 2010 -0400
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);f81e612cc9ff91ddefc1d86e270cd7f018701802;Tue Apr 6 11:39:00 2010 -0400
SameMethod;true;clojure.lang.RT#nth(Object, int, Object);clojure.lang.RT#nth(Object, int, Object);f81e612cc9ff91ddefc1d86e270cd7f018701802;Tue Apr 6 11:39:00 2010 -0400
SameMethod;true;clojure.lang.RT#intCast(Object);clojure.lang.RT#intCast(Object);f81e612cc9ff91ddefc1d86e270cd7f018701802;Tue Apr 6 11:39:00 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;4f6fda54954fe7407967d65a5518906453312395;Tue Apr 13 09:25:36 2010 -0400
SameMethod;true;clojure.lang.RT#count(Object);clojure.lang.RT#count(Object);4f6fda54954fe7407967d65a5518906453312395;Tue Apr 13 09:25:36 2010 -0400
SameMethod;true;clojure.lang.RT#nth(Object, int);clojure.lang.RT#nth(Object, int);4f6fda54954fe7407967d65a5518906453312395;Tue Apr 13 09:25:36 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;27954e23338287ea5e68728c6c2ce8c393e7965a;Wed Apr 14 07:54:54 2010 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;27954e23338287ea5e68728c6c2ce8c393e7965a;Wed Apr 14 07:54:54 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#getJavaClass();clojure.lang.Compiler.ObjExpr#getJavaClass();27954e23338287ea5e68728c6c2ce8c393e7965a;Wed Apr 14 07:54:54 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;12b5c5996dc2f9943f2fca075e94990a24cd7d37;Wed Apr 14 20:15:45 2010 -0400
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;12b5c5996dc2f9943f2fca075e94990a24cd7d37;Wed Apr 14 20:15:45 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);12b5c5996dc2f9943f2fca075e94990a24cd7d37;Wed Apr 14 20:15:45 2010 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;12b5c5996dc2f9943f2fca075e94990a24cd7d37;Wed Apr 14 20:15:45 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#getCompiledClass();clojure.lang.Compiler.ObjExpr#getCompiledClass();12b5c5996dc2f9943f2fca075e94990a24cd7d37;Wed Apr 14 20:15:45 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;12b5c5996dc2f9943f2fca075e94990a24cd7d37;Wed Apr 14 20:15:45 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr.DeftypeParser;clojure.lang.Compiler.NewInstanceExpr.DeftypeParser;12b5c5996dc2f9943f2fca075e94990a24cd7d37;Wed Apr 14 20:15:45 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr.DeftypeParser#parse(C, Object);clojure.lang.Compiler.NewInstanceExpr.DeftypeParser#parse(C, Object);12b5c5996dc2f9943f2fca075e94990a24cd7d37;Wed Apr 14 20:15:45 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr.ReifyParser;clojure.lang.Compiler.NewInstanceExpr.ReifyParser;12b5c5996dc2f9943f2fca075e94990a24cd7d37;Wed Apr 14 20:15:45 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr.ReifyParser#parse(C, Object);clojure.lang.Compiler.NewInstanceExpr.ReifyParser#parse(C, Object);12b5c5996dc2f9943f2fca075e94990a24cd7d37;Wed Apr 14 20:15:45 2010 -0400
SameType;true;clojure.lang.DynamicClassLoader;clojure.lang.DynamicClassLoader;12b5c5996dc2f9943f2fca075e94990a24cd7d37;Wed Apr 14 20:15:45 2010 -0400
SameMethod;true;clojure.lang.DynamicClassLoader#findClass(String);clojure.lang.DynamicClassLoader#findClass(String);12b5c5996dc2f9943f2fca075e94990a24cd7d37;Wed Apr 14 20:15:45 2010 -0400
SameType;true;clojure.lang.Var;clojure.lang.Var;a9953ba5834ae714cf767e73478a1c3c216561ac;Wed Apr 14 20:17:58 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c1ca66b7a171bcd2157e679799f37ba7a37bff36;Fri Apr 16 09:01:41 2010 -0400
SameType;true;clojure.lang.Compiler.CaseExpr;clojure.lang.Compiler.CaseExpr;c1ca66b7a171bcd2157e679799f37ba7a37bff36;Fri Apr 16 09:01:41 2010 -0400
SameType;true;clojure.lang.Compiler.CaseExpr.Parser;clojure.lang.Compiler.CaseExpr.Parser;c1ca66b7a171bcd2157e679799f37ba7a37bff36;Fri Apr 16 09:01:41 2010 -0400
SameMethod;true;clojure.lang.Compiler.CaseExpr.Parser#parse(C, Object);clojure.lang.Compiler.CaseExpr.Parser#parse(C, Object);c1ca66b7a171bcd2157e679799f37ba7a37bff36;Fri Apr 16 09:01:41 2010 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;c9927b560ec32efc837727eff4b64bb0bb1f58d4;Fri Apr 16 10:35:06 2010 -0400
SameMethod;true;clojure.lang.Numbers#divide(BigInteger, BigInteger);clojure.lang.Numbers#divide(BigInteger, BigInteger);c9927b560ec32efc837727eff4b64bb0bb1f58d4;Fri Apr 16 10:35:06 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6847019915f2d3a7708e3c810cc68926e35e1a7e;Wed Feb 10 15:55:39 2010 +0100
SameMethod;true;clojure.lang.Compiler#maybeResolveIn(Namespace, Symbol);clojure.lang.Compiler#maybeResolveIn(Namespace, Symbol);6847019915f2d3a7708e3c810cc68926e35e1a7e;Wed Feb 10 15:55:39 2010 +0100
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;a2db3b5508cef22dcc5bcb7b386c17815ed83c6e;Tue Apr 13 14:17:20 2010 +0200
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;a2db3b5508cef22dcc5bcb7b386c17815ed83c6e;Tue Apr 13 14:17:20 2010 +0200
SameType;true;clojure.lang.RT;clojure.lang.RT;a2db3b5508cef22dcc5bcb7b386c17815ed83c6e;Tue Apr 13 14:17:20 2010 +0200
SameType;true;clojure.lang.Range;clojure.lang.Range;a2db3b5508cef22dcc5bcb7b386c17815ed83c6e;Tue Apr 13 14:17:20 2010 +0200
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;ee9fc81dd2ef15d7ea3e17e7ec2370c5c09d633e;Tue Apr 13 11:50:38 2010 +0200
SameMethod;true;clojure.lang.APersistentMap#equals(Object);clojure.lang.APersistentMap#equals(Object);ee9fc81dd2ef15d7ea3e17e7ec2370c5c09d633e;Tue Apr 13 11:50:38 2010 +0200
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;ee9fc81dd2ef15d7ea3e17e7ec2370c5c09d633e;Tue Apr 13 11:50:38 2010 +0200
SameMethod;true;clojure.lang.APersistentSet#equals(Object);clojure.lang.APersistentSet#equals(Object);ee9fc81dd2ef15d7ea3e17e7ec2370c5c09d633e;Tue Apr 13 11:50:38 2010 +0200
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;ee9fc81dd2ef15d7ea3e17e7ec2370c5c09d633e;Tue Apr 13 11:50:38 2010 +0200
SameMethod;true;clojure.lang.APersistentVector#doEquals(IPersistentVector, Object);clojure.lang.APersistentVector#doEquals(IPersistentVector, Object);ee9fc81dd2ef15d7ea3e17e7ec2370c5c09d633e;Tue Apr 13 11:50:38 2010 +0200
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;ee9fc81dd2ef15d7ea3e17e7ec2370c5c09d633e;Tue Apr 13 11:50:38 2010 +0200
SameMethod;true;clojure.lang.ASeq#equals(Object);clojure.lang.ASeq#equals(Object);ee9fc81dd2ef15d7ea3e17e7ec2370c5c09d633e;Tue Apr 13 11:50:38 2010 +0200
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;728c4c910595332dffd4308ed24364356d330471;Fri Apr 16 11:41:00 2010 -0400
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;728c4c910595332dffd4308ed24364356d330471;Fri Apr 16 11:41:00 2010 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;728c4c910595332dffd4308ed24364356d330471;Fri Apr 16 11:41:00 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitClearCloses(GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitClearCloses(GeneratorAdapter);728c4c910595332dffd4308ed24364356d330471;Fri Apr 16 11:41:00 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitLocal(GeneratorAdapter, LocalBinding, boolean);clojure.lang.Compiler.ObjExpr#emitLocal(GeneratorAdapter, LocalBinding, boolean);728c4c910595332dffd4308ed24364356d330471;Fri Apr 16 11:41:00 2010 -0400
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;728c4c910595332dffd4308ed24364356d330471;Fri Apr 16 11:41:00 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq);clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq);728c4c910595332dffd4308ed24364356d330471;Fri Apr 16 11:41:00 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#emitClearLocals(GeneratorAdapter);clojure.lang.Compiler.FnMethod#emitClearLocals(GeneratorAdapter);728c4c910595332dffd4308ed24364356d330471;Fri Apr 16 11:41:00 2010 -0400
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;03fa7d8ebdb4c5105b1f00657f5e70700d35b7b2;Sat Apr 17 13:30:28 2010 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_int;clojure.lang.ArraySeq.ArraySeq_int;03fa7d8ebdb4c5105b1f00657f5e70700d35b7b2;Sat Apr 17 13:30:28 2010 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_float;clojure.lang.ArraySeq.ArraySeq_float;03fa7d8ebdb4c5105b1f00657f5e70700d35b7b2;Sat Apr 17 13:30:28 2010 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_double;clojure.lang.ArraySeq.ArraySeq_double;03fa7d8ebdb4c5105b1f00657f5e70700d35b7b2;Sat Apr 17 13:30:28 2010 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_long;clojure.lang.ArraySeq.ArraySeq_long;03fa7d8ebdb4c5105b1f00657f5e70700d35b7b2;Sat Apr 17 13:30:28 2010 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_byte;clojure.lang.ArraySeq.ArraySeq_byte;03fa7d8ebdb4c5105b1f00657f5e70700d35b7b2;Sat Apr 17 13:30:28 2010 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_char;clojure.lang.ArraySeq.ArraySeq_char;03fa7d8ebdb4c5105b1f00657f5e70700d35b7b2;Sat Apr 17 13:30:28 2010 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_boolean;clojure.lang.ArraySeq.ArraySeq_boolean;03fa7d8ebdb4c5105b1f00657f5e70700d35b7b2;Sat Apr 17 13:30:28 2010 -0400
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;03fa7d8ebdb4c5105b1f00657f5e70700d35b7b2;Sat Apr 17 13:30:28 2010 -0400
SameType;true;clojure.lang.PersistentVector.ChunkedSeq;clojure.lang.PersistentVector.ChunkedSeq;03fa7d8ebdb4c5105b1f00657f5e70700d35b7b2;Sat Apr 17 13:30:28 2010 -0400
SameType;true;clojure.lang.StringSeq;clojure.lang.StringSeq;03fa7d8ebdb4c5105b1f00657f5e70700d35b7b2;Sat Apr 17 13:30:28 2010 -0400
SameType;true;clojure.lang.AFunction;clojure.lang.AFunction;19dd3c593e7a29cbca514c6ab7424ff22e353cc6;Sun Apr 18 10:06:16 2010 -0400
SameType;true;clojure.lang.MethodImplCache;clojure.lang.MethodImplCache;19dd3c593e7a29cbca514c6ab7424ff22e353cc6;Sun Apr 18 10:06:16 2010 -0400
SameMethod;true;clojure.lang.MethodImplCache#MethodImplCache(IPersistentMap, Keyword, int, int, Object[]);clojure.lang.MethodImplCache#MethodImplCache(IPersistentMap, Keyword, int, int, Object[]);19dd3c593e7a29cbca514c6ab7424ff22e353cc6;Sun Apr 18 10:06:16 2010 -0400
SameMethod;true;clojure.lang.MethodImplCache#fnFor(Class);clojure.lang.MethodImplCache#fnFor(Class);19dd3c593e7a29cbca514c6ab7424ff22e353cc6;Sun Apr 18 10:06:16 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;ccd7ae47ece97bed6b5eb39e5ba8779b214548cc;Mon Apr 19 09:58:31 2010 -0400
SameType;true;clojure.lang.Compiler.InstanceOfExpr;clojure.lang.Compiler.InstanceOfExpr;ccd7ae47ece97bed6b5eb39e5ba8779b214548cc;Mon Apr 19 09:58:31 2010 -0400
SameMethod;true;clojure.lang.Compiler.InstanceOfExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceOfExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);ccd7ae47ece97bed6b5eb39e5ba8779b214548cc;Mon Apr 19 09:58:31 2010 -0400
ExtractMethod;true;clojure.lang.MethodImplCache#fnFor(Class);clojure.lang.MethodImplCache#findFnFor(Class);e660e467789ccc8e9922948b3498939e0239fc7c;Mon Apr 19 15:07:13 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e660e467789ccc8e9922948b3498939e0239fc7c;Mon Apr 19 15:07:13 2010 -0400
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;e660e467789ccc8e9922948b3498939e0239fc7c;Mon Apr 19 15:07:13 2010 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emitProto(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emitProto(C, ObjExpr, GeneratorAdapter);e660e467789ccc8e9922948b3498939e0239fc7c;Mon Apr 19 15:07:13 2010 -0400
SameType;true;clojure.lang.MethodImplCache;clojure.lang.MethodImplCache;e660e467789ccc8e9922948b3498939e0239fc7c;Mon Apr 19 15:07:13 2010 -0400
SameMethod;true;clojure.lang.MethodImplCache#fnFor(Class);clojure.lang.MethodImplCache#fnFor(Class);e660e467789ccc8e9922948b3498939e0239fc7c;Mon Apr 19 15:07:13 2010 -0400
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;1b8d5001ba094053b24c55829994785be422cfbf;Tue Apr 20 10:55:43 2010 -0400
SameType;true;clojure.lang.Ratio;clojure.lang.Ratio;8e916164ca3a57e5ce924ed153fe435356f8d4a0;Wed Apr 7 20:09:42 2010 +1000
SameMethod;true;clojure.lang.Ratio#longValue();clojure.lang.Ratio#longValue();8e916164ca3a57e5ce924ed153fe435356f8d4a0;Wed Apr 7 20:09:42 2010 +1000
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;c2a6a070665289afb425afbe8711fcb09e4d1ab0;Wed Apr 21 21:04:19 2010 -0400
SameType;true;clojure.lang.APersistentVector.RSeq;clojure.lang.APersistentVector.RSeq;c2a6a070665289afb425afbe8711fcb09e4d1ab0;Wed Apr 21 21:04:19 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;fa899d22dceb531d9f5af833ac6af0d956e6bdc7;Fri Apr 23 19:43:58 2010 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;fa899d22dceb531d9f5af833ac6af0d956e6bdc7;Fri Apr 23 19:43:58 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);fa899d22dceb531d9f5af833ac6af0d956e6bdc7;Fri Apr 23 19:43:58 2010 -0400
SameType;true;clojure.lang.Compiler.ObjMethod;clojure.lang.Compiler.ObjMethod;fa899d22dceb531d9f5af833ac6af0d956e6bdc7;Fri Apr 23 19:43:58 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;fa899d22dceb531d9f5af833ac6af0d956e6bdc7;Fri Apr 23 19:43:58 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr.DeftypeParser;clojure.lang.Compiler.NewInstanceExpr.DeftypeParser;fa899d22dceb531d9f5af833ac6af0d956e6bdc7;Fri Apr 23 19:43:58 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr.DeftypeParser#parse(C, Object);clojure.lang.Compiler.NewInstanceExpr.DeftypeParser#parse(C, Object);fa899d22dceb531d9f5af833ac6af0d956e6bdc7;Fri Apr 23 19:43:58 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr.ReifyParser;clojure.lang.Compiler.NewInstanceExpr.ReifyParser;fa899d22dceb531d9f5af833ac6af0d956e6bdc7;Fri Apr 23 19:43:58 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr.ReifyParser#parse(C, Object);clojure.lang.Compiler.NewInstanceExpr.ReifyParser#parse(C, Object);fa899d22dceb531d9f5af833ac6af0d956e6bdc7;Fri Apr 23 19:43:58 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;fa899d22dceb531d9f5af833ac6af0d956e6bdc7;Fri Apr 23 19:43:58 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);fa899d22dceb531d9f5af833ac6af0d956e6bdc7;Fri Apr 23 19:43:58 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);fa899d22dceb531d9f5af833ac6af0d956e6bdc7;Fri Apr 23 19:43:58 2010 -0400
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;c73a4bad6297251ab5545affd6baf79d2390f8c6;Thu Apr 22 21:45:24 2010 -0400
SameMethod;true;clojure.lang.Namespace#importClass(Symbol, Class);clojure.lang.Namespace#importClass(Symbol, Class);c73a4bad6297251ab5545affd6baf79d2390f8c6;Thu Apr 22 21:45:24 2010 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;a5ca8243e3ea45e6387b2b00d0e9b2624d16adbf;Mon Apr 26 11:05:58 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;29dcb68be1eb9e2bfbe5bc627a1f1d6b3e0b7a29;Mon Apr 26 13:31:11 2010 -0400
SameMethod;true;clojure.lang.Compiler#addAnnotation(Object, IPersistentMap);clojure.lang.Compiler#addAnnotation(Object, IPersistentMap);29dcb68be1eb9e2bfbe5bc627a1f1d6b3e0b7a29;Mon Apr 26 13:31:11 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;29dcb68be1eb9e2bfbe5bc627a1f1d6b3e0b7a29;Mon Apr 26 13:31:11 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);29dcb68be1eb9e2bfbe5bc627a1f1d6b3e0b7a29;Mon Apr 26 13:31:11 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);29dcb68be1eb9e2bfbe5bc627a1f1d6b3e0b7a29;Mon Apr 26 13:31:11 2010 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;08a9204f8f72cfdc62b27960f4ac71f56afb4a16;Fri Apr 30 08:32:48 2010 -0400
SameMethod;true;clojure.lang.Numbers#equiv(Object, Object);clojure.lang.Numbers#equiv(Object, Object);08a9204f8f72cfdc62b27960f4ac71f56afb4a16;Fri Apr 30 08:32:48 2010 -0400
SameType;true;clojure.lang.Util;clojure.lang.Util;08a9204f8f72cfdc62b27960f4ac71f56afb4a16;Fri Apr 30 08:32:48 2010 -0400
SameMethod;true;clojure.lang.Util#equiv(Object, Object);clojure.lang.Util#equiv(Object, Object);08a9204f8f72cfdc62b27960f4ac71f56afb4a16;Fri Apr 30 08:32:48 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;762d1531b6440722d5d1c0dfee4776d99289385e;Fri Apr 30 15:44:20 2010 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;762d1531b6440722d5d1c0dfee4776d99289385e;Fri Apr 30 15:44:20 2010 -0400
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;762d1531b6440722d5d1c0dfee4776d99289385e;Fri Apr 30 15:44:20 2010 -0400
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);762d1531b6440722d5d1c0dfee4776d99289385e;Fri Apr 30 15:44:20 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;d044fefbd9b0b1b0c42894d3d202dab4add073be;Tue May 4 09:07:26 2010 -0400
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;d044fefbd9b0b1b0c42894d3d202dab4add073be;Tue May 4 09:07:26 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#getArgTypes();clojure.lang.Compiler.FnMethod#getArgTypes();d044fefbd9b0b1b0c42894d3d202dab4add073be;Tue May 4 09:07:26 2010 -0400
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;58fee964ca7b3d3ffed9dfbb37bc4f9179973edb;Mon May 3 12:29:50 2010 -0400
SameMethod;true;clojure.lang.PersistentQueue#equiv(Object);clojure.lang.PersistentQueue#equiv(Object);58fee964ca7b3d3ffed9dfbb37bc4f9179973edb;Mon May 3 12:29:50 2010 -0400
SameMethod;true;clojure.lang.PersistentQueue#equals(Object);clojure.lang.PersistentQueue#equals(Object);58fee964ca7b3d3ffed9dfbb37bc4f9179973edb;Mon May 3 12:29:50 2010 -0400
SameType;true;clojure.lang.AFn;clojure.lang.AFn;68a14c88d11555353bb471efd94ba7d40c2d5008;Mon May 3 14:44:38 2010 -0400
SameType;true;clojure.lang.AFunction;clojure.lang.AFunction;68a14c88d11555353bb471efd94ba7d40c2d5008;Mon May 3 14:44:38 2010 -0400
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;68a14c88d11555353bb471efd94ba7d40c2d5008;Mon May 3 14:44:38 2010 -0400
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;68a14c88d11555353bb471efd94ba7d40c2d5008;Mon May 3 14:44:38 2010 -0400
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;68a14c88d11555353bb471efd94ba7d40c2d5008;Mon May 3 14:44:38 2010 -0400
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;68a14c88d11555353bb471efd94ba7d40c2d5008;Mon May 3 14:44:38 2010 -0400
SameType;true;clojure.lang.ArrayChunk;clojure.lang.ArrayChunk;68a14c88d11555353bb471efd94ba7d40c2d5008;Mon May 3 14:44:38 2010 -0400
SameType;true;clojure.lang.Cons;clojure.lang.Cons;68a14c88d11555353bb471efd94ba7d40c2d5008;Mon May 3 14:44:38 2010 -0400
SameType;true;clojure.lang.EnumerationSeq;clojure.lang.EnumerationSeq;68a14c88d11555353bb471efd94ba7d40c2d5008;Mon May 3 14:44:38 2010 -0400
SameType;true;clojure.lang.IteratorSeq;clojure.lang.IteratorSeq;68a14c88d11555353bb471efd94ba7d40c2d5008;Mon May 3 14:44:38 2010 -0400
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;68a14c88d11555353bb471efd94ba7d40c2d5008;Mon May 3 14:44:38 2010 -0400
SameType;true;clojure.lang.Obj;clojure.lang.Obj;68a14c88d11555353bb471efd94ba7d40c2d5008;Mon May 3 14:44:38 2010 -0400
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;68a14c88d11555353bb471efd94ba7d40c2d5008;Mon May 3 14:44:38 2010 -0400
SameType;true;clojure.lang.PersistentHashMap.INode;clojure.lang.PersistentHashMap.INode;68a14c88d11555353bb471efd94ba7d40c2d5008;Mon May 3 14:44:38 2010 -0400
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;68a14c88d11555353bb471efd94ba7d40c2d5008;Mon May 3 14:44:38 2010 -0400
SameType;true;clojure.lang.PersistentVector.Node;clojure.lang.PersistentVector.Node;68a14c88d11555353bb471efd94ba7d40c2d5008;Mon May 3 14:44:38 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;68a14c88d11555353bb471efd94ba7d40c2d5008;Mon May 3 14:44:38 2010 -0400
ExtractMethod;true;clojure.lang.Namespace#reference(Symbol, Object);clojure.lang.Namespace#warnOnReplace(Symbol, Object, Object);ab9a567faecc8cfde4625654fe9bb92988d7494d;Tue May 4 13:09:05 2010 -0400
ExtractMethod;true;clojure.lang.Namespace#intern(Symbol);clojure.lang.Namespace#warnOnReplace(Symbol, Object, Object);ab9a567faecc8cfde4625654fe9bb92988d7494d;Tue May 4 13:09:05 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;ab9a567faecc8cfde4625654fe9bb92988d7494d;Tue May 4 13:09:05 2010 -0400
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;ab9a567faecc8cfde4625654fe9bb92988d7494d;Tue May 4 13:09:05 2010 -0400
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;ab9a567faecc8cfde4625654fe9bb92988d7494d;Tue May 4 13:09:05 2010 -0400
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);ab9a567faecc8cfde4625654fe9bb92988d7494d;Tue May 4 13:09:05 2010 -0400
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;ab9a567faecc8cfde4625654fe9bb92988d7494d;Tue May 4 13:09:05 2010 -0400
SameMethod;true;clojure.lang.Namespace#intern(Symbol);clojure.lang.Namespace#intern(Symbol);ab9a567faecc8cfde4625654fe9bb92988d7494d;Tue May 4 13:09:05 2010 -0400
SameMethod;true;clojure.lang.Namespace#reference(Symbol, Object);clojure.lang.Namespace#reference(Symbol, Object);ab9a567faecc8cfde4625654fe9bb92988d7494d;Tue May 4 13:09:05 2010 -0400
ExtractMethod;true;clojure.lang.Compiler.MethodExpr#emitTypedArgs(ObjExpr, GeneratorAdapter, Class[], IPersistentVector);clojure.lang.RT#errPrintWriter();c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
ExtractMethod;true;clojure.lang.RT#init();clojure.lang.RT#errPrintWriter();c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
ExtractMethod;true;clojure.lang.Compile#main(String[]);clojure.lang.RT#errPrintWriter();c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
ExtractMethod;true;clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, Expr, String, Symbol);clojure.lang.RT#errPrintWriter();c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
ExtractMethod;true;clojure.lang.Namespace#warnOnReplace(Symbol, Object, Object);clojure.lang.RT#errPrintWriter();c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
ExtractMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Symbol, Expr, String, IPersistentVector);clojure.lang.RT#errPrintWriter();c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
ExtractMethod;true;clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);clojure.lang.RT#errPrintWriter();c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
ExtractMethod;true;clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, Symbol, Class, String, IPersistentVector);clojure.lang.RT#errPrintWriter();c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
SameType;true;clojure.lang.Compile;clojure.lang.Compile;c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
SameMethod;true;clojure.lang.Compile#main(String[]);clojure.lang.Compile#main(String[]);c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, Expr, String, Symbol);clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, Expr, String, Symbol);c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
SameType;true;clojure.lang.Compiler.MethodExpr;clojure.lang.Compiler.MethodExpr;c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
SameMethod;true;clojure.lang.Compiler.MethodExpr#emitTypedArgs(ObjExpr, GeneratorAdapter, Class[], IPersistentVector);clojure.lang.Compiler.MethodExpr#emitTypedArgs(ObjExpr, GeneratorAdapter, Class[], IPersistentVector);c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Symbol, Expr, String, IPersistentVector);clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Symbol, Expr, String, IPersistentVector);c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, Symbol, Class, String, IPersistentVector);clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, Symbol, Class, String, IPersistentVector);c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
SameMethod;true;clojure.lang.Namespace#warnOnReplace(Symbol, Object, Object);clojure.lang.Namespace#warnOnReplace(Symbol, Object, Object);c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
SameMethod;true;clojure.lang.RT#init();clojure.lang.RT#init();c4eb5719b0f30ea4c113e6e98a1c171c43a01abe;Fri May 7 03:30:07 2010 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;b1de0dcc75d3f459314350cede79f7d790c77d89;Mon May 10 10:20:08 2010 -0400
SameMethod;true;clojure.lang.LispReader#matchSymbol(String);clojure.lang.LispReader#matchSymbol(String);b1de0dcc75d3f459314350cede79f7d790c77d89;Mon May 10 10:20:08 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3b07c0e98ebfd7025a5e36c7e47f6562e4750e14;Tue May 18 06:58:03 2010 -0400
SameMethod;true;clojure.lang.Compiler#eval(Object, boolean);clojure.lang.Compiler#eval(Object, boolean);3b07c0e98ebfd7025a5e36c7e47f6562e4750e14;Tue May 18 06:58:03 2010 -0400
SameType;true;clojure.lang.AFn;clojure.lang.AFn;4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke();clojure.lang.AFn#invoke();4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object);clojure.lang.AFn#invoke(Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object);clojure.lang.AFn#invoke(Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object);clojure.lang.AFn#invoke(Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object, Object);clojure.lang.AFn#invoke(Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object, Object, Object);clojure.lang.AFn#invoke(Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object);clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object);clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);clojure.lang.AFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#getCompiledClass();clojure.lang.Compiler.ObjExpr#getCompiledClass();4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.Compiler#eval(Object, boolean);clojure.lang.Compiler#eval(Object, boolean);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.Compiler#compile1(GeneratorAdapter, ObjExpr, Object);clojure.lang.Compiler#compile1(GeneratorAdapter, ObjExpr, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameType;true;clojure.lang.RestFn;clojure.lang.RestFn;4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#applyTo(ISeq);clojure.lang.RestFn#applyTo(ISeq);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke();clojure.lang.RestFn#invoke();4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object);clojure.lang.RestFn#invoke(Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object);clojure.lang.RestFn#invoke(Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);4f729ba2432d8ffbe7c2f74f680b472e528cba4c;Thu May 20 13:16:18 2010 -0400
SameType;true;clojure.lang.Var;clojure.lang.Var;9c367ff0e3848482b441f3119dc4ad1c400baaf2;Wed May 19 21:16:31 2010 -0400
SameMethod;true;clojure.lang.Var#bindRoot(Object);clojure.lang.Var#bindRoot(Object);9c367ff0e3848482b441f3119dc4ad1c400baaf2;Wed May 19 21:16:31 2010 -0400
RenameMethod;true;clojure.lang.Namespace#warnOnReplace(Symbol, Object, Object);clojure.lang.Namespace#warnOrFailOnReplace(Symbol, Object, Object);095734ac5064329c03eba65ade873993a890201e;Fri May 21 10:23:17 2010 -0400
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;095734ac5064329c03eba65ade873993a890201e;Fri May 21 10:23:17 2010 -0400
SameMethod;true;clojure.lang.Namespace#intern(Symbol);clojure.lang.Namespace#intern(Symbol);095734ac5064329c03eba65ade873993a890201e;Fri May 21 10:23:17 2010 -0400
SameMethod;true;clojure.lang.Namespace#reference(Symbol, Object);clojure.lang.Namespace#reference(Symbol, Object);095734ac5064329c03eba65ade873993a890201e;Fri May 21 10:23:17 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;050693123206c0b46c990f17fe127a61bd50edb9;Sat May 22 14:28:33 2010 -0400
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;050693123206c0b46c990f17fe127a61bd50edb9;Sat May 22 14:28:33 2010 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);050693123206c0b46c990f17fe127a61bd50edb9;Sat May 22 14:28:33 2010 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;45b54867d27fabee2e9a6b1dd21b8377d9b3fd92;Mon May 24 10:06:15 2010 -0400
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;7700d66d5a657d2102ddeb560d52bca758669ed9;Wed May 26 09:17:00 2010 +0200
SameType;true;clojure.lang.PersistentVector.TransientVector;clojure.lang.PersistentVector.TransientVector;7700d66d5a657d2102ddeb560d52bca758669ed9;Wed May 26 09:17:00 2010 +0200
SameMethod;true;clojure.lang.PersistentVector.TransientVector#pop();clojure.lang.PersistentVector.TransientVector#pop();7700d66d5a657d2102ddeb560d52bca758669ed9;Wed May 26 09:17:00 2010 +0200
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;b2f9b4413ed0a7a299a286663e07c26445db013b;Thu May 27 21:22:18 2010 -0400
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;b2f9b4413ed0a7a299a286663e07c26445db013b;Thu May 27 21:22:18 2010 -0400
SameMethod;true;clojure.lang.Compiler.DefExpr#eval();clojure.lang.Compiler.DefExpr#eval();b2f9b4413ed0a7a299a286663e07c26445db013b;Thu May 27 21:22:18 2010 -0400
SameMethod;true;clojure.lang.Compiler.DefExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.DefExpr#emit(C, ObjExpr, GeneratorAdapter);b2f9b4413ed0a7a299a286663e07c26445db013b;Thu May 27 21:22:18 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;b2f9b4413ed0a7a299a286663e07c26445db013b;Thu May 27 21:22:18 2010 -0400
SameType;true;clojure.lang.DynamicClassLoader;clojure.lang.DynamicClassLoader;f47b3d6f028e0370c495383731a449092d0ae451;Tue Jun 1 11:12:49 2010 -0400
SameMethod;true;clojure.lang.DynamicClassLoader#defineClass(String, byte[], Object);clojure.lang.DynamicClassLoader#defineClass(String, byte[], Object);f47b3d6f028e0370c495383731a449092d0ae451;Tue Jun 1 11:12:49 2010 -0400
ExtractMethod;true;clojure.lang.Compiler.IfExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.IfExpr#doEmit(C, ObjExpr, GeneratorAdapter, boolean);c37c15c81a299c617779bff738480b1a2fb45524;Wed Jun 2 12:05:36 2010 -0400
ExtractMethod;true;clojure.lang.Compiler.LetExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.LetExpr#doEmit(C, ObjExpr, GeneratorAdapter, boolean);c37c15c81a299c617779bff738480b1a2fb45524;Wed Jun 2 12:05:36 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c37c15c81a299c617779bff738480b1a2fb45524;Wed Jun 2 12:05:36 2010 -0400
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;c37c15c81a299c617779bff738480b1a2fb45524;Wed Jun 2 12:05:36 2010 -0400
SameMethod;true;clojure.lang.Compiler.IfExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.IfExpr#emit(C, ObjExpr, GeneratorAdapter);c37c15c81a299c617779bff738480b1a2fb45524;Wed Jun 2 12:05:36 2010 -0400
SameMethod;true;clojure.lang.Compiler.IfExpr#hasJavaClass();clojure.lang.Compiler.IfExpr#hasJavaClass();c37c15c81a299c617779bff738480b1a2fb45524;Wed Jun 2 12:05:36 2010 -0400
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;c37c15c81a299c617779bff738480b1a2fb45524;Wed Jun 2 12:05:36 2010 -0400
SameMethod;true;clojure.lang.Compiler.LetExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.LetExpr#emit(C, ObjExpr, GeneratorAdapter);c37c15c81a299c617779bff738480b1a2fb45524;Wed Jun 2 12:05:36 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;c37c15c81a299c617779bff738480b1a2fb45524;Wed Jun 2 12:05:36 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;edbc2cad32350492eee0cdafc24b6ec3b3ec6105;Fri Apr 30 11:25:20 2010 +0200
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);edbc2cad32350492eee0cdafc24b6ec3b3ec6105;Fri Apr 30 11:25:20 2010 +0200
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;59ecee6a6f037612b3b1ed2d939f5e0017f2dd11;Fri May 28 08:27:13 2010 +0200
SameType;true;clojure.lang.PersistentVector.TransientVector;clojure.lang.PersistentVector.TransientVector;59ecee6a6f037612b3b1ed2d939f5e0017f2dd11;Fri May 28 08:27:13 2010 +0200
SameMethod;true;clojure.lang.PersistentVector.TransientVector#pop();clojure.lang.PersistentVector.TransientVector#pop();59ecee6a6f037612b3b1ed2d939f5e0017f2dd11;Fri May 28 08:27:13 2010 +0200
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;a804f7c916095ffb5dce64ddfe90397310b1dfd4;Tue Jun 8 16:23:14 2010 +0200
SameType;true;clojure.lang.LispReader.MetaReader;clojure.lang.LispReader.MetaReader;a804f7c916095ffb5dce64ddfe90397310b1dfd4;Tue Jun 8 16:23:14 2010 +0200
SameMethod;true;clojure.lang.LispReader.MetaReader#invoke(Object, Object);clojure.lang.LispReader.MetaReader#invoke(Object, Object);a804f7c916095ffb5dce64ddfe90397310b1dfd4;Tue Jun 8 16:23:14 2010 +0200
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;ca737838aa65970775c58cd3a72fea4221a67bda;Tue Jun 8 16:11:23 2010 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;ca737838aa65970775c58cd3a72fea4221a67bda;Tue Jun 8 16:11:23 2010 -0400
SameMethod;true;clojure.lang.Compiler.HostExpr#maybeClass(Object, boolean);clojure.lang.Compiler.HostExpr#maybeClass(Object, boolean);ca737838aa65970775c58cd3a72fea4221a67bda;Tue Jun 8 16:11:23 2010 -0400
SameType;true;clojure.lang.Compiler.InstanceOfExpr;clojure.lang.Compiler.InstanceOfExpr;ca737838aa65970775c58cd3a72fea4221a67bda;Tue Jun 8 16:11:23 2010 -0400
SameMethod;true;clojure.lang.Compiler.InstanceOfExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceOfExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);ca737838aa65970775c58cd3a72fea4221a67bda;Tue Jun 8 16:11:23 2010 -0400
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;ca737838aa65970775c58cd3a72fea4221a67bda;Tue Jun 8 16:11:23 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);ca737838aa65970775c58cd3a72fea4221a67bda;Tue Jun 8 16:11:23 2010 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;ca737838aa65970775c58cd3a72fea4221a67bda;Tue Jun 8 16:11:23 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitLocal(GeneratorAdapter, LocalBinding, boolean);clojure.lang.Compiler.ObjExpr#emitLocal(GeneratorAdapter, LocalBinding, boolean);ca737838aa65970775c58cd3a72fea4221a67bda;Tue Jun 8 16:11:23 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitUnboxedLocal(GeneratorAdapter, LocalBinding);clojure.lang.Compiler.ObjExpr#emitUnboxedLocal(GeneratorAdapter, LocalBinding);ca737838aa65970775c58cd3a72fea4221a67bda;Tue Jun 8 16:11:23 2010 -0400
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;ca737838aa65970775c58cd3a72fea4221a67bda;Tue Jun 8 16:11:23 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#getReturnType();clojure.lang.Compiler.FnMethod#getReturnType();ca737838aa65970775c58cd3a72fea4221a67bda;Tue Jun 8 16:11:23 2010 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;ca737838aa65970775c58cd3a72fea4221a67bda;Tue Jun 8 16:11:23 2010 -0400
SameType;true;clojure.lang.LispReader.MetaReader;clojure.lang.LispReader.MetaReader;ca737838aa65970775c58cd3a72fea4221a67bda;Tue Jun 8 16:11:23 2010 -0400
SameMethod;true;clojure.lang.LispReader.MetaReader#invoke(Object, Object);clojure.lang.LispReader.MetaReader#invoke(Object, Object);ca737838aa65970775c58cd3a72fea4221a67bda;Tue Jun 8 16:11:23 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;4db0b1f9c37fc0581bc54f13c8dfbe66f8bf02dc;Tue Jun 8 21:33:33 2010 -0400
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;4db0b1f9c37fc0581bc54f13c8dfbe66f8bf02dc;Tue Jun 8 21:33:33 2010 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);4db0b1f9c37fc0581bc54f13c8dfbe66f8bf02dc;Tue Jun 8 21:33:33 2010 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);4db0b1f9c37fc0581bc54f13c8dfbe66f8bf02dc;Tue Jun 8 21:33:33 2010 -0400
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;4db0b1f9c37fc0581bc54f13c8dfbe66f8bf02dc;Tue Jun 8 21:33:33 2010 -0400
SameMethod;true;clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);4db0b1f9c37fc0581bc54f13c8dfbe66f8bf02dc;Tue Jun 8 21:33:33 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;48bfe3bba0035f555a045ae4d2a5933ff57eea0a;Wed Jun 9 16:23:46 2010 -0400
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;48bfe3bba0035f555a045ae4d2a5933ff57eea0a;Wed Jun 9 16:23:46 2010 -0400
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;48bfe3bba0035f555a045ae4d2a5933ff57eea0a;Wed Jun 9 16:23:46 2010 -0400
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);48bfe3bba0035f555a045ae4d2a5933ff57eea0a;Wed Jun 9 16:23:46 2010 -0400
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;48bfe3bba0035f555a045ae4d2a5933ff57eea0a;Wed Jun 9 16:23:46 2010 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);48bfe3bba0035f555a045ae4d2a5933ff57eea0a;Wed Jun 9 16:23:46 2010 -0400
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;48bfe3bba0035f555a045ae4d2a5933ff57eea0a;Wed Jun 9 16:23:46 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);48bfe3bba0035f555a045ae4d2a5933ff57eea0a;Wed Jun 9 16:23:46 2010 -0400
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;48bfe3bba0035f555a045ae4d2a5933ff57eea0a;Wed Jun 9 16:23:46 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);48bfe3bba0035f555a045ae4d2a5933ff57eea0a;Wed Jun 9 16:23:46 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#doEmitStatic(ObjExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#doEmitStatic(ObjExpr, ClassVisitor);48bfe3bba0035f555a045ae4d2a5933ff57eea0a;Wed Jun 9 16:23:46 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameMethod;true;clojure.lang.Compiler.DefExpr#eval();clojure.lang.Compiler.DefExpr#eval();662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameMethod;true;clojure.lang.Compiler.DefExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.DefExpr#emit(C, ObjExpr, GeneratorAdapter);662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameType;true;clojure.lang.Compiler.KeywordExpr;clojure.lang.Compiler.KeywordExpr;662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameType;true;clojure.lang.Compiler.MetaExpr;clojure.lang.Compiler.MetaExpr;662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameType;true;clojure.lang.Compiler.MapExpr;clojure.lang.Compiler.MapExpr;662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameMethod;true;clojure.lang.Compiler.MapExpr#parse(C, IPersistentMap);clojure.lang.Compiler.MapExpr#parse(C, IPersistentMap);662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameType;true;clojure.lang.Compiler.SetExpr;clojure.lang.Compiler.SetExpr;662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameMethod;true;clojure.lang.Compiler.SetExpr#parse(C, IPersistentSet);clojure.lang.Compiler.SetExpr#parse(C, IPersistentSet);662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameType;true;clojure.lang.Compiler.VectorExpr;clojure.lang.Compiler.VectorExpr;662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameMethod;true;clojure.lang.Compiler.VectorExpr#parse(C, IPersistentVector);clojure.lang.Compiler.VectorExpr#parse(C, IPersistentVector);662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameType;true;clojure.lang.Compiler.StaticInvokeExpr;clojure.lang.Compiler.StaticInvokeExpr;662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameMethod;true;clojure.lang.Compiler.StaticInvokeExpr#parse(Var, ISeq);clojure.lang.Compiler.StaticInvokeExpr#parse(Var, ISeq);662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr.ReifyParser;clojure.lang.Compiler.NewInstanceExpr.ReifyParser;662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr.ReifyParser#parse(C, Object);clojure.lang.Compiler.NewInstanceExpr.ReifyParser#parse(C, Object);662b38415e15edcbd720628c0c07a8f8817c96b4;Wed Jun 9 20:50:52 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;0d7aed7deeebc3a540815eb245320597d129e2f2;Thu Jun 10 07:55:57 2010 -0400
SameType;true;clojure.lang.Compiler.SetExpr;clojure.lang.Compiler.SetExpr;0d7aed7deeebc3a540815eb245320597d129e2f2;Thu Jun 10 07:55:57 2010 -0400
SameMethod;true;clojure.lang.Compiler.SetExpr#parse(C, IPersistentSet);clojure.lang.Compiler.SetExpr#parse(C, IPersistentSet);0d7aed7deeebc3a540815eb245320597d129e2f2;Thu Jun 10 07:55:57 2010 -0400
SameType;true;clojure.lang.Compiler.VectorExpr;clojure.lang.Compiler.VectorExpr;0d7aed7deeebc3a540815eb245320597d129e2f2;Thu Jun 10 07:55:57 2010 -0400
SameMethod;true;clojure.lang.Compiler.VectorExpr#parse(C, IPersistentVector);clojure.lang.Compiler.VectorExpr#parse(C, IPersistentVector);0d7aed7deeebc3a540815eb245320597d129e2f2;Thu Jun 10 07:55:57 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;27d9f6af56549a04c772cfba8eebc8310deaec0c;Thu Jun 10 10:04:13 2010 -0400
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;27d9f6af56549a04c772cfba8eebc8310deaec0c;Thu Jun 10 10:04:13 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);27d9f6af56549a04c772cfba8eebc8310deaec0c;Thu Jun 10 10:04:13 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;826c815fbd912c79fdd501d5fe0d8678f0a3450b;Thu Jun 10 12:50:32 2010 -0400
SameType;true;clojure.lang.Compiler.StaticInvokeExpr;clojure.lang.Compiler.StaticInvokeExpr;826c815fbd912c79fdd501d5fe0d8678f0a3450b;Thu Jun 10 12:50:32 2010 -0400
SameMethod;true;clojure.lang.Compiler.StaticInvokeExpr#parse(Var, ISeq);clojure.lang.Compiler.StaticInvokeExpr#parse(Var, ISeq);826c815fbd912c79fdd501d5fe0d8678f0a3450b;Thu Jun 10 12:50:32 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c7af275d4ee33cdc1794c8df8fa1e6d39039ac84;Thu Jun 10 13:54:35 2010 -0400
SameType;true;clojure.lang.Compiler.KeywordInvokeExpr;clojure.lang.Compiler.KeywordInvokeExpr;c7af275d4ee33cdc1794c8df8fa1e6d39039ac84;Thu Jun 10 13:54:35 2010 -0400
SameMethod;true;clojure.lang.Compiler.KeywordInvokeExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.KeywordInvokeExpr#emit(C, ObjExpr, GeneratorAdapter);c7af275d4ee33cdc1794c8df8fa1e6d39039ac84;Thu Jun 10 13:54:35 2010 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;c7af275d4ee33cdc1794c8df8fa1e6d39039ac84;Thu Jun 10 13:54:35 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);c7af275d4ee33cdc1794c8df8fa1e6d39039ac84;Thu Jun 10 13:54:35 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitKeywordCallsites(GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitKeywordCallsites(GeneratorAdapter);c7af275d4ee33cdc1794c8df8fa1e6d39039ac84;Thu Jun 10 13:54:35 2010 -0400
SameType;true;clojure.lang.ILookupSite;clojure.lang.ILookupSite;c7af275d4ee33cdc1794c8df8fa1e6d39039ac84;Thu Jun 10 13:54:35 2010 -0400
SameType;true;clojure.lang.KeywordLookupSite;clojure.lang.KeywordLookupSite;c7af275d4ee33cdc1794c8df8fa1e6d39039ac84;Thu Jun 10 13:54:35 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;9ad685bac487eae0e37341b2ff9f642a575d1a0d;Thu Jun 10 17:44:05 2010 -0400
SameType;true;clojure.lang.Compiler.StaticInvokeExpr;clojure.lang.Compiler.StaticInvokeExpr;9ad685bac487eae0e37341b2ff9f642a575d1a0d;Thu Jun 10 17:44:05 2010 -0400
SameMethod;true;clojure.lang.Compiler.StaticInvokeExpr#getJavaClass();clojure.lang.Compiler.StaticInvokeExpr#getJavaClass();9ad685bac487eae0e37341b2ff9f642a575d1a0d;Thu Jun 10 17:44:05 2010 -0400
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;9ad685bac487eae0e37341b2ff9f642a575d1a0d;Thu Jun 10 17:44:05 2010 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);9ad685bac487eae0e37341b2ff9f642a575d1a0d;Thu Jun 10 17:44:05 2010 -0400
RenameMethod;false;clojure.lang.Numbers#reduce(BigInteger);clojure.lang.Numbers#reduceBigInteger(BigInteger);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
MoveMethod;true;clojure.lang.Numbers.IntegerBitOps#not(Number);clojure.lang.Numbers#not(long);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
MoveMethod;true;clojure.lang.Numbers.IntegerBitOps#or(Number, Number);clojure.lang.Numbers#or(long, long);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
MoveMethod;true;clojure.lang.Numbers.IntegerBitOps#and(Number, Number);clojure.lang.Numbers#and(long, long);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
MoveMethod;true;clojure.lang.Numbers.IntegerBitOps#xor(Number, Number);clojure.lang.Numbers#xor(long, long);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameType;true;clojure.lang.Compiler.CaseExpr;clojure.lang.Compiler.CaseExpr;c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameType;true;clojure.lang.Compiler.CaseExpr.Parser;clojure.lang.Compiler.CaseExpr.Parser;c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Compiler.CaseExpr.Parser#parse(C, Object);clojure.lang.Compiler.CaseExpr.Parser#parse(C, Object);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.LispReader#matchNumber(String);clojure.lang.LispReader#matchNumber(String);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameType;true;clojure.lang.Numbers.Ops;clojure.lang.Numbers.Ops;c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameType;true;clojure.lang.Numbers.BitOps;clojure.lang.Numbers.BitOps;c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Numbers#quotient(double, double);clojure.lang.Numbers#quotient(double, double);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Numbers#remainder(double, double);clojure.lang.Numbers#remainder(double, double);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Numbers#reduce(Number);clojure.lang.Numbers#reduce(Number);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Numbers#reduce(long);clojure.lang.Numbers#reduce(long);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Numbers#divide(BigInteger, BigInteger);clojure.lang.Numbers#divide(BigInteger, BigInteger);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameType;true;clojure.lang.Numbers.LongOps;clojure.lang.Numbers.LongOps;c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#add(Number, Number);clojure.lang.Numbers.LongOps#add(Number, Number);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#multiply(Number, Number);clojure.lang.Numbers.LongOps#multiply(Number, Number);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#negate(Number);clojure.lang.Numbers.LongOps#negate(Number);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#inc(Number);clojure.lang.Numbers.LongOps#inc(Number);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#dec(Number);clojure.lang.Numbers.LongOps#dec(Number);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameType;true;clojure.lang.Numbers.DoubleOps;clojure.lang.Numbers.DoubleOps;c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameType;true;clojure.lang.Numbers.RatioOps;clojure.lang.Numbers.RatioOps;c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.RatioOps#quotient(Number, Number);clojure.lang.Numbers.RatioOps#quotient(Number, Number);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameType;true;clojure.lang.Numbers.BigIntegerOps;clojure.lang.Numbers.BigIntegerOps;c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#add(Number, Number);clojure.lang.Numbers.BigIntegerOps#add(Number, Number);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#multiply(Number, Number);clojure.lang.Numbers.BigIntegerOps#multiply(Number, Number);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#inc(Number);clojure.lang.Numbers.BigIntegerOps#inc(Number);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#dec(Number);clojure.lang.Numbers.BigIntegerOps#dec(Number);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameType;true;clojure.lang.Numbers.BigDecimalOps;clojure.lang.Numbers.BigDecimalOps;c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameType;true;clojure.lang.Numbers.LongBitOps;clojure.lang.Numbers.LongBitOps;c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#shiftLeft(Number, int);clojure.lang.Numbers.LongBitOps#shiftLeft(Number, int);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameType;true;clojure.lang.Numbers.BigIntegerBitOps;clojure.lang.Numbers.BigIntegerBitOps;c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Numbers#ops(Object);clojure.lang.Numbers#ops(Object);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.Numbers#bitOps(Object);clojure.lang.Numbers#bitOps(Object);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);c5d0985af6c17103eaabe523e442f14c29916266;Sat Jun 12 12:02:10 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;8fbafa92faacb92a9bd49fa1e9b7e2c8c0747c07;Sun Jun 13 07:23:32 2010 -0400
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;8fbafa92faacb92a9bd49fa1e9b7e2c8c0747c07;Sun Jun 13 07:23:32 2010 -0400
SameMethod;true;clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);8fbafa92faacb92a9bd49fa1e9b7e2c8c0747c07;Sun Jun 13 07:23:32 2010 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;8fbafa92faacb92a9bd49fa1e9b7e2c8c0747c07;Sun Jun 13 07:23:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#quotient(Number, Number);clojure.lang.Numbers#quotient(Number, Number);8fbafa92faacb92a9bd49fa1e9b7e2c8c0747c07;Sun Jun 13 07:23:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#remainder(Number, Number);clojure.lang.Numbers#remainder(Number, Number);8fbafa92faacb92a9bd49fa1e9b7e2c8c0747c07;Sun Jun 13 07:23:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#quotient(double, double);clojure.lang.Numbers#quotient(double, double);8fbafa92faacb92a9bd49fa1e9b7e2c8c0747c07;Sun Jun 13 07:23:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#remainder(double, double);clojure.lang.Numbers#remainder(double, double);8fbafa92faacb92a9bd49fa1e9b7e2c8c0747c07;Sun Jun 13 07:23:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#divide(BigInteger, BigInteger);clojure.lang.Numbers#divide(BigInteger, BigInteger);8fbafa92faacb92a9bd49fa1e9b7e2c8c0747c07;Sun Jun 13 07:23:32 2010 -0400
SameType;true;clojure.lang.Numbers.RatioOps;clojure.lang.Numbers.RatioOps;8fbafa92faacb92a9bd49fa1e9b7e2c8c0747c07;Sun Jun 13 07:23:32 2010 -0400
SameMethod;true;clojure.lang.Numbers.RatioOps#quotient(Number, Number);clojure.lang.Numbers.RatioOps#quotient(Number, Number);8fbafa92faacb92a9bd49fa1e9b7e2c8c0747c07;Sun Jun 13 07:23:32 2010 -0400
SameType;true;clojure.lang.Numbers.BigIntegerOps;clojure.lang.Numbers.BigIntegerOps;8fbafa92faacb92a9bd49fa1e9b7e2c8c0747c07;Sun Jun 13 07:23:32 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#add(Number, Number);clojure.lang.Numbers.BigIntegerOps#add(Number, Number);8fbafa92faacb92a9bd49fa1e9b7e2c8c0747c07;Sun Jun 13 07:23:32 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#multiply(Number, Number);clojure.lang.Numbers.BigIntegerOps#multiply(Number, Number);8fbafa92faacb92a9bd49fa1e9b7e2c8c0747c07;Sun Jun 13 07:23:32 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#inc(Number);clojure.lang.Numbers.BigIntegerOps#inc(Number);8fbafa92faacb92a9bd49fa1e9b7e2c8c0747c07;Sun Jun 13 07:23:32 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#dec(Number);clojure.lang.Numbers.BigIntegerOps#dec(Number);8fbafa92faacb92a9bd49fa1e9b7e2c8c0747c07;Sun Jun 13 07:23:32 2010 -0400
SameType;true;clojure.lang.Numbers.LongBitOps;clojure.lang.Numbers.LongBitOps;8fbafa92faacb92a9bd49fa1e9b7e2c8c0747c07;Sun Jun 13 07:23:32 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#shiftLeft(Number, int);clojure.lang.Numbers.LongBitOps#shiftLeft(Number, int);8fbafa92faacb92a9bd49fa1e9b7e2c8c0747c07;Sun Jun 13 07:23:32 2010 -0400
RenameMethod;false;clojure.lang.Numbers#add(float, float);clojure.lang.Numbers#unchecked_int_add(int, int);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
RenameMethod;false;clojure.lang.Numbers#dec(float);clojure.lang.Numbers#unchecked_int_dec(int);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
RenameMethod;false;clojure.lang.Numbers#divide(float, float);clojure.lang.Numbers#unchecked_int_divide(int, int);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
RenameMethod;false;clojure.lang.Numbers#inc(float);clojure.lang.Numbers#unchecked_int_inc(int);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
RenameMethod;false;clojure.lang.Numbers#minus(float);clojure.lang.Numbers#unchecked_int_negate(int);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
RenameMethod;false;clojure.lang.Numbers#minus(float, float);clojure.lang.Numbers#unchecked_int_subtract(int, int);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
RenameMethod;false;clojure.lang.Numbers#multiply(float, float);clojure.lang.Numbers#unchecked_int_multiply(int, int);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
RenameMethod;false;clojure.lang.Numbers#shiftLeft(int, int);clojure.lang.Numbers#shiftLeftInt(int, int);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
RenameMethod;false;clojure.lang.Numbers#shiftRight(int, int);clojure.lang.Numbers#shiftRightInt(int, int);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
RenameMethod;false;clojure.lang.Numbers#unchecked_add(int, int);clojure.lang.Numbers#unchecked_long_add(long, long);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
RenameMethod;false;clojure.lang.Numbers#unchecked_dec(int);clojure.lang.Numbers#unchecked_long_dec(long);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
RenameMethod;false;clojure.lang.Numbers#unchecked_divide(int, int);clojure.lang.Numbers#unchecked_long_divide(long, long);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
RenameMethod;false;clojure.lang.Numbers#unchecked_inc(int);clojure.lang.Numbers#unchecked_long_inc(long);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
RenameMethod;false;clojure.lang.Numbers#unchecked_multiply(int, int);clojure.lang.Numbers#unchecked_long_multiply(long, long);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
RenameMethod;false;clojure.lang.Numbers#unchecked_negate(int);clojure.lang.Numbers#unchecked_long_negate(long);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
RenameMethod;false;clojure.lang.Numbers#unchecked_remainder(int, int);clojure.lang.Numbers#unchecked_int_remainder(int, int);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
RenameMethod;false;clojure.lang.Numbers#unchecked_remainder(long, long);clojure.lang.Numbers#unchecked_long_remainder(long, long);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
RenameMethod;false;clojure.lang.Numbers#unchecked_subtract(int, int);clojure.lang.Numbers#unchecked_long_subtract(long, long);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
ExtractMethod;true;clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.ObjMethod#emitBody(ObjExpr, GeneratorAdapter, Class, Expr);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
ExtractMethod;true;clojure.lang.Compiler.FnMethod#doEmitStatic(ObjExpr, ClassVisitor);clojure.lang.Compiler.ObjMethod#emitBody(ObjExpr, GeneratorAdapter, Class, Expr);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
ExtractMethod;true;clojure.lang.Numbers#reduceBigInteger(BigInteger);clojure.lang.Numbers#box(long);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Compiler.HostExpr#emitBoxReturn(ObjExpr, GeneratorAdapter, Class);clojure.lang.Compiler.HostExpr#emitBoxReturn(ObjExpr, GeneratorAdapter, Class);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameType;true;clojure.lang.Compiler.MethodExpr;clojure.lang.Compiler.MethodExpr;6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Compiler.MethodExpr#emitTypedArgs(ObjExpr, GeneratorAdapter, Class[], IPersistentVector);clojure.lang.Compiler.MethodExpr#emitTypedArgs(ObjExpr, GeneratorAdapter, Class[], IPersistentVector);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#doEmitStatic(ObjExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#doEmitStatic(ObjExpr, ClassVisitor);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameType;true;clojure.lang.Compiler.ObjMethod;clojure.lang.Compiler.ObjMethod;6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.LispReader#matchNumber(String);clojure.lang.LispReader#matchNumber(String);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers#quotient(double, double);clojure.lang.Numbers#quotient(double, double);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers#remainder(double, double);clojure.lang.Numbers#remainder(double, double);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers#reduceBigInteger(BigInteger);clojure.lang.Numbers#reduceBigInteger(BigInteger);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers#divide(BigInteger, BigInteger);clojure.lang.Numbers#divide(BigInteger, BigInteger);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers#shiftLeft(long, int);clojure.lang.Numbers#shiftLeft(long, int);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameType;true;clojure.lang.Numbers.LongOps;clojure.lang.Numbers.LongOps;6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#add(Number, Number);clojure.lang.Numbers.LongOps#add(Number, Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#multiply(Number, Number);clojure.lang.Numbers.LongOps#multiply(Number, Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#divide(Number, Number);clojure.lang.Numbers.LongOps#divide(Number, Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#quotient(Number, Number);clojure.lang.Numbers.LongOps#quotient(Number, Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#remainder(Number, Number);clojure.lang.Numbers.LongOps#remainder(Number, Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#negate(Number);clojure.lang.Numbers.LongOps#negate(Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#inc(Number);clojure.lang.Numbers.LongOps#inc(Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#dec(Number);clojure.lang.Numbers.LongOps#dec(Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameType;true;clojure.lang.Numbers.DoubleOps;clojure.lang.Numbers.DoubleOps;6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.DoubleOps#add(Number, Number);clojure.lang.Numbers.DoubleOps#add(Number, Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.DoubleOps#multiply(Number, Number);clojure.lang.Numbers.DoubleOps#multiply(Number, Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.DoubleOps#divide(Number, Number);clojure.lang.Numbers.DoubleOps#divide(Number, Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.DoubleOps#negate(Number);clojure.lang.Numbers.DoubleOps#negate(Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.DoubleOps#inc(Number);clojure.lang.Numbers.DoubleOps#inc(Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.DoubleOps#dec(Number);clojure.lang.Numbers.DoubleOps#dec(Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameType;true;clojure.lang.Numbers.LongBitOps;clojure.lang.Numbers.LongBitOps;6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#not(Number);clojure.lang.Numbers.LongBitOps#not(Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#and(Number, Number);clojure.lang.Numbers.LongBitOps#and(Number, Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#or(Number, Number);clojure.lang.Numbers.LongBitOps#or(Number, Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#xor(Number, Number);clojure.lang.Numbers.LongBitOps#xor(Number, Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#andNot(Number, Number);clojure.lang.Numbers.LongBitOps#andNot(Number, Number);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#clearBit(Number, int);clojure.lang.Numbers.LongBitOps#clearBit(Number, int);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#setBit(Number, int);clojure.lang.Numbers.LongBitOps#setBit(Number, int);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#flipBit(Number, int);clojure.lang.Numbers.LongBitOps#flipBit(Number, int);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#shiftLeft(Number, int);clojure.lang.Numbers.LongBitOps#shiftLeft(Number, int);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#shiftRight(Number, int);clojure.lang.Numbers.LongBitOps#shiftRight(Number, int);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers#num(float);clojure.lang.Numbers#num(float);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers#num(double);clojure.lang.Numbers#num(double);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers#num(int);clojure.lang.Numbers#num(int);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Numbers#num(long);clojure.lang.Numbers#num(long);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Reflector#paramArgTypeMatch(Class, Class);clojure.lang.Reflector#paramArgTypeMatch(Class, Class);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameMethod;true;clojure.lang.Reflector#prepRet(Object);clojure.lang.Reflector#prepRet(Object);6ab3e4cd672092823a04c944210a23c29142785d;Tue Jun 15 23:13:05 2010 -0400
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;0deef3ebaac4b897c1b5f4cbb583665cc2d7383b;Wed Jun 16 08:44:15 2010 -0400
SameMethod;true;clojure.lang.LazySeq#hashCode();clojure.lang.LazySeq#hashCode();0deef3ebaac4b897c1b5f4cbb583665cc2d7383b;Wed Jun 16 08:44:15 2010 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;e4a76e058ceed9b152ffd00b3f83e2800207bc25;Wed Jun 16 09:18:22 2010 -0400
SameMethod;true;clojure.lang.Numbers#quotient(double, double);clojure.lang.Numbers#quotient(double, double);e4a76e058ceed9b152ffd00b3f83e2800207bc25;Wed Jun 16 09:18:22 2010 -0400
SameMethod;true;clojure.lang.Numbers#remainder(double, double);clojure.lang.Numbers#remainder(double, double);e4a76e058ceed9b152ffd00b3f83e2800207bc25;Wed Jun 16 09:18:22 2010 -0400
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_int;clojure.lang.ArraySeq.ArraySeq_int;db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_int#indexOf(Object);clojure.lang.ArraySeq.ArraySeq_int#indexOf(Object);db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_int#lastIndexOf(Object);clojure.lang.ArraySeq.ArraySeq_int#lastIndexOf(Object);db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_float;clojure.lang.ArraySeq.ArraySeq_float;db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_float#first();clojure.lang.ArraySeq.ArraySeq_float#first();db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_float#reduce(IFn);clojure.lang.ArraySeq.ArraySeq_float#reduce(IFn);db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_float#reduce(IFn, Object);clojure.lang.ArraySeq.ArraySeq_float#reduce(IFn, Object);db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_float#indexOf(Object);clojure.lang.ArraySeq.ArraySeq_float#indexOf(Object);db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_float#lastIndexOf(Object);clojure.lang.ArraySeq.ArraySeq_float#lastIndexOf(Object);db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_double;clojure.lang.ArraySeq.ArraySeq_double;db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_double#indexOf(Object);clojure.lang.ArraySeq.ArraySeq_double#indexOf(Object);db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_double#lastIndexOf(Object);clojure.lang.ArraySeq.ArraySeq_double#lastIndexOf(Object);db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_long;clojure.lang.ArraySeq.ArraySeq_long;db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_long#first();clojure.lang.ArraySeq.ArraySeq_long#first();db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_long#reduce(IFn);clojure.lang.ArraySeq.ArraySeq_long#reduce(IFn);db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_long#reduce(IFn, Object);clojure.lang.ArraySeq.ArraySeq_long#reduce(IFn, Object);db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_long#indexOf(Object);clojure.lang.ArraySeq.ArraySeq_long#indexOf(Object);db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_long#lastIndexOf(Object);clojure.lang.ArraySeq.ArraySeq_long#lastIndexOf(Object);db653b5e18501d427bf1893bca1481e4543a35bf;Wed Jun 16 09:34:08 2010 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;d97599c35c4cf252d4ecf2a33d9af5c24ac82fa6;Wed Jun 16 11:58:23 2010 -0400
SameMethod;true;clojure.lang.Numbers#toBigDecimal(Object);clojure.lang.Numbers#toBigDecimal(Object);d97599c35c4cf252d4ecf2a33d9af5c24ac82fa6;Wed Jun 16 11:58:23 2010 -0400
SameType;true;clojure.lang.Numbers.RatioOps;clojure.lang.Numbers.RatioOps;d97599c35c4cf252d4ecf2a33d9af5c24ac82fa6;Wed Jun 16 11:58:23 2010 -0400
SameMethod;true;clojure.lang.Numbers.RatioOps#opsWith(BigDecimalOps);clojure.lang.Numbers.RatioOps#opsWith(BigDecimalOps);d97599c35c4cf252d4ecf2a33d9af5c24ac82fa6;Wed Jun 16 11:58:23 2010 -0400
SameType;true;clojure.lang.Numbers.BigDecimalOps;clojure.lang.Numbers.BigDecimalOps;d97599c35c4cf252d4ecf2a33d9af5c24ac82fa6;Wed Jun 16 11:58:23 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigDecimalOps#opsWith(RatioOps);clojure.lang.Numbers.BigDecimalOps#opsWith(RatioOps);d97599c35c4cf252d4ecf2a33d9af5c24ac82fa6;Wed Jun 16 11:58:23 2010 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;a1a25da6b717af52cbd4e5c5e87de921ec8478eb;Wed Jun 16 12:47:40 2010 -0400
SameMethod;true;clojure.lang.LispReader#matchNumber(String);clojure.lang.LispReader#matchNumber(String);a1a25da6b717af52cbd4e5c5e87de921ec8478eb;Wed Jun 16 12:47:40 2010 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;a1a25da6b717af52cbd4e5c5e87de921ec8478eb;Wed Jun 16 12:47:40 2010 -0400
SameType;true;clojure.lang.Numbers.RatioOps;clojure.lang.Numbers.RatioOps;a1a25da6b717af52cbd4e5c5e87de921ec8478eb;Wed Jun 16 12:47:40 2010 -0400
SameMethod;true;clojure.lang.Numbers.RatioOps#add(Number, Number);clojure.lang.Numbers.RatioOps#add(Number, Number);a1a25da6b717af52cbd4e5c5e87de921ec8478eb;Wed Jun 16 12:47:40 2010 -0400
SameMethod;true;clojure.lang.Numbers.RatioOps#multiply(Number, Number);clojure.lang.Numbers.RatioOps#multiply(Number, Number);a1a25da6b717af52cbd4e5c5e87de921ec8478eb;Wed Jun 16 12:47:40 2010 -0400
SameMethod;true;clojure.lang.Numbers.RatioOps#divide(Number, Number);clojure.lang.Numbers.RatioOps#divide(Number, Number);a1a25da6b717af52cbd4e5c5e87de921ec8478eb;Wed Jun 16 12:47:40 2010 -0400
SameMethod;true;clojure.lang.Numbers.RatioOps#quotient(Number, Number);clojure.lang.Numbers.RatioOps#quotient(Number, Number);a1a25da6b717af52cbd4e5c5e87de921ec8478eb;Wed Jun 16 12:47:40 2010 -0400
SameMethod;true;clojure.lang.Numbers.RatioOps#remainder(Number, Number);clojure.lang.Numbers.RatioOps#remainder(Number, Number);a1a25da6b717af52cbd4e5c5e87de921ec8478eb;Wed Jun 16 12:47:40 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;4003a1c71cfde9521fc84e5446bbdb146a6ca793;Thu Jun 17 12:14:25 2010 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;4003a1c71cfde9521fc84e5446bbdb146a6ca793;Thu Jun 17 12:14:25 2010 -0400
SameMethod;true;clojure.lang.Compiler.HostExpr#emitUnboxArg(ObjExpr, GeneratorAdapter, Class);clojure.lang.Compiler.HostExpr#emitUnboxArg(ObjExpr, GeneratorAdapter, Class);4003a1c71cfde9521fc84e5446bbdb146a6ca793;Thu Jun 17 12:14:25 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;4003a1c71cfde9521fc84e5446bbdb146a6ca793;Thu Jun 17 12:14:25 2010 -0400
SameMethod;true;clojure.lang.RT#byteCast(Object);clojure.lang.RT#byteCast(Object);4003a1c71cfde9521fc84e5446bbdb146a6ca793;Thu Jun 17 12:14:25 2010 -0400
SameMethod;true;clojure.lang.RT#shortCast(Object);clojure.lang.RT#shortCast(Object);4003a1c71cfde9521fc84e5446bbdb146a6ca793;Thu Jun 17 12:14:25 2010 -0400
SameMethod;true;clojure.lang.RT#intCast(Object);clojure.lang.RT#intCast(Object);4003a1c71cfde9521fc84e5446bbdb146a6ca793;Thu Jun 17 12:14:25 2010 -0400
SameMethod;true;clojure.lang.RT#longCast(Object);clojure.lang.RT#longCast(Object);4003a1c71cfde9521fc84e5446bbdb146a6ca793;Thu Jun 17 12:14:25 2010 -0400
SameType;true;clojure.lang.Util;clojure.lang.Util;863decce5f38c8cde9882a0e172cbfe469f05743;Thu Jun 17 12:42:39 2010 -0400
SameType;true;clojure.lang.Util;clojure.lang.Util;8b849574ca1186c65124b43da8de6be6bace3f96;Thu Jun 17 13:12:59 2010 -0400
SameMethod;true;clojure.lang.Util#equals(long, Object);clojure.lang.Util#equals(long, Object);8b849574ca1186c65124b43da8de6be6bace3f96;Thu Jun 17 13:12:59 2010 -0400
SameMethod;true;clojure.lang.Util#equals(Object, long);clojure.lang.Util#equals(Object, long);8b849574ca1186c65124b43da8de6be6bace3f96;Thu Jun 17 13:12:59 2010 -0400
SameMethod;true;clojure.lang.Util#equals(double, Object);clojure.lang.Util#equals(double, Object);8b849574ca1186c65124b43da8de6be6bace3f96;Thu Jun 17 13:12:59 2010 -0400
SameMethod;true;clojure.lang.Util#equals(Object, double);clojure.lang.Util#equals(Object, double);8b849574ca1186c65124b43da8de6be6bace3f96;Thu Jun 17 13:12:59 2010 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.LispReader#isTerminatingMacro(int);clojure.lang.LispReader#isTerminatingMacro(int);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameType;true;clojure.lang.Numbers.Ops;clojure.lang.Numbers.Ops;c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#divide(BigInteger, BigInteger);clojure.lang.Numbers#divide(BigInteger, BigInteger);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameType;true;clojure.lang.Numbers.LongOps;clojure.lang.Numbers.LongOps;c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameType;true;clojure.lang.Numbers.DoubleOps;clojure.lang.Numbers.DoubleOps;c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameType;true;clojure.lang.Numbers.RatioOps;clojure.lang.Numbers.RatioOps;c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameType;true;clojure.lang.Numbers.BigIntegerOps;clojure.lang.Numbers.BigIntegerOps;c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#add(Number, Number);clojure.lang.Numbers.BigIntegerOps#add(Number, Number);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#multiply(Number, Number);clojure.lang.Numbers.BigIntegerOps#multiply(Number, Number);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#quotient(Number, Number);clojure.lang.Numbers.BigIntegerOps#quotient(Number, Number);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#remainder(Number, Number);clojure.lang.Numbers.BigIntegerOps#remainder(Number, Number);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#negate(Number);clojure.lang.Numbers.BigIntegerOps#negate(Number);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#inc(Number);clojure.lang.Numbers.BigIntegerOps#inc(Number);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#dec(Number);clojure.lang.Numbers.BigIntegerOps#dec(Number);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameType;true;clojure.lang.Numbers.BigDecimalOps;clojure.lang.Numbers.BigDecimalOps;c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#add(double, Object);clojure.lang.Numbers#add(double, Object);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#add(Object, double);clojure.lang.Numbers#add(Object, double);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#minus(double, Object);clojure.lang.Numbers#minus(double, Object);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#minus(Object, double);clojure.lang.Numbers#minus(Object, double);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#multiply(double, Object);clojure.lang.Numbers#multiply(double, Object);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#multiply(Object, double);clojure.lang.Numbers#multiply(Object, double);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#divide(double, Object);clojure.lang.Numbers#divide(double, Object);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#divide(Object, double);clojure.lang.Numbers#divide(Object, double);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#lt(double, Object);clojure.lang.Numbers#lt(double, Object);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#lt(Object, double);clojure.lang.Numbers#lt(Object, double);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#lte(double, Object);clojure.lang.Numbers#lte(double, Object);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#lte(Object, double);clojure.lang.Numbers#lte(Object, double);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#gt(double, Object);clojure.lang.Numbers#gt(double, Object);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#gt(Object, double);clojure.lang.Numbers#gt(Object, double);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#gte(double, Object);clojure.lang.Numbers#gte(double, Object);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#gte(Object, double);clojure.lang.Numbers#gte(Object, double);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#equiv(double, Object);clojure.lang.Numbers#equiv(double, Object);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameMethod;true;clojure.lang.Numbers#equiv(Object, double);clojure.lang.Numbers#equiv(Object, double);c79d28775e06b196ae1426f6c1446d00b621d2e1;Fri Jun 18 16:20:32 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7652f7e935684d3c7851fbcad8ddce97e510a5a6;Fri Jun 18 20:32:46 2010 -0400
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;7652f7e935684d3c7851fbcad8ddce97e510a5a6;Fri Jun 18 20:32:46 2010 -0400
SameMethod;true;clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);7652f7e935684d3c7851fbcad8ddce97e510a5a6;Fri Jun 18 20:32:46 2010 -0400
SameType;true;clojure.lang.Compiler.RecurExpr.Parser;clojure.lang.Compiler.RecurExpr.Parser;7652f7e935684d3c7851fbcad8ddce97e510a5a6;Fri Jun 18 20:32:46 2010 -0400
SameMethod;true;clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);7652f7e935684d3c7851fbcad8ddce97e510a5a6;Fri Jun 18 20:32:46 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;25165a9ccd1001fa7c4725a8219c4108803ae834;Sat Jun 19 09:59:48 2010 -0400
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;25165a9ccd1001fa7c4725a8219c4108803ae834;Sat Jun 19 09:59:48 2010 -0400
SameMethod;true;clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);25165a9ccd1001fa7c4725a8219c4108803ae834;Sat Jun 19 09:59:48 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;0df995dc6d31a9f4d0fe199bc63c4abfac7c86b1;Mon Jun 21 10:42:59 2010 -0400
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;0df995dc6d31a9f4d0fe199bc63c4abfac7c86b1;Mon Jun 21 10:42:59 2010 -0400
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;0df995dc6d31a9f4d0fe199bc63c4abfac7c86b1;Mon Jun 21 10:42:59 2010 -0400
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;0df995dc6d31a9f4d0fe199bc63c4abfac7c86b1;Mon Jun 21 10:42:59 2010 -0400
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);0df995dc6d31a9f4d0fe199bc63c4abfac7c86b1;Mon Jun 21 10:42:59 2010 -0400
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;0df995dc6d31a9f4d0fe199bc63c4abfac7c86b1;Mon Jun 21 10:42:59 2010 -0400
SameType;true;clojure.lang.Compiler.RecurExpr.Parser;clojure.lang.Compiler.RecurExpr.Parser;0df995dc6d31a9f4d0fe199bc63c4abfac7c86b1;Mon Jun 21 10:42:59 2010 -0400
SameMethod;true;clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);0df995dc6d31a9f4d0fe199bc63c4abfac7c86b1;Mon Jun 21 10:42:59 2010 -0400
SameType;true;clojure.lang.Util;clojure.lang.Util;df0e4b677bdb563abdc2aa03cb8e6376eceaf8d5;Wed Jun 23 13:28:16 2010 -0400
SameType;true;clojure.lang.BigInt;clojure.lang.BigInt;c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.BigInt#BigInt(long, BigInteger);clojure.lang.BigInt#BigInt(long, BigInteger);c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.BigInt#fromBigInteger(BigInteger);clojure.lang.BigInt#fromBigInteger(BigInteger);c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.BigInt#fromLong(long);clojure.lang.BigInt#fromLong(long);c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.BigInt#toBigInteger();clojure.lang.BigInt#toBigInteger();c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.BigInt#intValue();clojure.lang.BigInt#intValue();c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.BigInt#longValue();clojure.lang.BigInt#longValue();c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.BigInt#floatValue();clojure.lang.BigInt#floatValue();c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.BigInt#doubleValue();clojure.lang.BigInt#doubleValue();c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.BigInt#byteValue();clojure.lang.BigInt#byteValue();c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.BigInt#shortValue();clojure.lang.BigInt#shortValue();c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.PersistentArrayMap#equalKey(Object, Object);clojure.lang.PersistentArrayMap#equalKey(Object, Object);c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode;clojure.lang.PersistentHashMap.BitmapIndexedNode;c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#assoc(int, int, Object, Object, Box);clojure.lang.PersistentHashMap.BitmapIndexedNode#assoc(int, int, Object, Object, Box);c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#without(int, int, Object);clojure.lang.PersistentHashMap.BitmapIndexedNode#without(int, int, Object);c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#find(int, int, Object);clojure.lang.PersistentHashMap.BitmapIndexedNode#find(int, int, Object);c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#find(int, int, Object, Object);clojure.lang.PersistentHashMap.BitmapIndexedNode#find(int, int, Object, Object);c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#assoc(AtomicReference, int, int, Object, Object, Box);clojure.lang.PersistentHashMap.BitmapIndexedNode#assoc(AtomicReference, int, int, Object, Object, Box);c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#without(AtomicReference, int, int, Object, Box);clojure.lang.PersistentHashMap.BitmapIndexedNode#without(AtomicReference, int, int, Object, Box);c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameType;true;clojure.lang.PersistentHashMap.HashCollisionNode;clojure.lang.PersistentHashMap.HashCollisionNode;c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.PersistentHashMap.HashCollisionNode#find(int, int, Object);clojure.lang.PersistentHashMap.HashCollisionNode#find(int, int, Object);c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.PersistentHashMap.HashCollisionNode#find(int, int, Object, Object);clojure.lang.PersistentHashMap.HashCollisionNode#find(int, int, Object, Object);c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.PersistentHashMap.HashCollisionNode#findIndex(Object);clojure.lang.PersistentHashMap.HashCollisionNode#findIndex(Object);c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameType;true;clojure.lang.Util;clojure.lang.Util;c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameMethod;true;clojure.lang.Util#equiv(Object, Object);clojure.lang.Util#equiv(Object, Object);c8ce4638779e91ba0792549e3dbded2393662a00;Wed Jun 23 16:43:24 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Compiler.HostExpr#emitBoxReturn(ObjExpr, GeneratorAdapter, Class);clojure.lang.Compiler.HostExpr#emitBoxReturn(ObjExpr, GeneratorAdapter, Class);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers#reduceBigInteger(BigInteger);clojure.lang.Numbers#reduceBigInteger(BigInteger);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameType;true;clojure.lang.Numbers.LongOps;clojure.lang.Numbers.LongOps;845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#add(Number, Number);clojure.lang.Numbers.LongOps#add(Number, Number);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#addP(Number, Number);clojure.lang.Numbers.LongOps#addP(Number, Number);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#multiply(Number, Number);clojure.lang.Numbers.LongOps#multiply(Number, Number);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#multiplyP(Number, Number);clojure.lang.Numbers.LongOps#multiplyP(Number, Number);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#divide(Number, Number);clojure.lang.Numbers.LongOps#divide(Number, Number);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#quotient(Number, Number);clojure.lang.Numbers.LongOps#quotient(Number, Number);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#remainder(Number, Number);clojure.lang.Numbers.LongOps#remainder(Number, Number);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#negate(Number);clojure.lang.Numbers.LongOps#negate(Number);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#negateP(Number);clojure.lang.Numbers.LongOps#negateP(Number);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#inc(Number);clojure.lang.Numbers.LongOps#inc(Number);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#incP(Number);clojure.lang.Numbers.LongOps#incP(Number);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#dec(Number);clojure.lang.Numbers.LongOps#dec(Number);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#decP(Number);clojure.lang.Numbers.LongOps#decP(Number);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameType;true;clojure.lang.Numbers.LongBitOps;clojure.lang.Numbers.LongBitOps;845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#not(Number);clojure.lang.Numbers.LongBitOps#not(Number);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#and(Number, Number);clojure.lang.Numbers.LongBitOps#and(Number, Number);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#or(Number, Number);clojure.lang.Numbers.LongBitOps#or(Number, Number);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#xor(Number, Number);clojure.lang.Numbers.LongBitOps#xor(Number, Number);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#andNot(Number, Number);clojure.lang.Numbers.LongBitOps#andNot(Number, Number);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#clearBit(Number, int);clojure.lang.Numbers.LongBitOps#clearBit(Number, int);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#setBit(Number, int);clojure.lang.Numbers.LongBitOps#setBit(Number, int);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#flipBit(Number, int);clojure.lang.Numbers.LongBitOps#flipBit(Number, int);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#shiftLeft(Number, int);clojure.lang.Numbers.LongBitOps#shiftLeft(Number, int);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#shiftRight(Number, int);clojure.lang.Numbers.LongBitOps#shiftRight(Number, int);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers#num(long);clojure.lang.Numbers#num(long);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers#addP(long, long);clojure.lang.Numbers#addP(long, long);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers#minusP(long, long);clojure.lang.Numbers#minusP(long, long);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers#minusP(long);clojure.lang.Numbers#minusP(long);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers#incP(long);clojure.lang.Numbers#incP(long);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers#decP(long);clojure.lang.Numbers#decP(long);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Numbers#multiplyP(long, long);clojure.lang.Numbers#multiplyP(long, long);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Reflector#paramArgTypeMatch(Class, Class);clojure.lang.Reflector#paramArgTypeMatch(Class, Class);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
SameMethod;true;clojure.lang.Reflector#prepRet(Object);clojure.lang.Reflector#prepRet(Object);845c63e9317826a5564ef766550562b3fbe68181;Wed Jun 23 20:00:10 2010 -0400
RenameClass;true;clojure.lang.Numbers.BigIntegerBitOps;clojure.lang.Numbers.BigIntBitOps;07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
RenameClass;true;clojure.lang.Numbers.BigIntegerOps;clojure.lang.Numbers.BigIntOps;07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
RenameMethod;true;clojure.lang.Numbers#reduceBigInteger(BigInteger);clojure.lang.Numbers#reduceBigInt(BigInt);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameType;true;clojure.lang.BigInt;clojure.lang.BigInt;07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.LispReader#matchNumber(String);clojure.lang.LispReader#matchNumber(String);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameType;true;clojure.lang.Numbers.Ops;clojure.lang.Numbers.Ops;07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameType;true;clojure.lang.Numbers.BitOps;clojure.lang.Numbers.BitOps;07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers#toBigInteger(Object);clojure.lang.Numbers#toBigInteger(Object);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers#toBigDecimal(Object);clojure.lang.Numbers#toBigDecimal(Object);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers#rationalize(Number);clojure.lang.Numbers#rationalize(Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers#divide(BigInteger, BigInteger);clojure.lang.Numbers#divide(BigInteger, BigInteger);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameType;true;clojure.lang.Numbers.LongOps;clojure.lang.Numbers.LongOps;07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#addP(Number, Number);clojure.lang.Numbers.LongOps#addP(Number, Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#multiplyP(Number, Number);clojure.lang.Numbers.LongOps#multiplyP(Number, Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#negateP(Number);clojure.lang.Numbers.LongOps#negateP(Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#incP(Number);clojure.lang.Numbers.LongOps#incP(Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongOps#decP(Number);clojure.lang.Numbers.LongOps#decP(Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameType;true;clojure.lang.Numbers.DoubleOps;clojure.lang.Numbers.DoubleOps;07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameType;true;clojure.lang.Numbers.RatioOps;clojure.lang.Numbers.RatioOps;07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.RatioOps#normalizeRet(Number, Number, Number);clojure.lang.Numbers.RatioOps#normalizeRet(Number, Number, Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.RatioOps#quotient(Number, Number);clojure.lang.Numbers.RatioOps#quotient(Number, Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#isZero(Number);clojure.lang.Numbers.BigIntOps#isZero(Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#isPos(Number);clojure.lang.Numbers.BigIntOps#isPos(Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#isNeg(Number);clojure.lang.Numbers.BigIntOps#isNeg(Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#add(Number, Number);clojure.lang.Numbers.BigIntOps#add(Number, Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#multiply(Number, Number);clojure.lang.Numbers.BigIntOps#multiply(Number, Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#quotient(Number, Number);clojure.lang.Numbers.BigIntOps#quotient(Number, Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#remainder(Number, Number);clojure.lang.Numbers.BigIntOps#remainder(Number, Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#equiv(Number, Number);clojure.lang.Numbers.BigIntOps#equiv(Number, Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#negate(Number);clojure.lang.Numbers.BigIntOps#negate(Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#inc(Number);clojure.lang.Numbers.BigIntOps#inc(Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerOps#dec(Number);clojure.lang.Numbers.BigIntOps#dec(Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameType;true;clojure.lang.Numbers.BigDecimalOps;clojure.lang.Numbers.BigDecimalOps;07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameType;true;clojure.lang.Numbers.LongBitOps;clojure.lang.Numbers.LongBitOps;07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#clearBit(Number, int);clojure.lang.Numbers.LongBitOps#clearBit(Number, int);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#setBit(Number, int);clojure.lang.Numbers.LongBitOps#setBit(Number, int);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.LongBitOps#flipBit(Number, int);clojure.lang.Numbers.LongBitOps#flipBit(Number, int);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerBitOps#not(Number);clojure.lang.Numbers.BigIntBitOps#not(Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerBitOps#and(Number, Number);clojure.lang.Numbers.BigIntBitOps#and(Number, Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerBitOps#or(Number, Number);clojure.lang.Numbers.BigIntBitOps#or(Number, Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerBitOps#xor(Number, Number);clojure.lang.Numbers.BigIntBitOps#xor(Number, Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerBitOps#andNot(Number, Number);clojure.lang.Numbers.BigIntBitOps#andNot(Number, Number);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerBitOps#clearBit(Number, int);clojure.lang.Numbers.BigIntBitOps#clearBit(Number, int);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerBitOps#setBit(Number, int);clojure.lang.Numbers.BigIntBitOps#setBit(Number, int);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerBitOps#flipBit(Number, int);clojure.lang.Numbers.BigIntBitOps#flipBit(Number, int);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerBitOps#shiftLeft(Number, int);clojure.lang.Numbers.BigIntBitOps#shiftLeft(Number, int);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers.BigIntegerBitOps#shiftRight(Number, int);clojure.lang.Numbers.BigIntBitOps#shiftRight(Number, int);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers#ops(Object);clojure.lang.Numbers#ops(Object);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers#category(Object);clojure.lang.Numbers#category(Object);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers#bitOps(Object);clojure.lang.Numbers#bitOps(Object);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers#minusP(long);clojure.lang.Numbers#minusP(long);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers#incP(long);clojure.lang.Numbers#incP(long);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Numbers#decP(long);clojure.lang.Numbers#decP(long);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.RT#longCast(Object);clojure.lang.RT#longCast(Object);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameType;true;clojure.lang.Util;clojure.lang.Util;07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
SameMethod;true;clojure.lang.Util#isInteger(Object);clojure.lang.Util#isInteger(Object);07f05862c2362f6b51e7c92ccd9476c45c9dff6e;Fri Jun 25 13:13:02 2010 -0400
ExtractMethod;true;clojure.lang.APersistentMap#equals(Object);clojure.lang.APersistentMap#mapEquals(IPersistentMap, Object);c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
ExtractMethod;true;clojure.lang.APersistentMap#hashCode();clojure.lang.APersistentMap#mapHash(IPersistentMap);c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
ExtractMethod;true;clojure.lang.Util#equiv(Object, Object);clojure.lang.Util#pcequiv(Object, Object);c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
SameMethod;true;clojure.lang.APersistentMap#equals(Object);clojure.lang.APersistentMap#equals(Object);c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
SameMethod;true;clojure.lang.APersistentMap#equiv(Object);clojure.lang.APersistentMap#equiv(Object);c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
SameMethod;true;clojure.lang.APersistentMap#hashCode();clojure.lang.APersistentMap#hashCode();c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
SameMethod;true;clojure.lang.Compiler.TryExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.TryExpr#emit(C, ObjExpr, GeneratorAdapter);c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
SameType;true;clojure.lang.DynamicClassLoader;clojure.lang.DynamicClassLoader;c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
SameMethod;true;clojure.lang.DynamicClassLoader#defineClass(String, byte[], Object);clojure.lang.DynamicClassLoader#defineClass(String, byte[], Object);c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
SameMethod;true;clojure.lang.DynamicClassLoader#findClass(String);clojure.lang.DynamicClassLoader#findClass(String);c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
SameMethod;true;clojure.lang.Keyword#intern(Symbol);clojure.lang.Keyword#intern(Symbol);c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
SameMethod;true;clojure.lang.Namespace#warnOrFailOnReplace(Symbol, Object, Object);clojure.lang.Namespace#warnOrFailOnReplace(Symbol, Object, Object);c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
SameType;true;clojure.lang.Util;clojure.lang.Util;c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
SameMethod;true;clojure.lang.Util#equiv(Object, Object);clojure.lang.Util#equiv(Object, Object);c6fddcabebd1dec50ea535d7576615da57fc0112;Sun Aug 22 14:12:05 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;099aa8615c378fee98a492837cc0415abd3a6087;Wed Sep 8 14:02:19 2010 -0400
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;099aa8615c378fee98a492837cc0415abd3a6087;Wed Sep 8 14:02:19 2010 -0400
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.StaticMethodExpr#emit(C, ObjExpr, GeneratorAdapter);099aa8615c378fee98a492837cc0415abd3a6087;Wed Sep 8 14:02:19 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;cb62bc2f2402b9872a13ba1753ab2d22254a54a8;Thu Sep 9 16:11:25 2010 -0400
SameType;true;clojure.lang.Compiler.CompilerException;clojure.lang.Compiler.CompilerException;cb62bc2f2402b9872a13ba1753ab2d22254a54a8;Thu Sep 9 16:11:25 2010 -0400
SameMethod;true;clojure.lang.Compiler.CompilerException#CompilerException(String, int, Throwable);clojure.lang.Compiler.CompilerException#CompilerException(String, int, Throwable);cb62bc2f2402b9872a13ba1753ab2d22254a54a8;Thu Sep 9 16:11:25 2010 -0400
SameMethod;true;clojure.lang.Compiler#errorMsg(String, int, String);clojure.lang.Compiler#errorMsg(String, int, String);cb62bc2f2402b9872a13ba1753ab2d22254a54a8;Thu Sep 9 16:11:25 2010 -0400
SameMethod;true;clojure.lang.Compiler#eval(Object, boolean);clojure.lang.Compiler#eval(Object, boolean);cb62bc2f2402b9872a13ba1753ab2d22254a54a8;Thu Sep 9 16:11:25 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;d6bc47ae952255c5b45f449e73db2439ba2a80f5;Fri Aug 20 11:10:32 2010 -0400
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();d6bc47ae952255c5b45f449e73db2439ba2a80f5;Fri Aug 20 11:10:32 2010 -0400
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;cc8372f12074b4cccbdd9cde3cfacfae069c57d3;Tue Sep 28 13:36:55 2010 -0400
SameMethod;true;clojure.lang.ArraySeq#ArraySeq(Object, int);clojure.lang.ArraySeq#ArraySeq(Object, int);cc8372f12074b4cccbdd9cde3cfacfae069c57d3;Tue Sep 28 13:36:55 2010 -0400
SameMethod;true;clojure.lang.ArraySeq#ArraySeq(IPersistentMap, Object, int);clojure.lang.ArraySeq#ArraySeq(IPersistentMap, Object, int);cc8372f12074b4cccbdd9cde3cfacfae069c57d3;Tue Sep 28 13:36:55 2010 -0400
SameMethod;true;clojure.lang.ArraySeq#first();clojure.lang.ArraySeq#first();cc8372f12074b4cccbdd9cde3cfacfae069c57d3;Tue Sep 28 13:36:55 2010 -0400
SameMethod;true;clojure.lang.ArraySeq#reduce(IFn);clojure.lang.ArraySeq#reduce(IFn);cc8372f12074b4cccbdd9cde3cfacfae069c57d3;Tue Sep 28 13:36:55 2010 -0400
SameMethod;true;clojure.lang.ArraySeq#reduce(IFn, Object);clojure.lang.ArraySeq#reduce(IFn, Object);cc8372f12074b4cccbdd9cde3cfacfae069c57d3;Tue Sep 28 13:36:55 2010 -0400
SameMethod;true;clojure.lang.ArraySeq#indexOf(Object);clojure.lang.ArraySeq#indexOf(Object);cc8372f12074b4cccbdd9cde3cfacfae069c57d3;Tue Sep 28 13:36:55 2010 -0400
SameMethod;true;clojure.lang.ArraySeq#lastIndexOf(Object);clojure.lang.ArraySeq#lastIndexOf(Object);cc8372f12074b4cccbdd9cde3cfacfae069c57d3;Tue Sep 28 13:36:55 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;cc8372f12074b4cccbdd9cde3cfacfae069c57d3;Tue Sep 28 13:36:55 2010 -0400
SameMethod;true;clojure.lang.RT#nthFrom(Object, int);clojure.lang.RT#nthFrom(Object, int);cc8372f12074b4cccbdd9cde3cfacfae069c57d3;Tue Sep 28 13:36:55 2010 -0400
SameMethod;true;clojure.lang.RT#nthFrom(Object, int, Object);clojure.lang.RT#nthFrom(Object, int, Object);cc8372f12074b4cccbdd9cde3cfacfae069c57d3;Tue Sep 28 13:36:55 2010 -0400
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;cc8372f12074b4cccbdd9cde3cfacfae069c57d3;Tue Sep 28 13:36:55 2010 -0400
SameMethod;true;clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);cc8372f12074b4cccbdd9cde3cfacfae069c57d3;Tue Sep 28 13:36:55 2010 -0400
SameMethod;true;clojure.lang.Reflector#getStaticField(Class, String);clojure.lang.Reflector#getStaticField(Class, String);cc8372f12074b4cccbdd9cde3cfacfae069c57d3;Tue Sep 28 13:36:55 2010 -0400
SameMethod;true;clojure.lang.Reflector#getInstanceField(Object, String);clojure.lang.Reflector#getInstanceField(Object, String);cc8372f12074b4cccbdd9cde3cfacfae069c57d3;Tue Sep 28 13:36:55 2010 -0400
SameMethod;true;clojure.lang.Reflector#invokeInstanceMember(Object, String);clojure.lang.Reflector#invokeInstanceMember(Object, String);cc8372f12074b4cccbdd9cde3cfacfae069c57d3;Tue Sep 28 13:36:55 2010 -0400
SameType;true;clojure.lang.DynamicClassLoader;clojure.lang.DynamicClassLoader;167a73857a746e8dbeeb6d9ea8f99083aca7dc69;Tue Sep 28 16:28:52 2010 -0400
SameMethod;true;clojure.lang.DynamicClassLoader#findClass(String);clojure.lang.DynamicClassLoader#findClass(String);167a73857a746e8dbeeb6d9ea8f99083aca7dc69;Tue Sep 28 16:28:52 2010 -0400
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;167a73857a746e8dbeeb6d9ea8f99083aca7dc69;Tue Sep 28 16:28:52 2010 -0400
SameMethod;true;clojure.lang.Keyword#intern(Symbol);clojure.lang.Keyword#intern(Symbol);167a73857a746e8dbeeb6d9ea8f99083aca7dc69;Tue Sep 28 16:28:52 2010 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;a5c2c36cd7f8ddbae68a5071ae7a3d9373b02a01;Wed Jan 27 11:00:08 2010 -0500
SameMethod;true;clojure.lang.LispReader#readDelimitedList(char, PushbackReader, boolean);clojure.lang.LispReader#readDelimitedList(char, PushbackReader, boolean);a5c2c36cd7f8ddbae68a5071ae7a3d9373b02a01;Wed Jan 27 11:00:08 2010 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2230a91829f39b72973e6fecf275d9c664911ca0;Tue Mar 23 12:09:40 2010 -0500
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);2230a91829f39b72973e6fecf275d9c664911ca0;Tue Mar 23 12:09:40 2010 -0500
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);2230a91829f39b72973e6fecf275d9c664911ca0;Tue Mar 23 12:09:40 2010 -0500
SameMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.Compiler#load(Reader, String, String);2230a91829f39b72973e6fecf275d9c664911ca0;Tue Mar 23 12:09:40 2010 -0500
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);2230a91829f39b72973e6fecf275d9c664911ca0;Tue Mar 23 12:09:40 2010 -0500
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;c50f2b86d91ad057bfc34c03c8ffd5d6634e6435;Mon Oct 11 09:41:58 2010 -0400
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;83fc4fe476b75553a4c2db8bd4f7fdfc02379dce;Mon Oct 11 10:11:32 2010 -0400
SameMethod;true;clojure.lang.Keyword#find(Symbol);clojure.lang.Keyword#find(Symbol);83fc4fe476b75553a4c2db8bd4f7fdfc02379dce;Mon Oct 11 10:11:32 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6d300332f810a68869c11ddfcc55f4439b70fdb3;Wed Apr 14 19:07:09 2010 +0200
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;6d300332f810a68869c11ddfcc55f4439b70fdb3;Wed Apr 14 19:07:09 2010 +0200
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;6d300332f810a68869c11ddfcc55f4439b70fdb3;Wed Apr 14 19:07:09 2010 +0200
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);6d300332f810a68869c11ddfcc55f4439b70fdb3;Wed Apr 14 19:07:09 2010 +0200
SameType;true;clojure.lang.RT;clojure.lang.RT;6d300332f810a68869c11ddfcc55f4439b70fdb3;Wed Apr 14 19:07:09 2010 +0200
SameType;true;clojure.lang.RT;clojure.lang.RT;038e4a8b4ea1f60f8eca034a3e1e3f43f4353cc3;Mon Oct 11 10:24:25 2010 -0400
SameType;true;clojure.lang.Agent;clojure.lang.Agent;351e05a242740cc415524d03e1d424de516eed75;Mon Oct 11 10:48:13 2010 -0400
SameType;true;clojure.lang.Agent;clojure.lang.Agent;9e55735ff0b24f5c9744ba6aaf037eed405b0110;Thu Oct 14 08:08:35 2010 -0400
SameMethod;true;clojure.lang.Agent#createThreadFactory(String, AtomicLong);clojure.lang.Agent#createThreadFactory(String, AtomicLong);9e55735ff0b24f5c9744ba6aaf037eed405b0110;Thu Oct 14 08:08:35 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameMethod;true;clojure.lang.Compiler#resolveSymbol(Symbol);clojure.lang.Compiler#resolveSymbol(Symbol);a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameMethod;true;clojure.lang.Compiler#namespaceFor(Namespace, Symbol);clojure.lang.Compiler#namespaceFor(Namespace, Symbol);a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameMethod;true;clojure.lang.Compiler#resolveIn(Namespace, Symbol, boolean);clojure.lang.Compiler#resolveIn(Namespace, Symbol, boolean);a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameMethod;true;clojure.lang.Compiler#maybeResolveIn(Namespace, Symbol);clojure.lang.Compiler#maybeResolveIn(Namespace, Symbol);a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Compiler#lookupVar(Symbol, boolean);a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameMethod;true;clojure.lang.Compiler#pushNS();clojure.lang.Compiler#pushNS();a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameType;true;clojure.lang.LispReader.CtorReader;clojure.lang.LispReader.CtorReader;a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameType;true;clojure.lang.Var;clojure.lang.Var;a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameMethod;true;clojure.lang.Var#find(Symbol);clojure.lang.Var#find(Symbol);a2ef7bf9deeced8c5e501720ec21ff131111bded;Thu Oct 14 13:49:32 2010 -0400
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;6c4961d526a7c114736627250ff874703b987bcb;Wed May 19 11:32:32 2010 -0700
SameMethod;true;clojure.lang.PersistentQueue#pop();clojure.lang.PersistentQueue#pop();6c4961d526a7c114736627250ff874703b987bcb;Wed May 19 11:32:32 2010 -0700
SameMethod;true;clojure.lang.PersistentQueue#count();clojure.lang.PersistentQueue#count();6c4961d526a7c114736627250ff874703b987bcb;Wed May 19 11:32:32 2010 -0700
SameMethod;true;clojure.lang.PersistentQueue#cons(Object);clojure.lang.PersistentQueue#cons(Object);6c4961d526a7c114736627250ff874703b987bcb;Wed May 19 11:32:32 2010 -0700
SameMethod;true;clojure.lang.PersistentQueue#withMeta(IPersistentMap);clojure.lang.PersistentQueue#withMeta(IPersistentMap);6c4961d526a7c114736627250ff874703b987bcb;Wed May 19 11:32:32 2010 -0700
SameType;true;clojure.lang.MethodImplCache;clojure.lang.MethodImplCache;64e4a00b25baed8315e17752241a3a3d28b5280c;Fri Oct 15 10:27:14 2010 -0400
SameType;true;clojure.lang.Var;clojure.lang.Var;64e4a00b25baed8315e17752241a3a3d28b5280c;Fri Oct 15 10:27:14 2010 -0400
SameType;true;clojure.lang.Var.Frame;clojure.lang.Var.Frame;64e4a00b25baed8315e17752241a3a3d28b5280c;Fri Oct 15 10:27:14 2010 -0400
SameMethod;true;clojure.lang.Var.Frame#Frame();clojure.lang.Var.Frame#Frame();64e4a00b25baed8315e17752241a3a3d28b5280c;Fri Oct 15 10:27:14 2010 -0400
SameMethod;true;clojure.lang.Var#Var(Namespace, Symbol);clojure.lang.Var#Var(Namespace, Symbol);64e4a00b25baed8315e17752241a3a3d28b5280c;Fri Oct 15 10:27:14 2010 -0400
SameMethod;true;clojure.lang.Var#isBound();clojure.lang.Var#isBound();64e4a00b25baed8315e17752241a3a3d28b5280c;Fri Oct 15 10:27:14 2010 -0400
SameMethod;true;clojure.lang.Var#get();clojure.lang.Var#get();64e4a00b25baed8315e17752241a3a3d28b5280c;Fri Oct 15 10:27:14 2010 -0400
SameMethod;true;clojure.lang.Var#deref();clojure.lang.Var#deref();64e4a00b25baed8315e17752241a3a3d28b5280c;Fri Oct 15 10:27:14 2010 -0400
SameMethod;true;clojure.lang.Var#set(Object);clojure.lang.Var#set(Object);64e4a00b25baed8315e17752241a3a3d28b5280c;Fri Oct 15 10:27:14 2010 -0400
SameMethod;true;clojure.lang.Var#pushThreadBindings(Associative);clojure.lang.Var#pushThreadBindings(Associative);64e4a00b25baed8315e17752241a3a3d28b5280c;Fri Oct 15 10:27:14 2010 -0400
SameMethod;true;clojure.lang.Var#popThreadBindings();clojure.lang.Var#popThreadBindings();64e4a00b25baed8315e17752241a3a3d28b5280c;Fri Oct 15 10:27:14 2010 -0400
SameMethod;true;clojure.lang.Var#getThreadBindings();clojure.lang.Var#getThreadBindings();64e4a00b25baed8315e17752241a3a3d28b5280c;Fri Oct 15 10:27:14 2010 -0400
SameMethod;true;clojure.lang.Var#getThreadBinding();clojure.lang.Var#getThreadBinding();64e4a00b25baed8315e17752241a3a3d28b5280c;Fri Oct 15 10:27:14 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;b9b1a094499b69a94bd47fc94c4f082d80239fa9;Fri Oct 15 17:49:55 2010 -0400
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;b9b1a094499b69a94bd47fc94c4f082d80239fa9;Fri Oct 15 17:49:55 2010 -0400
SameMethod;true;clojure.lang.Compiler.DefExpr#eval();clojure.lang.Compiler.DefExpr#eval();b9b1a094499b69a94bd47fc94c4f082d80239fa9;Fri Oct 15 17:49:55 2010 -0400
SameMethod;true;clojure.lang.Compiler.DefExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.DefExpr#emit(C, ObjExpr, GeneratorAdapter);b9b1a094499b69a94bd47fc94c4f082d80239fa9;Fri Oct 15 17:49:55 2010 -0400
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;b9b1a094499b69a94bd47fc94c4f082d80239fa9;Fri Oct 15 17:49:55 2010 -0400
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);b9b1a094499b69a94bd47fc94c4f082d80239fa9;Fri Oct 15 17:49:55 2010 -0400
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;b9b1a094499b69a94bd47fc94c4f082d80239fa9;Fri Oct 15 17:49:55 2010 -0400
SameMethod;true;clojure.lang.Compiler#pushNS();clojure.lang.Compiler#pushNS();b9b1a094499b69a94bd47fc94c4f082d80239fa9;Fri Oct 15 17:49:55 2010 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;b9b1a094499b69a94bd47fc94c4f082d80239fa9;Fri Oct 15 17:49:55 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;b9b1a094499b69a94bd47fc94c4f082d80239fa9;Fri Oct 15 17:49:55 2010 -0400
SameType;true;clojure.lang.Var;clojure.lang.Var;b9b1a094499b69a94bd47fc94c4f082d80239fa9;Fri Oct 15 17:49:55 2010 -0400
SameMethod;true;clojure.lang.Var#bindRoot(Object);clojure.lang.Var#bindRoot(Object);b9b1a094499b69a94bd47fc94c4f082d80239fa9;Fri Oct 15 17:49:55 2010 -0400
SameMethod;true;clojure.lang.Var#swapRoot(Object);clojure.lang.Var#swapRoot(Object);b9b1a094499b69a94bd47fc94c4f082d80239fa9;Fri Oct 15 17:49:55 2010 -0400
SameMethod;true;clojure.lang.Var#unbindRoot();clojure.lang.Var#unbindRoot();b9b1a094499b69a94bd47fc94c4f082d80239fa9;Fri Oct 15 17:49:55 2010 -0400
SameMethod;true;clojure.lang.Var#commuteRoot(IFn);clojure.lang.Var#commuteRoot(IFn);b9b1a094499b69a94bd47fc94c4f082d80239fa9;Fri Oct 15 17:49:55 2010 -0400
SameMethod;true;clojure.lang.Var#alterRoot(IFn, ISeq);clojure.lang.Var#alterRoot(IFn, ISeq);b9b1a094499b69a94bd47fc94c4f082d80239fa9;Fri Oct 15 17:49:55 2010 -0400
SameMethod;true;clojure.lang.Var#pushThreadBindings(Associative);clojure.lang.Var#pushThreadBindings(Associative);b9b1a094499b69a94bd47fc94c4f082d80239fa9;Fri Oct 15 17:49:55 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;ebcdd71828b1d4ec7df79a1dea963ede3e046ca1;Mon Oct 18 10:59:36 2010 -0400
SameMethod;true;clojure.lang.RT#intCast(long);clojure.lang.RT#intCast(long);ebcdd71828b1d4ec7df79a1dea963ede3e046ca1;Mon Oct 18 10:59:36 2010 -0400
SameType;true;clojure.lang.Util;clojure.lang.Util;ebcdd71828b1d4ec7df79a1dea963ede3e046ca1;Mon Oct 18 10:59:36 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;58be0895bc3c8248ee2c1bb862cf28b86dce8b6c;Mon Oct 18 12:51:11 2010 -0400
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;58be0895bc3c8248ee2c1bb862cf28b86dce8b6c;Mon Oct 18 12:51:11 2010 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);58be0895bc3c8248ee2c1bb862cf28b86dce8b6c;Mon Oct 18 12:51:11 2010 -0400
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;58be0895bc3c8248ee2c1bb862cf28b86dce8b6c;Mon Oct 18 12:51:11 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);58be0895bc3c8248ee2c1bb862cf28b86dce8b6c;Mon Oct 18 12:51:11 2010 -0400
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;58be0895bc3c8248ee2c1bb862cf28b86dce8b6c;Mon Oct 18 12:51:11 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);58be0895bc3c8248ee2c1bb862cf28b86dce8b6c;Mon Oct 18 12:51:11 2010 -0400
ExtractMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);clojure.lang.Compiler#emptyVarCallSites();d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
ExtractMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler#emptyVarCallSites();d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
ExtractMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#cachedVarName(int);d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameType;true;clojure.lang.Compiler.VarExpr;clojure.lang.Compiler.VarExpr;d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameMethod;true;clojure.lang.Compiler.VarExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.VarExpr#emit(C, ObjExpr, GeneratorAdapter);d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emit(C, ObjExpr, GeneratorAdapter);d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#doEmit(ObjExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#doEmit(ObjExpr, ClassVisitor);d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameType;true;clojure.lang.Compiler.ObjMethod;clojure.lang.Compiler.ObjMethod;d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.ObjMethod#emit(ObjExpr, ClassVisitor);d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameMethod;true;clojure.lang.Compiler#registerVarCallsite(Var);clojure.lang.Compiler#registerVarCallsite(Var);d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameType;true;clojure.lang.Var;clojure.lang.Var;d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameMethod;true;clojure.lang.Var#Var(Namespace, Symbol, Object);clojure.lang.Var#Var(Namespace, Symbol, Object);d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
SameMethod;true;clojure.lang.Var#getRawRoot();clojure.lang.Var#getRawRoot();d1006391595641f16e9c54187a8df0a0138d3a53;Mon Oct 18 18:12:27 2010 -0400
ExtractMethod;true;clojure.lang.Compiler.FnMethod#doEmit(ObjExpr, ClassVisitor);clojure.lang.Compiler.ObjMethod#emitVarReloadPreamble(ObjExpr, GeneratorAdapter);b7281364e3f9cfeca365d7884f1f4765660cc756;Tue Oct 19 12:25:38 2010 -0400
ExtractMethod;true;clojure.lang.Compiler.ObjMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.ObjMethod#emitVarReloadPreamble(ObjExpr, GeneratorAdapter);b7281364e3f9cfeca365d7884f1f4765660cc756;Tue Oct 19 12:25:38 2010 -0400
ExtractMethod;true;clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.ObjMethod#emitVarReloadPreamble(ObjExpr, GeneratorAdapter);b7281364e3f9cfeca365d7884f1f4765660cc756;Tue Oct 19 12:25:38 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;b7281364e3f9cfeca365d7884f1f4765660cc756;Tue Oct 19 12:25:38 2010 -0400
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;b7281364e3f9cfeca365d7884f1f4765660cc756;Tue Oct 19 12:25:38 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#doEmit(ObjExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#doEmit(ObjExpr, ClassVisitor);b7281364e3f9cfeca365d7884f1f4765660cc756;Tue Oct 19 12:25:38 2010 -0400
SameType;true;clojure.lang.Compiler.ObjMethod;clojure.lang.Compiler.ObjMethod;b7281364e3f9cfeca365d7884f1f4765660cc756;Tue Oct 19 12:25:38 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.ObjMethod#emit(ObjExpr, ClassVisitor);b7281364e3f9cfeca365d7884f1f4765660cc756;Tue Oct 19 12:25:38 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;b7281364e3f9cfeca365d7884f1f4765660cc756;Tue Oct 19 12:25:38 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);b7281364e3f9cfeca365d7884f1f4765660cc756;Tue Oct 19 12:25:38 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c643a37953964eb15a2f39fa31fc317079467bf0;Tue Oct 19 17:01:56 2010 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;c643a37953964eb15a2f39fa31fc317079467bf0;Tue Oct 19 17:01:56 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);c643a37953964eb15a2f39fa31fc317079467bf0;Tue Oct 19 17:01:56 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitVarValue(GeneratorAdapter, Var);clojure.lang.Compiler.ObjExpr#emitVarValue(GeneratorAdapter, Var);c643a37953964eb15a2f39fa31fc317079467bf0;Tue Oct 19 17:01:56 2010 -0400
SameType;true;clojure.lang.Compiler.ObjMethod;clojure.lang.Compiler.ObjMethod;c643a37953964eb15a2f39fa31fc317079467bf0;Tue Oct 19 17:01:56 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjMethod#emitVarReloadPreamble(ObjExpr, GeneratorAdapter);clojure.lang.Compiler.ObjMethod#emitVarReloadPreamble(ObjExpr, GeneratorAdapter);c643a37953964eb15a2f39fa31fc317079467bf0;Tue Oct 19 17:01:56 2010 -0400
SameType;true;clojure.lang.Var;clojure.lang.Var;c643a37953964eb15a2f39fa31fc317079467bf0;Tue Oct 19 17:01:56 2010 -0400
SameMethod;true;clojure.lang.Var#getRawRoot();clojure.lang.Var#getRawRoot();c643a37953964eb15a2f39fa31fc317079467bf0;Tue Oct 19 17:01:56 2010 -0400
ExtractMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);clojure.lang.Compiler#primClass(Class);52adb74f5335c8256f6468581028f44220547dca;Wed Oct 20 21:28:30 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;52adb74f5335c8256f6468581028f44220547dca;Wed Oct 20 21:28:30 2010 -0400
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;52adb74f5335c8256f6468581028f44220547dca;Wed Oct 20 21:28:30 2010 -0400
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;52adb74f5335c8256f6468581028f44220547dca;Wed Oct 20 21:28:30 2010 -0400
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);52adb74f5335c8256f6468581028f44220547dca;Wed Oct 20 21:28:30 2010 -0400
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;52adb74f5335c8256f6468581028f44220547dca;Wed Oct 20 21:28:30 2010 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);52adb74f5335c8256f6468581028f44220547dca;Wed Oct 20 21:28:30 2010 -0400
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;52adb74f5335c8256f6468581028f44220547dca;Wed Oct 20 21:28:30 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);52adb74f5335c8256f6468581028f44220547dca;Wed Oct 20 21:28:30 2010 -0400
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;52adb74f5335c8256f6468581028f44220547dca;Wed Oct 20 21:28:30 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);52adb74f5335c8256f6468581028f44220547dca;Wed Oct 20 21:28:30 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#emit(ObjExpr, ClassVisitor);52adb74f5335c8256f6468581028f44220547dca;Wed Oct 20 21:28:30 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#getReturnType();clojure.lang.Compiler.FnMethod#getReturnType();52adb74f5335c8256f6468581028f44220547dca;Wed Oct 20 21:28:30 2010 -0400
SameType;true;clojure.lang.IFn;clojure.lang.IFn;52adb74f5335c8256f6468581028f44220547dca;Wed Oct 20 21:28:30 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emit(C, ObjExpr, GeneratorAdapter);d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitVarValue(GeneratorAdapter, Var);clojure.lang.Compiler.ObjExpr#emitVarValue(GeneratorAdapter, Var);d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#doEmitPrim(ObjExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#doEmitPrim(ObjExpr, ClassVisitor);d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#doEmit(ObjExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#doEmit(ObjExpr, ClassVisitor);d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameType;true;clojure.lang.Compiler.ObjMethod;clojure.lang.Compiler.ObjMethod;d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameMethod;true;clojure.lang.Compiler.ObjMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.ObjMethod#emit(ObjExpr, ClassVisitor);d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameType;true;clojure.lang.Var;clojure.lang.Var;d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameMethod;true;clojure.lang.Var#Var(Namespace, Symbol);clojure.lang.Var#Var(Namespace, Symbol);d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameMethod;true;clojure.lang.Var#get();clojure.lang.Var#get();d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameMethod;true;clojure.lang.Var#deref();clojure.lang.Var#deref();d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameMethod;true;clojure.lang.Var#setValidator(IFn);clojure.lang.Var#setValidator(IFn);d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameMethod;true;clojure.lang.Var#hasRoot();clojure.lang.Var#hasRoot();d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameMethod;true;clojure.lang.Var#bindRoot(Object);clojure.lang.Var#bindRoot(Object);d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameMethod;true;clojure.lang.Var#swapRoot(Object);clojure.lang.Var#swapRoot(Object);d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameMethod;true;clojure.lang.Var#unbindRoot();clojure.lang.Var#unbindRoot();d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameMethod;true;clojure.lang.Var#commuteRoot(IFn);clojure.lang.Var#commuteRoot(IFn);d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameMethod;true;clojure.lang.Var#alterRoot(IFn, ISeq);clojure.lang.Var#alterRoot(IFn, ISeq);d81122371248ee9042a2c6f0dc204208e018c986;Mon Oct 25 13:54:03 2010 -0400
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;01e67b1f2070b1e862e2e4e55680513943be58fb;Mon Oct 25 15:21:53 2010 -0400
SameType;true;clojure.lang.AFn;clojure.lang.AFn;17a8c909e43aa9813e609d7ed18eb679c9ba1e49;Mon Oct 18 10:16:54 2010 -0700
SameMethod;true;clojure.lang.AFn#throwArity(int);clojure.lang.AFn#throwArity(int);17a8c909e43aa9813e609d7ed18eb679c9ba1e49;Mon Oct 18 10:16:54 2010 -0700
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;17a8c909e43aa9813e609d7ed18eb679c9ba1e49;Mon Oct 18 10:16:54 2010 -0700
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);17a8c909e43aa9813e609d7ed18eb679c9ba1e49;Mon Oct 18 10:16:54 2010 -0700
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6580859b08b4a609e5c5fe1e52dd9495f5b8140a;Fri Oct 29 11:23:00 2010 -0400
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);6580859b08b4a609e5c5fe1e52dd9495f5b8140a;Fri Oct 29 11:23:00 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;cbd789d1a5b472d92b91f2fe0e273f48c2583483;Fri Nov 26 13:36:57 2010 -0500
RenameMethod;false;clojure.lang.Numbers#unchecked_long_add(long, long);clojure.lang.Numbers#unchecked_add(long, long);3e644c768b1f769217ecd484c019580384c7a670;Sat Nov 27 13:41:39 2010 -0500
RenameMethod;false;clojure.lang.Numbers#unchecked_long_dec(long);clojure.lang.Numbers#unchecked_dec(long);3e644c768b1f769217ecd484c019580384c7a670;Sat Nov 27 13:41:39 2010 -0500
RenameMethod;false;clojure.lang.Numbers#unchecked_long_divide(long, long);clojure.lang.Numbers#quotient(long, long);3e644c768b1f769217ecd484c019580384c7a670;Sat Nov 27 13:41:39 2010 -0500
RenameMethod;false;clojure.lang.Numbers#unchecked_long_inc(long);clojure.lang.Numbers#unchecked_inc(long);3e644c768b1f769217ecd484c019580384c7a670;Sat Nov 27 13:41:39 2010 -0500
RenameMethod;false;clojure.lang.Numbers#unchecked_long_multiply(long, long);clojure.lang.Numbers#unchecked_multiply(long, long);3e644c768b1f769217ecd484c019580384c7a670;Sat Nov 27 13:41:39 2010 -0500
RenameMethod;false;clojure.lang.Numbers#unchecked_long_negate(long);clojure.lang.Numbers#unchecked_minus(long);3e644c768b1f769217ecd484c019580384c7a670;Sat Nov 27 13:41:39 2010 -0500
RenameMethod;false;clojure.lang.Numbers#unchecked_long_remainder(long, long);clojure.lang.Numbers#remainder(long, long);3e644c768b1f769217ecd484c019580384c7a670;Sat Nov 27 13:41:39 2010 -0500
RenameMethod;false;clojure.lang.Numbers#unchecked_long_subtract(long, long);clojure.lang.Numbers#unchecked_minus(long, long);3e644c768b1f769217ecd484c019580384c7a670;Sat Nov 27 13:41:39 2010 -0500
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;3e644c768b1f769217ecd484c019580384c7a670;Sat Nov 27 13:41:39 2010 -0500
SameMethod;true;clojure.lang.Numbers#quotient(double, double);clojure.lang.Numbers#quotient(double, double);3e644c768b1f769217ecd484c019580384c7a670;Sat Nov 27 13:41:39 2010 -0500
SameMethod;true;clojure.lang.Numbers#remainder(double, double);clojure.lang.Numbers#remainder(double, double);3e644c768b1f769217ecd484c019580384c7a670;Sat Nov 27 13:41:39 2010 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;aa7d26336faff6ccc65e4405e28e471221f35fc4;Sat Nov 27 15:04:03 2010 -0500
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;aa7d26336faff6ccc65e4405e28e471221f35fc4;Sat Nov 27 15:04:03 2010 -0500
SameMethod;true;clojure.lang.Compiler.HostExpr#emitUnboxArg(ObjExpr, GeneratorAdapter, Class);clojure.lang.Compiler.HostExpr#emitUnboxArg(ObjExpr, GeneratorAdapter, Class);aa7d26336faff6ccc65e4405e28e471221f35fc4;Sat Nov 27 15:04:03 2010 -0500
SameType;true;clojure.lang.Compiler.MethodExpr;clojure.lang.Compiler.MethodExpr;aa7d26336faff6ccc65e4405e28e471221f35fc4;Sat Nov 27 15:04:03 2010 -0500
SameMethod;true;clojure.lang.Compiler.MethodExpr#emitTypedArgs(ObjExpr, GeneratorAdapter, Class[], IPersistentVector);clojure.lang.Compiler.MethodExpr#emitTypedArgs(ObjExpr, GeneratorAdapter, Class[], IPersistentVector);aa7d26336faff6ccc65e4405e28e471221f35fc4;Sat Nov 27 15:04:03 2010 -0500
SameMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.Compiler#load(Reader, String, String);aa7d26336faff6ccc65e4405e28e471221f35fc4;Sat Nov 27 15:04:03 2010 -0500
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);aa7d26336faff6ccc65e4405e28e471221f35fc4;Sat Nov 27 15:04:03 2010 -0500
SameType;true;clojure.lang.Agent;clojure.lang.Agent;7e38388e522b1e09dc02157113174640bb32e6ab;Sun Nov 7 22:09:38 2010 -0500
SameType;true;clojure.lang.Agent.Action;clojure.lang.Agent.Action;7e38388e522b1e09dc02157113174640bb32e6ab;Sun Nov 7 22:09:38 2010 -0500
SameMethod;true;clojure.lang.Agent.Action#doRun(Action);clojure.lang.Agent.Action#doRun(Action);7e38388e522b1e09dc02157113174640bb32e6ab;Sun Nov 7 22:09:38 2010 -0500
SameType;true;clojure.lang.Agent;clojure.lang.Agent;357b23111de3c9b0789097e716c81b89f013894a;Tue Jun 29 10:02:23 2010 -0400
SameType;true;clojure.lang.Agent.Action;clojure.lang.Agent.Action;357b23111de3c9b0789097e716c81b89f013894a;Tue Jun 29 10:02:23 2010 -0400
SameMethod;true;clojure.lang.Agent.Action#doRun(Action);clojure.lang.Agent.Action#doRun(Action);357b23111de3c9b0789097e716c81b89f013894a;Tue Jun 29 10:02:23 2010 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;ad3c7e613a64f6724edb6e34675f3011e83d5aac;Tue Nov 30 08:52:00 2010 -0500
SameMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.Compiler#load(Reader, String, String);ad3c7e613a64f6724edb6e34675f3011e83d5aac;Tue Nov 30 08:52:00 2010 -0500
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);ad3c7e613a64f6724edb6e34675f3011e83d5aac;Tue Nov 30 08:52:00 2010 -0500
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;b6da33b676e450e6b7dc0de75b5c4376fa781378;Thu Apr 8 10:29:04 2010 -0500
SameMethod;true;clojure.lang.LazySeq#sval();clojure.lang.LazySeq#sval();b6da33b676e450e6b7dc0de75b5c4376fa781378;Thu Apr 8 10:29:04 2010 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7936c6f0a05e6c473c97c537e0b6acbfe43a73c2;Mon Oct 25 22:42:42 2010 -0400
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;7936c6f0a05e6c473c97c537e0b6acbfe43a73c2;Mon Oct 25 22:42:42 2010 -0400
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;7936c6f0a05e6c473c97c537e0b6acbfe43a73c2;Mon Oct 25 22:42:42 2010 -0400
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);7936c6f0a05e6c473c97c537e0b6acbfe43a73c2;Mon Oct 25 22:42:42 2010 -0400
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;7936c6f0a05e6c473c97c537e0b6acbfe43a73c2;Mon Oct 25 22:42:42 2010 -0400
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);7936c6f0a05e6c473c97c537e0b6acbfe43a73c2;Mon Oct 25 22:42:42 2010 -0400
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;7936c6f0a05e6c473c97c537e0b6acbfe43a73c2;Mon Oct 25 22:42:42 2010 -0400
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;7936c6f0a05e6c473c97c537e0b6acbfe43a73c2;Mon Oct 25 22:42:42 2010 -0400
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);7936c6f0a05e6c473c97c537e0b6acbfe43a73c2;Mon Oct 25 22:42:42 2010 -0400
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;7936c6f0a05e6c473c97c537e0b6acbfe43a73c2;Mon Oct 25 22:42:42 2010 -0400
SameType;true;clojure.lang.Compiler.RecurExpr.Parser;clojure.lang.Compiler.RecurExpr.Parser;7936c6f0a05e6c473c97c537e0b6acbfe43a73c2;Mon Oct 25 22:42:42 2010 -0400
SameMethod;true;clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);7936c6f0a05e6c473c97c537e0b6acbfe43a73c2;Mon Oct 25 22:42:42 2010 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;7936c6f0a05e6c473c97c537e0b6acbfe43a73c2;Mon Oct 25 22:42:42 2010 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);7936c6f0a05e6c473c97c537e0b6acbfe43a73c2;Mon Oct 25 22:42:42 2010 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;2879523aaa72ca9cada4b54f4e4dabe6564de08a;Fri Dec 17 15:25:15 2010 -0500
SameMethod;true;clojure.lang.RT#seqToTypedArray(Class, ISeq);clojure.lang.RT#seqToTypedArray(Class, ISeq);2879523aaa72ca9cada4b54f4e4dabe6564de08a;Fri Dec 17 15:25:15 2010 -0500
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;1109a8b49a2dfef6940b5d65f4ca651a61d7e36e;Fri Dec 17 17:16:15 2010 -0500
SameMethod;true;clojure.lang.Keyword#intern(Symbol);clojure.lang.Keyword#intern(Symbol);1109a8b49a2dfef6940b5d65f4ca651a61d7e36e;Fri Dec 17 17:16:15 2010 -0500
SameType;true;clojure.lang.Compile;clojure.lang.Compile;b43bf20e1ba864c817ada237042cfdc8922831c0;Tue Dec 21 17:21:18 2010 -0500
SameMethod;true;clojure.lang.Compile#main(String[]);clojure.lang.Compile#main(String[]);b43bf20e1ba864c817ada237042cfdc8922831c0;Tue Dec 21 17:21:18 2010 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6ca22bc7fe4b53576c6d7ed0304d4344622e8681;Wed Dec 8 06:53:52 2010 +0100
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;9506ca6e7589599c17e165d6583a9c97aa1ca0c0;Fri Dec 31 15:32:22 2010 -0600
SameMethod;true;clojure.lang.Numbers#minusP(Object, Object);clojure.lang.Numbers#minusP(Object, Object);9506ca6e7589599c17e165d6583a9c97aa1ca0c0;Fri Dec 31 15:32:22 2010 -0600
SameType;true;clojure.lang.RT;clojure.lang.RT;13d9404b5227f3b9e8f86371d211be890e5302a9;Thu Jan 20 08:56:43 2011 -0500
SameMethod;true;clojure.lang.RT#keys(Object);clojure.lang.RT#keys(Object);13d9404b5227f3b9e8f86371d211be890e5302a9;Thu Jan 20 08:56:43 2011 -0500
SameMethod;true;clojure.lang.RT#vals(Object);clojure.lang.RT#vals(Object);13d9404b5227f3b9e8f86371d211be890e5302a9;Thu Jan 20 08:56:43 2011 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;d93ef6293bbcc6059e6da77dbf6ed26167f36cdb;Wed Feb 2 10:04:58 2011 -0500
SameMethod;true;clojure.lang.RT#keys(Object);clojure.lang.RT#keys(Object);d93ef6293bbcc6059e6da77dbf6ed26167f36cdb;Wed Feb 2 10:04:58 2011 -0500
SameMethod;true;clojure.lang.RT#vals(Object);clojure.lang.RT#vals(Object);d93ef6293bbcc6059e6da77dbf6ed26167f36cdb;Wed Feb 2 10:04:58 2011 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;004e088ab9364c77c91d09788a62365695f843c3;Sun Jan 23 01:54:33 2011 +0000
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;004e088ab9364c77c91d09788a62365695f843c3;Sun Jan 23 01:54:33 2011 +0000
SameMethod;true;clojure.lang.Compiler.InvokeExpr#eval();clojure.lang.Compiler.InvokeExpr#eval();004e088ab9364c77c91d09788a62365695f843c3;Sun Jan 23 01:54:33 2011 +0000
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;f5ca90d25e067a2c9131f549eca3a008bd1c8308;Wed Feb 23 20:19:55 2011 -0500
SameType;true;clojure.lang.LispReader.MapReader;clojure.lang.LispReader.MapReader;f5ca90d25e067a2c9131f549eca3a008bd1c8308;Wed Feb 23 20:19:55 2011 -0500
SameMethod;true;clojure.lang.LispReader.MapReader#invoke(Object, Object);clojure.lang.LispReader.MapReader#invoke(Object, Object);f5ca90d25e067a2c9131f549eca3a008bd1c8308;Wed Feb 23 20:19:55 2011 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;8cea3d8a2b4b4374668d8d24845de74c505d3a3a;Fri Jan 7 15:09:01 2011 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;8cea3d8a2b4b4374668d8d24845de74c505d3a3a;Fri Jan 7 15:09:01 2011 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#constantType(int);clojure.lang.Compiler.ObjExpr#constantType(int);8cea3d8a2b4b4374668d8d24845de74c505d3a3a;Fri Jan 7 15:09:01 2011 -0500
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;b5fc9ffeff3ba2831095feb8cbf181beb9a0cb68;Mon Jan 24 22:56:17 2011 +0000
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;ad8e72dd2adb66acf3c568d0d75dbd3b96e33577;Tue Feb 22 19:19:03 2011 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;71930b6b6537a796cdf13c4ffa7cf93eb53b6235;Mon Feb 28 17:55:14 2011 -0500
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;71930b6b6537a796cdf13c4ffa7cf93eb53b6235;Mon Feb 28 17:55:14 2011 -0500
SameMethod;true;clojure.lang.Compiler.DefExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.DefExpr#emit(C, ObjExpr, GeneratorAdapter);71930b6b6537a796cdf13c4ffa7cf93eb53b6235;Mon Feb 28 17:55:14 2011 -0500
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;71930b6b6537a796cdf13c4ffa7cf93eb53b6235;Mon Feb 28 17:55:14 2011 -0500
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);71930b6b6537a796cdf13c4ffa7cf93eb53b6235;Mon Feb 28 17:55:14 2011 -0500
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);71930b6b6537a796cdf13c4ffa7cf93eb53b6235;Mon Feb 28 17:55:14 2011 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;71930b6b6537a796cdf13c4ffa7cf93eb53b6235;Mon Feb 28 17:55:14 2011 -0500
SameType;true;clojure.lang.Var;clojure.lang.Var;71930b6b6537a796cdf13c4ffa7cf93eb53b6235;Mon Feb 28 17:55:14 2011 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7030355458db72c0ab7f502939cad954b7a25def;Tue Mar 1 10:10:09 2011 -0500
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;7030355458db72c0ab7f502939cad954b7a25def;Tue Mar 1 10:10:09 2011 -0500
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;7030355458db72c0ab7f502939cad954b7a25def;Tue Mar 1 10:10:09 2011 -0500
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);7030355458db72c0ab7f502939cad954b7a25def;Tue Mar 1 10:10:09 2011 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;7030355458db72c0ab7f502939cad954b7a25def;Tue Mar 1 10:10:09 2011 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);7030355458db72c0ab7f502939cad954b7a25def;Tue Mar 1 10:10:09 2011 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;7030355458db72c0ab7f502939cad954b7a25def;Tue Mar 1 10:10:09 2011 -0500
ExtractMethod;true;clojure.lang.Compiler.ObjExpr#ctorTypes();clojure.lang.Compiler.ObjExpr#supportsMeta();877c875235aaa7d9bc1bf5392f1c4991e9ea3f63;Tue Mar 1 11:34:36 2011 -0500
ExtractMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#supportsMeta();877c875235aaa7d9bc1bf5392f1c4991e9ea3f63;Tue Mar 1 11:34:36 2011 -0500
SameType;true;clojure.lang.AFunction;clojure.lang.AFunction;877c875235aaa7d9bc1bf5392f1c4991e9ea3f63;Tue Mar 1 11:34:36 2011 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;877c875235aaa7d9bc1bf5392f1c4991e9ea3f63;Tue Mar 1 11:34:36 2011 -0500
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;877c875235aaa7d9bc1bf5392f1c4991e9ea3f63;Tue Mar 1 11:34:36 2011 -0500
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);877c875235aaa7d9bc1bf5392f1c4991e9ea3f63;Tue Mar 1 11:34:36 2011 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;877c875235aaa7d9bc1bf5392f1c4991e9ea3f63;Tue Mar 1 11:34:36 2011 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#ctorTypes();clojure.lang.Compiler.ObjExpr#ctorTypes();877c875235aaa7d9bc1bf5392f1c4991e9ea3f63;Tue Mar 1 11:34:36 2011 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);877c875235aaa7d9bc1bf5392f1c4991e9ea3f63;Tue Mar 1 11:34:36 2011 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);877c875235aaa7d9bc1bf5392f1c4991e9ea3f63;Tue Mar 1 11:34:36 2011 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emit(C, ObjExpr, GeneratorAdapter);877c875235aaa7d9bc1bf5392f1c4991e9ea3f63;Tue Mar 1 11:34:36 2011 -0500
SameType;true;clojure.lang.AFunction;clojure.lang.AFunction;2b16fee78a0517bc83dd5735ab01d3d5813b1f72;Tue Mar 1 13:03:02 2011 -0500
SameType;true;clojure.lang.DynamicClassLoader;clojure.lang.DynamicClassLoader;5ee542d3de7e22d68e923c0f9c63267960cd1647;Thu Mar 3 08:46:31 2011 -0500
SameMethod;true;clojure.lang.DynamicClassLoader#findClass(String);clojure.lang.DynamicClassLoader#findClass(String);5ee542d3de7e22d68e923c0f9c63267960cd1647;Thu Mar 3 08:46:31 2011 -0500
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;5ee542d3de7e22d68e923c0f9c63267960cd1647;Thu Mar 3 08:46:31 2011 -0500
SameMethod;true;clojure.lang.Keyword#intern(Symbol);clojure.lang.Keyword#intern(Symbol);5ee542d3de7e22d68e923c0f9c63267960cd1647;Thu Mar 3 08:46:31 2011 -0500
SameMethod;true;clojure.lang.Keyword#find(Symbol);clojure.lang.Keyword#find(Symbol);5ee542d3de7e22d68e923c0f9c63267960cd1647;Thu Mar 3 08:46:31 2011 -0500
SameType;true;clojure.lang.Util;clojure.lang.Util;5ee542d3de7e22d68e923c0f9c63267960cd1647;Thu Mar 3 08:46:31 2011 -0500
SameMethod;true;clojure.lang.Util#clearCache(ReferenceQueue, ConcurrentHashMap);clojure.lang.Util#clearCache(ReferenceQueue, ConcurrentHashMap);5ee542d3de7e22d68e923c0f9c63267960cd1647;Thu Mar 3 08:46:31 2011 -0500
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;83a5aafe8737548253379502e5825d8dcf2bf972;Fri Mar 4 09:18:58 2011 -0500
SameType;true;clojure.lang.IChunkedSeq;clojure.lang.IChunkedSeq;83a5aafe8737548253379502e5825d8dcf2bf972;Fri Mar 4 09:18:58 2011 -0500
SameType;true;clojure.lang.ISeq;clojure.lang.ISeq;83a5aafe8737548253379502e5825d8dcf2bf972;Fri Mar 4 09:18:58 2011 -0500
SameType;true;clojure.lang.IndexedSeq;clojure.lang.IndexedSeq;83a5aafe8737548253379502e5825d8dcf2bf972;Fri Mar 4 09:18:58 2011 -0500
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;83a5aafe8737548253379502e5825d8dcf2bf972;Fri Mar 4 09:18:58 2011 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2bc1c1403ac8e4f2ab0db1ac9c3a5082c1ffc6fa;Sat Feb 26 10:30:38 2011 -0800
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;2bc1c1403ac8e4f2ab0db1ac9c3a5082c1ffc6fa;Sat Feb 26 10:30:38 2011 -0800
SameMethod;true;clojure.lang.Compiler.LetExpr#doEmit(C, ObjExpr, GeneratorAdapter, boolean);clojure.lang.Compiler.LetExpr#doEmit(C, ObjExpr, GeneratorAdapter, boolean);2bc1c1403ac8e4f2ab0db1ac9c3a5082c1ffc6fa;Sat Feb 26 10:30:38 2011 -0800
SameType;true;clojure.lang.AFn;clojure.lang.AFn;6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.AFn#applyToHelper(IFn, ISeq);clojure.lang.AFn#applyToHelper(IFn, ISeq);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object);clojure.lang.MultiFn#invoke(Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object);clojure.lang.MultiFn#invoke(Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameMethod;true;clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);clojure.lang.MultiFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);6dec807840a42c948f03670f72eeb5ef90d806ea;Sat Jan 8 08:15:38 2011 -0500
SameType;true;clojure.lang.RestFn;clojure.lang.RestFn;9368fd7602304e236fa5713fa4d81ad2979b4b14;Thu Feb 3 08:56:40 2011 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object);9368fd7602304e236fa5713fa4d81ad2979b4b14;Thu Feb 3 08:56:40 2011 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object);9368fd7602304e236fa5713fa4d81ad2979b4b14;Thu Feb 3 08:56:40 2011 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);9368fd7602304e236fa5713fa4d81ad2979b4b14;Thu Feb 3 08:56:40 2011 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);9368fd7602304e236fa5713fa4d81ad2979b4b14;Thu Feb 3 08:56:40 2011 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);9368fd7602304e236fa5713fa4d81ad2979b4b14;Thu Feb 3 08:56:40 2011 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);9368fd7602304e236fa5713fa4d81ad2979b4b14;Thu Feb 3 08:56:40 2011 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);9368fd7602304e236fa5713fa4d81ad2979b4b14;Thu Feb 3 08:56:40 2011 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);9368fd7602304e236fa5713fa4d81ad2979b4b14;Thu Feb 3 08:56:40 2011 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);9368fd7602304e236fa5713fa4d81ad2979b4b14;Thu Feb 3 08:56:40 2011 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);9368fd7602304e236fa5713fa4d81ad2979b4b14;Thu Feb 3 08:56:40 2011 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);9368fd7602304e236fa5713fa4d81ad2979b4b14;Thu Feb 3 08:56:40 2011 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);9368fd7602304e236fa5713fa4d81ad2979b4b14;Thu Feb 3 08:56:40 2011 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);9368fd7602304e236fa5713fa4d81ad2979b4b14;Thu Feb 3 08:56:40 2011 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);9368fd7602304e236fa5713fa4d81ad2979b4b14;Thu Feb 3 08:56:40 2011 -0500
SameMethod;true;clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);clojure.lang.RestFn#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);9368fd7602304e236fa5713fa4d81ad2979b4b14;Thu Feb 3 08:56:40 2011 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e3381eaf8593f77406af44224ed762304a887158;Thu Mar 17 13:24:30 2011 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;e3381eaf8593f77406af44224ed762304a887158;Thu Mar 17 13:24:30 2011 -0400
SameMethod;true;clojure.lang.Compiler.HostExpr#emitUnboxArg(ObjExpr, GeneratorAdapter, Class);clojure.lang.Compiler.HostExpr#emitUnboxArg(ObjExpr, GeneratorAdapter, Class);e3381eaf8593f77406af44224ed762304a887158;Thu Mar 17 13:24:30 2011 -0400
SameType;true;clojure.lang.Compiler.MethodExpr;clojure.lang.Compiler.MethodExpr;e3381eaf8593f77406af44224ed762304a887158;Thu Mar 17 13:24:30 2011 -0400
SameMethod;true;clojure.lang.Compiler.MethodExpr#emitTypedArgs(ObjExpr, GeneratorAdapter, Class[], IPersistentVector);clojure.lang.Compiler.MethodExpr#emitTypedArgs(ObjExpr, GeneratorAdapter, Class[], IPersistentVector);e3381eaf8593f77406af44224ed762304a887158;Thu Mar 17 13:24:30 2011 -0400
SameMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.Compiler#load(Reader, String, String);e3381eaf8593f77406af44224ed762304a887158;Thu Mar 17 13:24:30 2011 -0400
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);e3381eaf8593f77406af44224ed762304a887158;Thu Mar 17 13:24:30 2011 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;e3381eaf8593f77406af44224ed762304a887158;Thu Mar 17 13:24:30 2011 -0400
SameMethod;true;clojure.lang.RT#load(String, boolean);clojure.lang.RT#load(String, boolean);e3381eaf8593f77406af44224ed762304a887158;Thu Mar 17 13:24:30 2011 -0400
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();e3381eaf8593f77406af44224ed762304a887158;Thu Mar 17 13:24:30 2011 -0400
SameType;true;clojure.lang.Delay;clojure.lang.Delay;84710838d6996d9144d83c5b659bdeda4c656100;Fri Mar 18 11:44:28 2011 -0400
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;84710838d6996d9144d83c5b659bdeda4c656100;Fri Mar 18 11:44:28 2011 -0400
ExtractMethod;true;clojure.lang.LispReader#readToken(PushbackReader, char);clojure.lang.LispReader#read1(Reader);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader.CommentReader#invoke(Object, Object);clojure.lang.LispReader#read1(Reader);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader.UnquoteReader#invoke(Object, Object);clojure.lang.LispReader#read1(Reader);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader#readNumber(PushbackReader, char);clojure.lang.LispReader#read1(Reader);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader.CharacterReader#invoke(Object, Object);clojure.lang.LispReader#read1(Reader);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader#readUnicodeChar(PushbackReader, int, int, int, boolean);clojure.lang.LispReader#read1(Reader);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader#readDelimitedList(char, PushbackReader, boolean);clojure.lang.LispReader#read1(Reader);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader.ArgReader#invoke(Object, Object);clojure.lang.LispReader#read1(Reader);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader.RegexReader#invoke(Object, Object);clojure.lang.LispReader#read1(Reader);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader.StringReader#invoke(Object, Object);clojure.lang.LispReader#read1(Reader);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);clojure.lang.LispReader#read1(Reader);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader.DispatchReader#invoke(Object, Object);clojure.lang.LispReader#read1(Reader);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.PersistentHashMap#assocEx(Object, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.PersistentArrayMap#assocEx(Object, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.ThrowExpr#eval();clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler#writeClassFile(String, byte[]);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.RT#findKey(Keyword, ISeq);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader.UnquoteReader#invoke(Object, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader.CharacterReader#invoke(Object, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.PersistentStructMap#getAccessor(Def, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.PersistentStructMap$1#invoke(Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader.CtorReader#invoke(Object, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader.EvalReader#invoke(Object, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LockingTransaction#run(Callable);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader.MapReader#invoke(Object, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.PersistentStructMap#assocEx(Object, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.PersistentStructMap#without(Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader.UnmatchedDelimiterReader#invoke(Object, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader.UnreadableReader#invoke(Object, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader#interpretToken(String);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader#readDelimitedList(char, PushbackReader, boolean);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.TheVarExpr.Parser#parse(C, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader.RegexReader#invoke(Object, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader.StringReader#invoke(Object, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.IfExpr.Parser#parse(C, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Agent#restart(Object, boolean);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.MethodParamExpr#eval();clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.MethodParamExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.RT#toArray(Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.LetFnExpr.Parser#parse(C, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.PersistentTreeMap#assocEx(Object, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler#resolveIn(Namespace, Symbol, boolean);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.MethodParamExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LispReader.DispatchReader#invoke(Object, Object);clojure.lang.Util#runtimeException(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Agent#dispatch(IFn, ISeq, boolean);clojure.lang.Util#runtimeException(String, Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.AFn#run();clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.ARef#setValidator(IFn);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.ARef#removeWatch(Object);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.StaticInvokeExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.RT#printString(Object);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.ARef#notifyWatches(Object, Object);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.RT#readString(String);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Var#setMacro();clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler#maybePrimitiveType(Expr);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Var#setTag(Symbol);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Var#bindRoot(Object);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.LazySeq#sval();clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Var#run();clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.FnMethod#doEmitStatic(ObjExpr, ClassVisitor);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.FnMethod#doEmitPrim(ObjExpr, ClassVisitor);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.AFunction#compare(Object, Object);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Ref#run();clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.IfExpr#doEmit(C, ObjExpr, GeneratorAdapter, boolean);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler#addAnnotation(Object, IPersistentMap);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.ObjExpr#getCompiledClass();clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.Compiler#addParameterAnnotation(Object, IPersistentMap, int);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.TransactionalHashMap#remove(Object);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
ExtractMethod;true;clojure.lang.TransactionalHashMap#remove(Object, Object);clojure.lang.Util#runtimeException(Throwable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.AFn;clojure.lang.AFn;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.AFn#run();clojure.lang.AFn#run();8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.AFunction;clojure.lang.AFunction;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.AFunction#withMeta(IPersistentMap);clojure.lang.AFunction#withMeta(IPersistentMap);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.AFunction#compare(Object, Object);clojure.lang.AFunction#compare(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.APersistentVector.Seq;clojure.lang.APersistentVector.Seq;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.ARef;clojure.lang.ARef;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.ARef#setValidator(IFn);clojure.lang.ARef#setValidator(IFn);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.ARef#removeWatch(Object);clojure.lang.ARef#removeWatch(Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.ARef#notifyWatches(Object, Object);clojure.lang.ARef#notifyWatches(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.AReference;clojure.lang.AReference;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.ATransientMap;clojure.lang.ATransientMap;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.ATransientSet;clojure.lang.ATransientSet;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Agent;clojure.lang.Agent;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Agent#restart(Object, boolean);clojure.lang.Agent#restart(Object, boolean);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Agent#dispatch(IFn, ISeq, boolean);clojure.lang.Agent#dispatch(IFn, ISeq, boolean);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.ArrayChunk;clojure.lang.ArrayChunk;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_int;clojure.lang.ArraySeq.ArraySeq_int;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_float;clojure.lang.ArraySeq.ArraySeq_float;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_double;clojure.lang.ArraySeq.ArraySeq_double;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_long;clojure.lang.ArraySeq.ArraySeq_long;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_byte;clojure.lang.ArraySeq.ArraySeq_byte;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_char;clojure.lang.ArraySeq.ArraySeq_char;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.ArraySeq.ArraySeq_boolean;clojure.lang.ArraySeq.ArraySeq_boolean;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Atom;clojure.lang.Atom;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compile;clojure.lang.Compile;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.Expr;clojure.lang.Compiler.Expr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.IParser;clojure.lang.Compiler.IParser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.AssignExpr;clojure.lang.Compiler.AssignExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.AssignExpr.Parser;clojure.lang.Compiler.AssignExpr.Parser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.VarExpr;clojure.lang.Compiler.VarExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.TheVarExpr;clojure.lang.Compiler.TheVarExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.TheVarExpr.Parser;clojure.lang.Compiler.TheVarExpr.Parser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.TheVarExpr.Parser#parse(C, Object);clojure.lang.Compiler.TheVarExpr.Parser#parse(C, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.KeywordExpr;clojure.lang.Compiler.KeywordExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.ImportExpr;clojure.lang.Compiler.ImportExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.ImportExpr.Parser;clojure.lang.Compiler.ImportExpr.Parser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.AssignableExpr;clojure.lang.Compiler.AssignableExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.StaticFieldExpr;clojure.lang.Compiler.StaticFieldExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.StaticFieldExpr#StaticFieldExpr(int, Class, String, Symbol);clojure.lang.Compiler.StaticFieldExpr#StaticFieldExpr(int, Class, String, Symbol);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler#maybePrimitiveType(Expr);clojure.lang.Compiler#maybePrimitiveType(Expr);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.UnresolvedVarExpr;clojure.lang.Compiler.UnresolvedVarExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.NumberExpr;clojure.lang.Compiler.NumberExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.ConstantExpr;clojure.lang.Compiler.ConstantExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.NilExpr;clojure.lang.Compiler.NilExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.BooleanExpr;clojure.lang.Compiler.BooleanExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.StringExpr;clojure.lang.Compiler.StringExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.MonitorEnterExpr;clojure.lang.Compiler.MonitorEnterExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.MonitorEnterExpr.Parser;clojure.lang.Compiler.MonitorEnterExpr.Parser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.MonitorExitExpr;clojure.lang.Compiler.MonitorExitExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.MonitorExitExpr.Parser;clojure.lang.Compiler.MonitorExitExpr.Parser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.ThrowExpr;clojure.lang.Compiler.ThrowExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.ThrowExpr#eval();clojure.lang.Compiler.ThrowExpr#eval();8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.ThrowExpr.Parser;clojure.lang.Compiler.ThrowExpr.Parser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.NewExpr#eval();clojure.lang.Compiler.NewExpr#eval();8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.NewExpr.Parser;clojure.lang.Compiler.NewExpr.Parser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.MetaExpr;clojure.lang.Compiler.MetaExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.IfExpr#doEmit(C, ObjExpr, GeneratorAdapter, boolean);clojure.lang.Compiler.IfExpr#doEmit(C, ObjExpr, GeneratorAdapter, boolean);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.IfExpr.Parser;clojure.lang.Compiler.IfExpr.Parser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.IfExpr.Parser#parse(C, Object);clojure.lang.Compiler.IfExpr.Parser#parse(C, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.EmptyExpr;clojure.lang.Compiler.EmptyExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.ListExpr;clojure.lang.Compiler.ListExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.MapExpr;clojure.lang.Compiler.MapExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.SetExpr;clojure.lang.Compiler.SetExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.VectorExpr;clojure.lang.Compiler.VectorExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.KeywordInvokeExpr;clojure.lang.Compiler.KeywordInvokeExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.InstanceOfExpr;clojure.lang.Compiler.InstanceOfExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.StaticInvokeExpr;clojure.lang.Compiler.StaticInvokeExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.StaticInvokeExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.StaticInvokeExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#getCompiledClass();clojure.lang.Compiler.ObjExpr#getCompiledClass();8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#eval();clojure.lang.Compiler.ObjExpr#eval();8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#doEmitStatic(ObjExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#doEmitStatic(ObjExpr, ClassVisitor);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#doEmitPrim(ObjExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#doEmitPrim(ObjExpr, ClassVisitor);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.ObjMethod;clojure.lang.Compiler.ObjMethod;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.LocalBindingExpr;clojure.lang.Compiler.LocalBindingExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.BodyExpr;clojure.lang.Compiler.BodyExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.BodyExpr.Parser;clojure.lang.Compiler.BodyExpr.Parser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.LetFnExpr;clojure.lang.Compiler.LetFnExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.LetFnExpr.Parser;clojure.lang.Compiler.LetFnExpr.Parser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.LetFnExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetFnExpr.Parser#parse(C, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.RecurExpr.Parser;clojure.lang.Compiler.RecurExpr.Parser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.CompilerException;clojure.lang.Compiler.CompilerException;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler#eval(Object, boolean);clojure.lang.Compiler#eval(Object, boolean);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler#addAnnotation(Object, IPersistentMap);clojure.lang.Compiler#addAnnotation(Object, IPersistentMap);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler#addParameterAnnotation(Object, IPersistentMap, int);clojure.lang.Compiler#addParameterAnnotation(Object, IPersistentMap, int);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler#resolveIn(Namespace, Symbol, boolean);clojure.lang.Compiler#resolveIn(Namespace, Symbol, boolean);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Compiler#lookupVar(Symbol, boolean);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler#writeClassFile(String, byte[]);clojure.lang.Compiler#writeClassFile(String, byte[]);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr.DeftypeParser;clojure.lang.Compiler.NewInstanceExpr.DeftypeParser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr.ReifyParser;clojure.lang.Compiler.NewInstanceExpr.ReifyParser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.MethodParamExpr;clojure.lang.Compiler.MethodParamExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.MethodParamExpr#eval();clojure.lang.Compiler.MethodParamExpr#eval();8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.MethodParamExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.MethodParamExpr#emit(C, ObjExpr, GeneratorAdapter);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Compiler.MethodParamExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.MethodParamExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.CaseExpr;clojure.lang.Compiler.CaseExpr;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler.CaseExpr.Parser;clojure.lang.Compiler.CaseExpr.Parser;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Delay;clojure.lang.Delay;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.FnLoaderThunk;clojure.lang.FnLoaderThunk;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.FnLoaderThunk#load();clojure.lang.FnLoaderThunk#load();8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.IBlockingDeref;clojure.lang.IBlockingDeref;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.IChunk;clojure.lang.IChunk;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.IChunkedSeq;clojure.lang.IChunkedSeq;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.IDeref;clojure.lang.IDeref;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.IFn;clojure.lang.IFn;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.IPersistentMap;clojure.lang.IPersistentMap;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.IPersistentSet;clojure.lang.IPersistentSet;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.IReduce;clojure.lang.IReduce;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.IReference;clojure.lang.IReference;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.ITransientSet;clojure.lang.ITransientSet;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LazySeq#sval();clojure.lang.LazySeq#sval();8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader#unread(PushbackReader, int);clojure.lang.LispReader#unread(PushbackReader, int);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.ReaderException;clojure.lang.LispReader.ReaderException;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader#readToken(PushbackReader, char);clojure.lang.LispReader#readToken(PushbackReader, char);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader#readNumber(PushbackReader, char);clojure.lang.LispReader#readNumber(PushbackReader, char);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader#readUnicodeChar(PushbackReader, int, int, int, boolean);clojure.lang.LispReader#readUnicodeChar(PushbackReader, int, int, int, boolean);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader#interpretToken(String);clojure.lang.LispReader#interpretToken(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.RegexReader;clojure.lang.LispReader.RegexReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader.RegexReader#invoke(Object, Object);clojure.lang.LispReader.RegexReader#invoke(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.StringReader;clojure.lang.LispReader.StringReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader.StringReader#invoke(Object, Object);clojure.lang.LispReader.StringReader#invoke(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.CommentReader;clojure.lang.LispReader.CommentReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader.CommentReader#invoke(Object, Object);clojure.lang.LispReader.CommentReader#invoke(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.DiscardReader;clojure.lang.LispReader.DiscardReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.WrappingReader;clojure.lang.LispReader.WrappingReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.DeprecatedWrappingReader;clojure.lang.LispReader.DeprecatedWrappingReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.VarReader;clojure.lang.LispReader.VarReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.DispatchReader;clojure.lang.LispReader.DispatchReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader.DispatchReader#invoke(Object, Object);clojure.lang.LispReader.DispatchReader#invoke(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.FnReader;clojure.lang.LispReader.FnReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader.FnReader#invoke(Object, Object);clojure.lang.LispReader.FnReader#invoke(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.ArgReader;clojure.lang.LispReader.ArgReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader.ArgReader#invoke(Object, Object);clojure.lang.LispReader.ArgReader#invoke(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.MetaReader;clojure.lang.LispReader.MetaReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.UnquoteReader;clojure.lang.LispReader.UnquoteReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader.UnquoteReader#invoke(Object, Object);clojure.lang.LispReader.UnquoteReader#invoke(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.CharacterReader;clojure.lang.LispReader.CharacterReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader.CharacterReader#invoke(Object, Object);clojure.lang.LispReader.CharacterReader#invoke(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.ListReader;clojure.lang.LispReader.ListReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.CtorReader;clojure.lang.LispReader.CtorReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader.CtorReader#invoke(Object, Object);clojure.lang.LispReader.CtorReader#invoke(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.EvalReader;clojure.lang.LispReader.EvalReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader.EvalReader#invoke(Object, Object);clojure.lang.LispReader.EvalReader#invoke(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.VectorReader;clojure.lang.LispReader.VectorReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.MapReader;clojure.lang.LispReader.MapReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader.MapReader#invoke(Object, Object);clojure.lang.LispReader.MapReader#invoke(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.SetReader;clojure.lang.LispReader.SetReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.UnmatchedDelimiterReader;clojure.lang.LispReader.UnmatchedDelimiterReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader.UnmatchedDelimiterReader#invoke(Object, Object);clojure.lang.LispReader.UnmatchedDelimiterReader#invoke(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LispReader.UnreadableReader;clojure.lang.LispReader.UnreadableReader;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader.UnreadableReader#invoke(Object, Object);clojure.lang.LispReader.UnreadableReader#invoke(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LispReader#readDelimitedList(char, PushbackReader, boolean);clojure.lang.LispReader#readDelimitedList(char, PushbackReader, boolean);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.LockingTransaction#run(Callable);clojure.lang.LockingTransaction#run(Callable);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.PersistentArrayMap#assocEx(Object, Object);clojure.lang.PersistentArrayMap#assocEx(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.PersistentHashMap#assocEx(Object, Object);clojure.lang.PersistentHashMap#assocEx(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.PersistentHashSet;clojure.lang.PersistentHashSet;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.PersistentStructMap;clojure.lang.PersistentStructMap;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.PersistentStructMap#getAccessor(Def, Object);clojure.lang.PersistentStructMap#getAccessor(Def, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.PersistentStructMap$1#invoke(Object);clojure.lang.PersistentStructMap$1#invoke(Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.PersistentStructMap#assocEx(Object, Object);clojure.lang.PersistentStructMap#assocEx(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.PersistentStructMap#without(Object);clojure.lang.PersistentStructMap#without(Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.PersistentTreeMap#assocEx(Object, Object);clojure.lang.PersistentTreeMap#assocEx(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.PersistentTreeSet;clojure.lang.PersistentTreeSet;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.PersistentVector.ChunkedSeq;clojure.lang.PersistentVector.ChunkedSeq;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.PersistentVector.TransientVector;clojure.lang.PersistentVector.TransientVector;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.RT$3#invoke(Object);clojure.lang.RT$3#invoke(Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.RT#findKey(Keyword, ISeq);clojure.lang.RT#findKey(Keyword, ISeq);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.RT#toArray(Object);clojure.lang.RT#toArray(Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.RT#printString(Object);clojure.lang.RT#printString(Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.RT#readString(String);clojure.lang.RT#readString(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.RT#classForName(String);clojure.lang.RT#classForName(String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Range;clojure.lang.Range;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Ref;clojure.lang.Ref;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Ref#run();clojure.lang.Ref#run();8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Reflector#invokeInstanceMethod(Object, String, Object[]);clojure.lang.Reflector#invokeInstanceMethod(Object, String, Object[]);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Reflector#invokeConstructor(Class, Object[]);clojure.lang.Reflector#invokeConstructor(Class, Object[]);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Reflector#getStaticField(Class, String);clojure.lang.Reflector#getStaticField(Class, String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Reflector#setStaticField(Class, String, Object);clojure.lang.Reflector#setStaticField(Class, String, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Reflector#getInstanceField(Object, String);clojure.lang.Reflector#getInstanceField(Object, String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Reflector#setInstanceField(Object, String, Object);clojure.lang.Reflector#setInstanceField(Object, String, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Reflector#invokeInstanceMember(Object, String);clojure.lang.Reflector#invokeInstanceMember(Object, String);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Reflector#invokeInstanceMember(String, Object, Object);clojure.lang.Reflector#invokeInstanceMember(String, Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Repl;clojure.lang.Repl;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.RestFn;clojure.lang.RestFn;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Reversible;clojure.lang.Reversible;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Script;clojure.lang.Script;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Settable;clojure.lang.Settable;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.TransactionalHashMap;clojure.lang.TransactionalHashMap;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.TransactionalHashMap#remove(Object);clojure.lang.TransactionalHashMap#remove(Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.TransactionalHashMap#remove(Object, Object);clojure.lang.TransactionalHashMap#remove(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Util;clojure.lang.Util;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Var;clojure.lang.Var;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Var#setMacro();clojure.lang.Var#setMacro();8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Var#setTag(Symbol);clojure.lang.Var#setTag(Symbol);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Var#bindRoot(Object);clojure.lang.Var#bindRoot(Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Var#run();clojure.lang.Var#run();8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameMethod;true;clojure.lang.Var$2#invoke(Object, Object);clojure.lang.Var$2#invoke(Object, Object);8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.main;clojure.main;8fda34e4c77cac079b711da59d5fe49b74605553;Mon Mar 21 11:17:22 2011 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;dd49d07b75c619075156d1b38bae9a364ffb63b1;Wed Mar 9 11:58:13 2011 -0800
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;dd49d07b75c619075156d1b38bae9a364ffb63b1;Wed Mar 9 11:58:13 2011 -0800
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;dd49d07b75c619075156d1b38bae9a364ffb63b1;Wed Mar 9 11:58:13 2011 -0800
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);dd49d07b75c619075156d1b38bae9a364ffb63b1;Wed Mar 9 11:58:13 2011 -0800
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c5681382da775e898915b17f3ab18b49c65359ec;Tue Apr 19 07:41:04 2011 -0400
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;c5681382da775e898915b17f3ab18b49c65359ec;Tue Apr 19 07:41:04 2011 -0400
SameMethod;true;clojure.lang.Compiler.FnExpr#emitForDefn(ObjExpr, GeneratorAdapter);clojure.lang.Compiler.FnExpr#emitForDefn(ObjExpr, GeneratorAdapter);c5681382da775e898915b17f3ab18b49c65359ec;Tue Apr 19 07:41:04 2011 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;8296b5f752fdb2926a309a7248d0d1bf6cb436b5;Tue Apr 19 08:55:33 2011 -0400
SameType;true;clojure.lang.Compiler.ConstantExpr;clojure.lang.Compiler.ConstantExpr;8296b5f752fdb2926a309a7248d0d1bf6cb436b5;Tue Apr 19 08:55:33 2011 -0400
SameType;true;clojure.lang.Compiler.ConstantExpr.Parser;clojure.lang.Compiler.ConstantExpr.Parser;8296b5f752fdb2926a309a7248d0d1bf6cb436b5;Tue Apr 19 08:55:33 2011 -0400
SameMethod;true;clojure.lang.Compiler.ConstantExpr.Parser#parse(C, Object);clojure.lang.Compiler.ConstantExpr.Parser#parse(C, Object);8296b5f752fdb2926a309a7248d0d1bf6cb436b5;Tue Apr 19 08:55:33 2011 -0400
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);8296b5f752fdb2926a309a7248d0d1bf6cb436b5;Tue Apr 19 08:55:33 2011 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;8296b5f752fdb2926a309a7248d0d1bf6cb436b5;Tue Apr 19 08:55:33 2011 -0400
SameType;true;clojure.lang.Util;clojure.lang.Util;8fee9ad0098507c929721b136b9401b7763d85f5;Wed Apr 27 14:51:42 2011 -0400
SameMethod;true;clojure.lang.Util#clearCache(ReferenceQueue, ConcurrentHashMap);clojure.lang.Util#clearCache(ReferenceQueue, ConcurrentHashMap);8fee9ad0098507c929721b136b9401b7763d85f5;Wed Apr 27 14:51:42 2011 -0400
ExtractMethod;true;clojure.lang.Compiler.CaseExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.CaseExpr#doEmit(C, ObjExpr, GeneratorAdapter, boolean);34489bddcceb2c1102c30e6b3e417d981097453c;Fri Mar 4 15:19:13 2011 -0800
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;34489bddcceb2c1102c30e6b3e417d981097453c;Fri Mar 4 15:19:13 2011 -0800
SameType;true;clojure.lang.Compiler.CaseExpr;clojure.lang.Compiler.CaseExpr;34489bddcceb2c1102c30e6b3e417d981097453c;Fri Mar 4 15:19:13 2011 -0800
SameMethod;true;clojure.lang.Compiler.CaseExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.CaseExpr#emit(C, ObjExpr, GeneratorAdapter);34489bddcceb2c1102c30e6b3e417d981097453c;Fri Mar 4 15:19:13 2011 -0800
SameType;true;clojure.lang.Compiler.CaseExpr.Parser;clojure.lang.Compiler.CaseExpr.Parser;34489bddcceb2c1102c30e6b3e417d981097453c;Fri Mar 4 15:19:13 2011 -0800
SameMethod;true;clojure.lang.Compiler.CaseExpr.Parser#parse(C, Object);clojure.lang.Compiler.CaseExpr.Parser#parse(C, Object);34489bddcceb2c1102c30e6b3e417d981097453c;Fri Mar 4 15:19:13 2011 -0800
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6fb09f402c5448070a2efc64ebd64285480b263f;Fri Apr 29 14:42:34 2011 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;6fb09f402c5448070a2efc64ebd64285480b263f;Fri Apr 29 14:42:34 2011 -0400
SameMethod;true;clojure.lang.Compiler.HostExpr#emitBoxReturn(ObjExpr, GeneratorAdapter, Class);clojure.lang.Compiler.HostExpr#emitBoxReturn(ObjExpr, GeneratorAdapter, Class);6fb09f402c5448070a2efc64ebd64285480b263f;Fri Apr 29 14:42:34 2011 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;6fb09f402c5448070a2efc64ebd64285480b263f;Fri Apr 29 14:42:34 2011 -0400
SameMethod;true;clojure.lang.Numbers#num(float);clojure.lang.Numbers#num(float);6fb09f402c5448070a2efc64ebd64285480b263f;Fri Apr 29 14:42:34 2011 -0400
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;6fb09f402c5448070a2efc64ebd64285480b263f;Fri Apr 29 14:42:34 2011 -0400
SameMethod;true;clojure.lang.Reflector#prepRet(Class, Object);clojure.lang.Reflector#prepRet(Class, Object);6fb09f402c5448070a2efc64ebd64285480b263f;Fri Apr 29 14:42:34 2011 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;bf22d2a456909f40faa03f87e9509ff28b96abe0;Mon Apr 25 13:52:22 2011 -0700
SameMethod;true;clojure.lang.RT#longCast(Object);clojure.lang.RT#longCast(Object);bf22d2a456909f40faa03f87e9509ff28b96abe0;Mon Apr 25 13:52:22 2011 -0700
SameType;true;clojure.lang.RT;clojure.lang.RT;e89e95fe82f430cc5fe9ea1c3f1974434a9ccda3;Mon Apr 25 16:15:32 2011 -0700
RenameMethod;true;clojure.lang.Numbers#bitOps(Object);clojure.lang.Numbers#bitOpsCast(Object);601d9521f88f8fb00e670d2823857cdcb2b2e1c3;Fri Apr 29 11:04:34 2011 -0700
MoveMethod;true;clojure.lang.Numbers.LongBitOps#andNot(Number, Number);clojure.lang.Numbers#andNot(long, long);601d9521f88f8fb00e670d2823857cdcb2b2e1c3;Fri Apr 29 11:04:34 2011 -0700
ExtractMethod;true;clojure.lang.Numbers#shiftLeft(Object, Object);clojure.lang.Numbers#shiftLeft(long, long);601d9521f88f8fb00e670d2823857cdcb2b2e1c3;Fri Apr 29 11:04:34 2011 -0700
ExtractMethod;true;clojure.lang.Numbers#shiftRight(Object, Object);clojure.lang.Numbers#shiftRight(long, long);601d9521f88f8fb00e670d2823857cdcb2b2e1c3;Fri Apr 29 11:04:34 2011 -0700
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;601d9521f88f8fb00e670d2823857cdcb2b2e1c3;Fri Apr 29 11:04:34 2011 -0700
SameMethod;true;clojure.lang.Numbers#shiftLeft(Object, Object);clojure.lang.Numbers#shiftLeft(Object, Object);601d9521f88f8fb00e670d2823857cdcb2b2e1c3;Fri Apr 29 11:04:34 2011 -0700
SameMethod;true;clojure.lang.Numbers#shiftRight(Object, Object);clojure.lang.Numbers#shiftRight(Object, Object);601d9521f88f8fb00e670d2823857cdcb2b2e1c3;Fri Apr 29 11:04:34 2011 -0700
SameMethod;true;clojure.lang.Numbers#not(Object);clojure.lang.Numbers#not(Object);601d9521f88f8fb00e670d2823857cdcb2b2e1c3;Fri Apr 29 11:04:34 2011 -0700
SameMethod;true;clojure.lang.Numbers#and(Object, Object);clojure.lang.Numbers#and(Object, Object);601d9521f88f8fb00e670d2823857cdcb2b2e1c3;Fri Apr 29 11:04:34 2011 -0700
SameMethod;true;clojure.lang.Numbers#and(Object, long);clojure.lang.Numbers#and(Object, long);601d9521f88f8fb00e670d2823857cdcb2b2e1c3;Fri Apr 29 11:04:34 2011 -0700
SameMethod;true;clojure.lang.Numbers#and(long, Object);clojure.lang.Numbers#and(long, Object);601d9521f88f8fb00e670d2823857cdcb2b2e1c3;Fri Apr 29 11:04:34 2011 -0700
SameMethod;true;clojure.lang.Numbers#or(Object, Object);clojure.lang.Numbers#or(Object, Object);601d9521f88f8fb00e670d2823857cdcb2b2e1c3;Fri Apr 29 11:04:34 2011 -0700
SameMethod;true;clojure.lang.Numbers#or(Object, long);clojure.lang.Numbers#or(Object, long);601d9521f88f8fb00e670d2823857cdcb2b2e1c3;Fri Apr 29 11:04:34 2011 -0700
SameMethod;true;clojure.lang.Numbers#or(long, Object);clojure.lang.Numbers#or(long, Object);601d9521f88f8fb00e670d2823857cdcb2b2e1c3;Fri Apr 29 11:04:34 2011 -0700
SameMethod;true;clojure.lang.Numbers#xor(Object, Object);clojure.lang.Numbers#xor(Object, Object);601d9521f88f8fb00e670d2823857cdcb2b2e1c3;Fri Apr 29 11:04:34 2011 -0700
SameMethod;true;clojure.lang.Numbers#xor(Object, long);clojure.lang.Numbers#xor(Object, long);601d9521f88f8fb00e670d2823857cdcb2b2e1c3;Fri Apr 29 11:04:34 2011 -0700
SameMethod;true;clojure.lang.Numbers#xor(long, Object);clojure.lang.Numbers#xor(long, Object);601d9521f88f8fb00e670d2823857cdcb2b2e1c3;Fri Apr 29 11:04:34 2011 -0700
ExtractMethod;true;clojure.lang.Reflector#getAsMethodOfPublicBase(Class, Method);clojure.lang.Reflector#isMatch(Method, Method);ac1e8ad9f182dc2e8a5254f3e4b7b77c0258353d;Tue May 10 08:18:20 2011 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;ac1e8ad9f182dc2e8a5254f3e4b7b77c0258353d;Tue May 10 08:18:20 2011 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;ac1e8ad9f182dc2e8a5254f3e4b7b77c0258353d;Tue May 10 08:18:20 2011 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);ac1e8ad9f182dc2e8a5254f3e4b7b77c0258353d;Tue May 10 08:18:20 2011 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);ac1e8ad9f182dc2e8a5254f3e4b7b77c0258353d;Tue May 10 08:18:20 2011 -0400
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);ac1e8ad9f182dc2e8a5254f3e4b7b77c0258353d;Tue May 10 08:18:20 2011 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;ac1e8ad9f182dc2e8a5254f3e4b7b77c0258353d;Tue May 10 08:18:20 2011 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);ac1e8ad9f182dc2e8a5254f3e4b7b77c0258353d;Tue May 10 08:18:20 2011 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;ac1e8ad9f182dc2e8a5254f3e4b7b77c0258353d;Tue May 10 08:18:20 2011 -0400
SameType;true;clojure.lang.LispReader.DispatchReader;clojure.lang.LispReader.DispatchReader;ac1e8ad9f182dc2e8a5254f3e4b7b77c0258353d;Tue May 10 08:18:20 2011 -0400
SameMethod;true;clojure.lang.LispReader.DispatchReader#invoke(Object, Object);clojure.lang.LispReader.DispatchReader#invoke(Object, Object);ac1e8ad9f182dc2e8a5254f3e4b7b77c0258353d;Tue May 10 08:18:20 2011 -0400
SameType;true;clojure.lang.LispReader.CtorReader;clojure.lang.LispReader.CtorReader;ac1e8ad9f182dc2e8a5254f3e4b7b77c0258353d;Tue May 10 08:18:20 2011 -0400
SameMethod;true;clojure.lang.LispReader.CtorReader#invoke(Object, Object);clojure.lang.LispReader.CtorReader#invoke(Object, Object);ac1e8ad9f182dc2e8a5254f3e4b7b77c0258353d;Tue May 10 08:18:20 2011 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;ac1e8ad9f182dc2e8a5254f3e4b7b77c0258353d;Tue May 10 08:18:20 2011 -0400
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;ac1e8ad9f182dc2e8a5254f3e4b7b77c0258353d;Tue May 10 08:18:20 2011 -0400
SameMethod;true;clojure.lang.Reflector#getAsMethodOfPublicBase(Class, Method);clojure.lang.Reflector#getAsMethodOfPublicBase(Class, Method);ac1e8ad9f182dc2e8a5254f3e4b7b77c0258353d;Tue May 10 08:18:20 2011 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;507e7b93062cecb52a677aa34357237b770beb42;Fri May 6 11:06:52 2011 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;f81170d3787c250ba3871577e77446dde5e98882;Mon May 16 00:19:02 2011 -0700
SameMethod;true;clojure.lang.Numbers#clearBit(long, long);clojure.lang.Numbers#clearBit(long, long);f81170d3787c250ba3871577e77446dde5e98882;Mon May 16 00:19:02 2011 -0700
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;62c432098beeb4362f1dd6cc1d18f4403c3bdd10;Tue May 10 09:09:15 2011 -0400
SameMethod;true;clojure.lang.Compiler#getMatchingParams(String, ArrayList, IPersistentVector, List);clojure.lang.Compiler#getMatchingParams(String, ArrayList, IPersistentVector, List);62c432098beeb4362f1dd6cc1d18f4403c3bdd10;Tue May 10 09:09:15 2011 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;295067972c898ca6910cc2040de1c3280d61e432;Fri Nov 5 22:30:33 2010 +0200
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;295067972c898ca6910cc2040de1c3280d61e432;Fri Nov 5 22:30:33 2010 +0200
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;295067972c898ca6910cc2040de1c3280d61e432;Fri Nov 5 22:30:33 2010 +0200
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);295067972c898ca6910cc2040de1c3280d61e432;Fri Nov 5 22:30:33 2010 +0200
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;21175bc95d5f64e8142cb368e39ccd171debc56a;Tue May 24 08:28:58 2011 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;21175bc95d5f64e8142cb368e39ccd171debc56a;Tue May 24 08:28:58 2011 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);21175bc95d5f64e8142cb368e39ccd171debc56a;Tue May 24 08:28:58 2011 -0400
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);21175bc95d5f64e8142cb368e39ccd171debc56a;Tue May 24 08:28:58 2011 -0400
SameMethod;true;clojure.lang.Compiler#eval(Object, boolean);clojure.lang.Compiler#eval(Object, boolean);21175bc95d5f64e8142cb368e39ccd171debc56a;Tue May 24 08:28:58 2011 -0400
SameMethod;true;clojure.lang.Compiler#boxClass(Class);clojure.lang.Compiler#boxClass(Class);21175bc95d5f64e8142cb368e39ccd171debc56a;Tue May 24 08:28:58 2011 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;21175bc95d5f64e8142cb368e39ccd171debc56a;Tue May 24 08:28:58 2011 -0400
SameType;true;clojure.lang.LispReader.CtorReader;clojure.lang.LispReader.CtorReader;21175bc95d5f64e8142cb368e39ccd171debc56a;Tue May 24 08:28:58 2011 -0400
SameMethod;true;clojure.lang.LispReader.CtorReader#invoke(Object, Object);clojure.lang.LispReader.CtorReader#invoke(Object, Object);21175bc95d5f64e8142cb368e39ccd171debc56a;Tue May 24 08:28:58 2011 -0400
SameType;true;clojure.lang.MethodImplCache;clojure.lang.MethodImplCache;8b94a540735b5a3be0405c55f01e908f180b94cb;Sat May 21 19:24:01 2011 -0700
SameMethod;true;clojure.lang.MethodImplCache#MethodImplCache(IPersistentMap, Keyword, int, int, Object[]);clojure.lang.MethodImplCache#MethodImplCache(IPersistentMap, Keyword, int, int, Object[]);8b94a540735b5a3be0405c55f01e908f180b94cb;Sat May 21 19:24:01 2011 -0700
SameMethod;true;clojure.lang.MethodImplCache#findFnFor(Class);clojure.lang.MethodImplCache#findFnFor(Class);8b94a540735b5a3be0405c55f01e908f180b94cb;Sat May 21 19:24:01 2011 -0700
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;da412909d36551a526ed090d8161cb59542db8b6;Fri Jun 24 18:15:07 2011 +0200
SameType;true;clojure.lang.PersistentVector.TransientVector;clojure.lang.PersistentVector.TransientVector;da412909d36551a526ed090d8161cb59542db8b6;Fri Jun 24 18:15:07 2011 +0200
SameMethod;true;clojure.lang.PersistentVector.TransientVector#pop();clojure.lang.PersistentVector.TransientVector#pop();da412909d36551a526ed090d8161cb59542db8b6;Fri Jun 24 18:15:07 2011 +0200
ExtractMethod;true;clojure.lang.Numbers.BigIntOps#add(Number, Number);clojure.lang.BigInt#add(BigInt);684fca15040e1ec8753429909b2d463e99d857e7;Fri Aug 12 13:31:59 2011 -0400
ExtractMethod;true;clojure.lang.Numbers.BigIntOps#lt(Number, Number);clojure.lang.BigInt#lt(BigInt);684fca15040e1ec8753429909b2d463e99d857e7;Fri Aug 12 13:31:59 2011 -0400
ExtractMethod;true;clojure.lang.Numbers.BigIntOps#multiply(Number, Number);clojure.lang.BigInt#multiply(BigInt);684fca15040e1ec8753429909b2d463e99d857e7;Fri Aug 12 13:31:59 2011 -0400
ExtractMethod;true;clojure.lang.Numbers.BigIntOps#quotient(Number, Number);clojure.lang.BigInt#quotient(BigInt);684fca15040e1ec8753429909b2d463e99d857e7;Fri Aug 12 13:31:59 2011 -0400
ExtractMethod;true;clojure.lang.Numbers.BigIntOps#remainder(Number, Number);clojure.lang.BigInt#remainder(BigInt);684fca15040e1ec8753429909b2d463e99d857e7;Fri Aug 12 13:31:59 2011 -0400
SameType;true;clojure.lang.BigInt;clojure.lang.BigInt;684fca15040e1ec8753429909b2d463e99d857e7;Fri Aug 12 13:31:59 2011 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;684fca15040e1ec8753429909b2d463e99d857e7;Fri Aug 12 13:31:59 2011 -0400
SameType;true;clojure.lang.Numbers.BigIntOps;clojure.lang.Numbers.BigIntOps;684fca15040e1ec8753429909b2d463e99d857e7;Fri Aug 12 13:31:59 2011 -0400
SameMethod;true;clojure.lang.Numbers.BigIntOps#add(Number, Number);clojure.lang.Numbers.BigIntOps#add(Number, Number);684fca15040e1ec8753429909b2d463e99d857e7;Fri Aug 12 13:31:59 2011 -0400
SameMethod;true;clojure.lang.Numbers.BigIntOps#multiply(Number, Number);clojure.lang.Numbers.BigIntOps#multiply(Number, Number);684fca15040e1ec8753429909b2d463e99d857e7;Fri Aug 12 13:31:59 2011 -0400
SameMethod;true;clojure.lang.Numbers.BigIntOps#quotient(Number, Number);clojure.lang.Numbers.BigIntOps#quotient(Number, Number);684fca15040e1ec8753429909b2d463e99d857e7;Fri Aug 12 13:31:59 2011 -0400
SameMethod;true;clojure.lang.Numbers.BigIntOps#remainder(Number, Number);clojure.lang.Numbers.BigIntOps#remainder(Number, Number);684fca15040e1ec8753429909b2d463e99d857e7;Fri Aug 12 13:31:59 2011 -0400
SameMethod;true;clojure.lang.Numbers.BigIntOps#lt(Number, Number);clojure.lang.Numbers.BigIntOps#lt(Number, Number);684fca15040e1ec8753429909b2d463e99d857e7;Fri Aug 12 13:31:59 2011 -0400
SameType;true;clojure.lang.BigInt;clojure.lang.BigInt;ecc3f392bc4b578ed706a574bc955c1957af128b;Tue Aug 23 19:09:55 2011 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;115c1ef7f40b969f297a4601e721a95ee3ef82ae;Wed Jun 29 03:13:56 2011 -0400
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;115c1ef7f40b969f297a4601e721a95ee3ef82ae;Wed Jun 29 03:13:56 2011 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, Symbol, Expr, IPersistentVector);115c1ef7f40b969f297a4601e721a95ee3ef82ae;Wed Jun 29 03:13:56 2011 -0400
SameType;true;clojure.lang.Util;clojure.lang.Util;0689c47db0b9e10afa216b815398e06d7ac0a738;Mon Aug 29 13:59:38 2011 -0400
ExtractMethod;true;clojure.lang.RT#loadResourceScript(Class, String, boolean);clojure.lang.RT#resourceAsStream(ClassLoader, String);3035a6fb75ac351382614c9c91862db1dd93fb2d;Wed Jun 29 19:45:49 2011 -0700
ExtractMethod;true;clojure.lang.RT#compile(String);clojure.lang.RT#resourceAsStream(ClassLoader, String);3035a6fb75ac351382614c9c91862db1dd93fb2d;Wed Jun 29 19:45:49 2011 -0700
SameType;true;clojure.lang.RT;clojure.lang.RT;3035a6fb75ac351382614c9c91862db1dd93fb2d;Wed Jun 29 19:45:49 2011 -0700
SameMethod;true;clojure.lang.RT#loadResourceScript(Class, String, boolean);clojure.lang.RT#loadResourceScript(Class, String, boolean);3035a6fb75ac351382614c9c91862db1dd93fb2d;Wed Jun 29 19:45:49 2011 -0700
SameMethod;true;clojure.lang.RT#compile(String);clojure.lang.RT#compile(String);3035a6fb75ac351382614c9c91862db1dd93fb2d;Wed Jun 29 19:45:49 2011 -0700
SameMethod;true;clojure.lang.RT#load(String, boolean);clojure.lang.RT#load(String, boolean);3035a6fb75ac351382614c9c91862db1dd93fb2d;Wed Jun 29 19:45:49 2011 -0700
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e92978783e1ba7ac0e2617fdabfed576209d7fa4;Mon Sep 5 15:09:30 2011 -0400
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;e92978783e1ba7ac0e2617fdabfed576209d7fa4;Mon Sep 5 15:09:30 2011 -0400
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.StaticMethodExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);e92978783e1ba7ac0e2617fdabfed576209d7fa4;Mon Sep 5 15:09:30 2011 -0400
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;e92978783e1ba7ac0e2617fdabfed576209d7fa4;Mon Sep 5 15:09:30 2011 -0400
SameMethod;true;clojure.lang.Compiler.IfExpr#doEmit(C, ObjExpr, GeneratorAdapter, boolean);clojure.lang.Compiler.IfExpr#doEmit(C, ObjExpr, GeneratorAdapter, boolean);e92978783e1ba7ac0e2617fdabfed576209d7fa4;Mon Sep 5 15:09:30 2011 -0400
SameType;true;clojure.lang.BigInt;clojure.lang.BigInt;43bc5b79713e482f082ba62aba918cfa689a847b;Tue Sep 6 19:05:58 2011 -0400
SameMethod;true;clojure.lang.BigInt#add(BigInt);clojure.lang.BigInt#add(BigInt);43bc5b79713e482f082ba62aba918cfa689a847b;Tue Sep 6 19:05:58 2011 -0400
SameMethod;true;clojure.lang.BigInt#multiply(BigInt);clojure.lang.BigInt#multiply(BigInt);43bc5b79713e482f082ba62aba918cfa689a847b;Tue Sep 6 19:05:58 2011 -0400
SameMethod;true;clojure.lang.BigInt#quotient(BigInt);clojure.lang.BigInt#quotient(BigInt);43bc5b79713e482f082ba62aba918cfa689a847b;Tue Sep 6 19:05:58 2011 -0400
SameMethod;true;clojure.lang.BigInt#remainder(BigInt);clojure.lang.BigInt#remainder(BigInt);43bc5b79713e482f082ba62aba918cfa689a847b;Tue Sep 6 19:05:58 2011 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;fbf402e94c82855c7739ab5a3e206ed21ce2d597;Tue May 10 09:52:57 2011 -0400
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;fbf402e94c82855c7739ab5a3e206ed21ce2d597;Tue May 10 09:52:57 2011 -0400
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Symbol, Expr, String, IPersistentVector);clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Symbol, Expr, String, IPersistentVector);fbf402e94c82855c7739ab5a3e206ed21ce2d597;Tue May 10 09:52:57 2011 -0400
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;fbf402e94c82855c7739ab5a3e206ed21ce2d597;Tue May 10 09:52:57 2011 -0400
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, Symbol, Class, String, IPersistentVector);clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, Symbol, Class, String, IPersistentVector);fbf402e94c82855c7739ab5a3e206ed21ce2d597;Tue May 10 09:52:57 2011 -0400
SameMethod;true;clojure.lang.Compiler#getMatchingParams(String, ArrayList, IPersistentVector, List);clojure.lang.Compiler#getMatchingParams(String, ArrayList, IPersistentVector, List);fbf402e94c82855c7739ab5a3e206ed21ce2d597;Tue May 10 09:52:57 2011 -0400
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;fbf402e94c82855c7739ab5a3e206ed21ce2d597;Tue May 10 09:52:57 2011 -0400
SameMethod;true;clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);fbf402e94c82855c7739ab5a3e206ed21ce2d597;Tue May 10 09:52:57 2011 -0400
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;e76d68dc65bf68f7310cc5e943c9f4ff960249e9;Sat Sep 10 10:38:10 2011 +0200
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode;clojure.lang.PersistentHashMap.BitmapIndexedNode;e76d68dc65bf68f7310cc5e943c9f4ff960249e9;Sat Sep 10 10:38:10 2011 +0200
SameMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#without(AtomicReference, int, int, Object, Box);clojure.lang.PersistentHashMap.BitmapIndexedNode#without(AtomicReference, int, int, Object, Box);e76d68dc65bf68f7310cc5e943c9f4ff960249e9;Sat Sep 10 10:38:10 2011 +0200
SameType;true;clojure.lang.PersistentHashMap.HashCollisionNode;clojure.lang.PersistentHashMap.HashCollisionNode;e76d68dc65bf68f7310cc5e943c9f4ff960249e9;Sat Sep 10 10:38:10 2011 +0200
SameMethod;true;clojure.lang.PersistentHashMap.HashCollisionNode#ensureEditable(AtomicReference);clojure.lang.PersistentHashMap.HashCollisionNode#ensureEditable(AtomicReference);e76d68dc65bf68f7310cc5e943c9f4ff960249e9;Sat Sep 10 10:38:10 2011 +0200
SameMethod;true;clojure.lang.PersistentHashMap.HashCollisionNode#without(AtomicReference, int, int, Object, Box);clojure.lang.PersistentHashMap.HashCollisionNode#without(AtomicReference, int, int, Object, Box);e76d68dc65bf68f7310cc5e943c9f4ff960249e9;Sat Sep 10 10:38:10 2011 +0200
SameType;true;clojure.lang.Util;clojure.lang.Util;405d24dd49d649c01b7881f1394fc90924c54ef0;Fri Oct 7 16:15:01 2011 -0400
ExtractMethod;true;clojure.lang.PersistentHashMap.TransientHashMap#doWithout(Object);clojure.lang.PersistentHashMap#hash(Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
ExtractMethod;true;clojure.lang.PersistentHashMap.TransientHashMap#doValAt(Object, Object);clojure.lang.PersistentHashMap#hash(Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
ExtractMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#assoc(AtomicReference, int, int, Object, Object, Box);clojure.lang.PersistentHashMap#hash(Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
ExtractMethod;true;clojure.lang.PersistentHashMap#containsKey(Object);clojure.lang.PersistentHashMap#hash(Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
ExtractMethod;true;clojure.lang.PersistentHashMap#entryAt(Object);clojure.lang.PersistentHashMap#hash(Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
ExtractMethod;true;clojure.lang.PersistentHashMap#assoc(Object, Object);clojure.lang.PersistentHashMap#hash(Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
ExtractMethod;true;clojure.lang.PersistentHashMap#valAt(Object, Object);clojure.lang.PersistentHashMap#hash(Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
ExtractMethod;true;clojure.lang.PersistentHashMap#without(Object);clojure.lang.PersistentHashMap#hash(Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
ExtractMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#assoc(int, int, Object, Object, Box);clojure.lang.PersistentHashMap#hash(Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
ExtractMethod;true;clojure.lang.PersistentHashMap#createNode(int, Object, Object, int, Object, Object);clojure.lang.PersistentHashMap#hash(Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
ExtractMethod;true;clojure.lang.PersistentHashMap.TransientHashMap#doAssoc(Object, Object);clojure.lang.PersistentHashMap#hash(Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
ExtractMethod;true;clojure.lang.PersistentHashMap#createNode(AtomicReference, int, Object, Object, int, Object, Object);clojure.lang.PersistentHashMap#hash(Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameMethod;true;clojure.lang.APersistentMap#mapEquals(IPersistentMap, Object);clojure.lang.APersistentMap#mapEquals(IPersistentMap, Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameMethod;true;clojure.lang.PersistentHashMap#containsKey(Object);clojure.lang.PersistentHashMap#containsKey(Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameMethod;true;clojure.lang.PersistentHashMap#entryAt(Object);clojure.lang.PersistentHashMap#entryAt(Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameMethod;true;clojure.lang.PersistentHashMap#assoc(Object, Object);clojure.lang.PersistentHashMap#assoc(Object, Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameMethod;true;clojure.lang.PersistentHashMap#valAt(Object, Object);clojure.lang.PersistentHashMap#valAt(Object, Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameMethod;true;clojure.lang.PersistentHashMap#without(Object);clojure.lang.PersistentHashMap#without(Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameType;true;clojure.lang.PersistentHashMap.TransientHashMap;clojure.lang.PersistentHashMap.TransientHashMap;b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameMethod;true;clojure.lang.PersistentHashMap.TransientHashMap#doAssoc(Object, Object);clojure.lang.PersistentHashMap.TransientHashMap#doAssoc(Object, Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameMethod;true;clojure.lang.PersistentHashMap.TransientHashMap#doWithout(Object);clojure.lang.PersistentHashMap.TransientHashMap#doWithout(Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameMethod;true;clojure.lang.PersistentHashMap.TransientHashMap#doValAt(Object, Object);clojure.lang.PersistentHashMap.TransientHashMap#doValAt(Object, Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode;clojure.lang.PersistentHashMap.BitmapIndexedNode;b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#assoc(int, int, Object, Object, Box);clojure.lang.PersistentHashMap.BitmapIndexedNode#assoc(int, int, Object, Object, Box);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#assoc(AtomicReference, int, int, Object, Object, Box);clojure.lang.PersistentHashMap.BitmapIndexedNode#assoc(AtomicReference, int, int, Object, Object, Box);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameMethod;true;clojure.lang.PersistentHashMap#createNode(int, Object, Object, int, Object, Object);clojure.lang.PersistentHashMap#createNode(int, Object, Object, int, Object, Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameMethod;true;clojure.lang.PersistentHashMap#createNode(AtomicReference, int, Object, Object, int, Object, Object);clojure.lang.PersistentHashMap#createNode(AtomicReference, int, Object, Object, int, Object, Object);b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameType;true;clojure.lang.Util;clojure.lang.Util;b5f5ba2e15dc2f20e14e05141f7de7c6a3d91179;Sun Oct 23 15:11:34 2011 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;a2e4d1b4eaa6dad26a1a96b9e9af129cccca9d10;Sun Oct 23 16:29:38 2011 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;a2e4d1b4eaa6dad26a1a96b9e9af129cccca9d10;Sun Oct 23 16:29:38 2011 -0400
SameMethod;true;clojure.lang.Compiler.HostExpr#emitBoxReturn(ObjExpr, GeneratorAdapter, Class);clojure.lang.Compiler.HostExpr#emitBoxReturn(ObjExpr, GeneratorAdapter, Class);a2e4d1b4eaa6dad26a1a96b9e9af129cccca9d10;Sun Oct 23 16:29:38 2011 -0400
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;a2e4d1b4eaa6dad26a1a96b9e9af129cccca9d10;Sun Oct 23 16:29:38 2011 -0400
SameMethod;true;clojure.lang.Reflector#paramArgTypeMatch(Class, Class);clojure.lang.Reflector#paramArgTypeMatch(Class, Class);a2e4d1b4eaa6dad26a1a96b9e9af129cccca9d10;Sun Oct 23 16:29:38 2011 -0400
SameMethod;true;clojure.lang.Reflector#prepRet(Class, Object);clojure.lang.Reflector#prepRet(Class, Object);a2e4d1b4eaa6dad26a1a96b9e9af129cccca9d10;Sun Oct 23 16:29:38 2011 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;abfa803838a1884d0c5112bc6b876cf33a8a05cc;Tue Oct 25 18:22:38 2011 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;abfa803838a1884d0c5112bc6b876cf33a8a05cc;Tue Oct 25 18:22:38 2011 -0400
SameMethod;true;clojure.lang.Compiler.HostExpr#emitBoxReturn(ObjExpr, GeneratorAdapter, Class);clojure.lang.Compiler.HostExpr#emitBoxReturn(ObjExpr, GeneratorAdapter, Class);abfa803838a1884d0c5112bc6b876cf33a8a05cc;Tue Oct 25 18:22:38 2011 -0400
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;abfa803838a1884d0c5112bc6b876cf33a8a05cc;Tue Oct 25 18:22:38 2011 -0400
SameMethod;true;clojure.lang.Reflector#paramArgTypeMatch(Class, Class);clojure.lang.Reflector#paramArgTypeMatch(Class, Class);abfa803838a1884d0c5112bc6b876cf33a8a05cc;Tue Oct 25 18:22:38 2011 -0400
SameMethod;true;clojure.lang.Reflector#prepRet(Class, Object);clojure.lang.Reflector#prepRet(Class, Object);abfa803838a1884d0c5112bc6b876cf33a8a05cc;Tue Oct 25 18:22:38 2011 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;eef0ffefadecc98604e708f40b1bc48a9c801271;Fri Oct 14 08:05:48 2011 +0200
SameMethod;true;clojure.lang.Compiler#expandArrayClassname(Class);clojure.lang.Compiler#expandArrayClassname(Class);eef0ffefadecc98604e708f40b1bc48a9c801271;Fri Oct 14 08:05:48 2011 +0200
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;798a98bc1b844b0fe08e9309886823cf7ca92604;Tue Oct 25 18:41:08 2011 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;798a98bc1b844b0fe08e9309886823cf7ca92604;Tue Oct 25 18:41:08 2011 -0400
SameMethod;true;clojure.lang.Compiler.HostExpr#emitBoxReturn(ObjExpr, GeneratorAdapter, Class);clojure.lang.Compiler.HostExpr#emitBoxReturn(ObjExpr, GeneratorAdapter, Class);798a98bc1b844b0fe08e9309886823cf7ca92604;Tue Oct 25 18:41:08 2011 -0400
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;798a98bc1b844b0fe08e9309886823cf7ca92604;Tue Oct 25 18:41:08 2011 -0400
SameMethod;true;clojure.lang.Reflector#paramArgTypeMatch(Class, Class);clojure.lang.Reflector#paramArgTypeMatch(Class, Class);798a98bc1b844b0fe08e9309886823cf7ca92604;Tue Oct 25 18:41:08 2011 -0400
SameMethod;true;clojure.lang.Reflector#prepRet(Class, Object);clojure.lang.Reflector#prepRet(Class, Object);798a98bc1b844b0fe08e9309886823cf7ca92604;Tue Oct 25 18:41:08 2011 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;535907eb2be47eaee0c385ae16436f39d52ffa96;Wed Oct 26 20:45:57 2011 -0400
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;535907eb2be47eaee0c385ae16436f39d52ffa96;Wed Oct 26 20:45:57 2011 -0400
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;535907eb2be47eaee0c385ae16436f39d52ffa96;Wed Oct 26 20:45:57 2011 -0400
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);535907eb2be47eaee0c385ae16436f39d52ffa96;Wed Oct 26 20:45:57 2011 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;a87f54bea78b4994ac732c029c2e1627fef0f0f3;Tue Nov 22 18:12:43 2011 -0500
SameMethod;true;clojure.lang.Compiler#expandArrayClassname(Class);clojure.lang.Compiler#expandArrayClassname(Class);a87f54bea78b4994ac732c029c2e1627fef0f0f3;Tue Nov 22 18:12:43 2011 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e58a87fac72ed4b84a1d92f1e455b92d7ed3ef39;Tue Nov 22 18:13:25 2011 -0500
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;e58a87fac72ed4b84a1d92f1e455b92d7ed3ef39;Tue Nov 22 18:13:25 2011 -0500
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Symbol, Expr, String, IPersistentVector);clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, Symbol, Expr, String, IPersistentVector);e58a87fac72ed4b84a1d92f1e455b92d7ed3ef39;Tue Nov 22 18:13:25 2011 -0500
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;e58a87fac72ed4b84a1d92f1e455b92d7ed3ef39;Tue Nov 22 18:13:25 2011 -0500
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, Symbol, Class, String, IPersistentVector);clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, Symbol, Class, String, IPersistentVector);e58a87fac72ed4b84a1d92f1e455b92d7ed3ef39;Tue Nov 22 18:13:25 2011 -0500
SameMethod;true;clojure.lang.Compiler#getMatchingParams(String, ArrayList, IPersistentVector, List);clojure.lang.Compiler#getMatchingParams(String, ArrayList, IPersistentVector, List);e58a87fac72ed4b84a1d92f1e455b92d7ed3ef39;Tue Nov 22 18:13:25 2011 -0500
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;e58a87fac72ed4b84a1d92f1e455b92d7ed3ef39;Tue Nov 22 18:13:25 2011 -0500
SameMethod;true;clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);clojure.lang.Compiler.NewExpr#NewExpr(Class, IPersistentVector, int);e58a87fac72ed4b84a1d92f1e455b92d7ed3ef39;Tue Nov 22 18:13:25 2011 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;71bbae8ae26a746bfb36888fd98079c4b9e835e0;Mon Sep 26 18:09:41 2011 +0530
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3d015f9573ad84f5e09ede861d9f6f0c6ed5f24d;Wed Nov 30 18:49:54 2011 +0000
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;3d015f9573ad84f5e09ede861d9f6f0c6ed5f24d;Wed Nov 30 18:49:54 2011 +0000
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;3d015f9573ad84f5e09ede861d9f6f0c6ed5f24d;Wed Nov 30 18:49:54 2011 +0000
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);3d015f9573ad84f5e09ede861d9f6f0c6ed5f24d;Wed Nov 30 18:49:54 2011 +0000
ExtractMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Compiler#lookupVar(Symbol, boolean, boolean);d69c32394d06f75e32bdbeafd37e7b1b5b6da351;Thu Apr 7 18:18:25 2011 -0700
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;d69c32394d06f75e32bdbeafd37e7b1b5b6da351;Thu Apr 7 18:18:25 2011 -0700
SameMethod;true;clojure.lang.Compiler#isMacro(Object);clojure.lang.Compiler#isMacro(Object);d69c32394d06f75e32bdbeafd37e7b1b5b6da351;Thu Apr 7 18:18:25 2011 -0700
SameMethod;true;clojure.lang.Compiler#lookupVar(Symbol, boolean);clojure.lang.Compiler#lookupVar(Symbol, boolean);d69c32394d06f75e32bdbeafd37e7b1b5b6da351;Thu Apr 7 18:18:25 2011 -0700
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3155746100abfdcf8f184e0d55a6be638867f39c;Mon Sep 12 13:36:16 2011 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;3155746100abfdcf8f184e0d55a6be638867f39c;Mon Sep 12 13:36:16 2011 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);3155746100abfdcf8f184e0d55a6be638867f39c;Mon Sep 12 13:36:16 2011 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;50a7e727e4b9e2038fc3cf665d94260a71aed0fb;Wed Sep 14 22:00:52 2011 +0200
SameMethod;true;clojure.lang.RT#contains(Object, Object);clojure.lang.RT#contains(Object, Object);50a7e727e4b9e2038fc3cf665d94260a71aed0fb;Wed Sep 14 22:00:52 2011 +0200
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;67258c6bf3fd03d69448dffc0f1289c9213e6231;Tue Nov 1 16:53:37 2011 +0100
SameMethod;true;clojure.lang.Numbers#max(double, double);clojure.lang.Numbers#max(double, double);67258c6bf3fd03d69448dffc0f1289c9213e6231;Tue Nov 1 16:53:37 2011 +0100
SameMethod;true;clojure.lang.Numbers#max(double, long);clojure.lang.Numbers#max(double, long);67258c6bf3fd03d69448dffc0f1289c9213e6231;Tue Nov 1 16:53:37 2011 +0100
SameMethod;true;clojure.lang.Numbers#max(double, Object);clojure.lang.Numbers#max(double, Object);67258c6bf3fd03d69448dffc0f1289c9213e6231;Tue Nov 1 16:53:37 2011 +0100
SameMethod;true;clojure.lang.Numbers#max(long, double);clojure.lang.Numbers#max(long, double);67258c6bf3fd03d69448dffc0f1289c9213e6231;Tue Nov 1 16:53:37 2011 +0100
SameMethod;true;clojure.lang.Numbers#max(long, Object);clojure.lang.Numbers#max(long, Object);67258c6bf3fd03d69448dffc0f1289c9213e6231;Tue Nov 1 16:53:37 2011 +0100
SameMethod;true;clojure.lang.Numbers#max(Object, long);clojure.lang.Numbers#max(Object, long);67258c6bf3fd03d69448dffc0f1289c9213e6231;Tue Nov 1 16:53:37 2011 +0100
SameMethod;true;clojure.lang.Numbers#max(Object, double);clojure.lang.Numbers#max(Object, double);67258c6bf3fd03d69448dffc0f1289c9213e6231;Tue Nov 1 16:53:37 2011 +0100
SameMethod;true;clojure.lang.Numbers#max(Object, Object);clojure.lang.Numbers#max(Object, Object);67258c6bf3fd03d69448dffc0f1289c9213e6231;Tue Nov 1 16:53:37 2011 +0100
SameMethod;true;clojure.lang.Numbers#min(double, double);clojure.lang.Numbers#min(double, double);67258c6bf3fd03d69448dffc0f1289c9213e6231;Tue Nov 1 16:53:37 2011 +0100
SameMethod;true;clojure.lang.Numbers#min(double, long);clojure.lang.Numbers#min(double, long);67258c6bf3fd03d69448dffc0f1289c9213e6231;Tue Nov 1 16:53:37 2011 +0100
SameMethod;true;clojure.lang.Numbers#min(double, Object);clojure.lang.Numbers#min(double, Object);67258c6bf3fd03d69448dffc0f1289c9213e6231;Tue Nov 1 16:53:37 2011 +0100
SameMethod;true;clojure.lang.Numbers#min(long, double);clojure.lang.Numbers#min(long, double);67258c6bf3fd03d69448dffc0f1289c9213e6231;Tue Nov 1 16:53:37 2011 +0100
SameMethod;true;clojure.lang.Numbers#min(long, Object);clojure.lang.Numbers#min(long, Object);67258c6bf3fd03d69448dffc0f1289c9213e6231;Tue Nov 1 16:53:37 2011 +0100
SameMethod;true;clojure.lang.Numbers#min(Object, long);clojure.lang.Numbers#min(Object, long);67258c6bf3fd03d69448dffc0f1289c9213e6231;Tue Nov 1 16:53:37 2011 +0100
SameMethod;true;clojure.lang.Numbers#min(Object, double);clojure.lang.Numbers#min(Object, double);67258c6bf3fd03d69448dffc0f1289c9213e6231;Tue Nov 1 16:53:37 2011 +0100
SameMethod;true;clojure.lang.Numbers#min(Object, Object);clojure.lang.Numbers#min(Object, Object);67258c6bf3fd03d69448dffc0f1289c9213e6231;Tue Nov 1 16:53:37 2011 +0100
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;595d0f7afad8627a7dbc27a8a4732eed087cfbee;Fri Nov 4 17:11:17 2011 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;595d0f7afad8627a7dbc27a8a4732eed087cfbee;Fri Nov 4 17:11:17 2011 -0400
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;595d0f7afad8627a7dbc27a8a4732eed087cfbee;Fri Nov 4 17:11:17 2011 -0400
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);595d0f7afad8627a7dbc27a8a4732eed087cfbee;Fri Nov 4 17:11:17 2011 -0400
SameType;true;clojure.lang.Var;clojure.lang.Var;12f07da889819bc5613546ec223e97ac27c86dbf;Fri Dec 16 18:39:05 2011 +0100
SameType;true;clojure.lang.Var.Frame;clojure.lang.Var.Frame;12f07da889819bc5613546ec223e97ac27c86dbf;Fri Dec 16 18:39:05 2011 +0100
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;59d3c724684c212fbb5eafaaaac30761c2c75a37;Sun Dec 18 11:41:40 2011 -0500
SameMethod;true;clojure.lang.Keyword#toString();clojure.lang.Keyword#toString();59d3c724684c212fbb5eafaaaac30761c2c75a37;Sun Dec 18 11:41:40 2011 -0500
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;59d3c724684c212fbb5eafaaaac30761c2c75a37;Sun Dec 18 11:41:40 2011 -0500
SameMethod;true;clojure.lang.Symbol#toString();clojure.lang.Symbol#toString();59d3c724684c212fbb5eafaaaac30761c2c75a37;Sun Dec 18 11:41:40 2011 -0500
ExtractMethod;true;clojure.lang.LispReader.CtorReader#invoke(Object, Object);clojure.lang.LispReader.CtorReader#readRecord(PushbackReader, Symbol);d3b5665d21457ad27bda702f567ca2f55b14283b;Fri Dec 9 16:06:08 2011 -0500
ExtractMethod;true;clojure.lang.LispReader.CtorReader#invoke(Object, Object);clojure.lang.LispReader.CtorReader#readTagged(PushbackReader, Symbol);d3b5665d21457ad27bda702f567ca2f55b14283b;Fri Dec 9 16:06:08 2011 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;d3b5665d21457ad27bda702f567ca2f55b14283b;Fri Dec 9 16:06:08 2011 -0500
SameMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.Compiler#load(Reader, String, String);d3b5665d21457ad27bda702f567ca2f55b14283b;Fri Dec 9 16:06:08 2011 -0500
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);d3b5665d21457ad27bda702f567ca2f55b14283b;Fri Dec 9 16:06:08 2011 -0500
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;d3b5665d21457ad27bda702f567ca2f55b14283b;Fri Dec 9 16:06:08 2011 -0500
SameType;true;clojure.lang.LispReader.CtorReader;clojure.lang.LispReader.CtorReader;d3b5665d21457ad27bda702f567ca2f55b14283b;Fri Dec 9 16:06:08 2011 -0500
SameMethod;true;clojure.lang.LispReader.CtorReader#invoke(Object, Object);clojure.lang.LispReader.CtorReader#invoke(Object, Object);d3b5665d21457ad27bda702f567ca2f55b14283b;Fri Dec 9 16:06:08 2011 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;d3b5665d21457ad27bda702f567ca2f55b14283b;Fri Dec 9 16:06:08 2011 -0500
SameType;true;clojure.lang.Var;clojure.lang.Var;5ce45d651e0c6f9c8badd1e41d94d461b190bbc0;Wed Jan 25 21:04:46 2012 +0100
SameMethod;true;clojure.lang.Var#cloneThreadBindingFrame();clojure.lang.Var#cloneThreadBindingFrame();5ce45d651e0c6f9c8badd1e41d94d461b190bbc0;Wed Jan 25 21:04:46 2012 +0100
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;21dc36e8ccf8148de11c5366eaa356a685c396bd;Fri Jan 27 10:20:32 2012 -0500
SameType;true;clojure.lang.LispReader.CtorReader;clojure.lang.LispReader.CtorReader;21dc36e8ccf8148de11c5366eaa356a685c396bd;Fri Jan 27 10:20:32 2012 -0500
SameMethod;true;clojure.lang.LispReader.CtorReader#readTagged(PushbackReader, Symbol);clojure.lang.LispReader.CtorReader#readTagged(PushbackReader, Symbol);21dc36e8ccf8148de11c5366eaa356a685c396bd;Fri Jan 27 10:20:32 2012 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;21dc36e8ccf8148de11c5366eaa356a685c396bd;Fri Jan 27 10:20:32 2012 -0500
ExtractMethod;true;clojure.lang.APersistentVector#toArray(Object[]);clojure.lang.RT#seqToPassedArray(ISeq, Object[]);7e49f98391b089505e328c662c176cd2a79a95bc;Sun Feb 19 20:16:08 2012 -0500
ExtractMethod;true;clojure.lang.ASeq#toArray(Object[]);clojure.lang.RT#seqToPassedArray(ISeq, Object[]);7e49f98391b089505e328c662c176cd2a79a95bc;Sun Feb 19 20:16:08 2012 -0500
ExtractMethod;true;clojure.lang.APersistentSet#toArray(Object[]);clojure.lang.RT#seqToPassedArray(ISeq, Object[]);7e49f98391b089505e328c662c176cd2a79a95bc;Sun Feb 19 20:16:08 2012 -0500
ExtractMethod;true;clojure.lang.LazySeq#toArray(Object[]);clojure.lang.RT#seqToPassedArray(ISeq, Object[]);7e49f98391b089505e328c662c176cd2a79a95bc;Sun Feb 19 20:16:08 2012 -0500
ExtractMethod;true;clojure.lang.PersistentQueue#toArray(Object[]);clojure.lang.RT#seqToPassedArray(ISeq, Object[]);7e49f98391b089505e328c662c176cd2a79a95bc;Sun Feb 19 20:16:08 2012 -0500
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;7e49f98391b089505e328c662c176cd2a79a95bc;Sun Feb 19 20:16:08 2012 -0500
SameMethod;true;clojure.lang.APersistentSet#toArray(Object[]);clojure.lang.APersistentSet#toArray(Object[]);7e49f98391b089505e328c662c176cd2a79a95bc;Sun Feb 19 20:16:08 2012 -0500
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;7e49f98391b089505e328c662c176cd2a79a95bc;Sun Feb 19 20:16:08 2012 -0500
SameMethod;true;clojure.lang.APersistentVector#toArray(Object[]);clojure.lang.APersistentVector#toArray(Object[]);7e49f98391b089505e328c662c176cd2a79a95bc;Sun Feb 19 20:16:08 2012 -0500
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;7e49f98391b089505e328c662c176cd2a79a95bc;Sun Feb 19 20:16:08 2012 -0500
SameMethod;true;clojure.lang.ASeq#toArray(Object[]);clojure.lang.ASeq#toArray(Object[]);7e49f98391b089505e328c662c176cd2a79a95bc;Sun Feb 19 20:16:08 2012 -0500
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;7e49f98391b089505e328c662c176cd2a79a95bc;Sun Feb 19 20:16:08 2012 -0500
SameMethod;true;clojure.lang.LazySeq#toArray(Object[]);clojure.lang.LazySeq#toArray(Object[]);7e49f98391b089505e328c662c176cd2a79a95bc;Sun Feb 19 20:16:08 2012 -0500
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;7e49f98391b089505e328c662c176cd2a79a95bc;Sun Feb 19 20:16:08 2012 -0500
SameMethod;true;clojure.lang.PersistentQueue#toArray(Object[]);clojure.lang.PersistentQueue#toArray(Object[]);7e49f98391b089505e328c662c176cd2a79a95bc;Sun Feb 19 20:16:08 2012 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;7e49f98391b089505e328c662c176cd2a79a95bc;Sun Feb 19 20:16:08 2012 -0500
SameType;true;clojure.lang.Util;clojure.lang.Util;e38137386713ea430141cb07bf6d954e63b6357f;Fri Oct 14 20:05:29 2011 +0200
ExtractMethod;true;clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);clojure.lang.Reflector#getCauseOrElse(Exception);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
ExtractMethod;true;clojure.lang.Reflector#invokeInstanceMethod(Object, String, Object[]);clojure.lang.Reflector#getCauseOrElse(Exception);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
ExtractMethod;true;clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);clojure.lang.Reflector#getCauseOrElse(Exception);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
ExtractMethod;true;clojure.lang.Reflector#invokeConstructor(Class, Object[]);clojure.lang.Reflector#getCauseOrElse(Exception);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.AFn;clojure.lang.AFn;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.AFn#run();clojure.lang.AFn#run();bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.AFunction;clojure.lang.AFunction;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.AFunction#compare(Object, Object);clojure.lang.AFunction#compare(Object, Object);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.ARef;clojure.lang.ARef;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.ARef#setValidator(IFn);clojure.lang.ARef#setValidator(IFn);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.ARef#removeWatch(Object);clojure.lang.ARef#removeWatch(Object);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.ARef#notifyWatches(Object, Object);clojure.lang.ARef#notifyWatches(Object, Object);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.Compiler.StaticFieldExpr;clojure.lang.Compiler.StaticFieldExpr;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Compiler.StaticFieldExpr#StaticFieldExpr(int, Class, String, Symbol);clojure.lang.Compiler.StaticFieldExpr#StaticFieldExpr(int, Class, String, Symbol);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Compiler#maybePrimitiveType(Expr);clojure.lang.Compiler#maybePrimitiveType(Expr);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Compiler.NewExpr#eval();clojure.lang.Compiler.NewExpr#eval();bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Compiler.IfExpr#doEmit(C, ObjExpr, GeneratorAdapter, boolean);clojure.lang.Compiler.IfExpr#doEmit(C, ObjExpr, GeneratorAdapter, boolean);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.Compiler.StaticInvokeExpr;clojure.lang.Compiler.StaticInvokeExpr;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Compiler.StaticInvokeExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.StaticInvokeExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Compiler.ObjExpr#getCompiledClass();clojure.lang.Compiler.ObjExpr#getCompiledClass();bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Compiler.ObjExpr#eval();clojure.lang.Compiler.ObjExpr#eval();bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Compiler.FnMethod#doEmitStatic(ObjExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#doEmitStatic(ObjExpr, ClassVisitor);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Compiler.FnMethod#doEmitPrim(ObjExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#doEmitPrim(ObjExpr, ClassVisitor);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Compiler#eval(Object, boolean);clojure.lang.Compiler#eval(Object, boolean);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Compiler#addAnnotation(Object, IPersistentMap);clojure.lang.Compiler#addAnnotation(Object, IPersistentMap);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Compiler#addParameterAnnotation(Object, IPersistentMap, int);clojure.lang.Compiler#addParameterAnnotation(Object, IPersistentMap, int);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.FnLoaderThunk;clojure.lang.FnLoaderThunk;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.FnLoaderThunk#load();clojure.lang.FnLoaderThunk#load();bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.LazySeq#sval();clojure.lang.LazySeq#sval();bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.LispReader#unread(PushbackReader, int);clojure.lang.LispReader#unread(PushbackReader, int);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.LispReader#read1(Reader);clojure.lang.LispReader#read1(Reader);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.RT;clojure.lang.RT;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.RT$3#invoke(Object);clojure.lang.RT$3#invoke(Object);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.RT#printString(Object);clojure.lang.RT#printString(Object);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.RT#readString(String);clojure.lang.RT#readString(String);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.RT#classForName(String);clojure.lang.RT#classForName(String);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.Ref;clojure.lang.Ref;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Ref#run();clojure.lang.Ref#run();bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Reflector#invokeInstanceMethod(Object, String, Object[]);clojure.lang.Reflector#invokeInstanceMethod(Object, String, Object[]);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Reflector#invokeConstructor(Class, Object[]);clojure.lang.Reflector#invokeConstructor(Class, Object[]);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Reflector#getStaticField(Class, String);clojure.lang.Reflector#getStaticField(Class, String);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Reflector#setStaticField(Class, String, Object);clojure.lang.Reflector#setStaticField(Class, String, Object);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Reflector#getInstanceField(Object, String);clojure.lang.Reflector#getInstanceField(Object, String);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Reflector#setInstanceField(Object, String, Object);clojure.lang.Reflector#setInstanceField(Object, String, Object);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Reflector#invokeInstanceMember(Object, String);clojure.lang.Reflector#invokeInstanceMember(Object, String);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Reflector#invokeInstanceMember(String, Object, Object);clojure.lang.Reflector#invokeInstanceMember(String, Object, Object);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.TransactionalHashMap;clojure.lang.TransactionalHashMap;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.TransactionalHashMap#remove(Object);clojure.lang.TransactionalHashMap#remove(Object);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.TransactionalHashMap#remove(Object, Object);clojure.lang.TransactionalHashMap#remove(Object, Object);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.Util;clojure.lang.Util;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.Var;clojure.lang.Var;bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Var#setMacro();clojure.lang.Var#setMacro();bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Var#setTag(Symbol);clojure.lang.Var#setTag(Symbol);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Var#bindRoot(Object);clojure.lang.Var#bindRoot(Object);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Var#run();clojure.lang.Var#run();bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameMethod;true;clojure.lang.Var$2#invoke(Object, Object);clojure.lang.Var$2#invoke(Object, Object);bc2cd8f139399545f445e2f6d4d24bd2ed1c76ed;Fri Oct 14 20:18:45 2011 +0200
SameType;true;clojure.lang.Var;clojure.lang.Var;25f01c8d81b2ea0b58a8e9cf07d31f7c33ed2d76;Wed Feb 29 16:02:44 2012 -0500
SameMethod;true;clojure.lang.Var$2#invoke(Object, Object);clojure.lang.Var$2#invoke(Object, Object);25f01c8d81b2ea0b58a8e9cf07d31f7c33ed2d76;Wed Feb 29 16:02:44 2012 -0500
SameType;true;clojure.lang.Compile;clojure.lang.Compile;87fa6c793592b7a3e99fcf9fb7cc08986889846a;Wed Feb 29 22:16:18 2012 -0500
SameMethod;true;clojure.lang.Compile#main(String[]);clojure.lang.Compile#main(String[]);87fa6c793592b7a3e99fcf9fb7cc08986889846a;Wed Feb 29 22:16:18 2012 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;87fa6c793592b7a3e99fcf9fb7cc08986889846a;Wed Feb 29 22:16:18 2012 -0500
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;87fa6c793592b7a3e99fcf9fb7cc08986889846a;Wed Feb 29 22:16:18 2012 -0500
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;87fa6c793592b7a3e99fcf9fb7cc08986889846a;Wed Feb 29 22:16:18 2012 -0500
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);87fa6c793592b7a3e99fcf9fb7cc08986889846a;Wed Feb 29 22:16:18 2012 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;87fa6c793592b7a3e99fcf9fb7cc08986889846a;Wed Feb 29 22:16:18 2012 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);87fa6c793592b7a3e99fcf9fb7cc08986889846a;Wed Feb 29 22:16:18 2012 -0500
SameType;true;clojure.test.ReflectorTryCatchFixture;clojure.test.ReflectorTryCatchFixture;4d9aa90bd0cfaf2ea3970e1b7416e62b0a581d45;Thu Mar 1 23:19:19 2012 +0000
SameType;true;clojure.test.ReflectorTryCatchFixture.Cookies;clojure.test.ReflectorTryCatchFixture.Cookies;4d9aa90bd0cfaf2ea3970e1b7416e62b0a581d45;Thu Mar 1 23:19:19 2012 +0000
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;58b9d7816c5dd2bafb48aefcccd238b3f17241dc;Thu Mar 1 23:19:33 2012 +0000
SameMethod;true;clojure.lang.Reflector#invokeInstanceMethod(Object, String, Object[]);clojure.lang.Reflector#invokeInstanceMethod(Object, String, Object[]);58b9d7816c5dd2bafb48aefcccd238b3f17241dc;Thu Mar 1 23:19:33 2012 +0000
SameMethod;true;clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);clojure.lang.Reflector#invokeStaticMethod(String, String, Object[]);58b9d7816c5dd2bafb48aefcccd238b3f17241dc;Thu Mar 1 23:19:33 2012 +0000
ExtractMethod;true;clojure.lang.Compiler#elideMeta(Object);clojure.lang.Compiler#getCompilerOption(Keyword);4036c7720949cb21ccf53c5c7c54ed1daaff2fda;Tue Mar 13 10:56:17 2012 -0400
SameType;true;clojure.lang.Compile;clojure.lang.Compile;4036c7720949cb21ccf53c5c7c54ed1daaff2fda;Tue Mar 13 10:56:17 2012 -0400
SameMethod;true;clojure.lang.Compile#main(String[]);clojure.lang.Compile#main(String[]);4036c7720949cb21ccf53c5c7c54ed1daaff2fda;Tue Mar 13 10:56:17 2012 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;4036c7720949cb21ccf53c5c7c54ed1daaff2fda;Tue Mar 13 10:56:17 2012 -0400
SameMethod;true;clojure.lang.Compiler#elideMeta(Object);clojure.lang.Compiler#elideMeta(Object);4036c7720949cb21ccf53c5c7c54ed1daaff2fda;Tue Mar 13 10:56:17 2012 -0400
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;4036c7720949cb21ccf53c5c7c54ed1daaff2fda;Tue Mar 13 10:56:17 2012 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;23f9801bd3bf0a19fbd791ffc1b0be2afafd5170;Sun Feb 5 18:07:02 2012 +1100
SameMethod;true;clojure.lang.LispReader#readUnicodeChar(String, int, int, int);clojure.lang.LispReader#readUnicodeChar(String, int, int, int);23f9801bd3bf0a19fbd791ffc1b0be2afafd5170;Sun Feb 5 18:07:02 2012 +1100
SameMethod;true;clojure.lang.LispReader#readUnicodeChar(PushbackReader, int, int, int, boolean);clojure.lang.LispReader#readUnicodeChar(PushbackReader, int, int, int, boolean);23f9801bd3bf0a19fbd791ffc1b0be2afafd5170;Sun Feb 5 18:07:02 2012 +1100
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;3297866c23dd01a5b0db14ed836336d128972aac;Sat Oct 15 21:55:52 2011 +0200
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;3297866c23dd01a5b0db14ed836336d128972aac;Sat Oct 15 21:55:52 2011 +0200
SameMethod;true;clojure.lang.Compiler.HostExpr#tagToClass(Object);clojure.lang.Compiler.HostExpr#tagToClass(Object);3297866c23dd01a5b0db14ed836336d128972aac;Sat Oct 15 21:55:52 2011 +0200
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;68ec7ed0d0d88e346b8e069281a116883bc6494b;Fri Apr 6 10:42:44 2012 -0400
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;68ec7ed0d0d88e346b8e069281a116883bc6494b;Fri Apr 6 10:42:44 2012 -0400
SameType;true;clojure.lang.PersistentHashMap.INode;clojure.lang.PersistentHashMap.INode;68ec7ed0d0d88e346b8e069281a116883bc6494b;Fri Apr 6 10:42:44 2012 -0400
SameType;true;clojure.lang.PersistentHashMap.ArrayNode;clojure.lang.PersistentHashMap.ArrayNode;68ec7ed0d0d88e346b8e069281a116883bc6494b;Fri Apr 6 10:42:44 2012 -0400
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode;clojure.lang.PersistentHashMap.BitmapIndexedNode;68ec7ed0d0d88e346b8e069281a116883bc6494b;Fri Apr 6 10:42:44 2012 -0400
SameType;true;clojure.lang.PersistentHashMap.HashCollisionNode;clojure.lang.PersistentHashMap.HashCollisionNode;68ec7ed0d0d88e346b8e069281a116883bc6494b;Fri Apr 6 10:42:44 2012 -0400
SameType;true;clojure.lang.PersistentHashMap.NodeSeq;clojure.lang.PersistentHashMap.NodeSeq;68ec7ed0d0d88e346b8e069281a116883bc6494b;Fri Apr 6 10:42:44 2012 -0400
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;68ec7ed0d0d88e346b8e069281a116883bc6494b;Fri Apr 6 10:42:44 2012 -0400
SameType;true;clojure.lang.PersistentTreeMap.Node;clojure.lang.PersistentTreeMap.Node;68ec7ed0d0d88e346b8e069281a116883bc6494b;Fri Apr 6 10:42:44 2012 -0400
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;68ec7ed0d0d88e346b8e069281a116883bc6494b;Fri Apr 6 10:42:44 2012 -0400
SameType;true;clojure.lang.ArrayChunk;clojure.lang.ArrayChunk;96e8596cfdd29a2bb245d958683ee5fc1353b87a;Mon Apr 30 16:50:49 2012 -0400
SameMethod;true;clojure.lang.ArrayChunk#reduce(IFn, Object);clojure.lang.ArrayChunk#reduce(IFn, Object);96e8596cfdd29a2bb245d958683ee5fc1353b87a;Mon Apr 30 16:50:49 2012 -0400
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;96e8596cfdd29a2bb245d958683ee5fc1353b87a;Mon Apr 30 16:50:49 2012 -0400
SameMethod;true;clojure.lang.PersistentArrayMap#kvreduce(IFn, Object);clojure.lang.PersistentArrayMap#kvreduce(IFn, Object);96e8596cfdd29a2bb245d958683ee5fc1353b87a;Mon Apr 30 16:50:49 2012 -0400
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;96e8596cfdd29a2bb245d958683ee5fc1353b87a;Mon Apr 30 16:50:49 2012 -0400
SameMethod;true;clojure.lang.PersistentHashMap#kvreduce(IFn, Object);clojure.lang.PersistentHashMap#kvreduce(IFn, Object);96e8596cfdd29a2bb245d958683ee5fc1353b87a;Mon Apr 30 16:50:49 2012 -0400
SameType;true;clojure.lang.PersistentHashMap.ArrayNode;clojure.lang.PersistentHashMap.ArrayNode;96e8596cfdd29a2bb245d958683ee5fc1353b87a;Mon Apr 30 16:50:49 2012 -0400
SameMethod;true;clojure.lang.PersistentHashMap.ArrayNode#kvreduce(IFn, Object);clojure.lang.PersistentHashMap.ArrayNode#kvreduce(IFn, Object);96e8596cfdd29a2bb245d958683ee5fc1353b87a;Mon Apr 30 16:50:49 2012 -0400
SameType;true;clojure.lang.PersistentHashMap.NodeSeq;clojure.lang.PersistentHashMap.NodeSeq;96e8596cfdd29a2bb245d958683ee5fc1353b87a;Mon Apr 30 16:50:49 2012 -0400
SameMethod;true;clojure.lang.PersistentHashMap.NodeSeq#kvreduce(Object[], IFn, Object);clojure.lang.PersistentHashMap.NodeSeq#kvreduce(Object[], IFn, Object);96e8596cfdd29a2bb245d958683ee5fc1353b87a;Mon Apr 30 16:50:49 2012 -0400
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;96e8596cfdd29a2bb245d958683ee5fc1353b87a;Mon Apr 30 16:50:49 2012 -0400
SameType;true;clojure.lang.PersistentTreeMap.Node;clojure.lang.PersistentTreeMap.Node;96e8596cfdd29a2bb245d958683ee5fc1353b87a;Mon Apr 30 16:50:49 2012 -0400
SameMethod;true;clojure.lang.PersistentTreeMap.Node#kvreduce(IFn, Object);clojure.lang.PersistentTreeMap.Node#kvreduce(IFn, Object);96e8596cfdd29a2bb245d958683ee5fc1353b87a;Mon Apr 30 16:50:49 2012 -0400
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;96e8596cfdd29a2bb245d958683ee5fc1353b87a;Mon Apr 30 16:50:49 2012 -0400
SameMethod;true;clojure.lang.PersistentVector#kvreduce(IFn, Object);clojure.lang.PersistentVector#kvreduce(IFn, Object);96e8596cfdd29a2bb245d958683ee5fc1353b87a;Mon Apr 30 16:50:49 2012 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;96e8596cfdd29a2bb245d958683ee5fc1353b87a;Mon Apr 30 16:50:49 2012 -0400
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;f8856dc7183b1cf9ea19c53c52ef80b21d8fd1df;Fri May 4 20:49:08 2012 -0400
SameType;true;clojure.lang.APersistentVector.SubVector;clojure.lang.APersistentVector.SubVector;f8856dc7183b1cf9ea19c53c52ef80b21d8fd1df;Fri May 4 20:49:08 2012 -0400
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;f8856dc7183b1cf9ea19c53c52ef80b21d8fd1df;Fri May 4 20:49:08 2012 -0400
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;4876c14108ee0c7fce23ad010911073e06d15b81;Mon May 7 17:43:54 2012 -0400
SameType;true;clojure.lang.PersistentHashMap.INode;clojure.lang.PersistentHashMap.INode;4876c14108ee0c7fce23ad010911073e06d15b81;Mon May 7 17:43:54 2012 -0400
SameType;true;clojure.lang.PersistentHashMap.ArrayNode;clojure.lang.PersistentHashMap.ArrayNode;4876c14108ee0c7fce23ad010911073e06d15b81;Mon May 7 17:43:54 2012 -0400
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode;clojure.lang.PersistentHashMap.BitmapIndexedNode;4876c14108ee0c7fce23ad010911073e06d15b81;Mon May 7 17:43:54 2012 -0400
SameType;true;clojure.lang.PersistentHashMap.HashCollisionNode;clojure.lang.PersistentHashMap.HashCollisionNode;4876c14108ee0c7fce23ad010911073e06d15b81;Mon May 7 17:43:54 2012 -0400
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;3e14902d6cf09e42770994abef431662e661d56c;Thu May 10 16:24:30 2012 -0700
SameType;true;clojure.lang.APersistentVector.SubVector;clojure.lang.APersistentVector.SubVector;3e14902d6cf09e42770994abef431662e661d56c;Thu May 10 16:24:30 2012 -0700
SameMethod;true;clojure.lang.APersistentVector.SubVector#nth(int);clojure.lang.APersistentVector.SubVector#nth(int);3e14902d6cf09e42770994abef431662e661d56c;Thu May 10 16:24:30 2012 -0700
SameType;true;clojure.lang.BigInt;clojure.lang.BigInt;fb653b70b53cdc53ec4606ba420e4886bc4f0512;Wed Mar 21 08:49:30 2012 -0700
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;ddc65a96fdb1163b3c8cb112d565f06c4137b575;Sun Oct 31 19:32:25 2010 +0200
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;ddc65a96fdb1163b3c8cb112d565f06c4137b575;Sun Oct 31 19:32:25 2010 +0200
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;ddc65a96fdb1163b3c8cb112d565f06c4137b575;Sun Oct 31 19:32:25 2010 +0200
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);ddc65a96fdb1163b3c8cb112d565f06c4137b575;Sun Oct 31 19:32:25 2010 +0200
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;ddc65a96fdb1163b3c8cb112d565f06c4137b575;Sun Oct 31 19:32:25 2010 +0200
SameType;true;clojure.lang.Compiler.RecurExpr.Parser;clojure.lang.Compiler.RecurExpr.Parser;ddc65a96fdb1163b3c8cb112d565f06c4137b575;Sun Oct 31 19:32:25 2010 +0200
SameMethod;true;clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);ddc65a96fdb1163b3c8cb112d565f06c4137b575;Sun Oct 31 19:32:25 2010 +0200
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;0a483d41d310eef15dcf2139b574b04655186265;Mon Jul 16 07:21:02 2012 -0400
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;0a483d41d310eef15dcf2139b574b04655186265;Mon Jul 16 07:21:02 2012 -0400
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);0a483d41d310eef15dcf2139b574b04655186265;Mon Jul 16 07:21:02 2012 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;89245c68e867640e8dd4bd948b4ac2a283935702;Fri Feb 24 11:23:01 2012 -0500
SameType;true;clojure.lang.Compiler.CompilerException;clojure.lang.Compiler.CompilerException;89245c68e867640e8dd4bd948b4ac2a283935702;Fri Feb 24 11:23:01 2012 -0500
SameMethod;true;clojure.lang.Compiler.CompilerException#CompilerException(String, int, Throwable);clojure.lang.Compiler.CompilerException#CompilerException(String, int, Throwable);89245c68e867640e8dd4bd948b4ac2a283935702;Fri Feb 24 11:23:01 2012 -0500
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;87c6f2417cdd139e1dc32655b8f8a099d3dc4be5;Fri Aug 10 12:54:44 2012 -0700
SameMethod;true;clojure.lang.PersistentTreeMap#kvreduce(IFn, Object);clojure.lang.PersistentTreeMap#kvreduce(IFn, Object);87c6f2417cdd139e1dc32655b8f8a099d3dc4be5;Fri Aug 10 12:54:44 2012 -0700
SameType;true;clojure.lang.PersistentTreeMap.Node;clojure.lang.PersistentTreeMap.Node;87c6f2417cdd139e1dc32655b8f8a099d3dc4be5;Fri Aug 10 12:54:44 2012 -0700
SameMethod;true;clojure.lang.PersistentTreeMap.Node#kvreduce(IFn, Object);clojure.lang.PersistentTreeMap.Node#kvreduce(IFn, Object);87c6f2417cdd139e1dc32655b8f8a099d3dc4be5;Fri Aug 10 12:54:44 2012 -0700
SameType;true;clojure.lang.RT;clojure.lang.RT;e84c136b96cca02f5766568a05b41f6da45f76f1;Sun May 13 04:35:13 2012 +0100
SameMethod;true;clojure.lang.RT#longCast(Object);clojure.lang.RT#longCast(Object);e84c136b96cca02f5766568a05b41f6da45f76f1;Sun May 13 04:35:13 2012 +0100
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;78d62cd0b35f3ea6ee0ea98815c2810e74364326;Sat Feb 4 11:24:57 2012 +1100
SameMethod;true;clojure.lang.LispReader#matchNumber(String);clojure.lang.LispReader#matchNumber(String);78d62cd0b35f3ea6ee0ea98815c2810e74364326;Sat Feb 4 11:24:57 2012 +1100
SameType;true;clojure.lang.Agent;clojure.lang.Agent;f5f4faf95051f794c9bfa0315e4457b600c84cef;Fri Aug 17 11:35:49 2012 -0400
SameType;true;clojure.lang.Agent.Action;clojure.lang.Agent.Action;f5f4faf95051f794c9bfa0315e4457b600c84cef;Fri Aug 17 11:35:49 2012 -0400
SameMethod;true;clojure.lang.Agent.Action#execute();clojure.lang.Agent.Action#execute();f5f4faf95051f794c9bfa0315e4457b600c84cef;Fri Aug 17 11:35:49 2012 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;3acb6ee7ec5c295ae14de861d03a5efd115a5968;Fri Feb 17 16:29:57 2012 -0500
SameMethod;true;clojure.lang.RT#contains(Object, Object);clojure.lang.RT#contains(Object, Object);3acb6ee7ec5c295ae14de861d03a5efd115a5968;Fri Feb 17 16:29:57 2012 -0500
SameType;true;clojure.lang.LineNumberingPushbackReader;clojure.lang.LineNumberingPushbackReader;a085c818965d0046a3a75ad058cf96681fdeded0;Wed Jan 11 19:09:59 2012 -0600
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;5eb06172826511d330fd3234a9b976c880e6aabd;Mon Mar 14 13:42:44 2011 -0700
SameType;true;clojure.lang.PersistentHashMap.TransientHashMap;clojure.lang.PersistentHashMap.TransientHashMap;5eb06172826511d330fd3234a9b976c880e6aabd;Mon Mar 14 13:42:44 2011 -0700
SameMethod;true;clojure.lang.PersistentHashMap.TransientHashMap#doValAt(Object, Object);clojure.lang.PersistentHashMap.TransientHashMap#doValAt(Object, Object);5eb06172826511d330fd3234a9b976c880e6aabd;Mon Mar 14 13:42:44 2011 -0700
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;83ebf814d5d6663c49c1b2d0d076b57638bff673;Fri Sep 14 16:27:16 2012 -0400
SameMethod;true;clojure.lang.MultiFn#MultiFn(String, IFn, Object, IRef);clojure.lang.MultiFn#MultiFn(String, IFn, Object, IRef);83ebf814d5d6663c49c1b2d0d076b57638bff673;Fri Sep 14 16:27:16 2012 -0400
SameMethod;true;clojure.lang.MultiFn#reset();clojure.lang.MultiFn#reset();83ebf814d5d6663c49c1b2d0d076b57638bff673;Fri Sep 14 16:27:16 2012 -0400
SameMethod;true;clojure.lang.MultiFn#addMethod(Object, IFn);clojure.lang.MultiFn#addMethod(Object, IFn);83ebf814d5d6663c49c1b2d0d076b57638bff673;Fri Sep 14 16:27:16 2012 -0400
SameMethod;true;clojure.lang.MultiFn#removeMethod(Object);clojure.lang.MultiFn#removeMethod(Object);83ebf814d5d6663c49c1b2d0d076b57638bff673;Fri Sep 14 16:27:16 2012 -0400
SameMethod;true;clojure.lang.MultiFn#preferMethod(Object, Object);clojure.lang.MultiFn#preferMethod(Object, Object);83ebf814d5d6663c49c1b2d0d076b57638bff673;Fri Sep 14 16:27:16 2012 -0400
SameMethod;true;clojure.lang.MultiFn#resetCache();clojure.lang.MultiFn#resetCache();83ebf814d5d6663c49c1b2d0d076b57638bff673;Fri Sep 14 16:27:16 2012 -0400
SameMethod;true;clojure.lang.MultiFn#findAndCacheBestMethod(Object);clojure.lang.MultiFn#findAndCacheBestMethod(Object);83ebf814d5d6663c49c1b2d0d076b57638bff673;Fri Sep 14 16:27:16 2012 -0400
ExtractInterface;true;clojure.lang.ExceptionInfo;clojure.lang.IExceptionInfo;01b4cb7156f0b378e70020d0abe293bffe35b031;Mon Sep 17 07:45:36 2012 -0400
SameType;true;clojure.lang.ExceptionInfo;clojure.lang.ExceptionInfo;01b4cb7156f0b378e70020d0abe293bffe35b031;Mon Sep 17 07:45:36 2012 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.DefExpr#includesExplicitMetadata(MapExpr);clojure.lang.Compiler.DefExpr#includesExplicitMetadata(MapExpr);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.DefExpr#eval();clojure.lang.Compiler.DefExpr#eval();6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.StaticFieldExpr;clojure.lang.Compiler.StaticFieldExpr;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#eval();clojure.lang.Compiler.InstanceMethodExpr#eval();6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#eval();clojure.lang.Compiler.StaticMethodExpr#eval();6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.NewExpr.Parser;clojure.lang.Compiler.NewExpr.Parser;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.IfExpr.Parser;clojure.lang.Compiler.IfExpr.Parser;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.IfExpr.Parser#parse(C, Object);clojure.lang.Compiler.IfExpr.Parser#parse(C, Object);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.KeywordInvokeExpr;clojure.lang.Compiler.KeywordInvokeExpr;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.KeywordInvokeExpr#eval();clojure.lang.Compiler.KeywordInvokeExpr#eval();6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.InvokeExpr#eval();clojure.lang.Compiler.InvokeExpr#eval();6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.ObjMethod;clojure.lang.Compiler.ObjMethod;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.RecurExpr.Parser;clojure.lang.Compiler.RecurExpr.Parser;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.CompilerException;clojure.lang.Compiler.CompilerException;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler#eval(Object, boolean);clojure.lang.Compiler#eval(Object, boolean);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.Compiler#load(Reader, String, String);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler#compile1(GeneratorAdapter, ObjExpr, Object);clojure.lang.Compiler#compile1(GeneratorAdapter, ObjExpr, Object);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.CaseExpr;clojure.lang.Compiler.CaseExpr;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.CaseExpr#emitExprForInts(ObjExpr, GeneratorAdapter, Type, Label);clojure.lang.Compiler.CaseExpr#emitExprForInts(ObjExpr, GeneratorAdapter, Type, Label);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler.CaseExpr.Parser;clojure.lang.Compiler.CaseExpr.Parser;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.Compiler.CaseExpr.Parser#parse(C, Object);clojure.lang.Compiler.CaseExpr.Parser#parse(C, Object);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.LineNumberingPushbackReader;clojure.lang.LineNumberingPushbackReader;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.LineNumberingPushbackReader#read();clojure.lang.LineNumberingPushbackReader#read();6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.LineNumberingPushbackReader#unread(int);clojure.lang.LineNumberingPushbackReader#unread(int);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.LineNumberingPushbackReader#readLine();clojure.lang.LineNumberingPushbackReader#readLine();6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.LispReader.ReaderException;clojure.lang.LispReader.ReaderException;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.LispReader.MetaReader;clojure.lang.LispReader.MetaReader;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.LispReader.MetaReader#invoke(Object, Object);clojure.lang.LispReader.MetaReader#invoke(Object, Object);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);clojure.lang.LispReader.SyntaxQuoteReader#syntaxQuote(Object);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.LispReader.ListReader;clojure.lang.LispReader.ListReader;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameMethod;true;clojure.lang.LispReader.ListReader#invoke(Object, Object);clojure.lang.LispReader.ListReader#invoke(Object, Object);6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.RT;clojure.lang.RT;6bbfd943766e11e52a3fe21b177d55536892d132;Mon Mar 26 22:51:20 2012 -0700
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6a424a971de1ae3a72115308d3fa9c3a44ea846e;Sun Sep 9 01:01:38 2012 -0700
SameType;true;clojure.lang.Compiler.MapExpr;clojure.lang.Compiler.MapExpr;6a424a971de1ae3a72115308d3fa9c3a44ea846e;Sun Sep 9 01:01:38 2012 -0700
SameMethod;true;clojure.lang.Compiler.MapExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.MapExpr#emit(C, ObjExpr, GeneratorAdapter);6a424a971de1ae3a72115308d3fa9c3a44ea846e;Sun Sep 9 01:01:38 2012 -0700
SameMethod;true;clojure.lang.Compiler.MapExpr#parse(C, IPersistentMap);clojure.lang.Compiler.MapExpr#parse(C, IPersistentMap);6a424a971de1ae3a72115308d3fa9c3a44ea846e;Sun Sep 9 01:01:38 2012 -0700
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;6a424a971de1ae3a72115308d3fa9c3a44ea846e;Sun Sep 9 01:01:38 2012 -0700
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);6a424a971de1ae3a72115308d3fa9c3a44ea846e;Sun Sep 9 01:01:38 2012 -0700
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;6a424a971de1ae3a72115308d3fa9c3a44ea846e;Sun Sep 9 01:01:38 2012 -0700
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);6a424a971de1ae3a72115308d3fa9c3a44ea846e;Sun Sep 9 01:01:38 2012 -0700
SameMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.Compiler#load(Reader, String, String);6a424a971de1ae3a72115308d3fa9c3a44ea846e;Sun Sep 9 01:01:38 2012 -0700
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);6a424a971de1ae3a72115308d3fa9c3a44ea846e;Sun Sep 9 01:01:38 2012 -0700
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;6a424a971de1ae3a72115308d3fa9c3a44ea846e;Sun Sep 9 01:01:38 2012 -0700
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);6a424a971de1ae3a72115308d3fa9c3a44ea846e;Sun Sep 9 01:01:38 2012 -0700
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;6a424a971de1ae3a72115308d3fa9c3a44ea846e;Sun Sep 9 01:01:38 2012 -0700
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);6a424a971de1ae3a72115308d3fa9c3a44ea846e;Sun Sep 9 01:01:38 2012 -0700
SameType;true;clojure.lang.RT;clojure.lang.RT;6a424a971de1ae3a72115308d3fa9c3a44ea846e;Sun Sep 9 01:01:38 2012 -0700
SameMethod;true;clojure.lang.RT#load(String, boolean);clojure.lang.RT#load(String, boolean);6a424a971de1ae3a72115308d3fa9c3a44ea846e;Sun Sep 9 01:01:38 2012 -0700
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();6a424a971de1ae3a72115308d3fa9c3a44ea846e;Sun Sep 9 01:01:38 2012 -0700
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;7bc871f16d90064a2c562523332267b4543d751e;Sat Sep 8 13:36:41 2012 -0700
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;65b5f73a9be30669116fcddb6ced9e60680532e5;Sun Oct 7 13:35:54 2012 -0400
SameType;true;clojure.lang.LispReader.MetaReader;clojure.lang.LispReader.MetaReader;65b5f73a9be30669116fcddb6ced9e60680532e5;Sun Oct 7 13:35:54 2012 -0400
SameMethod;true;clojure.lang.LispReader.MetaReader#invoke(Object, Object);clojure.lang.LispReader.MetaReader#invoke(Object, Object);65b5f73a9be30669116fcddb6ced9e60680532e5;Sun Oct 7 13:35:54 2012 -0400
SameType;true;clojure.lang.LispReader.ListReader;clojure.lang.LispReader.ListReader;65b5f73a9be30669116fcddb6ced9e60680532e5;Sun Oct 7 13:35:54 2012 -0400
SameMethod;true;clojure.lang.LispReader.ListReader#invoke(Object, Object);clojure.lang.LispReader.ListReader#invoke(Object, Object);65b5f73a9be30669116fcddb6ced9e60680532e5;Sun Oct 7 13:35:54 2012 -0400
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;fca9a62e4c18ab126a1df90f929b7cf9fb0199db;Thu Oct 11 16:48:28 2012 +0200
SameType;true;clojure.lang.PersistentVector.ChunkedSeq;clojure.lang.PersistentVector.ChunkedSeq;fca9a62e4c18ab126a1df90f929b7cf9fb0199db;Thu Oct 11 16:48:28 2012 +0200
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;a34e8f478220ea3394e672ea77b017feffec5b99;Mon Sep 3 21:31:48 2012 +0100
SameMethod;true;clojure.lang.PersistentQueue#hashCode();clojure.lang.PersistentQueue#hashCode();a34e8f478220ea3394e672ea77b017feffec5b99;Mon Sep 3 21:31:48 2012 +0100
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;79a1b793f87af417b430450f3c24e7cfe456e3e2;Sat Oct 20 10:55:46 2012 -0400
SameType;true;clojure.lang.LispReader.CtorReader;clojure.lang.LispReader.CtorReader;79a1b793f87af417b430450f3c24e7cfe456e3e2;Sat Oct 20 10:55:46 2012 -0400
SameMethod;true;clojure.lang.LispReader.CtorReader#readTagged(PushbackReader, Symbol);clojure.lang.LispReader.CtorReader#readTagged(PushbackReader, Symbol);79a1b793f87af417b430450f3c24e7cfe456e3e2;Sat Oct 20 10:55:46 2012 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;79a1b793f87af417b430450f3c24e7cfe456e3e2;Sat Oct 20 10:55:46 2012 -0400
ExtractMethod;true;clojure.lang.APersistentMap#hasheq();clojure.lang.APersistentMap#mapHasheq(IPersistentMap);d77489d3ce912c177fe288a6f399a5c1da6683db;Tue Nov 27 15:19:25 2012 +0100
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;d77489d3ce912c177fe288a6f399a5c1da6683db;Tue Nov 27 15:19:25 2012 +0100
SameMethod;true;clojure.lang.APersistentMap#hasheq();clojure.lang.APersistentMap#hasheq();d77489d3ce912c177fe288a6f399a5c1da6683db;Tue Nov 27 15:19:25 2012 +0100
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;d77489d3ce912c177fe288a6f399a5c1da6683db;Tue Nov 27 15:19:25 2012 +0100
SameMethod;true;clojure.lang.APersistentSet#hasheq();clojure.lang.APersistentSet#hasheq();d77489d3ce912c177fe288a6f399a5c1da6683db;Tue Nov 27 15:19:25 2012 +0100
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;d77489d3ce912c177fe288a6f399a5c1da6683db;Tue Nov 27 15:19:25 2012 +0100
SameMethod;true;clojure.lang.APersistentVector#hasheq();clojure.lang.APersistentVector#hasheq();d77489d3ce912c177fe288a6f399a5c1da6683db;Tue Nov 27 15:19:25 2012 +0100
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;d77489d3ce912c177fe288a6f399a5c1da6683db;Tue Nov 27 15:19:25 2012 +0100
SameMethod;true;clojure.lang.ASeq#hasheq();clojure.lang.ASeq#hasheq();d77489d3ce912c177fe288a6f399a5c1da6683db;Tue Nov 27 15:19:25 2012 +0100
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;d77489d3ce912c177fe288a6f399a5c1da6683db;Tue Nov 27 15:19:25 2012 +0100
SameMethod;true;clojure.lang.PersistentQueue#hasheq();clojure.lang.PersistentQueue#hasheq();d77489d3ce912c177fe288a6f399a5c1da6683db;Tue Nov 27 15:19:25 2012 +0100
ExtractMethod;true;clojure.lang.Util#hasheq(Object);clojure.lang.Util#dohasheq(Object);93505932f782f6de94b7b9a06a5b6dfd884c7d8b;Wed Nov 7 16:34:12 2012 +0100
SameType;true;clojure.lang.Util;clojure.lang.Util;93505932f782f6de94b7b9a06a5b6dfd884c7d8b;Wed Nov 7 16:34:12 2012 +0100
SameMethod;true;clojure.lang.Util#hasheq(Object);clojure.lang.Util#hasheq(Object);93505932f782f6de94b7b9a06a5b6dfd884c7d8b;Wed Nov 7 16:34:12 2012 +0100
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;94e7f39171a418d09356bd2c7865697f5b21281e;Mon Dec 3 16:38:19 2012 +0100
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;94e7f39171a418d09356bd2c7865697f5b21281e;Mon Dec 3 16:38:19 2012 +0100
SameType;true;clojure.lang.Util;clojure.lang.Util;94e7f39171a418d09356bd2c7865697f5b21281e;Mon Dec 3 16:38:19 2012 +0100
SameMethod;true;clojure.lang.Util#hasheq(Object);clojure.lang.Util#hasheq(Object);94e7f39171a418d09356bd2c7865697f5b21281e;Mon Dec 3 16:38:19 2012 +0100
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;f48d024e97868cf5911004d87bbb2347d65b89f9;Tue Dec 11 11:48:06 2012 -0500
SameMethod;true;clojure.lang.PersistentArrayMap#indexOf(Object);clojure.lang.PersistentArrayMap#indexOf(Object);f48d024e97868cf5911004d87bbb2347d65b89f9;Tue Dec 11 11:48:06 2012 -0500
SameMethod;true;clojure.lang.PersistentArrayMap#equalKey(Object, Object);clojure.lang.PersistentArrayMap#equalKey(Object, Object);f48d024e97868cf5911004d87bbb2347d65b89f9;Tue Dec 11 11:48:06 2012 -0500
SameType;true;clojure.lang.Util;clojure.lang.Util;f48d024e97868cf5911004d87bbb2347d65b89f9;Tue Dec 11 11:48:06 2012 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6ce5cf6fea3ecf6f11e8b1824d1c1494c478774a;Wed Nov 21 12:02:59 2012 +0100
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;6ce5cf6fea3ecf6f11e8b1824d1c1494c478774a;Wed Nov 21 12:02:59 2012 +0100
SameMethod;true;clojure.lang.Compiler.IfExpr#hasJavaClass();clojure.lang.Compiler.IfExpr#hasJavaClass();6ce5cf6fea3ecf6f11e8b1824d1c1494c478774a;Wed Nov 21 12:02:59 2012 +0100
SameMethod;true;clojure.lang.Compiler.IfExpr#canEmitPrimitive();clojure.lang.Compiler.IfExpr#canEmitPrimitive();6ce5cf6fea3ecf6f11e8b1824d1c1494c478774a;Wed Nov 21 12:02:59 2012 +0100
SameMethod;true;clojure.lang.Compiler.IfExpr#getJavaClass();clojure.lang.Compiler.IfExpr#getJavaClass();6ce5cf6fea3ecf6f11e8b1824d1c1494c478774a;Wed Nov 21 12:02:59 2012 +0100
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;6ce5cf6fea3ecf6f11e8b1824d1c1494c478774a;Wed Nov 21 12:02:59 2012 +0100
SameMethod;true;clojure.lang.Compiler.RecurExpr#getJavaClass();clojure.lang.Compiler.RecurExpr#getJavaClass();6ce5cf6fea3ecf6f11e8b1824d1c1494c478774a;Wed Nov 21 12:02:59 2012 +0100
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;9b80a552fdabeabdd93951a625b55ae49c2f8d83;Mon Jan 28 15:01:31 2013 -0500
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;9b80a552fdabeabdd93951a625b55ae49c2f8d83;Mon Jan 28 15:01:31 2013 -0500
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;9b80a552fdabeabdd93951a625b55ae49c2f8d83;Mon Jan 28 15:01:31 2013 -0500
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);9b80a552fdabeabdd93951a625b55ae49c2f8d83;Mon Jan 28 15:01:31 2013 -0500
SameType;true;clojure.lang.Compiler.ThrowExpr;clojure.lang.Compiler.ThrowExpr;9b80a552fdabeabdd93951a625b55ae49c2f8d83;Mon Jan 28 15:01:31 2013 -0500
SameType;true;clojure.lang.Compiler.ThrowExpr.Parser;clojure.lang.Compiler.ThrowExpr.Parser;9b80a552fdabeabdd93951a625b55ae49c2f8d83;Mon Jan 28 15:01:31 2013 -0500
SameMethod;true;clojure.lang.Compiler.ThrowExpr.Parser#parse(C, Object);clojure.lang.Compiler.ThrowExpr.Parser#parse(C, Object);9b80a552fdabeabdd93951a625b55ae49c2f8d83;Mon Jan 28 15:01:31 2013 -0500
SameType;true;clojure.lang.Compiler.LetFnExpr;clojure.lang.Compiler.LetFnExpr;9b80a552fdabeabdd93951a625b55ae49c2f8d83;Mon Jan 28 15:01:31 2013 -0500
SameType;true;clojure.lang.Compiler.LetFnExpr.Parser;clojure.lang.Compiler.LetFnExpr.Parser;9b80a552fdabeabdd93951a625b55ae49c2f8d83;Mon Jan 28 15:01:31 2013 -0500
SameMethod;true;clojure.lang.Compiler.LetFnExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetFnExpr.Parser#parse(C, Object);9b80a552fdabeabdd93951a625b55ae49c2f8d83;Mon Jan 28 15:01:31 2013 -0500
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;9b80a552fdabeabdd93951a625b55ae49c2f8d83;Mon Jan 28 15:01:31 2013 -0500
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;9b80a552fdabeabdd93951a625b55ae49c2f8d83;Mon Jan 28 15:01:31 2013 -0500
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);9b80a552fdabeabdd93951a625b55ae49c2f8d83;Mon Jan 28 15:01:31 2013 -0500
SameType;true;clojure.lang.Compiler.CaseExpr;clojure.lang.Compiler.CaseExpr;9b80a552fdabeabdd93951a625b55ae49c2f8d83;Mon Jan 28 15:01:31 2013 -0500
SameType;true;clojure.lang.Compiler.CaseExpr.Parser;clojure.lang.Compiler.CaseExpr.Parser;9b80a552fdabeabdd93951a625b55ae49c2f8d83;Mon Jan 28 15:01:31 2013 -0500
SameMethod;true;clojure.lang.Compiler.CaseExpr.Parser#parse(C, Object);clojure.lang.Compiler.CaseExpr.Parser#parse(C, Object);9b80a552fdabeabdd93951a625b55ae49c2f8d83;Mon Jan 28 15:01:31 2013 -0500
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;974a64c06917861b7557fd73154254195b2de548;Mon Feb 4 20:25:46 2013 -0500
SameType;true;clojure.lang.LispReader.EvalReader;clojure.lang.LispReader.EvalReader;974a64c06917861b7557fd73154254195b2de548;Mon Feb 4 20:25:46 2013 -0500
SameMethod;true;clojure.lang.LispReader.EvalReader#invoke(Object, Object);clojure.lang.LispReader.EvalReader#invoke(Object, Object);974a64c06917861b7557fd73154254195b2de548;Mon Feb 4 20:25:46 2013 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;974a64c06917861b7557fd73154254195b2de548;Mon Feb 4 20:25:46 2013 -0500
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);974a64c06917861b7557fd73154254195b2de548;Mon Feb 4 20:25:46 2013 -0500
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;1428d43c9a5f9d0e7e89a55707868df76c69d549;Sun Jan 20 04:48:56 2013 +0100
SameType;true;clojure.lang.APersistentVector.SubVector;clojure.lang.APersistentVector.SubVector;1428d43c9a5f9d0e7e89a55707868df76c69d549;Sun Jan 20 04:48:56 2013 +0100
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;1428d43c9a5f9d0e7e89a55707868df76c69d549;Sun Jan 20 04:48:56 2013 +0100
SameType;true;clojure.lang.PersistentVector.Node;clojure.lang.PersistentVector.Node;1428d43c9a5f9d0e7e89a55707868df76c69d549;Sun Jan 20 04:48:56 2013 +0100
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;38a129f2631a75ed999b52d8e0440f730b00da1f;Mon Feb 4 21:56:39 2013 -0500
SameType;true;clojure.lang.LispReader.EvalReader;clojure.lang.LispReader.EvalReader;38a129f2631a75ed999b52d8e0440f730b00da1f;Mon Feb 4 21:56:39 2013 -0500
SameMethod;true;clojure.lang.LispReader.EvalReader#invoke(Object, Object);clojure.lang.LispReader.EvalReader#invoke(Object, Object);38a129f2631a75ed999b52d8e0440f730b00da1f;Mon Feb 4 21:56:39 2013 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;38a129f2631a75ed999b52d8e0440f730b00da1f;Mon Feb 4 21:56:39 2013 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;5cf6aa3f90778498c116d143750ce31a0e2cee39;Tue Feb 5 06:57:28 2013 -0500
SameMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.Compiler#load(Reader, String, String);5cf6aa3f90778498c116d143750ce31a0e2cee39;Tue Feb 5 06:57:28 2013 -0500
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;5cf6aa3f90778498c116d143750ce31a0e2cee39;Tue Feb 5 06:57:28 2013 -0500
SameType;true;clojure.lang.LispReader.EvalReader;clojure.lang.LispReader.EvalReader;5cf6aa3f90778498c116d143750ce31a0e2cee39;Tue Feb 5 06:57:28 2013 -0500
SameMethod;true;clojure.lang.LispReader.EvalReader#invoke(Object, Object);clojure.lang.LispReader.EvalReader#invoke(Object, Object);5cf6aa3f90778498c116d143750ce31a0e2cee39;Tue Feb 5 06:57:28 2013 -0500
SameType;true;clojure.lang.LispReader.CtorReader;clojure.lang.LispReader.CtorReader;5cf6aa3f90778498c116d143750ce31a0e2cee39;Tue Feb 5 06:57:28 2013 -0500
SameMethod;true;clojure.lang.LispReader.CtorReader#readRecord(PushbackReader, Symbol);clojure.lang.LispReader.CtorReader#readRecord(PushbackReader, Symbol);5cf6aa3f90778498c116d143750ce31a0e2cee39;Tue Feb 5 06:57:28 2013 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;5cf6aa3f90778498c116d143750ce31a0e2cee39;Tue Feb 5 06:57:28 2013 -0500
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;29537a627f1100824455f8bdfadeef5d98122b28;Tue Feb 5 10:19:07 2013 -0500
SameType;true;clojure.lang.LispReader.EvalReader;clojure.lang.LispReader.EvalReader;29537a627f1100824455f8bdfadeef5d98122b28;Tue Feb 5 10:19:07 2013 -0500
SameMethod;true;clojure.lang.LispReader.EvalReader#invoke(Object, Object);clojure.lang.LispReader.EvalReader#invoke(Object, Object);29537a627f1100824455f8bdfadeef5d98122b28;Tue Feb 5 10:19:07 2013 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;29537a627f1100824455f8bdfadeef5d98122b28;Tue Feb 5 10:19:07 2013 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;53201d8c38a984401ae9d70190cf1959902edf64;Tue Feb 5 15:22:53 2013 -0500
SameMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.Compiler#load(Reader, String, String);53201d8c38a984401ae9d70190cf1959902edf64;Tue Feb 5 15:22:53 2013 -0500
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;53201d8c38a984401ae9d70190cf1959902edf64;Tue Feb 5 15:22:53 2013 -0500
SameType;true;clojure.lang.LispReader.EvalReader;clojure.lang.LispReader.EvalReader;53201d8c38a984401ae9d70190cf1959902edf64;Tue Feb 5 15:22:53 2013 -0500
SameMethod;true;clojure.lang.LispReader.EvalReader#invoke(Object, Object);clojure.lang.LispReader.EvalReader#invoke(Object, Object);53201d8c38a984401ae9d70190cf1959902edf64;Tue Feb 5 15:22:53 2013 -0500
SameType;true;clojure.lang.LispReader.CtorReader;clojure.lang.LispReader.CtorReader;53201d8c38a984401ae9d70190cf1959902edf64;Tue Feb 5 15:22:53 2013 -0500
SameMethod;true;clojure.lang.LispReader.CtorReader#readRecord(PushbackReader, Symbol);clojure.lang.LispReader.CtorReader#readRecord(PushbackReader, Symbol);53201d8c38a984401ae9d70190cf1959902edf64;Tue Feb 5 15:22:53 2013 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;53201d8c38a984401ae9d70190cf1959902edf64;Tue Feb 5 15:22:53 2013 -0500
SameMethod;true;clojure.lang.RT#print(Object, Writer);clojure.lang.RT#print(Object, Writer);53201d8c38a984401ae9d70190cf1959902edf64;Tue Feb 5 15:22:53 2013 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;19f1e493500724a2dfd878349cf18a49ba20e94b;Thu Feb 7 13:56:09 2013 -0500
SameMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.Compiler#load(Reader, String, String);19f1e493500724a2dfd878349cf18a49ba20e94b;Thu Feb 7 13:56:09 2013 -0500
SameMethod;true;clojure.lang.Compiler#pushNSandLoader(ClassLoader);clojure.lang.Compiler#pushNSandLoader(ClassLoader);19f1e493500724a2dfd878349cf18a49ba20e94b;Thu Feb 7 13:56:09 2013 -0500
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);19f1e493500724a2dfd878349cf18a49ba20e94b;Thu Feb 7 13:56:09 2013 -0500
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;19f1e493500724a2dfd878349cf18a49ba20e94b;Thu Feb 7 13:56:09 2013 -0500
SameMethod;true;clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);19f1e493500724a2dfd878349cf18a49ba20e94b;Thu Feb 7 13:56:09 2013 -0500
SameType;true;clojure.lang.LispReader.CtorReader;clojure.lang.LispReader.CtorReader;19f1e493500724a2dfd878349cf18a49ba20e94b;Thu Feb 7 13:56:09 2013 -0500
SameMethod;true;clojure.lang.LispReader.CtorReader#readRecord(PushbackReader, Symbol);clojure.lang.LispReader.CtorReader#readRecord(PushbackReader, Symbol);19f1e493500724a2dfd878349cf18a49ba20e94b;Thu Feb 7 13:56:09 2013 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;19f1e493500724a2dfd878349cf18a49ba20e94b;Thu Feb 7 13:56:09 2013 -0500
ExtractMethod;true;clojure.lang.EdnReader#readString(String);clojure.lang.EdnReader#read(PushbackReader, IPersistentMap);692817a10283c98c5d57bf3515ba39cf533d7aad;Thu Feb 7 17:56:26 2013 -0500
SameType;true;clojure.lang.EdnReader;clojure.lang.EdnReader;692817a10283c98c5d57bf3515ba39cf533d7aad;Thu Feb 7 17:56:26 2013 -0500
SameMethod;true;clojure.lang.EdnReader#readToken(PushbackReader, char);clojure.lang.EdnReader#readToken(PushbackReader, char);692817a10283c98c5d57bf3515ba39cf533d7aad;Thu Feb 7 17:56:26 2013 -0500
SameType;true;clojure.lang.EdnReader.StringReader;clojure.lang.EdnReader.StringReader;692817a10283c98c5d57bf3515ba39cf533d7aad;Thu Feb 7 17:56:26 2013 -0500
SameType;true;clojure.lang.EdnReader.CommentReader;clojure.lang.EdnReader.CommentReader;692817a10283c98c5d57bf3515ba39cf533d7aad;Thu Feb 7 17:56:26 2013 -0500
SameType;true;clojure.lang.EdnReader.DiscardReader;clojure.lang.EdnReader.DiscardReader;692817a10283c98c5d57bf3515ba39cf533d7aad;Thu Feb 7 17:56:26 2013 -0500
SameType;true;clojure.lang.EdnReader.DispatchReader;clojure.lang.EdnReader.DispatchReader;692817a10283c98c5d57bf3515ba39cf533d7aad;Thu Feb 7 17:56:26 2013 -0500
SameType;true;clojure.lang.EdnReader.MetaReader;clojure.lang.EdnReader.MetaReader;692817a10283c98c5d57bf3515ba39cf533d7aad;Thu Feb 7 17:56:26 2013 -0500
SameType;true;clojure.lang.EdnReader.CharacterReader;clojure.lang.EdnReader.CharacterReader;692817a10283c98c5d57bf3515ba39cf533d7aad;Thu Feb 7 17:56:26 2013 -0500
SameType;true;clojure.lang.EdnReader.ListReader;clojure.lang.EdnReader.ListReader;692817a10283c98c5d57bf3515ba39cf533d7aad;Thu Feb 7 17:56:26 2013 -0500
SameType;true;clojure.lang.EdnReader.VectorReader;clojure.lang.EdnReader.VectorReader;692817a10283c98c5d57bf3515ba39cf533d7aad;Thu Feb 7 17:56:26 2013 -0500
SameType;true;clojure.lang.EdnReader.MapReader;clojure.lang.EdnReader.MapReader;692817a10283c98c5d57bf3515ba39cf533d7aad;Thu Feb 7 17:56:26 2013 -0500
SameType;true;clojure.lang.EdnReader.SetReader;clojure.lang.EdnReader.SetReader;692817a10283c98c5d57bf3515ba39cf533d7aad;Thu Feb 7 17:56:26 2013 -0500
SameType;true;clojure.lang.EdnReader.UnmatchedDelimiterReader;clojure.lang.EdnReader.UnmatchedDelimiterReader;692817a10283c98c5d57bf3515ba39cf533d7aad;Thu Feb 7 17:56:26 2013 -0500
SameType;true;clojure.lang.EdnReader.UnreadableReader;clojure.lang.EdnReader.UnreadableReader;692817a10283c98c5d57bf3515ba39cf533d7aad;Thu Feb 7 17:56:26 2013 -0500
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;692817a10283c98c5d57bf3515ba39cf533d7aad;Thu Feb 7 17:56:26 2013 -0500
SameMethod;true;clojure.lang.LispReader#isTerminatingMacro(int);clojure.lang.LispReader#isTerminatingMacro(int);692817a10283c98c5d57bf3515ba39cf533d7aad;Thu Feb 7 17:56:26 2013 -0500
ExtractMethod;true;clojure.lang.APersistentSet#equals(Object);clojure.lang.APersistentSet#setEquals(IPersistentSet, Object);21425a642c44bd1cdb8d3e537a7b6a23c1267bc7;Sat Feb 2 14:30:54 2013 -0600
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;21425a642c44bd1cdb8d3e537a7b6a23c1267bc7;Sat Feb 2 14:30:54 2013 -0600
SameMethod;true;clojure.lang.APersistentSet#equals(Object);clojure.lang.APersistentSet#equals(Object);21425a642c44bd1cdb8d3e537a7b6a23c1267bc7;Sat Feb 2 14:30:54 2013 -0600
SameMethod;true;clojure.lang.APersistentSet#equiv(Object);clojure.lang.APersistentSet#equiv(Object);21425a642c44bd1cdb8d3e537a7b6a23c1267bc7;Sat Feb 2 14:30:54 2013 -0600
SameType;true;clojure.lang.EdnReader;clojure.lang.EdnReader;4671019d78fc7b83768b5cb1e7bb4c699f24af3e;Sat Feb 9 09:41:22 2013 -0500
SameMethod;true;clojure.lang.EdnReader#read(PushbackReader, boolean, Object, boolean, Object);clojure.lang.EdnReader#read(PushbackReader, boolean, Object, boolean, Object);4671019d78fc7b83768b5cb1e7bb4c699f24af3e;Sat Feb 9 09:41:22 2013 -0500
SameType;true;clojure.lang.EdnReader.CharacterReader;clojure.lang.EdnReader.CharacterReader;4671019d78fc7b83768b5cb1e7bb4c699f24af3e;Sat Feb 9 09:41:22 2013 -0500
SameMethod;true;clojure.lang.EdnReader.CharacterReader#invoke(Object, Object, Object);clojure.lang.EdnReader.CharacterReader#invoke(Object, Object, Object);4671019d78fc7b83768b5cb1e7bb4c699f24af3e;Sat Feb 9 09:41:22 2013 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;dfbd70bd5f4674ebbae18a8e1bb5bd937be4791d;Wed Mar 6 10:34:27 2013 -0500
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;dfbd70bd5f4674ebbae18a8e1bb5bd937be4791d;Wed Mar 6 10:34:27 2013 -0500
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;dfbd70bd5f4674ebbae18a8e1bb5bd937be4791d;Wed Mar 6 10:34:27 2013 -0500
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);dfbd70bd5f4674ebbae18a8e1bb5bd937be4791d;Wed Mar 6 10:34:27 2013 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;96f5b5bdcae44ccc69e33d701e6188dc2570dadf;Thu Nov 1 09:57:48 2012 -0400
SameMethod;true;clojure.lang.RT#seqFrom(Object);clojure.lang.RT#seqFrom(Object);96f5b5bdcae44ccc69e33d701e6188dc2570dadf;Thu Nov 1 09:57:48 2012 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;88cad2510243289d2bbe28cf8bd14007d9df5fc3;Wed Nov 9 22:23:15 2011 -0700
SameMethod;true;clojure.lang.LispReader#interpretToken(String);clojure.lang.LispReader#interpretToken(String);88cad2510243289d2bbe28cf8bd14007d9df5fc3;Wed Nov 9 22:23:15 2011 -0700
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;88cad2510243289d2bbe28cf8bd14007d9df5fc3;Wed Nov 9 22:23:15 2011 -0700
SameMethod;true;clojure.lang.Symbol#intern(String);clojure.lang.Symbol#intern(String);88cad2510243289d2bbe28cf8bd14007d9df5fc3;Wed Nov 9 22:23:15 2011 -0700
ExtractMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler#columnDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#columnDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);clojure.lang.Compiler#columnDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler#eval(Object, boolean);clojure.lang.Compiler#columnDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler#compile1(GeneratorAdapter, ObjExpr, Object);clojure.lang.Compiler#columnDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);clojure.lang.Compiler#columnDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler#columnDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler#columnDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler#columnDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#columnDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);clojure.lang.Compiler#columnDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);clojure.lang.Compiler#columnDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);clojure.lang.Compiler#columnDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#columnDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.IfExpr.Parser#parse(C, Object);clojure.lang.Compiler#columnDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler#lineDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#lineDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);clojure.lang.Compiler#lineDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler#eval(Object, boolean);clojure.lang.Compiler#lineDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler#compile1(GeneratorAdapter, ObjExpr, Object);clojure.lang.Compiler#lineDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);clojure.lang.Compiler#lineDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler#lineDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler#lineDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler#lineDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#lineDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);clojure.lang.Compiler#lineDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);clojure.lang.Compiler#lineDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);clojure.lang.Compiler#lineDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#lineDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
ExtractMethod;true;clojure.lang.Compiler.IfExpr.Parser#parse(C, Object);clojure.lang.Compiler#lineDeref();229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameType;true;clojure.lang.Compiler.NewExpr.Parser;clojure.lang.Compiler.NewExpr.Parser;229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameMethod;true;clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);clojure.lang.Compiler.NewExpr.Parser#parse(C, Object);229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameType;true;clojure.lang.Compiler.IfExpr.Parser;clojure.lang.Compiler.IfExpr.Parser;229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameMethod;true;clojure.lang.Compiler.IfExpr.Parser#parse(C, Object);clojure.lang.Compiler.IfExpr.Parser#parse(C, Object);229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, boolean);229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameType;true;clojure.lang.Compiler.RecurExpr.Parser;clojure.lang.Compiler.RecurExpr.Parser;229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameMethod;true;clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);clojure.lang.Compiler.RecurExpr.Parser#parse(C, Object);229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameMethod;true;clojure.lang.Compiler#eval(Object, boolean);clojure.lang.Compiler#eval(Object, boolean);229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameMethod;true;clojure.lang.Compiler#analyzeSymbol(Symbol);clojure.lang.Compiler#analyzeSymbol(Symbol);229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameMethod;true;clojure.lang.Compiler#compile1(GeneratorAdapter, ObjExpr, Object);clojure.lang.Compiler#compile1(GeneratorAdapter, ObjExpr, Object);229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object);229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);229bf8fe9a751e4f48bb2b7ea57e27ebc43d26ae;Sun Jul 7 09:46:01 2013 -0400
SameType;true;clojure.lang.Compile;clojure.lang.Compile;04e634ea180f1ce5ed01a304ac0754dbcb819786;Wed Aug 14 18:47:44 2013 -0400
SameMethod;true;clojure.lang.Compile#main(String[]);clojure.lang.Compile#main(String[]);04e634ea180f1ce5ed01a304ac0754dbcb819786;Wed Aug 14 18:47:44 2013 -0400
SameType;true;clojure.lang.Delay;clojure.lang.Delay;357ba727bf0efc6a61e6032870e5214422f66818;Wed Mar 6 13:00:28 2013 -0800
SameMethod;true;clojure.lang.Delay#Delay(IFn);clojure.lang.Delay#Delay(IFn);357ba727bf0efc6a61e6032870e5214422f66818;Wed Mar 6 13:00:28 2013 -0800
SameMethod;true;clojure.lang.Delay#deref();clojure.lang.Delay#deref();357ba727bf0efc6a61e6032870e5214422f66818;Wed Mar 6 13:00:28 2013 -0800
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6a2487a1eee4d66099290ccb819a0b5149ea8fd0;Thu Feb 28 02:57:07 2013 +0100
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;6a2487a1eee4d66099290ccb819a0b5149ea8fd0;Thu Feb 28 02:57:07 2013 +0100
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);6a2487a1eee4d66099290ccb819a0b5149ea8fd0;Thu Feb 28 02:57:07 2013 +0100
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;5e95db7dfe3a7a61bc8df4eab5ac877c4bea678e;Thu Feb 28 03:03:10 2013 +0100
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;5e95db7dfe3a7a61bc8df4eab5ac877c4bea678e;Thu Feb 28 03:03:10 2013 +0100
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);5e95db7dfe3a7a61bc8df4eab5ac877c4bea678e;Thu Feb 28 03:03:10 2013 +0100
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;97ab7e72adc5b7385bfe7b46835bae6f17efd598;Wed Dec 19 16:17:13 2012 -0500
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;97ab7e72adc5b7385bfe7b46835bae6f17efd598;Wed Dec 19 16:17:13 2012 -0500
SameMethod;true;clojure.lang.Compiler.FnMethod#doEmitPrim(ObjExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#doEmitPrim(ObjExpr, ClassVisitor);97ab7e72adc5b7385bfe7b46835bae6f17efd598;Wed Dec 19 16:17:13 2012 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;0b73494c3c855e54b1da591eeb687f24f608f346;Tue Oct 8 11:05:52 2013 -0400
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;0b73494c3c855e54b1da591eeb687f24f608f346;Tue Oct 8 11:05:52 2013 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emitProto(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emitProto(C, ObjExpr, GeneratorAdapter);0b73494c3c855e54b1da591eeb687f24f608f346;Tue Oct 8 11:05:52 2013 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;0b73494c3c855e54b1da591eeb687f24f608f346;Tue Oct 8 11:05:52 2013 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);0b73494c3c855e54b1da591eeb687f24f608f346;Tue Oct 8 11:05:52 2013 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;67c02f27d65b64191a31d62d67d647ea88e2d666;Sun Sep 8 01:36:39 2013 -0700
SameType;true;clojure.lang.LispReader.CtorReader;clojure.lang.LispReader.CtorReader;67c02f27d65b64191a31d62d67d647ea88e2d666;Sun Sep 8 01:36:39 2013 -0700
SameMethod;true;clojure.lang.LispReader.CtorReader#readRecord(PushbackReader, Symbol);clojure.lang.LispReader.CtorReader#readRecord(PushbackReader, Symbol);67c02f27d65b64191a31d62d67d647ea88e2d666;Sun Sep 8 01:36:39 2013 -0700
SameType;true;clojure.lang.EdnReader;clojure.lang.EdnReader;39aa021e83b4d5bc2d7c3b13c56c04daee4c27d0;Wed Sep 4 15:24:24 2013 -0500
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;39aa021e83b4d5bc2d7c3b13c56c04daee4c27d0;Wed Sep 4 15:24:24 2013 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;916da1962bc452a97e0140f0815dd30a71899566;Tue Jul 2 21:48:39 2013 -0500
SameMethod;true;clojure.lang.Compiler#eval(Object, boolean);clojure.lang.Compiler#eval(Object, boolean);916da1962bc452a97e0140f0815dd30a71899566;Tue Jul 2 21:48:39 2013 -0500
SameMethod;true;clojure.lang.Compiler#compile1(GeneratorAdapter, ObjExpr, Object);clojure.lang.Compiler#compile1(GeneratorAdapter, ObjExpr, Object);916da1962bc452a97e0140f0815dd30a71899566;Tue Jul 2 21:48:39 2013 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;71892d138a7d0194a34bec2d21cd3a5c3c1bfe4e;Tue Jul 23 18:22:52 2013 +0100
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;71892d138a7d0194a34bec2d21cd3a5c3c1bfe4e;Tue Jul 23 18:22:52 2013 +0100
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;71892d138a7d0194a34bec2d21cd3a5c3c1bfe4e;Tue Jul 23 18:22:52 2013 +0100
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);71892d138a7d0194a34bec2d21cd3a5c3c1bfe4e;Tue Jul 23 18:22:52 2013 +0100
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;995a36a68a1314c54270cba77d95883255b0fc4d;Thu Aug 29 14:45:39 2013 -0500
SameMethod;true;clojure.lang.Numbers#short_array(int, Object);clojure.lang.Numbers#short_array(int, Object);995a36a68a1314c54270cba77d95883255b0fc4d;Thu Aug 29 14:45:39 2013 -0500
SameMethod;true;clojure.lang.Numbers#short_array(Object);clojure.lang.Numbers#short_array(Object);995a36a68a1314c54270cba77d95883255b0fc4d;Thu Aug 29 14:45:39 2013 -0500
SameMethod;true;clojure.lang.Numbers#byte_array(int, Object);clojure.lang.Numbers#byte_array(int, Object);995a36a68a1314c54270cba77d95883255b0fc4d;Thu Aug 29 14:45:39 2013 -0500
SameMethod;true;clojure.lang.Numbers#byte_array(Object);clojure.lang.Numbers#byte_array(Object);995a36a68a1314c54270cba77d95883255b0fc4d;Thu Aug 29 14:45:39 2013 -0500
SameType;true;clojure.lang.AFn;clojure.lang.AFn;462e4b2b2cd3361cce7325334bae96ec831ca7c5;Fri Oct 25 13:11:16 2013 -0500
SameMethod;true;clojure.lang.AFn#throwArity(int);clojure.lang.AFn#throwArity(int);462e4b2b2cd3361cce7325334bae96ec831ca7c5;Fri Oct 25 13:11:16 2013 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;462e4b2b2cd3361cce7325334bae96ec831ca7c5;Fri Oct 25 13:11:16 2013 -0500
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;6d1d9f6e5dcc7d8a925485e55d96d1f1530b2366;Fri Jun 14 07:38:33 2013 -0400
SameMethod;true;clojure.lang.LockingTransaction#runInTransaction(Callable);clojure.lang.LockingTransaction#runInTransaction(Callable);6d1d9f6e5dcc7d8a925485e55d96d1f1530b2366;Fri Jun 14 07:38:33 2013 -0400
SameType;true;clojure.lang.Var;clojure.lang.Var;6d1d9f6e5dcc7d8a925485e55d96d1f1530b2366;Fri Jun 14 07:38:33 2013 -0400
SameMethod;true;clojure.lang.Var#popThreadBindings();clojure.lang.Var#popThreadBindings();6d1d9f6e5dcc7d8a925485e55d96d1f1530b2366;Fri Jun 14 07:38:33 2013 -0400
SameType;true;clojure.lang.Var;clojure.lang.Var;574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object);clojure.lang.Var#invoke(Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object);clojure.lang.Var#invoke(Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameMethod;true;clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);clojure.lang.Var#invoke(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object[]);574fe819a67d5f5bd83a8f7dde6ffe3b5d7a4ecf;Thu Nov 29 13:51:43 2012 -0700
SameType;true;clojure.lang.EdnReader;clojure.lang.EdnReader;249479ecebcb0cfca9e6a1d528e3d7f0b3ca7dc6;Thu Oct 31 13:56:01 2013 -0400
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;249479ecebcb0cfca9e6a1d528e3d7f0b3ca7dc6;Thu Oct 31 13:56:01 2013 -0400
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;3b4a35cd011e6160ab1f981824a883646295b1e8;Mon Oct 28 11:07:27 2013 +0100
SameType;true;clojure.lang.PersistentHashMap.HashCollisionNode;clojure.lang.PersistentHashMap.HashCollisionNode;3b4a35cd011e6160ab1f981824a883646295b1e8;Mon Oct 28 11:07:27 2013 +0100
SameMethod;true;clojure.lang.PersistentHashMap.HashCollisionNode#assoc(int, int, Object, Object, Box);clojure.lang.PersistentHashMap.HashCollisionNode#assoc(int, int, Object, Object, Box);3b4a35cd011e6160ab1f981824a883646295b1e8;Mon Oct 28 11:07:27 2013 +0100
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;40d2ba536df40adc74ccfa1c06d44063599cf846;Fri Nov 22 16:13:39 2013 -0500
SameMethod;true;clojure.lang.LockingTransaction#runInTransaction(Callable);clojure.lang.LockingTransaction#runInTransaction(Callable);40d2ba536df40adc74ccfa1c06d44063599cf846;Fri Nov 22 16:13:39 2013 -0500
SameType;true;clojure.lang.Var;clojure.lang.Var;40d2ba536df40adc74ccfa1c06d44063599cf846;Fri Nov 22 16:13:39 2013 -0500
SameMethod;true;clojure.lang.Var#popThreadBindings();clojure.lang.Var#popThreadBindings();40d2ba536df40adc74ccfa1c06d44063599cf846;Fri Nov 22 16:13:39 2013 -0500
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;b1fd40a01b6f631f1f1887ed5b25345e00e47727;Tue Sep 17 21:22:08 2013 -0700
SameMethod;true;clojure.lang.PersistentHashMap#createNode(int, Object, Object, int, Object, Object);clojure.lang.PersistentHashMap#createNode(int, Object, Object, int, Object, Object);b1fd40a01b6f631f1f1887ed5b25345e00e47727;Tue Sep 17 21:22:08 2013 -0700
SameMethod;true;clojure.lang.PersistentHashMap#createNode(AtomicReference, int, Object, Object, int, Object, Object);clojure.lang.PersistentHashMap#createNode(AtomicReference, int, Object, Object, int, Object, Object);b1fd40a01b6f631f1f1887ed5b25345e00e47727;Tue Sep 17 21:22:08 2013 -0700
SameType;true;clojure.lang.BigInt;clojure.lang.BigInt;94637e48ae7cffef98eb61df9bdb9dbfb183bf89;Fri Jun 21 12:38:48 2013 -0500
SameMethod;true;clojure.lang.BigInt#multiply(BigInt);clojure.lang.BigInt#multiply(BigInt);94637e48ae7cffef98eb61df9bdb9dbfb183bf89;Fri Jun 21 12:38:48 2013 -0500
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;94637e48ae7cffef98eb61df9bdb9dbfb183bf89;Fri Jun 21 12:38:48 2013 -0500
SameType;true;clojure.lang.Numbers.LongOps;clojure.lang.Numbers.LongOps;94637e48ae7cffef98eb61df9bdb9dbfb183bf89;Fri Jun 21 12:38:48 2013 -0500
SameMethod;true;clojure.lang.Numbers.LongOps#multiplyP(Number, Number);clojure.lang.Numbers.LongOps#multiplyP(Number, Number);94637e48ae7cffef98eb61df9bdb9dbfb183bf89;Fri Jun 21 12:38:48 2013 -0500
SameMethod;true;clojure.lang.Numbers#multiply(long, long);clojure.lang.Numbers#multiply(long, long);94637e48ae7cffef98eb61df9bdb9dbfb183bf89;Fri Jun 21 12:38:48 2013 -0500
SameMethod;true;clojure.lang.Numbers#multiplyP(long, long);clojure.lang.Numbers#multiplyP(long, long);94637e48ae7cffef98eb61df9bdb9dbfb183bf89;Fri Jun 21 12:38:48 2013 -0500
SameType;true;clojure.lang.EdnReader;clojure.lang.EdnReader;a989c01eed7ce29cc7672b7a402e4f335d792882;Sat May 25 18:45:41 2013 +0200
SameMethod;true;clojure.lang.EdnReader#interpretToken(String);clojure.lang.EdnReader#interpretToken(String);a989c01eed7ce29cc7672b7a402e4f335d792882;Sat May 25 18:45:41 2013 +0200
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;a989c01eed7ce29cc7672b7a402e4f335d792882;Sat May 25 18:45:41 2013 +0200
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;28b17747428f2f7afbf85fb77039b880b5d83adc;Fri Sep 27 17:45:51 2013 -0700
SameType;true;clojure.lang.Numbers.BigDecimalOps;clojure.lang.Numbers.BigDecimalOps;28b17747428f2f7afbf85fb77039b880b5d83adc;Fri Sep 27 17:45:51 2013 -0700
SameMethod;true;clojure.lang.Numbers.BigDecimalOps#equiv(Number, Number);clojure.lang.Numbers.BigDecimalOps#equiv(Number, Number);28b17747428f2f7afbf85fb77039b880b5d83adc;Fri Sep 27 17:45:51 2013 -0700
SameMethod;true;clojure.lang.Numbers#hasheq(Number);clojure.lang.Numbers#hasheq(Number);28b17747428f2f7afbf85fb77039b880b5d83adc;Fri Sep 27 17:45:51 2013 -0700
SameType;true;clojure.lang.AFn;clojure.lang.AFn;047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameMethod;true;clojure.lang.AFn#run();clojure.lang.AFn#run();047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameType;true;clojure.lang.AFunction;clojure.lang.AFunction;047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameMethod;true;clojure.lang.AFunction#compare(Object, Object);clojure.lang.AFunction#compare(Object, Object);047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameType;true;clojure.lang.ARef;clojure.lang.ARef;047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameMethod;true;clojure.lang.ARef#setValidator(IFn);clojure.lang.ARef#setValidator(IFn);047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameMethod;true;clojure.lang.ARef#removeWatch(Object);clojure.lang.ARef#removeWatch(Object);047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameMethod;true;clojure.lang.ARef#notifyWatches(Object, Object);clojure.lang.ARef#notifyWatches(Object, Object);047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameMethod;true;clojure.lang.Compiler#maybePrimitiveType(Expr);clojure.lang.Compiler#maybePrimitiveType(Expr);047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameMethod;true;clojure.lang.Compiler#addAnnotation(Object, IPersistentMap);clojure.lang.Compiler#addAnnotation(Object, IPersistentMap);047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameMethod;true;clojure.lang.Compiler#addParameterAnnotation(Object, IPersistentMap, int);clojure.lang.Compiler#addParameterAnnotation(Object, IPersistentMap, int);047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameMethod;true;clojure.lang.LazySeq#sval();clojure.lang.LazySeq#sval();047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameType;true;clojure.lang.TransactionalHashMap;clojure.lang.TransactionalHashMap;047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameMethod;true;clojure.lang.TransactionalHashMap#remove(Object);clojure.lang.TransactionalHashMap#remove(Object);047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameMethod;true;clojure.lang.TransactionalHashMap#remove(Object, Object);clojure.lang.TransactionalHashMap#remove(Object, Object);047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameType;true;clojure.lang.Var;clojure.lang.Var;047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameMethod;true;clojure.lang.Var#setMacro();clojure.lang.Var#setMacro();047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameMethod;true;clojure.lang.Var#setTag(Symbol);clojure.lang.Var#setTag(Symbol);047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameMethod;true;clojure.lang.Var#bindRoot(Object);clojure.lang.Var#bindRoot(Object);047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameMethod;true;clojure.lang.Var#run();clojure.lang.Var#run();047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameMethod;true;clojure.lang.Var$2#invoke(Object, Object);clojure.lang.Var$2#invoke(Object, Object);047ca37cfcd2e9910345e760fae32de168f4cb74;Wed Mar 7 19:56:24 2012 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameType;true;clojure.lang.Compiler.IfExpr;clojure.lang.Compiler.IfExpr;020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameMethod;true;clojure.lang.Compiler.IfExpr#doEmit(C, ObjExpr, GeneratorAdapter, boolean);clojure.lang.Compiler.IfExpr#doEmit(C, ObjExpr, GeneratorAdapter, boolean);020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameType;true;clojure.lang.Compiler.StaticInvokeExpr;clojure.lang.Compiler.StaticInvokeExpr;020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameMethod;true;clojure.lang.Compiler.StaticInvokeExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.StaticInvokeExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameMethod;true;clojure.lang.Compiler.ObjExpr#getCompiledClass();clojure.lang.Compiler.ObjExpr#getCompiledClass();020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameMethod;true;clojure.lang.Compiler.FnMethod#doEmitStatic(ObjExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#doEmitStatic(ObjExpr, ClassVisitor);020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameMethod;true;clojure.lang.Compiler.FnMethod#doEmitPrim(ObjExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#doEmitPrim(ObjExpr, ClassVisitor);020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameMethod;true;clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameMethod;true;clojure.lang.Compiler#eval(Object, boolean);clojure.lang.Compiler#eval(Object, boolean);020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.NewInstanceMethod#emit(ObjExpr, ClassVisitor);020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameType;true;clojure.lang.EdnReader;clojure.lang.EdnReader;020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameMethod;true;clojure.lang.EdnReader#readString(String, IPersistentMap);clojure.lang.EdnReader#readString(String, IPersistentMap);020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameType;true;clojure.lang.RT;clojure.lang.RT;020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameMethod;true;clojure.lang.RT#readString(String);clojure.lang.RT#readString(String);020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameType;true;clojure.lang.Ref;clojure.lang.Ref;020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameMethod;true;clojure.lang.Ref#run();clojure.lang.Ref#run();020bf971fba53c6a0d65d9d7c25a61462e88d9c2;Fri Aug 30 18:50:18 2013 -0700
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;70ea97879a1c78357cc911aa62c8e79a47f3a92b;Fri Oct 25 08:45:31 2013 -0700
SameMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.Compiler#load(Reader, String, String);70ea97879a1c78357cc911aa62c8e79a47f3a92b;Fri Oct 25 08:45:31 2013 -0700
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;b50c03eb1fef609ff087f46bd7afa748122b0cd5;Fri Sep 9 10:43:58 2011 +0200
SameMethod;true;clojure.lang.LockingTransaction#run(Callable);clojure.lang.LockingTransaction#run(Callable);b50c03eb1fef609ff087f46bd7afa748122b0cd5;Fri Sep 9 10:43:58 2011 +0200
SameType;true;clojure.lang.Ref;clojure.lang.Ref;b50c03eb1fef609ff087f46bd7afa748122b0cd5;Fri Sep 9 10:43:58 2011 +0200
SameType;true;clojure.lang.Ref.TVal;clojure.lang.Ref.TVal;b50c03eb1fef609ff087f46bd7afa748122b0cd5;Fri Sep 9 10:43:58 2011 +0200
SameMethod;true;clojure.lang.Ref#Ref(Object, IPersistentMap);clojure.lang.Ref#Ref(Object, IPersistentMap);b50c03eb1fef609ff087f46bd7afa748122b0cd5;Fri Sep 9 10:43:58 2011 +0200
SameType;true;clojure.lang.Intrinsics;clojure.lang.Intrinsics;1e5e5be1f52ebed5466b592b1cffd46c84ef6cb8;Mon Jan 16 18:57:06 2012 -0500
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;1e5e5be1f52ebed5466b592b1cffd46c84ef6cb8;Mon Jan 16 18:57:06 2012 -0500
RenameMethod;false;clojure.lang.Numbers#shiftRightLogical(long, long);clojure.lang.Numbers#unsignedShiftRight(long, long);22164511c43ef19fbff91fb75ef5f7147526769d;Fri May 24 13:38:05 2013 -0400
RenameMethod;false;clojure.lang.Numbers#shiftRightLogicalInt(int, int);clojure.lang.Numbers#unsignedShiftRightInt(int, int);22164511c43ef19fbff91fb75ef5f7147526769d;Fri May 24 13:38:05 2013 -0400
RenameMethod;true;clojure.lang.Numbers#shiftRightLogical(Object, Object);clojure.lang.Numbers#unsignedShiftRight(Object, Object);22164511c43ef19fbff91fb75ef5f7147526769d;Fri May 24 13:38:05 2013 -0400
RenameMethod;true;clojure.lang.Numbers#shiftRightLogical(Object, long);clojure.lang.Numbers#unsignedShiftRight(Object, long);22164511c43ef19fbff91fb75ef5f7147526769d;Fri May 24 13:38:05 2013 -0400
RenameMethod;true;clojure.lang.Numbers#shiftRightLogical(long, Object);clojure.lang.Numbers#unsignedShiftRight(long, Object);22164511c43ef19fbff91fb75ef5f7147526769d;Fri May 24 13:38:05 2013 -0400
SameType;true;clojure.lang.Intrinsics;clojure.lang.Intrinsics;22164511c43ef19fbff91fb75ef5f7147526769d;Fri May 24 13:38:05 2013 -0400
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;22164511c43ef19fbff91fb75ef5f7147526769d;Fri May 24 13:38:05 2013 -0400
SameType;true;clojure.lang.LockingTransaction;clojure.lang.LockingTransaction;6be05801ff060122bec43e4eac5fdddf5e174fcf;Fri Nov 22 09:49:44 2013 -0500
SameMethod;true;clojure.lang.LockingTransaction#runInTransaction(Callable);clojure.lang.LockingTransaction#runInTransaction(Callable);6be05801ff060122bec43e4eac5fdddf5e174fcf;Fri Nov 22 09:49:44 2013 -0500
SameType;true;clojure.lang.Var;clojure.lang.Var;6be05801ff060122bec43e4eac5fdddf5e174fcf;Fri Nov 22 09:49:44 2013 -0500
SameType;true;clojure.lang.Var.Frame;clojure.lang.Var.Frame;6be05801ff060122bec43e4eac5fdddf5e174fcf;Fri Nov 22 09:49:44 2013 -0500
SameMethod;true;clojure.lang.Var.Frame#clone();clojure.lang.Var.Frame#clone();6be05801ff060122bec43e4eac5fdddf5e174fcf;Fri Nov 22 09:49:44 2013 -0500
SameMethod;true;clojure.lang.Var#getThreadBindingFrame();clojure.lang.Var#getThreadBindingFrame();6be05801ff060122bec43e4eac5fdddf5e174fcf;Fri Nov 22 09:49:44 2013 -0500
SameMethod;true;clojure.lang.Var#cloneThreadBindingFrame();clojure.lang.Var#cloneThreadBindingFrame();6be05801ff060122bec43e4eac5fdddf5e174fcf;Fri Nov 22 09:49:44 2013 -0500
SameMethod;true;clojure.lang.Var#popThreadBindings();clojure.lang.Var#popThreadBindings();6be05801ff060122bec43e4eac5fdddf5e174fcf;Fri Nov 22 09:49:44 2013 -0500
MoveMethod;false;clojure.asm.MethodWriter#getArgumentsAndReturnSizes(String);clojure.asm.Type#getArgumentsAndReturnSizes(String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
MoveMethod;true;clojure.asm.MethodAdapter#visitTableSwitchInsn(int, int, Label, Label[]);clojure.asm.commons.InstructionAdapter#visitTableSwitchInsn(int, int, Label, Label[]);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
MoveMethod;true;clojure.asm.MethodAdapter#visitLookupSwitchInsn(Label, int[], Label[]);clojure.asm.commons.InstructionAdapter#visitLookupSwitchInsn(Label, int[], Label[]);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
MoveMethod;true;clojure.asm.MethodAdapter#visitIincInsn(int, int);clojure.asm.commons.InstructionAdapter#visitIincInsn(int, int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
ExtractMethod;true;clojure.asm.ClassReader#accept(ClassVisitor, Attribute[], int);clojure.asm.ClassReader#getAttributes();c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
ExtractMethod;true;clojure.asm.ClassReader#accept(ClassVisitor, Attribute[], int);clojure.asm.ClassReader#readField(ClassVisitor, Context, int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
ExtractMethod;true;clojure.asm.ClassReader#readFrameType(Object[], int, int, char[], Label[]);clojure.asm.ClassReader#readLabel(int, Label[]);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
ExtractMethod;true;clojure.asm.ClassReader#accept(ClassVisitor, Attribute[], int);clojure.asm.ClassReader#readMethod(ClassVisitor, Context, int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
ExtractMethod;true;clojure.asm.ClassWriter#newNameType(String, String);clojure.asm.ClassWriter#newNameTypeItem(String, String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
ExtractMethod;true;clojure.asm.ClassReader#readConst(int, char[]);clojure.asm.Type#getMethodType(String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
ExtractMethod;true;clojure.asm.commons.GeneratorAdapter#box(Type);clojure.asm.commons.GeneratorAdapter#getBoxedType(Type);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
ExtractMethod;false;clojure.asm.MethodAdapter#visitIincInsn(int, int);clojure.asm.commons.InstructionAdapter#iinc(int, int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
ExtractMethod;false;clojure.asm.MethodAdapter#visitLookupSwitchInsn(Label, int[], Label[]);clojure.asm.commons.InstructionAdapter#lookupswitch(Label, int[], Label[]);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
ExtractMethod;false;clojure.asm.MethodAdapter#visitTableSwitchInsn(int, int, Label, Label[]);clojure.asm.commons.InstructionAdapter#tableswitch(int, int, Label, Label[]);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
ExtractMethod;true;clojure.asm.commons.LocalVariablesSorter#newLocal(Type);clojure.asm.commons.LocalVariablesSorter#newLocalMapping(Type);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
ExtractMethod;true;clojure.asm.commons.LocalVariablesSorter#remap(int, Type);clojure.asm.commons.LocalVariablesSorter#newLocalMapping(Type);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
ExtractMethod;true;clojure.asm.commons.SerialVersionUIDAdder#visitEnd();clojure.asm.commons.SerialVersionUIDAdder#addSVUID(long);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
InlineMethod;true;clojure.asm.MethodWriter#findSubroutine(Label, int);clojure.asm.MethodWriter#visitMaxs(int, int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.AnnotationWriter;clojure.asm.AnnotationWriter;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.AnnotationWriter#AnnotationWriter(ClassWriter, boolean, ByteVector, ByteVector, int);clojure.asm.AnnotationWriter#AnnotationWriter(ClassWriter, boolean, ByteVector, ByteVector, int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.ByteVector;clojure.asm.ByteVector;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ByteVector#putUTF8(String);clojure.asm.ByteVector#putUTF8(String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.ClassReader;clojure.asm.ClassReader;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassReader#ClassReader(byte[], int, int);clojure.asm.ClassReader#ClassReader(byte[], int, int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassReader#getSuperName();clojure.asm.ClassReader#getSuperName();c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassReader#copyPool(ClassWriter);clojure.asm.ClassReader#copyPool(ClassWriter);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassReader#ClassReader(InputStream);clojure.asm.ClassReader#ClassReader(InputStream);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassReader#ClassReader(String);clojure.asm.ClassReader#ClassReader(String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassReader#accept(ClassVisitor, Attribute[], int);clojure.asm.ClassReader#accept(ClassVisitor, Attribute[], int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassReader#readFrameType(Object[], int, int, char[], Label[]);clojure.asm.ClassReader#readFrameType(Object[], int, int, char[], Label[]);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassReader#readUTF8(int, char[]);clojure.asm.ClassReader#readUTF8(int, char[]);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassReader#readUTF(int, int, char[]);clojure.asm.ClassReader#readUTF(int, int, char[]);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassReader#readConst(int, char[]);clojure.asm.ClassReader#readConst(int, char[]);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.ClassWriter;clojure.asm.ClassWriter;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassWriter#ClassWriter(int);clojure.asm.ClassWriter#ClassWriter(int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassWriter#visit(int, int, String, String, String, String[]);clojure.asm.ClassWriter#visit(int, int, String, String, String, String[]);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassWriter#visitAnnotation(String, boolean);clojure.asm.ClassWriter#visitAnnotation(String, boolean);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassWriter#toByteArray();clojure.asm.ClassWriter#toByteArray();c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassWriter#newConstItem(Object);clojure.asm.ClassWriter#newConstItem(Object);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassWriter#newNameType(String, String);clojure.asm.ClassWriter#newNameType(String, String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassWriter#getCommonSuperClass(String, String);clojure.asm.ClassWriter#getCommonSuperClass(String, String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassWriter#get(Item);clojure.asm.ClassWriter#get(Item);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.ClassWriter#put(Item);clojure.asm.ClassWriter#put(Item);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.FieldWriter;clojure.asm.FieldWriter;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.FieldWriter#FieldWriter(ClassWriter, int, String, String, String, Object);clojure.asm.FieldWriter#FieldWriter(ClassWriter, int, String, String, String, Object);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.FieldWriter#visitAnnotation(String, boolean);clojure.asm.FieldWriter#visitAnnotation(String, boolean);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.FieldWriter#getSize();clojure.asm.FieldWriter#getSize();c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.FieldWriter#put(ByteVector);clojure.asm.FieldWriter#put(ByteVector);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.Frame;clojure.asm.Frame;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Frame#pop(String);clojure.asm.Frame#pop(String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Frame#execute(int, int, ClassWriter, Item);clojure.asm.Frame#execute(int, int, ClassWriter, Item);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Frame#merge(ClassWriter, Frame, int);clojure.asm.Frame#merge(ClassWriter, Frame, int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.Handler;clojure.asm.Handler;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.Item;clojure.asm.Item;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Item#set(int, String, String, String);clojure.asm.Item#set(int, String, String, String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Item#isEqualTo(Item);clojure.asm.Item#isEqualTo(Item);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.Label;clojure.asm.Label;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Label#put(MethodWriter, ByteVector, int, boolean);clojure.asm.Label#put(MethodWriter, ByteVector, int, boolean);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Label#getFirst();clojure.asm.Label#getFirst();c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.MethodWriter;clojure.asm.MethodWriter;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.MethodWriter#MethodWriter(ClassWriter, int, String, String, String, String[], boolean, boolean);clojure.asm.MethodWriter#MethodWriter(ClassWriter, int, String, String, String, String[], boolean, boolean);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.MethodWriter#visitAnnotationDefault();clojure.asm.MethodWriter#visitAnnotationDefault();c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.MethodWriter#visitAnnotation(String, boolean);clojure.asm.MethodWriter#visitAnnotation(String, boolean);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.MethodWriter#visitParameterAnnotation(int, String, boolean);clojure.asm.MethodWriter#visitParameterAnnotation(int, String, boolean);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.MethodWriter#visitFrame(int, int, Object[], int, Object[]);clojure.asm.MethodWriter#visitFrame(int, int, Object[], int, Object[]);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.MethodWriter#visitTypeInsn(int, String);clojure.asm.MethodWriter#visitTypeInsn(int, String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.MethodWriter#visitMethodInsn(int, String, String, String);clojure.asm.MethodWriter#visitMethodInsn(int, String, String, String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.MethodWriter#visitJumpInsn(int, Label);clojure.asm.MethodWriter#visitJumpInsn(int, Label);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.MethodWriter#visitTableSwitchInsn(int, int, Label, Label[]);clojure.asm.MethodWriter#visitTableSwitchInsn(int, int, Label, Label[]);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.MethodWriter#visitLookupSwitchInsn(Label, int[], Label[]);clojure.asm.MethodWriter#visitLookupSwitchInsn(Label, int[], Label[]);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.MethodWriter#visitMaxs(int, int);clojure.asm.MethodWriter#visitMaxs(int, int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.MethodWriter#visitFrame(Frame);clojure.asm.MethodWriter#visitFrame(Frame);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.MethodWriter#startFrame(int, int, int);clojure.asm.MethodWriter#startFrame(int, int, int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.MethodWriter#getSize();clojure.asm.MethodWriter#getSize();c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.MethodWriter#put(ByteVector);clojure.asm.MethodWriter#put(ByteVector);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.MethodWriter#resizeInstructions();clojure.asm.MethodWriter#resizeInstructions();c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.Opcodes;clojure.asm.Opcodes;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.Type;clojure.asm.Type;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Type#getObjectType(String);clojure.asm.Type#getObjectType(String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Type#getArgumentTypes(String);clojure.asm.Type#getArgumentTypes(String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Type#getArgumentTypes(Method);clojure.asm.Type#getArgumentTypes(Method);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Type#getType(char[], int);clojure.asm.Type#getType(char[], int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Type#getClassName();clojure.asm.Type#getClassName();c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Type#getInternalName();clojure.asm.Type#getInternalName();c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Type#getDescriptor(StringBuffer);clojure.asm.Type#getDescriptor(StringBuffer);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Type#getConstructorDescriptor(Constructor);clojure.asm.Type#getConstructorDescriptor(Constructor);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Type#getMethodDescriptor(Method);clojure.asm.Type#getMethodDescriptor(Method);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Type#getDescriptor(StringBuffer, Class);clojure.asm.Type#getDescriptor(StringBuffer, Class);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Type#getSize();clojure.asm.Type#getSize();c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Type#getOpcode(int);clojure.asm.Type#getOpcode(int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Type#equals(Object);clojure.asm.Type#equals(Object);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.Type#hashCode();clojure.asm.Type#hashCode();c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.commons.AdviceAdapter;clojure.asm.commons.AdviceAdapter;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.AdviceAdapter#visitCode();clojure.asm.commons.AdviceAdapter#visitCode();c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.AdviceAdapter#visitLabel(Label);clojure.asm.commons.AdviceAdapter#visitLabel(Label);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.AdviceAdapter#visitInsn(int);clojure.asm.commons.AdviceAdapter#visitInsn(int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.AdviceAdapter#visitTypeInsn(int, String);clojure.asm.commons.AdviceAdapter#visitTypeInsn(int, String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.AdviceAdapter#addBranch(Label);clojure.asm.commons.AdviceAdapter#addBranch(Label);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.commons.AnalyzerAdapter;clojure.asm.commons.AnalyzerAdapter;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.AnalyzerAdapter#AnalyzerAdapter(String, int, String, String, MethodVisitor);clojure.asm.commons.AnalyzerAdapter#AnalyzerAdapter(String, int, String, String, MethodVisitor);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.AnalyzerAdapter#visitFrame(int, int, Object[], int, Object[]);clojure.asm.commons.AnalyzerAdapter#visitFrame(int, int, Object[], int, Object[]);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.AnalyzerAdapter#visitTypeInsn(int, String);clojure.asm.commons.AnalyzerAdapter#visitTypeInsn(int, String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.AnalyzerAdapter#visitMethodInsn(int, String, String, String);clojure.asm.commons.AnalyzerAdapter#visitMethodInsn(int, String, String, String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.AnalyzerAdapter#visitLabel(Label);clojure.asm.commons.AnalyzerAdapter#visitLabel(Label);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.AnalyzerAdapter#visitLdcInsn(Object);clojure.asm.commons.AnalyzerAdapter#visitLdcInsn(Object);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.AnalyzerAdapter#pushDesc(String);clojure.asm.commons.AnalyzerAdapter#pushDesc(String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.AnalyzerAdapter#execute(int, int, String);clojure.asm.commons.AnalyzerAdapter#execute(int, int, String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.commons.CodeSizeEvaluator;clojure.asm.commons.CodeSizeEvaluator;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.CodeSizeEvaluator#CodeSizeEvaluator(MethodVisitor);clojure.asm.commons.CodeSizeEvaluator#CodeSizeEvaluator(MethodVisitor);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.CodeSizeEvaluator#visitVarInsn(int, int);clojure.asm.commons.CodeSizeEvaluator#visitVarInsn(int, int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.CodeSizeEvaluator#visitTypeInsn(int, String);clojure.asm.commons.CodeSizeEvaluator#visitTypeInsn(int, String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.commons.GeneratorAdapter;clojure.asm.commons.GeneratorAdapter;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.GeneratorAdapter#GeneratorAdapter(MethodVisitor, int, String, String);clojure.asm.commons.GeneratorAdapter#GeneratorAdapter(MethodVisitor, int, String, String);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.GeneratorAdapter#GeneratorAdapter(int, Method, MethodVisitor);clojure.asm.commons.GeneratorAdapter#GeneratorAdapter(int, Method, MethodVisitor);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.GeneratorAdapter#push(Type);clojure.asm.commons.GeneratorAdapter#push(Type);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.GeneratorAdapter#getLocalType(int);clojure.asm.commons.GeneratorAdapter#getLocalType(int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.GeneratorAdapter#box(Type);clojure.asm.commons.GeneratorAdapter#box(Type);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.GeneratorAdapter#ifCmp(Type, int, Label);clojure.asm.commons.GeneratorAdapter#ifCmp(Type, int, Label);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.GeneratorAdapter#typeInsn(int, Type);clojure.asm.commons.GeneratorAdapter#typeInsn(int, Type);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.GeneratorAdapter#catchException(Label, Label, Type);clojure.asm.commons.GeneratorAdapter#catchException(Label, Label, Type);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.commons.LocalVariablesSorter;clojure.asm.commons.LocalVariablesSorter;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.LocalVariablesSorter#LocalVariablesSorter(int, String, MethodVisitor);clojure.asm.commons.LocalVariablesSorter#LocalVariablesSorter(int, String, MethodVisitor);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.LocalVariablesSorter#visitVarInsn(int, int);clojure.asm.commons.LocalVariablesSorter#visitVarInsn(int, int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.LocalVariablesSorter#visitLocalVariable(String, String, String, Label, Label, int);clojure.asm.commons.LocalVariablesSorter#visitLocalVariable(String, String, String, Label, Label, int);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.LocalVariablesSorter#visitFrame(int, int, Object[], int, Object[]);clojure.asm.commons.LocalVariablesSorter#visitFrame(int, int, Object[], int, Object[]);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.LocalVariablesSorter#newLocal(Type);clojure.asm.commons.LocalVariablesSorter#newLocal(Type);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.LocalVariablesSorter#remap(int, Type);clojure.asm.commons.LocalVariablesSorter#remap(int, Type);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.commons.Method;clojure.asm.commons.Method;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.Method#map(String, boolean);clojure.asm.commons.Method#map(String, boolean);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.commons.SerialVersionUIDAdder;clojure.asm.commons.SerialVersionUIDAdder;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.SerialVersionUIDAdder#SerialVersionUIDAdder(ClassVisitor);clojure.asm.commons.SerialVersionUIDAdder#SerialVersionUIDAdder(ClassVisitor);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.SerialVersionUIDAdder#visitMethod(int, String, String, String, String[]);clojure.asm.commons.SerialVersionUIDAdder#visitMethod(int, String, String, String, String[]);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.SerialVersionUIDAdder#visitEnd();clojure.asm.commons.SerialVersionUIDAdder#visitEnd();c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.SerialVersionUIDAdder#computeSVUID();clojure.asm.commons.SerialVersionUIDAdder#computeSVUID();c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.SerialVersionUIDAdder#computeSHAdigest(byte[]);clojure.asm.commons.SerialVersionUIDAdder#computeSHAdigest(byte[]);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.commons.SerialVersionUIDAdder.Item;clojure.asm.commons.SerialVersionUIDAdder.Item;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameType;true;clojure.asm.commons.StaticInitMerger;clojure.asm.commons.StaticInitMerger;c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
SameMethod;true;clojure.asm.commons.StaticInitMerger#StaticInitMerger(String, ClassVisitor);clojure.asm.commons.StaticInitMerger#StaticInitMerger(String, ClassVisitor);c8d3ef3929e8049a84957002bc7e2071844bfb53;Fri Oct 25 12:57:24 2013 -0500
MoveAndRename Class;true;clojure.api.API;clojure.java.api.Clojure;43873e477dff33e5c53323bf8ceddc014b870a40;Thu Dec 5 10:50:42 2013 -0600
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;ef2e762e21a817305314ed10bc33505bed6874a5;Sun Nov 24 14:07:30 2013 -0600
SameType;true;clojure.lang.APersistentVector.SubVector;clojure.lang.APersistentVector.SubVector;ef2e762e21a817305314ed10bc33505bed6874a5;Sun Nov 24 14:07:30 2013 -0600
SameMethod;true;clojure.lang.APersistentVector.SubVector#iterator();clojure.lang.APersistentVector.SubVector#iterator();ef2e762e21a817305314ed10bc33505bed6874a5;Sun Nov 24 14:07:30 2013 -0600
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;ef2e762e21a817305314ed10bc33505bed6874a5;Sun Nov 24 14:07:30 2013 -0600
ExtractMethod;true;clojure.lang.APersistentVector#hasheq();clojure.lang.Murmur3#hashOrdered(Iterable);dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
ExtractMethod;true;clojure.lang.ASeq#hasheq();clojure.lang.Murmur3#hashOrdered(Iterable);dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
ExtractMethod;true;clojure.lang.PersistentQueue#hasheq();clojure.lang.Murmur3#hashOrdered(Iterable);dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
ExtractMethod;true;clojure.lang.APersistentSet#hasheq();clojure.lang.Murmur3#hashUnordered(Iterable);dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameMethod;true;clojure.lang.APersistentMap#hasheq();clojure.lang.APersistentMap#hasheq();dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameMethod;true;clojure.lang.APersistentSet#hasheq();clojure.lang.APersistentSet#hasheq();dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameMethod;true;clojure.lang.APersistentVector#hasheq();clojure.lang.APersistentVector#hasheq();dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameMethod;true;clojure.lang.ASeq#hasheq();clojure.lang.ASeq#hasheq();dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameType;true;clojure.lang.BigInt;clojure.lang.BigInt;dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameMethod;true;clojure.lang.LazySeq#hasheq();clojure.lang.LazySeq#hasheq();dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameMethod;true;clojure.lang.Numbers#hasheq(Number);clojure.lang.Numbers#hasheq(Number);dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameMethod;true;clojure.lang.PersistentQueue#hasheq();clojure.lang.PersistentQueue#hasheq();dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameMethod;true;clojure.lang.Symbol#Symbol(String, String);clojure.lang.Symbol#Symbol(String, String);dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameMethod;true;clojure.lang.Symbol#Symbol(IPersistentMap, String, String);clojure.lang.Symbol#Symbol(IPersistentMap, String, String);dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameType;true;clojure.lang.Util;clojure.lang.Util;dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameMethod;true;clojure.lang.Util#hasheq(Object);clojure.lang.Util#hasheq(Object);dff9600387b962f16fc78e6477e10e34651fd366;Tue Jan 28 23:58:25 2014 -0500
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;96e72517615cd2ccdb4fdbbeb6ffba5ad99dbdac;Wed Jan 29 14:31:32 2014 -0500
SameMethod;true;clojure.lang.Numbers#hasheq(Number);clojure.lang.Numbers#hasheq(Number);96e72517615cd2ccdb4fdbbeb6ffba5ad99dbdac;Wed Jan 29 14:31:32 2014 -0500
ExtractMethod;true;clojure.lang.Murmur3#hashOrdered(Iterable);clojure.lang.Murmur3#fixCollHash(int, int);17b18350bdd28154241bc7ae80f423a5976c6de2;Thu Jan 30 10:43:44 2014 -0500
ExtractMethod;true;clojure.lang.Murmur3#hashUnordered(Iterable);clojure.lang.Murmur3#fixCollHash(int, int);17b18350bdd28154241bc7ae80f423a5976c6de2;Thu Jan 30 10:43:44 2014 -0500
SameType;true;clojure.lang.Murmur3;clojure.lang.Murmur3;17b18350bdd28154241bc7ae80f423a5976c6de2;Thu Jan 30 10:43:44 2014 -0500
SameMethod;true;clojure.lang.Murmur3#hashOrdered(Iterable);clojure.lang.Murmur3#hashOrdered(Iterable);17b18350bdd28154241bc7ae80f423a5976c6de2;Thu Jan 30 10:43:44 2014 -0500
SameMethod;true;clojure.lang.Murmur3#hashUnordered(Iterable);clojure.lang.Murmur3#hashUnordered(Iterable);17b18350bdd28154241bc7ae80f423a5976c6de2;Thu Jan 30 10:43:44 2014 -0500
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;c6467b461bc19fa71c914ee866ed1a1a2d73d6fc;Sun Apr 14 22:45:56 2013 -0400
SameMethod;true;clojure.lang.ArraySeq#ArraySeq(Object, int);clojure.lang.ArraySeq#ArraySeq(Object, int);c6467b461bc19fa71c914ee866ed1a1a2d73d6fc;Sun Apr 14 22:45:56 2013 -0400
SameMethod;true;clojure.lang.ArraySeq#ArraySeq(IPersistentMap, Object, int);clojure.lang.ArraySeq#ArraySeq(IPersistentMap, Object, int);c6467b461bc19fa71c914ee866ed1a1a2d73d6fc;Sun Apr 14 22:45:56 2013 -0400
SameMethod;true;clojure.lang.ArraySeq#first();clojure.lang.ArraySeq#first();c6467b461bc19fa71c914ee866ed1a1a2d73d6fc;Sun Apr 14 22:45:56 2013 -0400
SameMethod;true;clojure.lang.ArraySeq#reduce(IFn);clojure.lang.ArraySeq#reduce(IFn);c6467b461bc19fa71c914ee866ed1a1a2d73d6fc;Sun Apr 14 22:45:56 2013 -0400
SameMethod;true;clojure.lang.ArraySeq#reduce(IFn, Object);clojure.lang.ArraySeq#reduce(IFn, Object);c6467b461bc19fa71c914ee866ed1a1a2d73d6fc;Sun Apr 14 22:45:56 2013 -0400
SameMethod;true;clojure.lang.ArraySeq#indexOf(Object);clojure.lang.ArraySeq#indexOf(Object);c6467b461bc19fa71c914ee866ed1a1a2d73d6fc;Sun Apr 14 22:45:56 2013 -0400
SameMethod;true;clojure.lang.ArraySeq#lastIndexOf(Object);clojure.lang.ArraySeq#lastIndexOf(Object);c6467b461bc19fa71c914ee866ed1a1a2d73d6fc;Sun Apr 14 22:45:56 2013 -0400
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;d00efc0d0ac94d1b20a0ffaf79c5ed0c1f6a430a;Mon Oct 7 21:16:35 2013 -0500
SameMethod;true;clojure.lang.ArraySeq#createFromObject(Object);clojure.lang.ArraySeq#createFromObject(Object);d00efc0d0ac94d1b20a0ffaf79c5ed0c1f6a430a;Mon Oct 7 21:16:35 2013 -0500
SameMethod;true;clojure.lang.ArraySeq#ArraySeq(Object, int);clojure.lang.ArraySeq#ArraySeq(Object, int);d00efc0d0ac94d1b20a0ffaf79c5ed0c1f6a430a;Mon Oct 7 21:16:35 2013 -0500
SameMethod;true;clojure.lang.ArraySeq#ArraySeq(IPersistentMap, Object, int);clojure.lang.ArraySeq#ArraySeq(IPersistentMap, Object, int);d00efc0d0ac94d1b20a0ffaf79c5ed0c1f6a430a;Mon Oct 7 21:16:35 2013 -0500
SameMethod;true;clojure.lang.ArraySeq#first();clojure.lang.ArraySeq#first();d00efc0d0ac94d1b20a0ffaf79c5ed0c1f6a430a;Mon Oct 7 21:16:35 2013 -0500
SameMethod;true;clojure.lang.ArraySeq#next();clojure.lang.ArraySeq#next();d00efc0d0ac94d1b20a0ffaf79c5ed0c1f6a430a;Mon Oct 7 21:16:35 2013 -0500
SameMethod;true;clojure.lang.ArraySeq#count();clojure.lang.ArraySeq#count();d00efc0d0ac94d1b20a0ffaf79c5ed0c1f6a430a;Mon Oct 7 21:16:35 2013 -0500
SameMethod;true;clojure.lang.ArraySeq#reduce(IFn);clojure.lang.ArraySeq#reduce(IFn);d00efc0d0ac94d1b20a0ffaf79c5ed0c1f6a430a;Mon Oct 7 21:16:35 2013 -0500
SameMethod;true;clojure.lang.ArraySeq#reduce(IFn, Object);clojure.lang.ArraySeq#reduce(IFn, Object);d00efc0d0ac94d1b20a0ffaf79c5ed0c1f6a430a;Mon Oct 7 21:16:35 2013 -0500
SameMethod;true;clojure.lang.ArraySeq#indexOf(Object);clojure.lang.ArraySeq#indexOf(Object);d00efc0d0ac94d1b20a0ffaf79c5ed0c1f6a430a;Mon Oct 7 21:16:35 2013 -0500
SameMethod;true;clojure.lang.ArraySeq#lastIndexOf(Object);clojure.lang.ArraySeq#lastIndexOf(Object);d00efc0d0ac94d1b20a0ffaf79c5ed0c1f6a430a;Mon Oct 7 21:16:35 2013 -0500
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;d00efc0d0ac94d1b20a0ffaf79c5ed0c1f6a430a;Mon Oct 7 21:16:35 2013 -0500
SameMethod;true;clojure.lang.PersistentList$1#doInvoke(Object);clojure.lang.PersistentList$1#doInvoke(Object);d00efc0d0ac94d1b20a0ffaf79c5ed0c1f6a430a;Mon Oct 7 21:16:35 2013 -0500
SameType;true;clojure.lang.Murmur3;clojure.lang.Murmur3;99012bdaf4970c23ddb5097d37ecf28af17c55bd;Tue Feb 4 15:25:46 2014 -0600
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;5cc167ad735de5d115e0f4b7158332ad4ef5726c;Sun Dec 22 12:02:55 2013 +0000
SameType;true;clojure.lang.PersistentHashMap.ArrayNode;clojure.lang.PersistentHashMap.ArrayNode;5cc167ad735de5d115e0f4b7158332ad4ef5726c;Sun Dec 22 12:02:55 2013 +0000
SameMethod;true;clojure.lang.PersistentHashMap.ArrayNode#foldTasks(List, IFn, IFn, IFn, IFn);clojure.lang.PersistentHashMap.ArrayNode#foldTasks(List, IFn, IFn, IFn, IFn);5cc167ad735de5d115e0f4b7158332ad4ef5726c;Sun Dec 22 12:02:55 2013 +0000
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;1833145f4d885da8bbebc1acb5fb9c943c58bfed;Tue Feb 4 17:12:14 2014 -0600
SameMethod;true;clojure.lang.LazySeq#hasheq();clojure.lang.LazySeq#hasheq();1833145f4d885da8bbebc1acb5fb9c943c58bfed;Tue Feb 4 17:12:14 2014 -0600
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;1833145f4d885da8bbebc1acb5fb9c943c58bfed;Tue Feb 4 17:12:14 2014 -0600
SameType;true;clojure.lang.PersistentList.EmptyList;clojure.lang.PersistentList.EmptyList;1833145f4d885da8bbebc1acb5fb9c943c58bfed;Tue Feb 4 17:12:14 2014 -0600
RenameMethod;false;clojure.lang.Murmur3#fixCollHash(int, int);clojure.lang.Murmur3#mixCollHash(int, int);6aaaa0a88da15fb814e12a8a4e9af864edfafd6f;Tue Feb 4 20:18:29 2014 -0600
SameType;true;clojure.lang.Murmur3;clojure.lang.Murmur3;6aaaa0a88da15fb814e12a8a4e9af864edfafd6f;Tue Feb 4 20:18:29 2014 -0600
SameMethod;true;clojure.lang.Murmur3#hashOrdered(Iterable);clojure.lang.Murmur3#hashOrdered(Iterable);6aaaa0a88da15fb814e12a8a4e9af864edfafd6f;Tue Feb 4 20:18:29 2014 -0600
SameMethod;true;clojure.lang.Murmur3#hashUnordered(Iterable);clojure.lang.Murmur3#hashUnordered(Iterable);6aaaa0a88da15fb814e12a8a4e9af864edfafd6f;Tue Feb 4 20:18:29 2014 -0600
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;22b0c0acf6227ab74a37d32644b44b574ca8de11;Fri Feb 7 13:29:07 2014 -0600
SameMethod;true;clojure.lang.APersistentMap#mapHasheq(IPersistentMap);clojure.lang.APersistentMap#mapHasheq(IPersistentMap);22b0c0acf6227ab74a37d32644b44b574ca8de11;Fri Feb 7 13:29:07 2014 -0600
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e8fc421d9e63be6c48797b4a3275e4551651b467;Wed Feb 12 09:47:16 2014 -0600
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;e8fc421d9e63be6c48797b4a3275e4551651b467;Wed Feb 12 09:47:16 2014 -0600
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, int, Expr, String, Symbol);clojure.lang.Compiler.InstanceFieldExpr#InstanceFieldExpr(int, int, Expr, String, Symbol);e8fc421d9e63be6c48797b4a3275e4551651b467;Wed Feb 12 09:47:16 2014 -0600
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;e8fc421d9e63be6c48797b4a3275e4551651b467;Wed Feb 12 09:47:16 2014 -0600
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, int, Symbol, Expr, String, IPersistentVector);clojure.lang.Compiler.InstanceMethodExpr#InstanceMethodExpr(String, int, int, Symbol, Expr, String, IPersistentVector);e8fc421d9e63be6c48797b4a3275e4551651b467;Wed Feb 12 09:47:16 2014 -0600
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;e8fc421d9e63be6c48797b4a3275e4551651b467;Wed Feb 12 09:47:16 2014 -0600
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, int, Symbol, Class, String, IPersistentVector);clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, int, Symbol, Class, String, IPersistentVector);e8fc421d9e63be6c48797b4a3275e4551651b467;Wed Feb 12 09:47:16 2014 -0600
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;adf22e6d93b90073918c2e5d9ec13ed15916c6f7;Sun Feb 23 11:24:09 2014 -0500
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;adf22e6d93b90073918c2e5d9ec13ed15916c6f7;Sun Feb 23 11:24:09 2014 -0500
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;adf22e6d93b90073918c2e5d9ec13ed15916c6f7;Sun Feb 23 11:24:09 2014 -0500
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);adf22e6d93b90073918c2e5d9ec13ed15916c6f7;Sun Feb 23 11:24:09 2014 -0500
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;3b1a1ddbb78a9e7deaf0213a248c96dc0cc22624;Fri Feb 14 21:11:58 2014 +0100
SameType;true;clojure.lang.APersistentVector.SubVector;clojure.lang.APersistentVector.SubVector;3b1a1ddbb78a9e7deaf0213a248c96dc0cc22624;Fri Feb 14 21:11:58 2014 +0100
ExtractMethod;true;clojure.lang.Reflector#invokeNoArgInstanceMember(Object, String);clojure.lang.Reflector#invokeNoArgInstanceMember(Object, String, boolean);5fda6cb262d1807566ecadd3af9aaafb58ee5544;Thu Feb 27 09:23:20 2014 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;5fda6cb262d1807566ecadd3af9aaafb58ee5544;Thu Feb 27 09:23:20 2014 -0500
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;5fda6cb262d1807566ecadd3af9aaafb58ee5544;Thu Feb 27 09:23:20 2014 -0500
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;5fda6cb262d1807566ecadd3af9aaafb58ee5544;Thu Feb 27 09:23:20 2014 -0500
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);5fda6cb262d1807566ecadd3af9aaafb58ee5544;Thu Feb 27 09:23:20 2014 -0500
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;5fda6cb262d1807566ecadd3af9aaafb58ee5544;Thu Feb 27 09:23:20 2014 -0500
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#eval();clojure.lang.Compiler.InstanceFieldExpr#eval();5fda6cb262d1807566ecadd3af9aaafb58ee5544;Thu Feb 27 09:23:20 2014 -0500
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceFieldExpr#emit(C, ObjExpr, GeneratorAdapter);5fda6cb262d1807566ecadd3af9aaafb58ee5544;Thu Feb 27 09:23:20 2014 -0500
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;5fda6cb262d1807566ecadd3af9aaafb58ee5544;Thu Feb 27 09:23:20 2014 -0500
SameMethod;true;clojure.lang.Reflector#invokeNoArgInstanceMember(Object, String);clojure.lang.Reflector#invokeNoArgInstanceMember(Object, String);5fda6cb262d1807566ecadd3af9aaafb58ee5544;Thu Feb 27 09:23:20 2014 -0500
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;63ff68d3baffe76d5157e07bbfd310fdb5ad3628;Thu Feb 20 21:21:38 2014 -0600
SameMethod;true;clojure.lang.Keyword#Keyword(Symbol);clojure.lang.Keyword#Keyword(Symbol);63ff68d3baffe76d5157e07bbfd310fdb5ad3628;Thu Feb 20 21:21:38 2014 -0600
SameMethod;true;clojure.lang.Keyword#hashCode();clojure.lang.Keyword#hashCode();63ff68d3baffe76d5157e07bbfd310fdb5ad3628;Thu Feb 20 21:21:38 2014 -0600
SameMethod;true;clojure.lang.Keyword#hasheq();clojure.lang.Keyword#hasheq();63ff68d3baffe76d5157e07bbfd310fdb5ad3628;Thu Feb 20 21:21:38 2014 -0600
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;63ff68d3baffe76d5157e07bbfd310fdb5ad3628;Thu Feb 20 21:21:38 2014 -0600
SameMethod;true;clojure.lang.Symbol#Symbol(String, String);clojure.lang.Symbol#Symbol(String, String);63ff68d3baffe76d5157e07bbfd310fdb5ad3628;Thu Feb 20 21:21:38 2014 -0600
SameMethod;true;clojure.lang.Symbol#hasheq();clojure.lang.Symbol#hasheq();63ff68d3baffe76d5157e07bbfd310fdb5ad3628;Thu Feb 20 21:21:38 2014 -0600
SameMethod;true;clojure.lang.Symbol#Symbol(IPersistentMap, String, String);clojure.lang.Symbol#Symbol(IPersistentMap, String, String);63ff68d3baffe76d5157e07bbfd310fdb5ad3628;Thu Feb 20 21:21:38 2014 -0600
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;34258286c5bc3cc72ca212fceb34e6d61359cb1b;Thu Mar 6 07:57:05 2014 -0500
SameType;true;clojure.lang.Compiler.ConstantExpr;clojure.lang.Compiler.ConstantExpr;34258286c5bc3cc72ca212fceb34e6d61359cb1b;Thu Mar 6 07:57:05 2014 -0500
SameMethod;true;clojure.lang.Compiler.ConstantExpr#getJavaClass();clojure.lang.Compiler.ConstantExpr#getJavaClass();34258286c5bc3cc72ca212fceb34e6d61359cb1b;Thu Mar 6 07:57:05 2014 -0500
SameType;true;clojure.lang.Util;clojure.lang.Util;50c9095b3e72b2d7a9a9f93838b147c3d99c6dd0;Wed Mar 19 15:42:58 2014 -0400
SameMethod;true;clojure.lang.Util#hasheq(Object);clojure.lang.Util#hasheq(Object);50c9095b3e72b2d7a9a9f93838b147c3d99c6dd0;Wed Mar 19 15:42:58 2014 -0400
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;f758350f9b66750483cb712f7403652261e7f0e1;Thu Mar 20 13:03:37 2014 -0400
SameMethod;true;clojure.lang.Symbol#Symbol(String, String);clojure.lang.Symbol#Symbol(String, String);f758350f9b66750483cb712f7403652261e7f0e1;Thu Mar 20 13:03:37 2014 -0400
SameMethod;true;clojure.lang.Symbol#Symbol(IPersistentMap, String, String);clojure.lang.Symbol#Symbol(IPersistentMap, String, String);f758350f9b66750483cb712f7403652261e7f0e1;Thu Mar 20 13:03:37 2014 -0400
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;48ce2216054e4dd7e9ec3b90cfca85ec73e0d377;Fri Mar 21 09:01:45 2014 -0500
SameMethod;true;clojure.lang.PersistentHashMap#kvreduce(IFn, Object);clojure.lang.PersistentHashMap#kvreduce(IFn, Object);48ce2216054e4dd7e9ec3b90cfca85ec73e0d377;Fri Mar 21 09:01:45 2014 -0500
SameType;true;clojure.lang.PersistentHashMap.ArrayNode;clojure.lang.PersistentHashMap.ArrayNode;48ce2216054e4dd7e9ec3b90cfca85ec73e0d377;Fri Mar 21 09:01:45 2014 -0500
SameMethod;true;clojure.lang.PersistentHashMap.ArrayNode#kvreduce(IFn, Object);clojure.lang.PersistentHashMap.ArrayNode#kvreduce(IFn, Object);48ce2216054e4dd7e9ec3b90cfca85ec73e0d377;Fri Mar 21 09:01:45 2014 -0500
SameType;true;clojure.lang.PersistentHashMap.NodeSeq;clojure.lang.PersistentHashMap.NodeSeq;48ce2216054e4dd7e9ec3b90cfca85ec73e0d377;Fri Mar 21 09:01:45 2014 -0500
SameMethod;true;clojure.lang.PersistentHashMap.NodeSeq#kvreduce(Object[], IFn, Object);clojure.lang.PersistentHashMap.NodeSeq#kvreduce(Object[], IFn, Object);48ce2216054e4dd7e9ec3b90cfca85ec73e0d377;Fri Mar 21 09:01:45 2014 -0500
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;33b7810e6acbcafd1c5f82d24227790c62da0cda;Sun Mar 23 10:51:04 2014 -0700
SameMethod;true;clojure.lang.Symbol#Symbol(String, String);clojure.lang.Symbol#Symbol(String, String);33b7810e6acbcafd1c5f82d24227790c62da0cda;Sun Mar 23 10:51:04 2014 -0700
SameMethod;true;clojure.lang.Symbol#hashCode();clojure.lang.Symbol#hashCode();33b7810e6acbcafd1c5f82d24227790c62da0cda;Sun Mar 23 10:51:04 2014 -0700
SameMethod;true;clojure.lang.Symbol#hasheq();clojure.lang.Symbol#hasheq();33b7810e6acbcafd1c5f82d24227790c62da0cda;Sun Mar 23 10:51:04 2014 -0700
SameMethod;true;clojure.lang.Symbol#Symbol(IPersistentMap, String, String);clojure.lang.Symbol#Symbol(IPersistentMap, String, String);33b7810e6acbcafd1c5f82d24227790c62da0cda;Sun Mar 23 10:51:04 2014 -0700
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;9c5f826a4402c0ecdeb5e2f755f1fdf470ba0989;Sun Mar 23 11:23:04 2014 -0700
SameMethod;true;clojure.lang.Symbol#hasheq();clojure.lang.Symbol#hasheq();9c5f826a4402c0ecdeb5e2f755f1fdf470ba0989;Sun Mar 23 11:23:04 2014 -0700
SameType;true;clojure.lang.RT;clojure.lang.RT;e0f291c4558bd32242f591dac96304430059ad27;Mon Mar 24 09:46:20 2014 -0400
SameMethod;true;clojure.lang.RT#seqFrom(Object);clojure.lang.RT#seqFrom(Object);e0f291c4558bd32242f591dac96304430059ad27;Mon Mar 24 09:46:20 2014 -0400
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;c9e70649d2652baf13b498c4c3ebb070118c4573;Thu Jul 31 21:05:04 2014 -0400
SameMethod;true;clojure.lang.Keyword#intern(Symbol);clojure.lang.Keyword#intern(Symbol);c9e70649d2652baf13b498c4c3ebb070118c4573;Thu Jul 31 21:05:04 2014 -0400
SameMethod;true;clojure.lang.Keyword#toString();clojure.lang.Keyword#toString();c9e70649d2652baf13b498c4c3ebb070118c4573;Thu Jul 31 21:05:04 2014 -0400
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;c9e70649d2652baf13b498c4c3ebb070118c4573;Thu Jul 31 21:05:04 2014 -0400
SameMethod;true;clojure.lang.Symbol#toString();clojure.lang.Symbol#toString();c9e70649d2652baf13b498c4c3ebb070118c4573;Thu Jul 31 21:05:04 2014 -0400
SameMethod;true;clojure.lang.Symbol#intern(String, String);clojure.lang.Symbol#intern(String, String);c9e70649d2652baf13b498c4c3ebb070118c4573;Thu Jul 31 21:05:04 2014 -0400
SameMethod;true;clojure.lang.Symbol#intern(String);clojure.lang.Symbol#intern(String);c9e70649d2652baf13b498c4c3ebb070118c4573;Thu Jul 31 21:05:04 2014 -0400
SameMethod;true;clojure.lang.Symbol#equals(Object);clojure.lang.Symbol#equals(Object);c9e70649d2652baf13b498c4c3ebb070118c4573;Thu Jul 31 21:05:04 2014 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;1280c5c2d2b58929f0a3c8e34ee6084533982793;Wed Aug 6 10:51:39 2014 -0400
SameType;true;clojure.lang.Reduced;clojure.lang.Reduced;1280c5c2d2b58929f0a3c8e34ee6084533982793;Wed Aug 6 10:51:39 2014 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;e7215ce82215bda33f4f0887cb88570776d558a0;Wed Aug 6 22:24:24 2014 -0500
SameMethod;true;clojure.lang.RT#iter(Object);clojure.lang.RT#iter(Object);e7215ce82215bda33f4f0887cb88570776d558a0;Wed Aug 6 22:24:24 2014 -0500
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameMethod;true;clojure.lang.APersistentSet#iterator();clojure.lang.APersistentSet#iterator();43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameMethod;true;clojure.lang.LazySeq#iterator();clojure.lang.LazySeq#iterator();43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameType;true;clojure.lang.LazyTransformer;clojure.lang.LazyTransformer;43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameType;true;clojure.lang.LazyTransformer.Stepper;clojure.lang.LazyTransformer.Stepper;43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameMethod;true;clojure.lang.LazyTransformer.Stepper#step(LazyTransformer);clojure.lang.LazyTransformer.Stepper#step(LazyTransformer);43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameType;true;clojure.lang.LazyTransformer.MultiStepper;clojure.lang.LazyTransformer.MultiStepper;43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameMethod;true;clojure.lang.LazyTransformer.MultiStepper#step(LazyTransformer);clojure.lang.LazyTransformer.MultiStepper#step(LazyTransformer);43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameMethod;true;clojure.lang.LazyTransformer#iterator();clojure.lang.LazyTransformer#iterator();43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameMethod;true;clojure.lang.PersistentHashMap#iterator();clojure.lang.PersistentHashMap#iterator();43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameMethod;true;clojure.lang.PersistentQueue#iterator();clojure.lang.PersistentQueue#iterator();43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameType;true;clojure.lang.PersistentStructMap;clojure.lang.PersistentStructMap;43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameMethod;true;clojure.lang.PersistentStructMap#iterator();clojure.lang.PersistentStructMap#iterator();43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameType;true;clojure.lang.SeqIterator;clojure.lang.SeqIterator;43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameMethod;true;clojure.lang.SeqIterator#hasNext();clojure.lang.SeqIterator#hasNext();43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameMethod;true;clojure.lang.SeqIterator#next();clojure.lang.SeqIterator#next();43cc1854508d655e58e377f84836ba128971f90c;Fri Aug 8 12:04:43 2014 -0400
SameType;true;clojure.lang.LazyTransformer;clojure.lang.LazyTransformer;2157813b5d7857db3c4823f5ecd57b1e762ef79a;Mon Aug 25 11:24:14 2014 +0200
SameMethod;true;clojure.lang.LazyTransformer#equiv(Object);clojure.lang.LazyTransformer#equiv(Object);2157813b5d7857db3c4823f5ecd57b1e762ef79a;Mon Aug 25 11:24:14 2014 +0200
SameMethod;true;clojure.lang.LazyTransformer#equals(Object);clojure.lang.LazyTransformer#equals(Object);2157813b5d7857db3c4823f5ecd57b1e762ef79a;Mon Aug 25 11:24:14 2014 +0200
SameType;true;clojure.lang.Compile;clojure.lang.Compile;58ad4c7b05b4bd5741824890df7ffc8ebc899d6c;Mon Dec 2 13:58:54 2013 -0800
SameMethod;true;clojure.lang.Compile#main(String[]);clojure.lang.Compile#main(String[]);58ad4c7b05b4bd5741824890df7ffc8ebc899d6c;Mon Dec 2 13:58:54 2013 -0800
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;58ad4c7b05b4bd5741824890df7ffc8ebc899d6c;Mon Dec 2 13:58:54 2013 -0800
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameType;true;clojure.lang.PersistentArrayMap.TransientArrayMap;clojure.lang.PersistentArrayMap.TransientArrayMap;b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameMethod;true;clojure.lang.PersistentArrayMap.TransientArrayMap#TransientArrayMap(Object[]);clojure.lang.PersistentArrayMap.TransientArrayMap#TransientArrayMap(Object[]);b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameMethod;true;clojure.lang.PersistentArrayMap.TransientArrayMap#doPersistent();clojure.lang.PersistentArrayMap.TransientArrayMap#doPersistent();b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameMethod;true;clojure.lang.PersistentArrayMap.TransientArrayMap#ensureEditable();clojure.lang.PersistentArrayMap.TransientArrayMap#ensureEditable();b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameType;true;clojure.lang.PersistentHashMap.TransientHashMap;clojure.lang.PersistentHashMap.TransientHashMap;b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameMethod;true;clojure.lang.PersistentHashMap.TransientHashMap#TransientHashMap(PersistentHashMap);clojure.lang.PersistentHashMap.TransientHashMap#TransientHashMap(PersistentHashMap);b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameMethod;true;clojure.lang.PersistentHashMap.TransientHashMap#doPersistent();clojure.lang.PersistentHashMap.TransientHashMap#doPersistent();b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameMethod;true;clojure.lang.PersistentHashMap.TransientHashMap#ensureEditable();clojure.lang.PersistentHashMap.TransientHashMap#ensureEditable();b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameType;true;clojure.lang.PersistentHashMap.INode;clojure.lang.PersistentHashMap.INode;b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameType;true;clojure.lang.PersistentHashMap.ArrayNode;clojure.lang.PersistentHashMap.ArrayNode;b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode;clojure.lang.PersistentHashMap.BitmapIndexedNode;b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameType;true;clojure.lang.PersistentHashMap.HashCollisionNode;clojure.lang.PersistentHashMap.HashCollisionNode;b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameMethod;true;clojure.lang.PersistentHashMap#createNode(int, Object, Object, int, Object, Object);clojure.lang.PersistentHashMap#createNode(int, Object, Object, int, Object, Object);b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameType;true;clojure.lang.PersistentVector.Node;clojure.lang.PersistentVector.Node;b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameType;true;clojure.lang.PersistentVector.TransientVector;clojure.lang.PersistentVector.TransientVector;b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameMethod;true;clojure.lang.PersistentVector.TransientVector#ensureEditable();clojure.lang.PersistentVector.TransientVector#ensureEditable();b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameMethod;true;clojure.lang.PersistentVector.TransientVector#editableRoot(Node);clojure.lang.PersistentVector.TransientVector#editableRoot(Node);b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameMethod;true;clojure.lang.PersistentVector.TransientVector#persistent();clojure.lang.PersistentVector.TransientVector#persistent();b66463f1f0bfaf2db5dd34ce9dc86590f50ebc87;Wed Aug 20 08:55:58 2014 -0500
SameType;true;clojure.lang.MultiFn;clojure.lang.MultiFn;6d305a0959183acb75fc44f9192eed2abf33bf25;Thu May 22 14:09:37 2014 -0500
SameMethod;true;clojure.lang.MultiFn#getMethod(Object);clojure.lang.MultiFn#getMethod(Object);6d305a0959183acb75fc44f9192eed2abf33bf25;Thu May 22 14:09:37 2014 -0500
SameMethod;true;clojure.lang.MultiFn#findAndCacheBestMethod(Object);clojure.lang.MultiFn#findAndCacheBestMethod(Object);6d305a0959183acb75fc44f9192eed2abf33bf25;Thu May 22 14:09:37 2014 -0500
SameType;true;clojure.lang.PersistentHashSet;clojure.lang.PersistentHashSet;dc3f63d52037a8efcb95a1917c0d27758723bd08;Sat Mar 15 19:46:18 2014 -0500
SameMethod;true;clojure.lang.PersistentHashSet#create(Object[]);clojure.lang.PersistentHashSet#create(Object[]);dc3f63d52037a8efcb95a1917c0d27758723bd08;Sat Mar 15 19:46:18 2014 -0500
SameMethod;true;clojure.lang.PersistentHashSet#create(List);clojure.lang.PersistentHashSet#create(List);dc3f63d52037a8efcb95a1917c0d27758723bd08;Sat Mar 15 19:46:18 2014 -0500
SameMethod;true;clojure.lang.PersistentHashSet#create(ISeq);clojure.lang.PersistentHashSet#create(ISeq);dc3f63d52037a8efcb95a1917c0d27758723bd08;Sat Mar 15 19:46:18 2014 -0500
SameType;true;clojure.lang.PersistentHashSet;clojure.lang.PersistentHashSet;dd2d262abd11969627aac44948b3f5dc6f7e8cd6;Fri Jun 27 13:53:36 2014 -0400
SameMethod;true;clojure.lang.PersistentHashSet#createWithCheck(Object[]);clojure.lang.PersistentHashSet#createWithCheck(Object[]);dd2d262abd11969627aac44948b3f5dc6f7e8cd6;Fri Jun 27 13:53:36 2014 -0400
SameMethod;true;clojure.lang.PersistentHashSet#createWithCheck(List);clojure.lang.PersistentHashSet#createWithCheck(List);dd2d262abd11969627aac44948b3f5dc6f7e8cd6;Fri Jun 27 13:53:36 2014 -0400
SameMethod;true;clojure.lang.PersistentHashSet#createWithCheck(ISeq);clojure.lang.PersistentHashSet#createWithCheck(ISeq);dd2d262abd11969627aac44948b3f5dc6f7e8cd6;Fri Jun 27 13:53:36 2014 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;0052a6d7473a518dbcaca025eb5f187184043719;Wed Mar 12 20:47:11 2014 +0100
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;0052a6d7473a518dbcaca025eb5f187184043719;Wed Mar 12 20:47:11 2014 +0100
SameMethod;true;clojure.lang.Compiler.FnExpr#getJavaClass();clojure.lang.Compiler.FnExpr#getJavaClass();0052a6d7473a518dbcaca025eb5f187184043719;Wed Mar 12 20:47:11 2014 +0100
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;cf9fb27a4709add73a495c68e590ced66d27614a;Fri May 16 11:49:01 2014 -0500
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;cf9fb27a4709add73a495c68e590ced66d27614a;Fri May 16 11:49:01 2014 -0500
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, int, Symbol, Class, String, IPersistentVector);clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, int, Symbol, Class, String, IPersistentVector);cf9fb27a4709add73a495c68e590ced66d27614a;Fri May 16 11:49:01 2014 -0500
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;cf9fb27a4709add73a495c68e590ced66d27614a;Fri May 16 11:49:01 2014 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;20191d1aae03c4448497293053944b2e7e52101c;Wed Jul 31 02:17:07 2013 +0200
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;20191d1aae03c4448497293053944b2e7e52101c;Wed Jul 31 02:17:07 2013 +0200
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;20191d1aae03c4448497293053944b2e7e52101c;Wed Jul 31 02:17:07 2013 +0200
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);20191d1aae03c4448497293053944b2e7e52101c;Wed Jul 31 02:17:07 2013 +0200
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;5938f8ef5269564e5694c37a69c06dab6b06cfee;Fri Feb 22 14:34:32 2013 +0300
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);5938f8ef5269564e5694c37a69c06dab6b06cfee;Fri Feb 22 14:34:32 2013 +0300
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;1d856d485baeedd75c508495c5a966bf4d9a4375;Fri Aug 26 12:18:33 2011 -0400
SameType;true;clojure.lang.Numbers.Ops;clojure.lang.Numbers.Ops;1d856d485baeedd75c508495c5a966bf4d9a4375;Fri Aug 26 12:18:33 2011 -0400
SameMethod;true;clojure.lang.Numbers#lte(Object, Object);clojure.lang.Numbers#lte(Object, Object);1d856d485baeedd75c508495c5a966bf4d9a4375;Fri Aug 26 12:18:33 2011 -0400
SameMethod;true;clojure.lang.Numbers#gte(Object, Object);clojure.lang.Numbers#gte(Object, Object);1d856d485baeedd75c508495c5a966bf4d9a4375;Fri Aug 26 12:18:33 2011 -0400
SameType;true;clojure.lang.Numbers.LongOps;clojure.lang.Numbers.LongOps;1d856d485baeedd75c508495c5a966bf4d9a4375;Fri Aug 26 12:18:33 2011 -0400
SameType;true;clojure.lang.Numbers.DoubleOps;clojure.lang.Numbers.DoubleOps;1d856d485baeedd75c508495c5a966bf4d9a4375;Fri Aug 26 12:18:33 2011 -0400
SameType;true;clojure.lang.Numbers.RatioOps;clojure.lang.Numbers.RatioOps;1d856d485baeedd75c508495c5a966bf4d9a4375;Fri Aug 26 12:18:33 2011 -0400
SameType;true;clojure.lang.Numbers.BigIntOps;clojure.lang.Numbers.BigIntOps;1d856d485baeedd75c508495c5a966bf4d9a4375;Fri Aug 26 12:18:33 2011 -0400
SameType;true;clojure.lang.Numbers.BigDecimalOps;clojure.lang.Numbers.BigDecimalOps;1d856d485baeedd75c508495c5a966bf4d9a4375;Fri Aug 26 12:18:33 2011 -0400
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;ad7d9c46992cac0e812ce3dd47584c9bb2fda11f;Fri Sep 5 09:11:49 2014 -0400
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameType;true;clojure.lang.PersistentArrayMap.TransientArrayMap;clojure.lang.PersistentArrayMap.TransientArrayMap;42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameMethod;true;clojure.lang.PersistentArrayMap.TransientArrayMap#TransientArrayMap(Object[]);clojure.lang.PersistentArrayMap.TransientArrayMap#TransientArrayMap(Object[]);42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameMethod;true;clojure.lang.PersistentArrayMap.TransientArrayMap#doPersistent();clojure.lang.PersistentArrayMap.TransientArrayMap#doPersistent();42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameMethod;true;clojure.lang.PersistentArrayMap.TransientArrayMap#ensureEditable();clojure.lang.PersistentArrayMap.TransientArrayMap#ensureEditable();42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameType;true;clojure.lang.PersistentHashMap.TransientHashMap;clojure.lang.PersistentHashMap.TransientHashMap;42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameMethod;true;clojure.lang.PersistentHashMap.TransientHashMap#TransientHashMap(PersistentHashMap);clojure.lang.PersistentHashMap.TransientHashMap#TransientHashMap(PersistentHashMap);42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameMethod;true;clojure.lang.PersistentHashMap.TransientHashMap#doPersistent();clojure.lang.PersistentHashMap.TransientHashMap#doPersistent();42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameMethod;true;clojure.lang.PersistentHashMap.TransientHashMap#ensureEditable();clojure.lang.PersistentHashMap.TransientHashMap#ensureEditable();42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameType;true;clojure.lang.PersistentHashMap.INode;clojure.lang.PersistentHashMap.INode;42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameType;true;clojure.lang.PersistentHashMap.ArrayNode;clojure.lang.PersistentHashMap.ArrayNode;42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode;clojure.lang.PersistentHashMap.BitmapIndexedNode;42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameType;true;clojure.lang.PersistentHashMap.HashCollisionNode;clojure.lang.PersistentHashMap.HashCollisionNode;42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameMethod;true;clojure.lang.PersistentHashMap#createNode(int, Object, Object, int, Object, Object);clojure.lang.PersistentHashMap#createNode(int, Object, Object, int, Object, Object);42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameType;true;clojure.lang.PersistentVector.Node;clojure.lang.PersistentVector.Node;42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameType;true;clojure.lang.PersistentVector.TransientVector;clojure.lang.PersistentVector.TransientVector;42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameMethod;true;clojure.lang.PersistentVector.TransientVector#ensureEditable();clojure.lang.PersistentVector.TransientVector#ensureEditable();42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameMethod;true;clojure.lang.PersistentVector.TransientVector#editableRoot(Node);clojure.lang.PersistentVector.TransientVector#editableRoot(Node);42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameMethod;true;clojure.lang.PersistentVector.TransientVector#persistent();clojure.lang.PersistentVector.TransientVector#persistent();42f68bc7688db3a24565dfcdc1cba92dd8a99159;Fri Sep 5 09:11:58 2014 -0400
SameType;true;clojure.lang.SeqIterator;clojure.lang.SeqIterator;ba41f25b6f3f32729c55f7f7ceb179be597acf94;Tue Sep 9 11:29:25 2014 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;8af7e9a92570eb28c58b15481ae9c271d891c028;Sat Dec 28 10:15:15 2013 -0500
SameType;true;clojure.lang.Compiler.ImportExpr;clojure.lang.Compiler.ImportExpr;8af7e9a92570eb28c58b15481ae9c271d891c028;Sat Dec 28 10:15:15 2013 -0500
SameMethod;true;clojure.lang.Compiler.ImportExpr#eval();clojure.lang.Compiler.ImportExpr#eval();8af7e9a92570eb28c58b15481ae9c271d891c028;Sat Dec 28 10:15:15 2013 -0500
SameMethod;true;clojure.lang.Compiler.ImportExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.ImportExpr#emit(C, ObjExpr, GeneratorAdapter);8af7e9a92570eb28c58b15481ae9c271d891c028;Sat Dec 28 10:15:15 2013 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;8af7e9a92570eb28c58b15481ae9c271d891c028;Sat Dec 28 10:15:15 2013 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;f149260c14a75367dc9eba91cbe9b78110113566;Wed Jan 22 22:56:23 2014 +0100
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;f149260c14a75367dc9eba91cbe9b78110113566;Wed Jan 22 22:56:23 2014 +0100
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);f149260c14a75367dc9eba91cbe9b78110113566;Wed Jan 22 22:56:23 2014 +0100
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;3e4bf71f455a5fae665420d10c9ebdebd52b823b;Fri Sep 26 10:08:49 2014 -0600
SameType;true;clojure.lang.APersistentVector.Seq;clojure.lang.APersistentVector.Seq;3e4bf71f455a5fae665420d10c9ebdebd52b823b;Fri Sep 26 10:08:49 2014 -0600
SameMethod;true;clojure.lang.APersistentVector.Seq#reduce(IFn);clojure.lang.APersistentVector.Seq#reduce(IFn);3e4bf71f455a5fae665420d10c9ebdebd52b823b;Fri Sep 26 10:08:49 2014 -0600
SameMethod;true;clojure.lang.APersistentVector.Seq#reduce(IFn, Object);clojure.lang.APersistentVector.Seq#reduce(IFn, Object);3e4bf71f455a5fae665420d10c9ebdebd52b823b;Fri Sep 26 10:08:49 2014 -0600
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;3e4bf71f455a5fae665420d10c9ebdebd52b823b;Fri Sep 26 10:08:49 2014 -0600
SameMethod;true;clojure.lang.PersistentList#reduce(IFn);clojure.lang.PersistentList#reduce(IFn);3e4bf71f455a5fae665420d10c9ebdebd52b823b;Fri Sep 26 10:08:49 2014 -0600
SameMethod;true;clojure.lang.PersistentList#reduce(IFn, Object);clojure.lang.PersistentList#reduce(IFn, Object);3e4bf71f455a5fae665420d10c9ebdebd52b823b;Fri Sep 26 10:08:49 2014 -0600
SameType;true;clojure.lang.Compile;clojure.lang.Compile;695f03cf1b737ff465e9a0144978593df262516d;Tue Oct 7 08:11:11 2014 -0500
SameMethod;true;clojure.lang.Compile#main(String[]);clojure.lang.Compile#main(String[]);695f03cf1b737ff465e9a0144978593df262516d;Tue Oct 7 08:11:11 2014 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;695f03cf1b737ff465e9a0144978593df262516d;Tue Oct 7 08:11:11 2014 -0500
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;695f03cf1b737ff465e9a0144978593df262516d;Tue Oct 7 08:11:11 2014 -0500
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, int, Symbol, Class, String, IPersistentVector);clojure.lang.Compiler.StaticMethodExpr#StaticMethodExpr(String, int, int, Symbol, Class, String, IPersistentVector);695f03cf1b737ff465e9a0144978593df262516d;Tue Oct 7 08:11:11 2014 -0500
ExtractInterface;true;clojure.lang.IReduce;clojure.lang.IReduceInit;4c963fb0f9ef9e4fc68b8b167729d857ced4b530;Tue Oct 7 08:35:53 2014 -0500
SameType;true;clojure.lang.IReduce;clojure.lang.IReduce;4c963fb0f9ef9e4fc68b8b167729d857ced4b530;Tue Oct 7 08:35:53 2014 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;8765800e23a057957986c7d2bbb1f09cd3f1a676;Thu Oct 2 09:02:18 2014 -0700
SameMethod;true;clojure.lang.RT#load(String, boolean);clojure.lang.RT#load(String, boolean);8765800e23a057957986c7d2bbb1f09cd3f1a676;Thu Oct 2 09:02:18 2014 -0700
ExtractInterface;true;clojure.lang.Atom;clojure.lang.IAtom;2b8e2078ddc3b73d4634adba339fae22fded4169;Sat May 28 10:33:18 2011 +0200
SameType;true;clojure.lang.Atom;clojure.lang.Atom;2b8e2078ddc3b73d4634adba339fae22fded4169;Sat May 28 10:33:18 2011 +0200
SameType;true;clojure.lang.Keyword;clojure.lang.Keyword;8599507b3e6352df9f79f68980c35e23f5829fab;Fri Aug 22 22:55:56 2014 -0500
SameType;true;clojure.lang.Symbol;clojure.lang.Symbol;8599507b3e6352df9f79f68980c35e23f5829fab;Fri Aug 22 22:55:56 2014 -0500
SameType;true;clojure.lang.LazyTransformer;clojure.lang.LazyTransformer;38d7572e4254afdd7f02b78095ccdb27065754d2;Tue Oct 21 11:07:34 2014 -0400
SameType;true;clojure.lang.LazyTransformer.Stepper;clojure.lang.LazyTransformer.Stepper;38d7572e4254afdd7f02b78095ccdb27065754d2;Tue Oct 21 11:07:34 2014 -0400
SameMethod;true;clojure.lang.LazyTransformer.Stepper$1#invoke(Object);clojure.lang.LazyTransformer.Stepper$1#invoke(Object);38d7572e4254afdd7f02b78095ccdb27065754d2;Tue Oct 21 11:07:34 2014 -0400
SameMethod;true;clojure.lang.LazyTransformer.Stepper#step(LazyTransformer);clojure.lang.LazyTransformer.Stepper#step(LazyTransformer);38d7572e4254afdd7f02b78095ccdb27065754d2;Tue Oct 21 11:07:34 2014 -0400
SameType;true;clojure.lang.LazyTransformer.MultiStepper;clojure.lang.LazyTransformer.MultiStepper;38d7572e4254afdd7f02b78095ccdb27065754d2;Tue Oct 21 11:07:34 2014 -0400
SameMethod;true;clojure.lang.LazyTransformer.MultiStepper$1#invoke(Object);clojure.lang.LazyTransformer.MultiStepper$1#invoke(Object);38d7572e4254afdd7f02b78095ccdb27065754d2;Tue Oct 21 11:07:34 2014 -0400
SameMethod;true;clojure.lang.LazyTransformer.MultiStepper#step(LazyTransformer);clojure.lang.LazyTransformer.MultiStepper#step(LazyTransformer);38d7572e4254afdd7f02b78095ccdb27065754d2;Tue Oct 21 11:07:34 2014 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;ebda7ff77b923596c0e7a9aae41f857df973310d;Wed Nov 5 11:35:36 2014 -0600
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;ebda7ff77b923596c0e7a9aae41f857df973310d;Wed Nov 5 11:35:36 2014 -0600
SameMethod;true;clojure.lang.Compiler.HostExpr#maybeClass(Object, boolean);clojure.lang.Compiler.HostExpr#maybeClass(Object, boolean);ebda7ff77b923596c0e7a9aae41f857df973310d;Wed Nov 5 11:35:36 2014 -0600
SameMethod;true;clojure.lang.Compiler.HostExpr#tagToClass(Object);clojure.lang.Compiler.HostExpr#tagToClass(Object);ebda7ff77b923596c0e7a9aae41f857df973310d;Wed Nov 5 11:35:36 2014 -0600
SameType;true;clojure.lang.Namespace;clojure.lang.Namespace;24177494ea3603edc1f4fcb079f89d46cfb4f7bb;Sat Nov 1 17:38:16 2014 +0100
SameMethod;true;clojure.lang.Namespace#warnOrFailOnReplace(Symbol, Object, Object);clojure.lang.Namespace#warnOrFailOnReplace(Symbol, Object, Object);24177494ea3603edc1f4fcb079f89d46cfb4f7bb;Sat Nov 1 17:38:16 2014 +0100
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;ae0c767574ee8b88e1173d9cec36efff47b5d9c2;Mon Aug 11 16:29:11 2014 +0200
SameMethod;true;clojure.lang.LazySeq#equiv(Object);clojure.lang.LazySeq#equiv(Object);ae0c767574ee8b88e1173d9cec36efff47b5d9c2;Mon Aug 11 16:29:11 2014 +0200
SameMethod;true;clojure.lang.LazySeq#equals(Object);clojure.lang.LazySeq#equals(Object);ae0c767574ee8b88e1173d9cec36efff47b5d9c2;Mon Aug 11 16:29:11 2014 +0200
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;8e4c43241ee6776f7f2b313ac3ef3017192eaeeb;Fri Nov 14 11:03:20 2014 -0500
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;8e4c43241ee6776f7f2b313ac3ef3017192eaeeb;Fri Nov 14 11:03:20 2014 -0500
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);8e4c43241ee6776f7f2b313ac3ef3017192eaeeb;Fri Nov 14 11:03:20 2014 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;ee1ec3f38b6aaf7a7291ff4be04d84d7c6dfa6bf;Wed Jan 22 22:56:23 2014 +0100
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;ee1ec3f38b6aaf7a7291ff4be04d84d7c6dfa6bf;Wed Jan 22 22:56:23 2014 +0100
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);ee1ec3f38b6aaf7a7291ff4be04d84d7c6dfa6bf;Wed Jan 22 22:56:23 2014 +0100
SameType;true;clojure.lang.RT;clojure.lang.RT;c2a943852f36e8b74a666ecd9cfc3dfcdec5903a;Mon Jan 5 12:42:29 2015 -0500
SameMethod;true;clojure.lang.RT#countFrom(Object);clojure.lang.RT#countFrom(Object);c2a943852f36e8b74a666ecd9cfc3dfcdec5903a;Mon Jan 5 12:42:29 2015 -0500
SameType;true;clojure.lang.ATransientSet;clojure.lang.ATransientSet;ef1d0607e19d43dabf72fecb3ea8a263e8bb7351;Fri Jan 2 11:56:05 2015 -0600
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;ef1d0607e19d43dabf72fecb3ea8a263e8bb7351;Fri Jan 2 11:56:05 2015 -0600
SameType;true;clojure.lang.PersistentArrayMap.TransientArrayMap;clojure.lang.PersistentArrayMap.TransientArrayMap;ef1d0607e19d43dabf72fecb3ea8a263e8bb7351;Fri Jan 2 11:56:05 2015 -0600
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;ef1d0607e19d43dabf72fecb3ea8a263e8bb7351;Fri Jan 2 11:56:05 2015 -0600
SameType;true;clojure.lang.PersistentHashMap.TransientHashMap;clojure.lang.PersistentHashMap.TransientHashMap;ef1d0607e19d43dabf72fecb3ea8a263e8bb7351;Fri Jan 2 11:56:05 2015 -0600
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;ef1d0607e19d43dabf72fecb3ea8a263e8bb7351;Fri Jan 2 11:56:05 2015 -0600
SameType;true;clojure.lang.PersistentVector.TransientVector;clojure.lang.PersistentVector.TransientVector;ef1d0607e19d43dabf72fecb3ea8a263e8bb7351;Fri Jan 2 11:56:05 2015 -0600
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameType;true;clojure.lang.APersistentVector.Seq;clojure.lang.APersistentVector.Seq;bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.APersistentVector.Seq#reduce(IFn, Object);clojure.lang.APersistentVector.Seq#reduce(IFn, Object);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameType;true;clojure.lang.ArraySeq;clojure.lang.ArraySeq;bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.ArraySeq#reduce(IFn);clojure.lang.ArraySeq#reduce(IFn);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.ArraySeq#reduce(IFn, Object);clojure.lang.ArraySeq#reduce(IFn, Object);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameType;true;clojure.lang.ArraySeq.ArraySeq_int;clojure.lang.ArraySeq.ArraySeq_int;bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_int#reduce(IFn);clojure.lang.ArraySeq.ArraySeq_int#reduce(IFn);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_int#reduce(IFn, Object);clojure.lang.ArraySeq.ArraySeq_int#reduce(IFn, Object);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameType;true;clojure.lang.ArraySeq.ArraySeq_float;clojure.lang.ArraySeq.ArraySeq_float;bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_float#reduce(IFn);clojure.lang.ArraySeq.ArraySeq_float#reduce(IFn);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_float#reduce(IFn, Object);clojure.lang.ArraySeq.ArraySeq_float#reduce(IFn, Object);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameType;true;clojure.lang.ArraySeq.ArraySeq_double;clojure.lang.ArraySeq.ArraySeq_double;bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_double#reduce(IFn);clojure.lang.ArraySeq.ArraySeq_double#reduce(IFn);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_double#reduce(IFn, Object);clojure.lang.ArraySeq.ArraySeq_double#reduce(IFn, Object);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameType;true;clojure.lang.ArraySeq.ArraySeq_long;clojure.lang.ArraySeq.ArraySeq_long;bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_long#reduce(IFn);clojure.lang.ArraySeq.ArraySeq_long#reduce(IFn);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_long#reduce(IFn, Object);clojure.lang.ArraySeq.ArraySeq_long#reduce(IFn, Object);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameType;true;clojure.lang.ArraySeq.ArraySeq_byte;clojure.lang.ArraySeq.ArraySeq_byte;bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_byte#reduce(IFn);clojure.lang.ArraySeq.ArraySeq_byte#reduce(IFn);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_byte#reduce(IFn, Object);clojure.lang.ArraySeq.ArraySeq_byte#reduce(IFn, Object);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameType;true;clojure.lang.ArraySeq.ArraySeq_char;clojure.lang.ArraySeq.ArraySeq_char;bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_char#reduce(IFn);clojure.lang.ArraySeq.ArraySeq_char#reduce(IFn);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_char#reduce(IFn, Object);clojure.lang.ArraySeq.ArraySeq_char#reduce(IFn, Object);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameType;true;clojure.lang.ArraySeq.ArraySeq_short;clojure.lang.ArraySeq.ArraySeq_short;bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_short#reduce(IFn);clojure.lang.ArraySeq.ArraySeq_short#reduce(IFn);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_short#reduce(IFn, Object);clojure.lang.ArraySeq.ArraySeq_short#reduce(IFn, Object);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameType;true;clojure.lang.ArraySeq.ArraySeq_boolean;clojure.lang.ArraySeq.ArraySeq_boolean;bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_boolean#reduce(IFn);clojure.lang.ArraySeq.ArraySeq_boolean#reduce(IFn);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.ArraySeq.ArraySeq_boolean#reduce(IFn, Object);clojure.lang.ArraySeq.ArraySeq_boolean#reduce(IFn, Object);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameMethod;true;clojure.lang.PersistentList#reduce(IFn, Object);clojure.lang.PersistentList#reduce(IFn, Object);bf610279b423061099c4b6242f57dfab010c4433;Sat Nov 15 14:25:23 2014 +0100
SameType;true;clojure.lang.LazyTransformer;clojure.lang.LazyTransformer;4e7c9cb32b14ba236c930cd5cc4cc1a8e77cb32a;Mon Nov 24 22:32:24 2014 -0500
SameMethod;true;clojure.lang.LazyTransformer#hashCode();clojure.lang.LazyTransformer#hashCode();4e7c9cb32b14ba236c930cd5cc4cc1a8e77cb32a;Mon Nov 24 22:32:24 2014 -0500
SameMethod;true;clojure.lang.LazyTransformer#hasheq();clojure.lang.LazyTransformer#hasheq();4e7c9cb32b14ba236c930cd5cc4cc1a8e77cb32a;Mon Nov 24 22:32:24 2014 -0500
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;241331d83b9ef1559e8668ceb27ad24f231ff713;Wed Jan 7 18:24:10 2015 +0100
SameMethod;true;clojure.lang.PersistentList$1#doInvoke(Object);clojure.lang.PersistentList$1#doInvoke(Object);241331d83b9ef1559e8668ceb27ad24f231ff713;Wed Jan 7 18:24:10 2015 +0100
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;e6871a6606aafec4db7d477fcd8d5680e67efcd0;Thu Dec 18 00:15:41 2014 +0100
SameMethod;true;clojure.lang.PersistentVector#reduce(IFn);clojure.lang.PersistentVector#reduce(IFn);e6871a6606aafec4db7d477fcd8d5680e67efcd0;Thu Dec 18 00:15:41 2014 +0100
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;4afd4a7c14c48b5baf3c03196053066483cb4223;Tue Jan 6 23:45:52 2015 -0600
SameType;true;clojure.lang.Compiler.CaseExpr;clojure.lang.Compiler.CaseExpr;4afd4a7c14c48b5baf3c03196053066483cb4223;Tue Jan 6 23:45:52 2015 -0600
SameType;true;clojure.lang.Compiler.CaseExpr.Parser;clojure.lang.Compiler.CaseExpr.Parser;4afd4a7c14c48b5baf3c03196053066483cb4223;Tue Jan 6 23:45:52 2015 -0600
SameMethod;true;clojure.lang.Compiler.CaseExpr.Parser#parse(C, Object);clojure.lang.Compiler.CaseExpr.Parser#parse(C, Object);4afd4a7c14c48b5baf3c03196053066483cb4223;Tue Jan 6 23:45:52 2015 -0600
SameType;true;clojure.lang.LazilyPersistentVector;clojure.lang.LazilyPersistentVector;4afd4a7c14c48b5baf3c03196053066483cb4223;Tue Jan 6 23:45:52 2015 -0600
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;4afd4a7c14c48b5baf3c03196053066483cb4223;Tue Jan 6 23:45:52 2015 -0600
SameMethod;true;clojure.lang.PersistentVector#create(ISeq);clojure.lang.PersistentVector#create(ISeq);4afd4a7c14c48b5baf3c03196053066483cb4223;Tue Jan 6 23:45:52 2015 -0600
ExtractMethod;true;clojure.lang.DynamicClassLoader#findClass(String);clojure.lang.DynamicClassLoader#findInMemoryClass(String);9f277c80258b3d2951128ce26a07c30ad0b47af0;Thu Dec 4 18:45:53 2014 +0100
ExtractMethod;true;clojure.lang.RT#classForName(String);clojure.lang.RT#classForName(String, boolean, ClassLoader);9f277c80258b3d2951128ce26a07c30ad0b47af0;Thu Dec 4 18:45:53 2014 +0100
ExtractMethod;true;clojure.lang.RT#classForNameNonLoading(String);clojure.lang.RT#classForName(String, boolean, ClassLoader);9f277c80258b3d2951128ce26a07c30ad0b47af0;Thu Dec 4 18:45:53 2014 +0100
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;9f277c80258b3d2951128ce26a07c30ad0b47af0;Thu Dec 4 18:45:53 2014 +0100
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;9f277c80258b3d2951128ce26a07c30ad0b47af0;Thu Dec 4 18:45:53 2014 +0100
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.StaticMethodExpr#emit(C, ObjExpr, GeneratorAdapter);9f277c80258b3d2951128ce26a07c30ad0b47af0;Thu Dec 4 18:45:53 2014 +0100
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;9f277c80258b3d2951128ce26a07c30ad0b47af0;Thu Dec 4 18:45:53 2014 +0100
SameMethod;true;clojure.lang.Compiler.NewExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.NewExpr#emit(C, ObjExpr, GeneratorAdapter);9f277c80258b3d2951128ce26a07c30ad0b47af0;Thu Dec 4 18:45:53 2014 +0100
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;9f277c80258b3d2951128ce26a07c30ad0b47af0;Thu Dec 4 18:45:53 2014 +0100
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);9f277c80258b3d2951128ce26a07c30ad0b47af0;Thu Dec 4 18:45:53 2014 +0100
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);9f277c80258b3d2951128ce26a07c30ad0b47af0;Thu Dec 4 18:45:53 2014 +0100
SameType;true;clojure.lang.DynamicClassLoader;clojure.lang.DynamicClassLoader;9f277c80258b3d2951128ce26a07c30ad0b47af0;Thu Dec 4 18:45:53 2014 +0100
SameMethod;true;clojure.lang.DynamicClassLoader#findClass(String);clojure.lang.DynamicClassLoader#findClass(String);9f277c80258b3d2951128ce26a07c30ad0b47af0;Thu Dec 4 18:45:53 2014 +0100
SameType;true;clojure.lang.RT;clojure.lang.RT;9f277c80258b3d2951128ce26a07c30ad0b47af0;Thu Dec 4 18:45:53 2014 +0100
SameMethod;true;clojure.lang.RT#classForName(String);clojure.lang.RT#classForName(String);9f277c80258b3d2951128ce26a07c30ad0b47af0;Thu Dec 4 18:45:53 2014 +0100
SameMethod;true;clojure.lang.RT#classForNameNonLoading(String);clojure.lang.RT#classForNameNonLoading(String);9f277c80258b3d2951128ce26a07c30ad0b47af0;Thu Dec 4 18:45:53 2014 +0100
SameMethod;true;clojure.lang.RT#loadClassForName(String);clojure.lang.RT#loadClassForName(String);9f277c80258b3d2951128ce26a07c30ad0b47af0;Thu Dec 4 18:45:53 2014 +0100
SameType;true;clojure.lang.SeqIterator;clojure.lang.SeqIterator;f437b853adeaffc5cad9bb1e01e2355357a492c9;Sun Jan 11 20:19:03 2015 +0100
SameMethod;true;clojure.lang.SeqIterator#SeqIterator(Object);clojure.lang.SeqIterator#SeqIterator(Object);f437b853adeaffc5cad9bb1e01e2355357a492c9;Sun Jan 11 20:19:03 2015 +0100
SameMethod;true;clojure.lang.SeqIterator#SeqIterator(ISeq);clojure.lang.SeqIterator#SeqIterator(ISeq);f437b853adeaffc5cad9bb1e01e2355357a492c9;Sun Jan 11 20:19:03 2015 +0100
SameMethod;true;clojure.lang.SeqIterator#hasNext();clojure.lang.SeqIterator#hasNext();f437b853adeaffc5cad9bb1e01e2355357a492c9;Sun Jan 11 20:19:03 2015 +0100
SameType;true;clojure.lang.DynamicClassLoader;clojure.lang.DynamicClassLoader;ab6d5bb973c83f7ab75a4eec05e098d16717c483;Wed Feb 18 11:10:58 2015 +0100
SameMethod;true;clojure.lang.DynamicClassLoader#loadClass(String, boolean);clojure.lang.DynamicClassLoader#loadClass(String, boolean);ab6d5bb973c83f7ab75a4eec05e098d16717c483;Wed Feb 18 11:10:58 2015 +0100
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;59889fdeb7ef7f4f73e13fa6ecb627f62b7d2adb;Tue Nov 25 21:55:02 2014 +0100
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;59889fdeb7ef7f4f73e13fa6ecb627f62b7d2adb;Tue Nov 25 21:55:02 2014 +0100
SameMethod;true;clojure.lang.Compiler.DefExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.DefExpr#emit(C, ObjExpr, GeneratorAdapter);59889fdeb7ef7f4f73e13fa6ecb627f62b7d2adb;Tue Nov 25 21:55:02 2014 +0100
SameType;true;clojure.lang.Compiler.DefExpr.Parser;clojure.lang.Compiler.DefExpr.Parser;59889fdeb7ef7f4f73e13fa6ecb627f62b7d2adb;Tue Nov 25 21:55:02 2014 +0100
SameMethod;true;clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);clojure.lang.Compiler.DefExpr.Parser#parse(C, Object);59889fdeb7ef7f4f73e13fa6ecb627f62b7d2adb;Tue Nov 25 21:55:02 2014 +0100
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7e6b0ac73c06b9db98d32cc5ce642be1f7177c24;Mon Oct 20 15:18:24 2014 +0200
SameMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.Compiler#load(Reader, String, String);7e6b0ac73c06b9db98d32cc5ce642be1f7177c24;Mon Oct 20 15:18:24 2014 +0200
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;692645c73c86d12c93a97c858dc6e8b0f4280a0b;Mon Mar 9 11:02:26 2015 -0400
SameType;true;clojure.lang.Compiler.MapExpr;clojure.lang.Compiler.MapExpr;692645c73c86d12c93a97c858dc6e8b0f4280a0b;Mon Mar 9 11:02:26 2015 -0400
SameMethod;true;clojure.lang.Compiler.MapExpr#parse(C, IPersistentMap);clojure.lang.Compiler.MapExpr#parse(C, IPersistentMap);692645c73c86d12c93a97c858dc6e8b0f4280a0b;Mon Mar 9 11:02:26 2015 -0400
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;692645c73c86d12c93a97c858dc6e8b0f4280a0b;Mon Mar 9 11:02:26 2015 -0400
SameMethod;true;clojure.lang.PersistentArrayMap#assoc(Object, Object);clojure.lang.PersistentArrayMap#assoc(Object, Object);692645c73c86d12c93a97c858dc6e8b0f4280a0b;Mon Mar 9 11:02:26 2015 -0400
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;c99f1b26052283efd362b2748b2184178ebab218;Fri Feb 20 10:03:51 2015 -0600
SameType;true;clojure.lang.LineNumberingPushbackReader;clojure.lang.LineNumberingPushbackReader;3d216d45b63781586bb79144268bb2fb88dd6f28;Tue Mar 17 15:09:48 2015 -0500
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;d760db170414d770ec348e906eb4d73ed42f1f90;Fri Feb 20 09:44:11 2015 -0600
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;d760db170414d770ec348e906eb4d73ed42f1f90;Fri Feb 20 09:44:11 2015 -0600
SameMethod;true;clojure.lang.APersistentSet#iterator();clojure.lang.APersistentSet#iterator();d760db170414d770ec348e906eb4d73ed42f1f90;Fri Feb 20 09:44:11 2015 -0600
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;d760db170414d770ec348e906eb4d73ed42f1f90;Fri Feb 20 09:44:11 2015 -0600
SameMethod;true;clojure.lang.PersistentArrayMap#iterator();clojure.lang.PersistentArrayMap#iterator();d760db170414d770ec348e906eb4d73ed42f1f90;Fri Feb 20 09:44:11 2015 -0600
SameType;true;clojure.lang.PersistentArrayMap.Iter;clojure.lang.PersistentArrayMap.Iter;d760db170414d770ec348e906eb4d73ed42f1f90;Fri Feb 20 09:44:11 2015 -0600
SameMethod;true;clojure.lang.PersistentArrayMap.Iter#next();clojure.lang.PersistentArrayMap.Iter#next();d760db170414d770ec348e906eb4d73ed42f1f90;Fri Feb 20 09:44:11 2015 -0600
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;d760db170414d770ec348e906eb4d73ed42f1f90;Fri Feb 20 09:44:11 2015 -0600
SameMethod;true;clojure.lang.PersistentHashMap#iterator();clojure.lang.PersistentHashMap#iterator();d760db170414d770ec348e906eb4d73ed42f1f90;Fri Feb 20 09:44:11 2015 -0600
SameType;true;clojure.lang.PersistentHashMap.INode;clojure.lang.PersistentHashMap.INode;d760db170414d770ec348e906eb4d73ed42f1f90;Fri Feb 20 09:44:11 2015 -0600
SameType;true;clojure.lang.PersistentHashMap.ArrayNode;clojure.lang.PersistentHashMap.ArrayNode;d760db170414d770ec348e906eb4d73ed42f1f90;Fri Feb 20 09:44:11 2015 -0600
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode;clojure.lang.PersistentHashMap.BitmapIndexedNode;d760db170414d770ec348e906eb4d73ed42f1f90;Fri Feb 20 09:44:11 2015 -0600
SameType;true;clojure.lang.PersistentHashMap.HashCollisionNode;clojure.lang.PersistentHashMap.HashCollisionNode;d760db170414d770ec348e906eb4d73ed42f1f90;Fri Feb 20 09:44:11 2015 -0600
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;d760db170414d770ec348e906eb4d73ed42f1f90;Fri Feb 20 09:44:11 2015 -0600
SameMethod;true;clojure.lang.PersistentQueue#iterator();clojure.lang.PersistentQueue#iterator();d760db170414d770ec348e906eb4d73ed42f1f90;Fri Feb 20 09:44:11 2015 -0600
SameType;true;clojure.lang.PersistentStructMap;clojure.lang.PersistentStructMap;d760db170414d770ec348e906eb4d73ed42f1f90;Fri Feb 20 09:44:11 2015 -0600
SameMethod;true;clojure.lang.PersistentStructMap#iterator();clojure.lang.PersistentStructMap#iterator();d760db170414d770ec348e906eb4d73ed42f1f90;Fri Feb 20 09:44:11 2015 -0600
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;715754d3f69e85b07fa56047f0d43d400ab36fce;Fri Oct 10 15:41:10 2014 -0400
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;715754d3f69e85b07fa56047f0d43d400ab36fce;Fri Oct 10 15:41:10 2014 -0400
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceFieldExpr#emit(C, ObjExpr, GeneratorAdapter);715754d3f69e85b07fa56047f0d43d400ab36fce;Fri Oct 10 15:41:10 2014 -0400
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#emitAssign(C, ObjExpr, GeneratorAdapter, Expr);clojure.lang.Compiler.InstanceFieldExpr#emitAssign(C, ObjExpr, GeneratorAdapter, Expr);715754d3f69e85b07fa56047f0d43d400ab36fce;Fri Oct 10 15:41:10 2014 -0400
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;715754d3f69e85b07fa56047f0d43d400ab36fce;Fri Oct 10 15:41:10 2014 -0400
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceMethodExpr#emit(C, ObjExpr, GeneratorAdapter);715754d3f69e85b07fa56047f0d43d400ab36fce;Fri Oct 10 15:41:10 2014 -0400
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;715754d3f69e85b07fa56047f0d43d400ab36fce;Fri Oct 10 15:41:10 2014 -0400
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.StaticMethodExpr#emit(C, ObjExpr, GeneratorAdapter);715754d3f69e85b07fa56047f0d43d400ab36fce;Fri Oct 10 15:41:10 2014 -0400
SameType;true;clojure.lang.Compiler.KeywordInvokeExpr;clojure.lang.Compiler.KeywordInvokeExpr;715754d3f69e85b07fa56047f0d43d400ab36fce;Fri Oct 10 15:41:10 2014 -0400
SameMethod;true;clojure.lang.Compiler.KeywordInvokeExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.KeywordInvokeExpr#emit(C, ObjExpr, GeneratorAdapter);715754d3f69e85b07fa56047f0d43d400ab36fce;Fri Oct 10 15:41:10 2014 -0400
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;715754d3f69e85b07fa56047f0d43d400ab36fce;Fri Oct 10 15:41:10 2014 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emit(C, ObjExpr, GeneratorAdapter);715754d3f69e85b07fa56047f0d43d400ab36fce;Fri Oct 10 15:41:10 2014 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emitArgsAndCall(int, C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emitArgsAndCall(int, C, ObjExpr, GeneratorAdapter);715754d3f69e85b07fa56047f0d43d400ab36fce;Fri Oct 10 15:41:10 2014 -0400
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;3418a1a5de502371cbe9d5f9f92fceb6d3792aec;Thu Mar 26 10:28:49 2015 -0400
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;ecdfafb9665d3938330c91267381d01536a691b1;Mon Mar 23 13:47:16 2015 -0500
SameType;true;clojure.lang.APersistentMap.KeySeq;clojure.lang.APersistentMap.KeySeq;ecdfafb9665d3938330c91267381d01536a691b1;Mon Mar 23 13:47:16 2015 -0500
SameMethod;true;clojure.lang.APersistentMap.KeySeq#create(ISeq);clojure.lang.APersistentMap.KeySeq#create(ISeq);ecdfafb9665d3938330c91267381d01536a691b1;Mon Mar 23 13:47:16 2015 -0500
SameMethod;true;clojure.lang.APersistentMap.KeySeq#withMeta(IPersistentMap);clojure.lang.APersistentMap.KeySeq#withMeta(IPersistentMap);ecdfafb9665d3938330c91267381d01536a691b1;Mon Mar 23 13:47:16 2015 -0500
SameType;true;clojure.lang.APersistentMap.ValSeq;clojure.lang.APersistentMap.ValSeq;ecdfafb9665d3938330c91267381d01536a691b1;Mon Mar 23 13:47:16 2015 -0500
SameMethod;true;clojure.lang.APersistentMap.ValSeq#create(ISeq);clojure.lang.APersistentMap.ValSeq#create(ISeq);ecdfafb9665d3938330c91267381d01536a691b1;Mon Mar 23 13:47:16 2015 -0500
SameMethod;true;clojure.lang.APersistentMap.ValSeq#withMeta(IPersistentMap);clojure.lang.APersistentMap.ValSeq#withMeta(IPersistentMap);ecdfafb9665d3938330c91267381d01536a691b1;Mon Mar 23 13:47:16 2015 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;ecdfafb9665d3938330c91267381d01536a691b1;Mon Mar 23 13:47:16 2015 -0500
SameMethod;true;clojure.lang.RT#keys(Object);clojure.lang.RT#keys(Object);ecdfafb9665d3938330c91267381d01536a691b1;Mon Mar 23 13:47:16 2015 -0500
SameMethod;true;clojure.lang.RT#vals(Object);clojure.lang.RT#vals(Object);ecdfafb9665d3938330c91267381d01536a691b1;Mon Mar 23 13:47:16 2015 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;a482d80ec70a5ff8f547c4083bdfac2094c92303;Tue Mar 24 13:02:49 2015 -0700
SameMethod;true;clojure.lang.Compiler#getTypeStringForArgs(IPersistentVector);clojure.lang.Compiler#getTypeStringForArgs(IPersistentVector);a482d80ec70a5ff8f547c4083bdfac2094c92303;Tue Mar 24 13:02:49 2015 -0700
MoveMethod;false;clojure.lang.LazyTransformer#remove(Object);clojure.lang.TransformerIterator#remove();c47e1bbcfa227723df28d1c9e0a6df2bcb0fecc1;Fri Mar 27 10:08:09 2015 -0500
MoveMethod;false;clojure.lang.LazyTransformer#remove(int);clojure.lang.TransformerIterator#remove();c47e1bbcfa227723df28d1c9e0a6df2bcb0fecc1;Fri Mar 27 10:08:09 2015 -0500
MoveMethod;false;clojure.lang.LazyTransformer.MultiStepper#hasNext();clojure.lang.TransformerIterator.MultiIterator#hasNext();c47e1bbcfa227723df28d1c9e0a6df2bcb0fecc1;Fri Mar 27 10:08:09 2015 -0500
MoveMethod;true;clojure.lang.LazyTransformer.MultiStepper#next();clojure.lang.TransformerIterator.MultiIterator#next();c47e1bbcfa227723df28d1c9e0a6df2bcb0fecc1;Fri Mar 27 10:08:09 2015 -0500
MoveMethod;true;clojure.lang.LazyTransformer#createMulti(IFn, Object[]);clojure.lang.TransformerIterator#createMulti(IFn, List);c47e1bbcfa227723df28d1c9e0a6df2bcb0fecc1;Fri Mar 27 10:08:09 2015 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;c47e1bbcfa227723df28d1c9e0a6df2bcb0fecc1;Fri Mar 27 10:08:09 2015 -0500
SameMethod;true;clojure.lang.RT#seqFrom(Object);clojure.lang.RT#seqFrom(Object);c47e1bbcfa227723df28d1c9e0a6df2bcb0fecc1;Fri Mar 27 10:08:09 2015 -0500
SameMethod;true;clojure.lang.RT#toArray(Object);clojure.lang.RT#toArray(Object);c47e1bbcfa227723df28d1c9e0a6df2bcb0fecc1;Fri Mar 27 10:08:09 2015 -0500
ExtractMethod;true;clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean, Object);caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
ExtractMethod;true;clojure.lang.RT#readString(String);clojure.lang.RT#readString(String, Object);caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameMethod;true;clojure.lang.Compiler#load(Reader, String, String);clojure.lang.Compiler#load(Reader, String, String);caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameMethod;true;clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean);caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.RegexReader;clojure.lang.LispReader.RegexReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.StringReader;clojure.lang.LispReader.StringReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.CommentReader;clojure.lang.LispReader.CommentReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.DiscardReader;clojure.lang.LispReader.DiscardReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.WrappingReader;clojure.lang.LispReader.WrappingReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.DeprecatedWrappingReader;clojure.lang.LispReader.DeprecatedWrappingReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.VarReader;clojure.lang.LispReader.VarReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.DispatchReader;clojure.lang.LispReader.DispatchReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.FnReader;clojure.lang.LispReader.FnReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.ArgReader;clojure.lang.LispReader.ArgReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.MetaReader;clojure.lang.LispReader.MetaReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.UnquoteReader;clojure.lang.LispReader.UnquoteReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.CharacterReader;clojure.lang.LispReader.CharacterReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.ListReader;clojure.lang.LispReader.ListReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.EvalReader;clojure.lang.LispReader.EvalReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.VectorReader;clojure.lang.LispReader.VectorReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.MapReader;clojure.lang.LispReader.MapReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.SetReader;clojure.lang.LispReader.SetReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.UnmatchedDelimiterReader;clojure.lang.LispReader.UnmatchedDelimiterReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.UnreadableReader;clojure.lang.LispReader.UnreadableReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader.CtorReader;clojure.lang.LispReader.CtorReader;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameMethod;true;clojure.lang.RT#load(String, boolean);clojure.lang.RT#load(String, boolean);caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameMethod;true;clojure.lang.RT#suppressRead();clojure.lang.RT#suppressRead();caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameMethod;true;clojure.lang.RT#readString(String);clojure.lang.RT#readString(String);caa3b4fdc8da5880309b317d0045b1280181c452;Fri Mar 27 14:21:49 2015 -0500
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;dd92e0ec12572586303ddf2886d339b18629cf6b;Mon Apr 6 11:28:11 2015 -0500
SameMethod;true;clojure.lang.LispReader#read(PushbackReader, Object);clojure.lang.LispReader#read(PushbackReader, Object);dd92e0ec12572586303ddf2886d339b18629cf6b;Mon Apr 6 11:28:11 2015 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;dd92e0ec12572586303ddf2886d339b18629cf6b;Mon Apr 6 11:28:11 2015 -0500
SameMethod;true;clojure.lang.RT#readString(String, Object);clojure.lang.RT#readString(String, Object);dd92e0ec12572586303ddf2886d339b18629cf6b;Mon Apr 6 11:28:11 2015 -0500
SameType;true;clojure.lang.Iterate;clojure.lang.Iterate;afbc8a0966a7a0b8a5a86763c577fe966a8f2726;Thu Apr 2 12:00:19 2015 -0500
SameMethod;true;clojure.lang.Iterate#create(IFn, Object);clojure.lang.Iterate#create(IFn, Object);afbc8a0966a7a0b8a5a86763c577fe966a8f2726;Thu Apr 2 12:00:19 2015 -0500
SameMethod;true;clojure.lang.Iterate#first();clojure.lang.Iterate#first();afbc8a0966a7a0b8a5a86763c577fe966a8f2726;Thu Apr 2 12:00:19 2015 -0500
SameMethod;true;clojure.lang.Iterate#next();clojure.lang.Iterate#next();afbc8a0966a7a0b8a5a86763c577fe966a8f2726;Thu Apr 2 12:00:19 2015 -0500
SameMethod;true;clojure.lang.Iterate#withMeta(IPersistentMap);clojure.lang.Iterate#withMeta(IPersistentMap);afbc8a0966a7a0b8a5a86763c577fe966a8f2726;Thu Apr 2 12:00:19 2015 -0500
SameMethod;true;clojure.lang.Iterate#reduce(IFn);clojure.lang.Iterate#reduce(IFn);afbc8a0966a7a0b8a5a86763c577fe966a8f2726;Thu Apr 2 12:00:19 2015 -0500
SameMethod;true;clojure.lang.Iterate#reduce(IFn, Object);clojure.lang.Iterate#reduce(IFn, Object);afbc8a0966a7a0b8a5a86763c577fe966a8f2726;Thu Apr 2 12:00:19 2015 -0500
ExtractMethod;true;clojure.lang.Cycle#next();clojure.lang.Cycle#current();cbc967caf23c6a07d4afe56d44b60c5fed09afa7;Mon Apr 6 10:54:01 2015 -0500
SameType;true;clojure.lang.Cycle;clojure.lang.Cycle;cbc967caf23c6a07d4afe56d44b60c5fed09afa7;Mon Apr 6 10:54:01 2015 -0500
SameMethod;true;clojure.lang.Cycle#create(ISeq);clojure.lang.Cycle#create(ISeq);cbc967caf23c6a07d4afe56d44b60c5fed09afa7;Mon Apr 6 10:54:01 2015 -0500
SameMethod;true;clojure.lang.Cycle#first();clojure.lang.Cycle#first();cbc967caf23c6a07d4afe56d44b60c5fed09afa7;Mon Apr 6 10:54:01 2015 -0500
SameMethod;true;clojure.lang.Cycle#next();clojure.lang.Cycle#next();cbc967caf23c6a07d4afe56d44b60c5fed09afa7;Mon Apr 6 10:54:01 2015 -0500
SameMethod;true;clojure.lang.Cycle#withMeta(IPersistentMap);clojure.lang.Cycle#withMeta(IPersistentMap);cbc967caf23c6a07d4afe56d44b60c5fed09afa7;Mon Apr 6 10:54:01 2015 -0500
SameMethod;true;clojure.lang.Cycle#reduce(IFn);clojure.lang.Cycle#reduce(IFn);cbc967caf23c6a07d4afe56d44b60c5fed09afa7;Mon Apr 6 10:54:01 2015 -0500
SameMethod;true;clojure.lang.Cycle#reduce(IFn, Object);clojure.lang.Cycle#reduce(IFn, Object);cbc967caf23c6a07d4afe56d44b60c5fed09afa7;Mon Apr 6 10:54:01 2015 -0500
SameType;true;clojure.lang.Range;clojure.lang.Range;07d6129a9847f62010079ab6f04b7930c2a593e4;Fri Apr 3 10:28:03 2015 -0500
SameMethod;true;clojure.lang.Range#withMeta(IPersistentMap);clojure.lang.Range#withMeta(IPersistentMap);07d6129a9847f62010079ab6f04b7930c2a593e4;Fri Apr 3 10:28:03 2015 -0500
SameMethod;true;clojure.lang.Range#first();clojure.lang.Range#first();07d6129a9847f62010079ab6f04b7930c2a593e4;Fri Apr 3 10:28:03 2015 -0500
SameMethod;true;clojure.lang.Range#next();clojure.lang.Range#next();07d6129a9847f62010079ab6f04b7930c2a593e4;Fri Apr 3 10:28:03 2015 -0500
SameMethod;true;clojure.lang.Range#reduce(IFn);clojure.lang.Range#reduce(IFn);07d6129a9847f62010079ab6f04b7930c2a593e4;Fri Apr 3 10:28:03 2015 -0500
SameMethod;true;clojure.lang.Range#reduce(IFn, Object);clojure.lang.Range#reduce(IFn, Object);07d6129a9847f62010079ab6f04b7930c2a593e4;Fri Apr 3 10:28:03 2015 -0500
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;587f9b2d3a7b609bfb4a80bd0bd489d71328b83a;Mon Apr 20 18:36:27 2015 +0200
SameMethod;true;clojure.lang.LispReader#read(PushbackReader, boolean, Object, Character, Object, boolean, Object, Object);clojure.lang.LispReader#read(PushbackReader, boolean, Object, Character, Object, boolean, Object, Object);587f9b2d3a7b609bfb4a80bd0bd489d71328b83a;Mon Apr 20 18:36:27 2015 +0200
SameType;true;clojure.lang.LispReader.CtorReader;clojure.lang.LispReader.CtorReader;587f9b2d3a7b609bfb4a80bd0bd489d71328b83a;Mon Apr 20 18:36:27 2015 +0200
SameMethod;true;clojure.lang.LispReader.CtorReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.CtorReader#invoke(Object, Object, Object, Object);587f9b2d3a7b609bfb4a80bd0bd489d71328b83a;Mon Apr 20 18:36:27 2015 +0200
SameType;true;clojure.lang.LongRange;clojure.lang.LongRange;ce033a15d08bba9cfff373badab1bfe5aba24d1c;Fri Apr 24 08:18:58 2015 -0500
SameMethod;true;clojure.lang.LongRange#absCount(long, long, long);clojure.lang.LongRange#absCount(long, long, long);ce033a15d08bba9cfff373badab1bfe5aba24d1c;Fri Apr 24 08:18:58 2015 -0500
SameType;true;clojure.lang.PersistentStructMap;clojure.lang.PersistentStructMap;7b9c61d83304ff9d5f9feddecf23e620c0b33c6e;Wed Apr 22 08:33:30 2015 +0300
SameMethod;true;clojure.lang.PersistentStructMap#iterator();clojure.lang.PersistentStructMap#iterator();7b9c61d83304ff9d5f9feddecf23e620c0b33c6e;Wed Apr 22 08:33:30 2015 +0300
SameType;true;clojure.lang.LongRange;clojure.lang.LongRange;afa556860369b19e96d5f955c9bee778e454bb4c;Tue Apr 21 06:58:39 2015 -0700
SameType;true;clojure.lang.LongRange.LongChunk;clojure.lang.LongRange.LongChunk;afa556860369b19e96d5f955c9bee778e454bb4c;Tue Apr 21 06:58:39 2015 -0700
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;4fc68310d90648e4bbb800aefa9472828ea4bcbd;Thu Jan 22 16:32:32 2015 -0500
SameMethod;true;clojure.lang.Compiler#resolveSymbol(Symbol);clojure.lang.Compiler#resolveSymbol(Symbol);4fc68310d90648e4bbb800aefa9472828ea4bcbd;Thu Jan 22 16:32:32 2015 -0500
InlineMethod;true;clojure.lang.LongRange#absCount(long, long, long);clojure.lang.LongRange#count();676a7e4a2bdc9771e515e2d545e089f9e2c29e03;Tue May 12 10:01:23 2015 -0500
SameType;true;clojure.lang.LongRange;clojure.lang.LongRange;676a7e4a2bdc9771e515e2d545e089f9e2c29e03;Tue May 12 10:01:23 2015 -0500
SameMethod;true;clojure.lang.LongRange#forceChunk();clojure.lang.LongRange#forceChunk();676a7e4a2bdc9771e515e2d545e089f9e2c29e03;Tue May 12 10:01:23 2015 -0500
SameMethod;true;clojure.lang.LongRange#count();clojure.lang.LongRange#count();676a7e4a2bdc9771e515e2d545e089f9e2c29e03;Tue May 12 10:01:23 2015 -0500
SameType;true;clojure.lang.LongRange.LongRangeIterator;clojure.lang.LongRange.LongRangeIterator;676a7e4a2bdc9771e515e2d545e089f9e2c29e03;Tue May 12 10:01:23 2015 -0500
SameMethod;true;clojure.lang.LongRange.LongRangeIterator#LongRangeIterator();clojure.lang.LongRange.LongRangeIterator#LongRangeIterator();676a7e4a2bdc9771e515e2d545e089f9e2c29e03;Tue May 12 10:01:23 2015 -0500
SameMethod;true;clojure.lang.LongRange.LongRangeIterator#hasNext();clojure.lang.LongRange.LongRangeIterator#hasNext();676a7e4a2bdc9771e515e2d545e089f9e2c29e03;Tue May 12 10:01:23 2015 -0500
SameMethod;true;clojure.lang.LongRange.LongRangeIterator#next();clojure.lang.LongRange.LongRangeIterator#next();676a7e4a2bdc9771e515e2d545e089f9e2c29e03;Tue May 12 10:01:23 2015 -0500
SameType;true;clojure.lang.Cycle;clojure.lang.Cycle;d91ffba5a5a40a8c3f8f010d69504bf93ae18636;Fri May 8 01:48:49 2015 -0500
SameType;true;clojure.lang.Iterate;clojure.lang.Iterate;d91ffba5a5a40a8c3f8f010d69504bf93ae18636;Fri May 8 01:48:49 2015 -0500
SameType;true;clojure.lang.TransformerIterator;clojure.lang.TransformerIterator;952c54fa8838bd0d80c78221f25733ff48b7ee45;Mon May 4 13:32:02 2015 -0500
SameType;true;clojure.lang.TransformerIterator.Many;clojure.lang.TransformerIterator.Many;952c54fa8838bd0d80c78221f25733ff48b7ee45;Mon May 4 13:32:02 2015 -0500
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean, Object);clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean, Object, Object);clojure.lang.LispReader#read(PushbackReader, boolean, Object, boolean, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameType;true;clojure.lang.LispReader.DiscardReader;clojure.lang.LispReader.DiscardReader;8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader.DiscardReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.DiscardReader#invoke(Object, Object, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameType;true;clojure.lang.LispReader.WrappingReader;clojure.lang.LispReader.WrappingReader;8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader.WrappingReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.WrappingReader#invoke(Object, Object, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameType;true;clojure.lang.LispReader.DeprecatedWrappingReader;clojure.lang.LispReader.DeprecatedWrappingReader;8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader.DeprecatedWrappingReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.DeprecatedWrappingReader#invoke(Object, Object, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameType;true;clojure.lang.LispReader.VarReader;clojure.lang.LispReader.VarReader;8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader.VarReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.VarReader#invoke(Object, Object, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameType;true;clojure.lang.LispReader.DispatchReader;clojure.lang.LispReader.DispatchReader;8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader.DispatchReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.DispatchReader#invoke(Object, Object, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameType;true;clojure.lang.LispReader.FnReader;clojure.lang.LispReader.FnReader;8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader.FnReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.FnReader#invoke(Object, Object, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameType;true;clojure.lang.LispReader.ArgReader;clojure.lang.LispReader.ArgReader;8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader.ArgReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.ArgReader#invoke(Object, Object, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameType;true;clojure.lang.LispReader.MetaReader;clojure.lang.LispReader.MetaReader;8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader.MetaReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.MetaReader#invoke(Object, Object, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameType;true;clojure.lang.LispReader.SyntaxQuoteReader;clojure.lang.LispReader.SyntaxQuoteReader;8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader.SyntaxQuoteReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.SyntaxQuoteReader#invoke(Object, Object, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameType;true;clojure.lang.LispReader.UnquoteReader;clojure.lang.LispReader.UnquoteReader;8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader.UnquoteReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.UnquoteReader#invoke(Object, Object, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameType;true;clojure.lang.LispReader.ListReader;clojure.lang.LispReader.ListReader;8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader.ListReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.ListReader#invoke(Object, Object, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameType;true;clojure.lang.LispReader.EvalReader;clojure.lang.LispReader.EvalReader;8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader.EvalReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.EvalReader#invoke(Object, Object, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameType;true;clojure.lang.LispReader.VectorReader;clojure.lang.LispReader.VectorReader;8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader.VectorReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.VectorReader#invoke(Object, Object, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameType;true;clojure.lang.LispReader.MapReader;clojure.lang.LispReader.MapReader;8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader.MapReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.MapReader#invoke(Object, Object, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameType;true;clojure.lang.LispReader.SetReader;clojure.lang.LispReader.SetReader;8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader.SetReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.SetReader#invoke(Object, Object, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameType;true;clojure.lang.LispReader.CtorReader;clojure.lang.LispReader.CtorReader;8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader.CtorReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.CtorReader#invoke(Object, Object, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameType;true;clojure.lang.LispReader.ConditionalReader;clojure.lang.LispReader.ConditionalReader;8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader.ConditionalReader#readCondDelimited(PushbackReader, boolean, Object, Object);clojure.lang.LispReader.ConditionalReader#readCondDelimited(PushbackReader, boolean, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameMethod;true;clojure.lang.LispReader.ConditionalReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.ConditionalReader#invoke(Object, Object, Object, Object);8c2083448742b0c8701c83b43138d55e455c45ec;Tue May 19 11:20:26 2015 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;9d70bc1051ec8117df6436e07474c586ea9e85b0;Fri Jun 5 16:27:19 2015 -0500
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);9d70bc1051ec8117df6436e07474c586ea9e85b0;Fri Jun 5 16:27:19 2015 -0500
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.APersistentMap$1#invoke(Object, Object);clojure.lang.APersistentMap$1#invoke(Object, Object);36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.APersistentVector#doEquals(IPersistentVector, Object);clojure.lang.APersistentVector#doEquals(IPersistentVector, Object);36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.APersistentVector#doEquiv(IPersistentVector, Object);clojure.lang.APersistentVector#doEquiv(IPersistentVector, Object);36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.APersistentVector#equals(Object);clojure.lang.APersistentVector#equals(Object);36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.APersistentVector#equiv(Object);clojure.lang.APersistentVector#equiv(Object);36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.APersistentVector#hashCode();clojure.lang.APersistentVector#hashCode();36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.APersistentVector#hasheq();clojure.lang.APersistentVector#hasheq();36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.APersistentVector#entryAt(Object);clojure.lang.APersistentVector#entryAt(Object);36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.APersistentVector#toArray();clojure.lang.APersistentVector#toArray();36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameType;true;clojure.lang.Compiler.EmptyExpr;clojure.lang.Compiler.EmptyExpr;36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.Compiler.EmptyExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.EmptyExpr#emit(C, ObjExpr, GeneratorAdapter);36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameType;true;clojure.lang.Compiler.VectorExpr;clojure.lang.Compiler.VectorExpr;36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.Compiler.VectorExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.VectorExpr#emit(C, ObjExpr, GeneratorAdapter);36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.Compiler.VectorExpr#parse(C, IPersistentVector);clojure.lang.Compiler.VectorExpr#parse(C, IPersistentVector);36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameType;true;clojure.lang.LazilyPersistentVector;clojure.lang.LazilyPersistentVector;36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.LazilyPersistentVector#createOwning(Object[]);clojure.lang.LazilyPersistentVector#createOwning(Object[]);36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.LazilyPersistentVector#create(Object);clojure.lang.LazilyPersistentVector#create(Object);36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.PersistentArrayMap#entryAt(Object);clojure.lang.PersistentArrayMap#entryAt(Object);36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameType;true;clojure.lang.PersistentArrayMap.Seq;clojure.lang.PersistentArrayMap.Seq;36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.PersistentArrayMap.Seq#first();clojure.lang.PersistentArrayMap.Seq#first();36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.PersistentHashMap#entryAt(Object);clojure.lang.PersistentHashMap#entryAt(Object);36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.PersistentHashMap#seq();clojure.lang.PersistentHashMap#seq();36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode;clojure.lang.PersistentHashMap.BitmapIndexedNode;36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#find(int, int, Object);clojure.lang.PersistentHashMap.BitmapIndexedNode#find(int, int, Object);36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameType;true;clojure.lang.PersistentHashMap.HashCollisionNode;clojure.lang.PersistentHashMap.HashCollisionNode;36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.PersistentHashMap.HashCollisionNode#find(int, int, Object);clojure.lang.PersistentHashMap.HashCollisionNode#find(int, int, Object);36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameType;true;clojure.lang.PersistentHashMap.NodeSeq;clojure.lang.PersistentHashMap.NodeSeq;36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.PersistentHashMap.NodeSeq#first();clojure.lang.PersistentHashMap.NodeSeq#first();36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameType;true;clojure.lang.PersistentStructMap;clojure.lang.PersistentStructMap;36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.PersistentStructMap#entryAt(Object);clojure.lang.PersistentStructMap#entryAt(Object);36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameType;true;clojure.lang.PersistentStructMap.Seq;clojure.lang.PersistentStructMap.Seq;36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.PersistentStructMap.Seq#first();clojure.lang.PersistentStructMap.Seq#first();36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.RT#find(Object, Object);clojure.lang.RT#find(Object, Object);36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameType;true;clojure.lang.RecordIterator;clojure.lang.RecordIterator;36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameMethod;true;clojure.lang.RecordIterator#next();clojure.lang.RecordIterator#next();36d665793b43f62cfd22354aced4c6892088abd6;Thu Jul 16 17:34:36 2015 -0400
SameType;true;clojure.lang.LazilyPersistentVector;clojure.lang.LazilyPersistentVector;1f37a868e7ed154e8d0e0dc9e6de46c10478ac81;Fri Jul 17 15:38:25 2015 -0400
SameMethod;true;clojure.lang.LazilyPersistentVector#create(Object);clojure.lang.LazilyPersistentVector#create(Object);1f37a868e7ed154e8d0e0dc9e6de46c10478ac81;Fri Jul 17 15:38:25 2015 -0400
SameType;true;clojure.lang.Tuple;clojure.lang.Tuple;1f37a868e7ed154e8d0e0dc9e6de46c10478ac81;Fri Jul 17 15:38:25 2015 -0400
SameType;true;clojure.lang.Tuple.ATuple;clojure.lang.Tuple.ATuple;1f37a868e7ed154e8d0e0dc9e6de46c10478ac81;Fri Jul 17 15:38:25 2015 -0400
SameMethod;true;clojure.lang.Tuple.ATuple#withMeta(IPersistentMap);clojure.lang.Tuple.ATuple#withMeta(IPersistentMap);1f37a868e7ed154e8d0e0dc9e6de46c10478ac81;Fri Jul 17 15:38:25 2015 -0400
SameType;true;clojure.lang.LazilyPersistentVector;clojure.lang.LazilyPersistentVector;525101af2a992b5cb7234c29160f1b615d3c3c91;Fri Jul 17 16:04:05 2015 -0400
SameMethod;true;clojure.lang.LazilyPersistentVector#create(Object);clojure.lang.LazilyPersistentVector#create(Object);525101af2a992b5cb7234c29160f1b615d3c3c91;Fri Jul 17 16:04:05 2015 -0400
SameType;true;clojure.lang.Tuple;clojure.lang.Tuple;525101af2a992b5cb7234c29160f1b615d3c3c91;Fri Jul 17 16:04:05 2015 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;ea7c34b1a74f6650d0b8e0332263e83795c923e4;Thu Jun 18 16:02:00 2015 -0500
SameMethod;true;clojure.lang.RT#lastModified(URL, String);clojure.lang.RT#lastModified(URL, String);ea7c34b1a74f6650d0b8e0332263e83795c923e4;Thu Jun 18 16:02:00 2015 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;28ecf3ef83acf425589b2aee504174010ec5200d;Thu Jan 15 11:41:29 2015 -0800
SameMethod;true;clojure.lang.RT#seqToTypedArray(ISeq);clojure.lang.RT#seqToTypedArray(ISeq);28ecf3ef83acf425589b2aee504174010ec5200d;Thu Jan 15 11:41:29 2015 -0800
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;8c9580cb6706f2dc40bb31bbdb96a6aefe341bd5;Mon May 4 08:50:53 2015 -0500
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;8c9580cb6706f2dc40bb31bbdb96a6aefe341bd5;Mon May 4 08:50:53 2015 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);8c9580cb6706f2dc40bb31bbdb96a6aefe341bd5;Mon May 4 08:50:53 2015 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;f1cfd82a4262b9bcc1b882db8661061a939d43f5;Wed Apr 2 14:38:40 2014 -0700
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;f1cfd82a4262b9bcc1b882db8661061a939d43f5;Wed Apr 2 14:38:40 2014 -0700
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitValue(Object, GeneratorAdapter);f1cfd82a4262b9bcc1b882db8661061a939d43f5;Wed Apr 2 14:38:40 2014 -0700
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;c8e248d84740dbe1538c6f86ff1ecc59e200d23a;Sun Jan 18 12:42:38 2015 +0100
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;c8e248d84740dbe1538c6f86ff1ecc59e200d23a;Sun Jan 18 12:42:38 2015 +0100
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);c8e248d84740dbe1538c6f86ff1ecc59e200d23a;Sun Jan 18 12:42:38 2015 +0100
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;c8e248d84740dbe1538c6f86ff1ecc59e200d23a;Sun Jan 18 12:42:38 2015 +0100
SameType;true;clojure.lang.Compiler.NewInstanceExpr.DeftypeParser;clojure.lang.Compiler.NewInstanceExpr.DeftypeParser;c8e248d84740dbe1538c6f86ff1ecc59e200d23a;Sun Jan 18 12:42:38 2015 +0100
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr.DeftypeParser#parse(C, Object);clojure.lang.Compiler.NewInstanceExpr.DeftypeParser#parse(C, Object);c8e248d84740dbe1538c6f86ff1ecc59e200d23a;Sun Jan 18 12:42:38 2015 +0100
SameType;true;clojure.lang.Compiler.NewInstanceExpr.ReifyParser;clojure.lang.Compiler.NewInstanceExpr.ReifyParser;c8e248d84740dbe1538c6f86ff1ecc59e200d23a;Sun Jan 18 12:42:38 2015 +0100
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr.ReifyParser#parse(C, Object);clojure.lang.Compiler.NewInstanceExpr.ReifyParser#parse(C, Object);c8e248d84740dbe1538c6f86ff1ecc59e200d23a;Sun Jan 18 12:42:38 2015 +0100
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;6f4a49b9618e63ad24df430ea7a48830958f9c58;Sun May 17 23:07:23 2015 +0100
SameMethod;true;clojure.lang.Compiler#writeClassFile(String, byte[]);clojure.lang.Compiler#writeClassFile(String, byte[]);6f4a49b9618e63ad24df430ea7a48830958f9c58;Sun May 17 23:07:23 2015 +0100
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceMethodExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.StaticMethodExpr#emit(C, ObjExpr, GeneratorAdapter);9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameMethod;true;clojure.lang.Compiler.NewExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.NewExpr#emit(C, ObjExpr, GeneratorAdapter);9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emitArgsAndCall(int, C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emitArgsAndCall(int, C, ObjExpr, GeneratorAdapter);9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameType;true;clojure.lang.Compiler.ObjMethod;clojure.lang.Compiler.ObjMethod;9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);9b6c3a50934204e272082848614267e57ea57de8;Tue Jun 23 07:32:23 2015 -0500
SameType;true;clojure.lang.Tuple;clojure.lang.Tuple;b8607d5870202034679cda50ec390426827ff692;Mon Jul 20 10:31:38 2015 -0400
SameType;true;clojure.lang.Tuple.T4;clojure.lang.Tuple.T4;b8607d5870202034679cda50ec390426827ff692;Mon Jul 20 10:31:38 2015 -0400
SameType;true;clojure.lang.Tuple.T5;clojure.lang.Tuple.T5;b8607d5870202034679cda50ec390426827ff692;Mon Jul 20 10:31:38 2015 -0400
SameType;true;clojure.lang.Tuple.T6;clojure.lang.Tuple.T6;b8607d5870202034679cda50ec390426827ff692;Mon Jul 20 10:31:38 2015 -0400
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;684cd4117bb2cf463c95293855a0dff52134bdcd;Mon Jul 20 14:47:57 2015 -0400
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;684cd4117bb2cf463c95293855a0dff52134bdcd;Mon Jul 20 14:47:57 2015 -0400
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;684cd4117bb2cf463c95293855a0dff52134bdcd;Mon Jul 20 14:47:57 2015 -0400
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;684cd4117bb2cf463c95293855a0dff52134bdcd;Mon Jul 20 14:47:57 2015 -0400
SameType;true;clojure.lang.Tuple;clojure.lang.Tuple;684cd4117bb2cf463c95293855a0dff52134bdcd;Mon Jul 20 14:47:57 2015 -0400
SameType;true;clojure.lang.Tuple.ATuple;clojure.lang.Tuple.ATuple;684cd4117bb2cf463c95293855a0dff52134bdcd;Mon Jul 20 14:47:57 2015 -0400
SameType;true;clojure.lang.Tuple.T0;clojure.lang.Tuple.T0;684cd4117bb2cf463c95293855a0dff52134bdcd;Mon Jul 20 14:47:57 2015 -0400
SameType;true;clojure.lang.Tuple.T1;clojure.lang.Tuple.T1;684cd4117bb2cf463c95293855a0dff52134bdcd;Mon Jul 20 14:47:57 2015 -0400
SameType;true;clojure.lang.Tuple.T2;clojure.lang.Tuple.T2;684cd4117bb2cf463c95293855a0dff52134bdcd;Mon Jul 20 14:47:57 2015 -0400
SameType;true;clojure.lang.Tuple.T3;clojure.lang.Tuple.T3;684cd4117bb2cf463c95293855a0dff52134bdcd;Mon Jul 20 14:47:57 2015 -0400
SameType;true;clojure.lang.Tuple.T4;clojure.lang.Tuple.T4;684cd4117bb2cf463c95293855a0dff52134bdcd;Mon Jul 20 14:47:57 2015 -0400
SameType;true;clojure.lang.Tuple.T5;clojure.lang.Tuple.T5;684cd4117bb2cf463c95293855a0dff52134bdcd;Mon Jul 20 14:47:57 2015 -0400
SameType;true;clojure.lang.Tuple.T6;clojure.lang.Tuple.T6;684cd4117bb2cf463c95293855a0dff52134bdcd;Mon Jul 20 14:47:57 2015 -0400
MoveMethod;false;clojure.lang.Tuple.T2#setValue(Object);clojure.lang.APersistentVector#setValue(Object);838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameMethod;true;clojure.lang.APersistentVector#entryAt(Object);clojure.lang.APersistentVector#entryAt(Object);838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameType;true;clojure.lang.Compiler.EmptyExpr;clojure.lang.Compiler.EmptyExpr;838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameMethod;true;clojure.lang.Compiler.EmptyExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.EmptyExpr#emit(C, ObjExpr, GeneratorAdapter);838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameType;true;clojure.lang.Compiler.VectorExpr;clojure.lang.Compiler.VectorExpr;838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameMethod;true;clojure.lang.Compiler.VectorExpr#parse(C, IPersistentVector);clojure.lang.Compiler.VectorExpr#parse(C, IPersistentVector);838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameType;true;clojure.lang.LazilyPersistentVector;clojure.lang.LazilyPersistentVector;838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameMethod;true;clojure.lang.LazilyPersistentVector#createOwning(Object[]);clojure.lang.LazilyPersistentVector#createOwning(Object[]);838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameMethod;true;clojure.lang.LazilyPersistentVector#create(Object);clojure.lang.LazilyPersistentVector#create(Object);838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameMethod;true;clojure.lang.PersistentArrayMap#entryAt(Object);clojure.lang.PersistentArrayMap#entryAt(Object);838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameMethod;true;clojure.lang.PersistentHashMap#entryAt(Object);clojure.lang.PersistentHashMap#entryAt(Object);838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode;clojure.lang.PersistentHashMap.BitmapIndexedNode;838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#find(int, int, Object);clojure.lang.PersistentHashMap.BitmapIndexedNode#find(int, int, Object);838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameType;true;clojure.lang.PersistentHashMap.HashCollisionNode;clojure.lang.PersistentHashMap.HashCollisionNode;838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameMethod;true;clojure.lang.PersistentHashMap.HashCollisionNode#find(int, int, Object);clojure.lang.PersistentHashMap.HashCollisionNode#find(int, int, Object);838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameType;true;clojure.lang.PersistentStructMap;clojure.lang.PersistentStructMap;838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameMethod;true;clojure.lang.PersistentStructMap#entryAt(Object);clojure.lang.PersistentStructMap#entryAt(Object);838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameType;true;clojure.lang.Tuple;clojure.lang.Tuple;838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameMethod;true;clojure.lang.Tuple#create();clojure.lang.Tuple#create();838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameMethod;true;clojure.lang.Tuple#create(Object);clojure.lang.Tuple#create(Object);838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameMethod;true;clojure.lang.Tuple#create(Object, Object);clojure.lang.Tuple#create(Object, Object);838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameMethod;true;clojure.lang.Tuple#create(Object, Object, Object);clojure.lang.Tuple#create(Object, Object, Object);838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameMethod;true;clojure.lang.Tuple#create(Object, Object, Object, Object);clojure.lang.Tuple#create(Object, Object, Object, Object);838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameMethod;true;clojure.lang.Tuple#create(Object, Object, Object, Object, Object);clojure.lang.Tuple#create(Object, Object, Object, Object, Object);838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
SameMethod;true;clojure.lang.Tuple#create(Object, Object, Object, Object, Object, Object);clojure.lang.Tuple#create(Object, Object, Object, Object, Object, Object);838302612551ef6a50a8adbdb9708cb1362b0898;Sat Jul 25 12:36:33 2015 -0400
ExtractMethod;true;clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, int, Symbol, Expr, IPersistentVector, boolean);clojure.lang.Compiler.InvokeExpr#sigTag(int, Var);309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameMethod;true;clojure.lang.Compiler.HostExpr#tagToClass(Object);clojure.lang.Compiler.HostExpr#tagToClass(Object);309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameType;true;clojure.lang.Compiler.StaticInvokeExpr;clojure.lang.Compiler.StaticInvokeExpr;309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, int, Symbol, Expr, IPersistentVector, boolean);clojure.lang.Compiler.InvokeExpr#InvokeExpr(String, int, int, Symbol, Expr, IPersistentVector, boolean);309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitLocal(GeneratorAdapter, LocalBinding, boolean);clojure.lang.Compiler.ObjExpr#emitLocal(GeneratorAdapter, LocalBinding, boolean);309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitUnboxedLocal(GeneratorAdapter, LocalBinding);clojure.lang.Compiler.ObjExpr#emitUnboxedLocal(GeneratorAdapter, LocalBinding);309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#emit(ObjExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#emit(ObjExpr, ClassVisitor);309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#doEmitStatic(ObjExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#doEmitStatic(ObjExpr, ClassVisitor);309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameType;true;clojure.lang.Compiler.ObjMethod;clojure.lang.Compiler.ObjMethod;309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameType;true;clojure.lang.Compiler.RecurExpr;clojure.lang.Compiler.RecurExpr;309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameMethod;true;clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.RecurExpr#emit(C, ObjExpr, GeneratorAdapter);309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameMethod;true;clojure.lang.Compiler#referenceLocal(Symbol);clojure.lang.Compiler#referenceLocal(Symbol);309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;309c03055b06525c275b278542c881019424760e;Tue Jul 28 11:44:53 2015 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;be3f390b5b2f47bda241d7654c65bcea8ad39eb8;Wed Jul 29 10:38:29 2015 -0400
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;be3f390b5b2f47bda241d7654c65bcea8ad39eb8;Wed Jul 29 10:38:29 2015 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#doEmitStatic(ObjExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#doEmitStatic(ObjExpr, ClassVisitor);be3f390b5b2f47bda241d7654c65bcea8ad39eb8;Wed Jul 29 10:38:29 2015 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;00e07f1cc9de029e97a5f2e2f075b45c68b1129e;Fri Jul 31 08:48:30 2015 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;00e07f1cc9de029e97a5f2e2f075b45c68b1129e;Fri Jul 31 08:48:30 2015 -0400
SameMethod;true;clojure.lang.Compiler.HostExpr#tagToClass(Object);clojure.lang.Compiler.HostExpr#tagToClass(Object);00e07f1cc9de029e97a5f2e2f075b45c68b1129e;Fri Jul 31 08:48:30 2015 -0400
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;00e07f1cc9de029e97a5f2e2f075b45c68b1129e;Fri Jul 31 08:48:30 2015 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, Object);clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, Object);00e07f1cc9de029e97a5f2e2f075b45c68b1129e;Fri Jul 31 08:48:30 2015 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2be494793f5a8a9f130d6bf0c8f2965e07c6291a;Fri Dec 21 12:30:06 2012 -0500
SameType;true;clojure.lang.Compiler.DefExpr;clojure.lang.Compiler.DefExpr;2be494793f5a8a9f130d6bf0c8f2965e07c6291a;Fri Dec 21 12:30:06 2012 -0500
SameMethod;true;clojure.lang.Compiler.DefExpr#eval();clojure.lang.Compiler.DefExpr#eval();2be494793f5a8a9f130d6bf0c8f2965e07c6291a;Fri Dec 21 12:30:06 2012 -0500
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;733e3d0689165d8090378ce4d516d35ae278e783;Tue Jul 21 23:03:35 2015 +0200
SameType;true;clojure.lang.LispReader.ConditionalReader;clojure.lang.LispReader.ConditionalReader;733e3d0689165d8090378ce4d516d35ae278e783;Tue Jul 21 23:03:35 2015 +0200
SameMethod;true;clojure.lang.LispReader.ConditionalReader#readCondDelimited(PushbackReader, boolean, Object, Object);clojure.lang.LispReader.ConditionalReader#readCondDelimited(PushbackReader, boolean, Object, Object);733e3d0689165d8090378ce4d516d35ae278e783;Tue Jul 21 23:03:35 2015 +0200
SameType;true;clojure.lang.BigInt;clojure.lang.BigInt;c450806297f13c949b432e95a18ecfd27bf98ec3;Thu Sep 5 22:38:23 2013 -0700
SameMethod;true;clojure.lang.BigInt#quotient(BigInt);clojure.lang.BigInt#quotient(BigInt);c450806297f13c949b432e95a18ecfd27bf98ec3;Thu Sep 5 22:38:23 2013 -0700
SameType;true;clojure.lang.Util;clojure.lang.Util;6dcb5e28980873a7c2fc12094c2b443155cac7d3;Thu Sep 25 10:14:21 2014 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceMethodExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.StaticMethodExpr#emit(C, ObjExpr, GeneratorAdapter);b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameMethod;true;clojure.lang.Compiler.NewExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.NewExpr#emit(C, ObjExpr, GeneratorAdapter);b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emitArgsAndCall(int, C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emitArgsAndCall(int, C, ObjExpr, GeneratorAdapter);b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameType;true;clojure.lang.Compiler.ObjMethod;clojure.lang.Compiler.ObjMethod;b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);b38c23e66e01da3b573f3ad891f4107c1a7076e7;Wed Aug 5 13:58:43 2015 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2344de2b2aadd5b0e47f1594a6f9e4eb2fdbdf5c;Wed Aug 5 16:12:17 2015 -0400
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;2344de2b2aadd5b0e47f1594a6f9e4eb2fdbdf5c;Wed Aug 5 16:12:17 2015 -0400
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, Object);clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, Object);2344de2b2aadd5b0e47f1594a6f9e4eb2fdbdf5c;Wed Aug 5 16:12:17 2015 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;1d5237f9d7db0bc5f6e929330108d016ac7bf76c;Wed Aug 5 16:23:40 2015 -0400
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);1d5237f9d7db0bc5f6e929330108d016ac7bf76c;Wed Aug 5 16:23:40 2015 -0400
SameType;true;clojure.lang.ASeq;clojure.lang.ASeq;bd6e906ba70cc19c06e551a55e1928877e8d3d81;Tue Aug 18 12:24:24 2015 -0500
SameMethod;true;clojure.lang.ASeq#hashCode();clojure.lang.ASeq#hashCode();bd6e906ba70cc19c06e551a55e1928877e8d3d81;Tue Aug 18 12:24:24 2015 -0500
SameMethod;true;clojure.lang.ASeq#hasheq();clojure.lang.ASeq#hasheq();bd6e906ba70cc19c06e551a55e1928877e8d3d81;Tue Aug 18 12:24:24 2015 -0500
SameType;true;clojure.lang.Reflector;clojure.lang.Reflector;c5f0521cb80bb8966a45647a01a615e3c94be30c;Mon Aug 24 12:08:31 2015 -0500
SameMethod;true;clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);clojure.lang.Reflector#invokeMatchingMethod(String, List, Object, Object[]);c5f0521cb80bb8966a45647a01a615e3c94be30c;Mon Aug 24 12:08:31 2015 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;5fa11fd689298d17bf634c646dab454d44d5088c;Tue Aug 11 10:54:08 2015 -0500
SameMethod;true;clojure.lang.Compiler#analyze(C, Object, String);clojure.lang.Compiler#analyze(C, Object, String);5fa11fd689298d17bf634c646dab454d44d5088c;Tue Aug 11 10:54:08 2015 -0500
ExtractMethod;true;clojure.lang.Compiler.HostExpr#tagToClass(Object);clojure.lang.Compiler.HostExpr#maybeSpecialTag(Symbol);87a7d7892a0cbf80b639cd33f81009667c2dded6;Tue Aug 4 15:27:25 2015 +0200
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;87a7d7892a0cbf80b639cd33f81009667c2dded6;Tue Aug 4 15:27:25 2015 +0200
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;87a7d7892a0cbf80b639cd33f81009667c2dded6;Tue Aug 4 15:27:25 2015 +0200
SameMethod;true;clojure.lang.Compiler.HostExpr#tagToClass(Object);clojure.lang.Compiler.HostExpr#tagToClass(Object);87a7d7892a0cbf80b639cd33f81009667c2dded6;Tue Aug 4 15:27:25 2015 +0200
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;b9330ec9c9451a2dd1d0bc54310524ec910f4230;Fri May 15 10:45:45 2015 +0900
SameMethod;true;clojure.lang.PersistentArrayMap#createAsIfByAssoc(Object[]);clojure.lang.PersistentArrayMap#createAsIfByAssoc(Object[]);b9330ec9c9451a2dd1d0bc54310524ec910f4230;Fri May 15 10:45:45 2015 +0900
SameType;true;clojure.lang.RT;clojure.lang.RT;b007c2d184a70e40b290bc3a48cdff983a5850d5;Wed Sep 9 09:24:16 2015 -0500
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();b007c2d184a70e40b290bc3a48cdff983a5850d5;Wed Sep 9 09:24:16 2015 -0500
SameType;true;clojure.lang.ATransientMap;clojure.lang.ATransientMap;19d868083d56b50112f43e35cec113499c7171a1;Mon Aug 31 15:02:47 2015 -0700
SameType;true;clojure.lang.LazySeq;clojure.lang.LazySeq;206d94c9cfb01f981a157142929c9456c547d6ea;Mon May 4 19:45:28 2015 +0200
SameMethod;true;clojure.lang.LazySeq#hashCode();clojure.lang.LazySeq#hashCode();206d94c9cfb01f981a157142929c9456c547d6ea;Mon May 4 19:45:28 2015 +0200
SameType;true;clojure.lang.PersistentList;clojure.lang.PersistentList;828d82fb5bae9a985f32279b819e22ae436022da;Fri Oct 9 09:12:45 2015 -0500
SameType;true;clojure.lang.PersistentList.EmptyList;clojure.lang.PersistentList.EmptyList;828d82fb5bae9a985f32279b819e22ae436022da;Fri Oct 9 09:12:45 2015 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;fd50af1680f40d199bac373f4638e2dde02bfa5a;Fri Oct 9 08:32:35 2015 -0500
SameType;true;clojure.lang.Compiler.ThrowExpr;clojure.lang.Compiler.ThrowExpr;fd50af1680f40d199bac373f4638e2dde02bfa5a;Fri Oct 9 08:32:35 2015 -0500
SameType;true;clojure.lang.Compiler.ThrowExpr.Parser;clojure.lang.Compiler.ThrowExpr.Parser;fd50af1680f40d199bac373f4638e2dde02bfa5a;Fri Oct 9 08:32:35 2015 -0500
SameMethod;true;clojure.lang.Compiler.ThrowExpr.Parser#parse(C, Object);clojure.lang.Compiler.ThrowExpr.Parser#parse(C, Object);fd50af1680f40d199bac373f4638e2dde02bfa5a;Fri Oct 9 08:32:35 2015 -0500
SameType;true;clojure.lang.ExceptionInfo;clojure.lang.ExceptionInfo;a56dacffb7d1ba2c91aff337bbf6060a7854e7ae;Mon Oct 27 09:52:47 2014 +0000
SameMethod;true;clojure.lang.ExceptionInfo#ExceptionInfo(String, IPersistentMap);clojure.lang.ExceptionInfo#ExceptionInfo(String, IPersistentMap);a56dacffb7d1ba2c91aff337bbf6060a7854e7ae;Mon Oct 27 09:52:47 2014 +0000
SameMethod;true;clojure.lang.ExceptionInfo#ExceptionInfo(String, IPersistentMap, Throwable);clojure.lang.ExceptionInfo#ExceptionInfo(String, IPersistentMap, Throwable);a56dacffb7d1ba2c91aff337bbf6060a7854e7ae;Mon Oct 27 09:52:47 2014 +0000
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;47a6d64038052688c4ad2c56d4d2b5078470be0b;Fri Oct 9 08:38:26 2015 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;47a6d64038052688c4ad2c56d4d2b5078470be0b;Fri Oct 9 08:38:26 2015 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);47a6d64038052688c4ad2c56d4d2b5078470be0b;Fri Oct 9 08:38:26 2015 -0500
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;25221dfa32dc099a4896ae522db78fa199c9fe62;Wed Apr 29 14:26:36 2015 -0500
SameMethod;true;clojure.lang.PersistentVector#cons(Object);clojure.lang.PersistentVector#cons(Object);25221dfa32dc099a4896ae522db78fa199c9fe62;Wed Apr 29 14:26:36 2015 -0500
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;fe1772a0079cedeb9bf0c533889906729eee5afa;Fri Oct 9 08:43:55 2015 -0500
SameMethod;true;clojure.lang.PersistentArrayMap#without(Object);clojure.lang.PersistentArrayMap#without(Object);fe1772a0079cedeb9bf0c533889906729eee5afa;Fri Oct 9 08:43:55 2015 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;587655a0d97b141945239590f0f906dbdd278142;Mon Dec 9 09:28:41 2013 -0600
SameType;true;clojure.lang.Compiler.ConstantExpr;clojure.lang.Compiler.ConstantExpr;587655a0d97b141945239590f0f906dbdd278142;Mon Dec 9 09:28:41 2013 -0600
SameType;true;clojure.lang.Compiler.ConstantExpr.Parser;clojure.lang.Compiler.ConstantExpr.Parser;587655a0d97b141945239590f0f906dbdd278142;Mon Dec 9 09:28:41 2013 -0600
SameMethod;true;clojure.lang.Compiler.ConstantExpr.Parser#parse(C, Object);clojure.lang.Compiler.ConstantExpr.Parser#parse(C, Object);587655a0d97b141945239590f0f906dbdd278142;Mon Dec 9 09:28:41 2013 -0600
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;4ed7e42738f7a77fe18b7fc1ae5c6ee7f419310c;Sun Aug 31 17:34:44 2014 +0200
SameType;true;clojure.lang.Compiler.InstanceFieldExpr;clojure.lang.Compiler.InstanceFieldExpr;4ed7e42738f7a77fe18b7fc1ae5c6ee7f419310c;Sun Aug 31 17:34:44 2014 +0200
SameMethod;true;clojure.lang.Compiler.InstanceFieldExpr#emitAssign(C, ObjExpr, GeneratorAdapter, Expr);clojure.lang.Compiler.InstanceFieldExpr#emitAssign(C, ObjExpr, GeneratorAdapter, Expr);4ed7e42738f7a77fe18b7fc1ae5c6ee7f419310c;Sun Aug 31 17:34:44 2014 +0200
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;60e4ff521a03e68831ba858eb3203c08833cadba;Tue Sep 29 11:52:08 2015 -0500
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;60e4ff521a03e68831ba858eb3203c08833cadba;Tue Sep 29 11:52:08 2015 -0500
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, Object);clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, Object);60e4ff521a03e68831ba858eb3203c08833cadba;Tue Sep 29 11:52:08 2015 -0500
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameMethod;true;clojure.lang.APersistentVector#listIterator(int);clojure.lang.APersistentVector#listIterator(int);c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameMethod;true;clojure.lang.APersistentVector#rangedIterator(int, int);clojure.lang.APersistentVector#rangedIterator(int, int);c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameMethod;true;clojure.lang.APersistentVector#iterator();clojure.lang.APersistentVector#iterator();c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameType;true;clojure.lang.ArrayIter;clojure.lang.ArrayIter;c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameMethod;true;clojure.lang.ArrayIter#next();clojure.lang.ArrayIter#next();c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameType;true;clojure.lang.ArrayIter.ArrayIter_int;clojure.lang.ArrayIter.ArrayIter_int;c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameMethod;true;clojure.lang.ArrayIter.ArrayIter_int#next();clojure.lang.ArrayIter.ArrayIter_int#next();c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameType;true;clojure.lang.ArrayIter.ArrayIter_float;clojure.lang.ArrayIter.ArrayIter_float;c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameMethod;true;clojure.lang.ArrayIter.ArrayIter_float#next();clojure.lang.ArrayIter.ArrayIter_float#next();c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameType;true;clojure.lang.ArrayIter.ArrayIter_double;clojure.lang.ArrayIter.ArrayIter_double;c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameMethod;true;clojure.lang.ArrayIter.ArrayIter_double#next();clojure.lang.ArrayIter.ArrayIter_double#next();c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameType;true;clojure.lang.ArrayIter.ArrayIter_long;clojure.lang.ArrayIter.ArrayIter_long;c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameMethod;true;clojure.lang.ArrayIter.ArrayIter_long#next();clojure.lang.ArrayIter.ArrayIter_long#next();c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameType;true;clojure.lang.ArrayIter.ArrayIter_byte;clojure.lang.ArrayIter.ArrayIter_byte;c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameMethod;true;clojure.lang.ArrayIter.ArrayIter_byte#next();clojure.lang.ArrayIter.ArrayIter_byte#next();c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameType;true;clojure.lang.ArrayIter.ArrayIter_char;clojure.lang.ArrayIter.ArrayIter_char;c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameMethod;true;clojure.lang.ArrayIter.ArrayIter_char#next();clojure.lang.ArrayIter.ArrayIter_char#next();c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameType;true;clojure.lang.ArrayIter.ArrayIter_short;clojure.lang.ArrayIter.ArrayIter_short;c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameMethod;true;clojure.lang.ArrayIter.ArrayIter_short#next();clojure.lang.ArrayIter.ArrayIter_short#next();c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameType;true;clojure.lang.ArrayIter.ArrayIter_boolean;clojure.lang.ArrayIter.ArrayIter_boolean;c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameMethod;true;clojure.lang.ArrayIter.ArrayIter_boolean#next();clojure.lang.ArrayIter.ArrayIter_boolean#next();c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameType;true;clojure.lang.PersistentArrayMap.Iter;clojure.lang.PersistentArrayMap.Iter;c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameMethod;true;clojure.lang.PersistentArrayMap.Iter#next();clojure.lang.PersistentArrayMap.Iter#next();c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameType;true;clojure.lang.PersistentTreeMap.NodeIterator;clojure.lang.PersistentTreeMap.NodeIterator;c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameMethod;true;clojure.lang.PersistentTreeMap.NodeIterator#next();clojure.lang.PersistentTreeMap.NodeIterator#next();c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameType;true;clojure.lang.PersistentVector;clojure.lang.PersistentVector;c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameMethod;true;clojure.lang.PersistentVector#rangedIterator(int, int);clojure.lang.PersistentVector#rangedIterator(int, int);c716a5a8802cc40a45fca8bbddb6c574b42e2a17;Thu Oct 1 08:39:46 2015 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;20f3094afd75c404c44bf55b1670f19768fd50cf;Mon Sep 21 10:41:27 2015 -0500
SameType;true;clojure.lang.Compiler.FnExpr;clojure.lang.Compiler.FnExpr;20f3094afd75c404c44bf55b1670f19768fd50cf;Mon Sep 21 10:41:27 2015 -0500
SameMethod;true;clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);clojure.lang.Compiler.FnExpr#parse(C, ISeq, String);20f3094afd75c404c44bf55b1670f19768fd50cf;Mon Sep 21 10:41:27 2015 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;9448d627e091bc010e68e05a5669c134cd715a98;Wed Nov 11 14:55:14 2015 -0500
SameType;true;clojure.lang.Compiler.MethodExpr;clojure.lang.Compiler.MethodExpr;9448d627e091bc010e68e05a5669c134cd715a98;Wed Nov 11 14:55:14 2015 -0500
SameMethod;true;clojure.lang.Compiler.MethodExpr#emitTypedArgs(ObjExpr, GeneratorAdapter, Class[], IPersistentVector);clojure.lang.Compiler.MethodExpr#emitTypedArgs(ObjExpr, GeneratorAdapter, Class[], IPersistentVector);9448d627e091bc010e68e05a5669c134cd715a98;Wed Nov 11 14:55:14 2015 -0500
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;9448d627e091bc010e68e05a5669c134cd715a98;Wed Nov 11 14:55:14 2015 -0500
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#getJavaClass();clojure.lang.Compiler.InstanceMethodExpr#getJavaClass();9448d627e091bc010e68e05a5669c134cd715a98;Wed Nov 11 14:55:14 2015 -0500
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;9448d627e091bc010e68e05a5669c134cd715a98;Wed Nov 11 14:55:14 2015 -0500
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#getJavaClass();clojure.lang.Compiler.StaticMethodExpr#getJavaClass();9448d627e091bc010e68e05a5669c134cd715a98;Wed Nov 11 14:55:14 2015 -0500
SameType;true;clojure.lang.Compiler.StaticInvokeExpr;clojure.lang.Compiler.StaticInvokeExpr;9448d627e091bc010e68e05a5669c134cd715a98;Wed Nov 11 14:55:14 2015 -0500
SameMethod;true;clojure.lang.Compiler.StaticInvokeExpr#getJavaClass();clojure.lang.Compiler.StaticInvokeExpr#getJavaClass();9448d627e091bc010e68e05a5669c134cd715a98;Wed Nov 11 14:55:14 2015 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7faeb3a5e1fb183539a8638b72d299a3433fe990;Thu Nov 12 15:59:19 2015 -0500
SameMethod;true;clojure.lang.Compiler#closeOver(LocalBinding, ObjMethod);clojure.lang.Compiler#closeOver(LocalBinding, ObjMethod);7faeb3a5e1fb183539a8638b72d299a3433fe990;Thu Nov 12 15:59:19 2015 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;786fc5aad515df85bbc2c37fe8d4242ae58f53f8;Tue Nov 24 13:52:07 2015 -0500
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;786fc5aad515df85bbc2c37fe8d4242ae58f53f8;Tue Nov 24 13:52:07 2015 -0500
SameMethod;true;clojure.lang.Compiler.FnMethod#doEmitStatic(ObjExpr, ClassVisitor);clojure.lang.Compiler.FnMethod#doEmitStatic(ObjExpr, ClassVisitor);786fc5aad515df85bbc2c37fe8d4242ae58f53f8;Tue Nov 24 13:52:07 2015 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e1017ddcf2c45952668342f05cec2db643e03882;Fri Nov 20 11:04:59 2015 -0600
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;e1017ddcf2c45952668342f05cec2db643e03882;Fri Nov 20 11:04:59 2015 -0600
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);e1017ddcf2c45952668342f05cec2db643e03882;Fri Nov 20 11:04:59 2015 -0600
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;bfe14aec1c223abc3253358bac34b503284467d9;Thu Dec 10 12:05:16 2015 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;bfe14aec1c223abc3253358bac34b503284467d9;Thu Dec 10 12:05:16 2015 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);bfe14aec1c223abc3253358bac34b503284467d9;Thu Dec 10 12:05:16 2015 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitConstants(GeneratorAdapter);clojure.lang.Compiler.ObjExpr#emitConstants(GeneratorAdapter);bfe14aec1c223abc3253358bac34b503284467d9;Thu Dec 10 12:05:16 2015 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#emitConstant(GeneratorAdapter, int);clojure.lang.Compiler.ObjExpr#emitConstant(GeneratorAdapter, int);bfe14aec1c223abc3253358bac34b503284467d9;Thu Dec 10 12:05:16 2015 -0500
SameMethod;true;clojure.lang.Compiler#analyzeSeq(C, ISeq, String);clojure.lang.Compiler#analyzeSeq(C, ISeq, String);bfe14aec1c223abc3253358bac34b503284467d9;Thu Dec 10 12:05:16 2015 -0500
SameMethod;true;clojure.lang.Compiler#compile(Reader, String, String);clojure.lang.Compiler#compile(Reader, String, String);bfe14aec1c223abc3253358bac34b503284467d9;Thu Dec 10 12:05:16 2015 -0500
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameMethod;true;clojure.lang.APersistentMap$1#invoke(Object, Object);clojure.lang.APersistentMap$1#invoke(Object, Object);ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameMethod;true;clojure.lang.APersistentVector#entryAt(Object);clojure.lang.APersistentVector#entryAt(Object);ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameType;true;clojure.lang.MapEntry;clojure.lang.MapEntry;ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameType;true;clojure.lang.PersistentArrayMap;clojure.lang.PersistentArrayMap;ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameMethod;true;clojure.lang.PersistentArrayMap#entryAt(Object);clojure.lang.PersistentArrayMap#entryAt(Object);ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameType;true;clojure.lang.PersistentArrayMap.Seq;clojure.lang.PersistentArrayMap.Seq;ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameMethod;true;clojure.lang.PersistentArrayMap.Seq#first();clojure.lang.PersistentArrayMap.Seq#first();ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameType;true;clojure.lang.PersistentHashMap;clojure.lang.PersistentHashMap;ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameMethod;true;clojure.lang.PersistentHashMap#entryAt(Object);clojure.lang.PersistentHashMap#entryAt(Object);ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameMethod;true;clojure.lang.PersistentHashMap#seq();clojure.lang.PersistentHashMap#seq();ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameType;true;clojure.lang.PersistentHashMap.BitmapIndexedNode;clojure.lang.PersistentHashMap.BitmapIndexedNode;ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameMethod;true;clojure.lang.PersistentHashMap.BitmapIndexedNode#find(int, int, Object);clojure.lang.PersistentHashMap.BitmapIndexedNode#find(int, int, Object);ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameType;true;clojure.lang.PersistentHashMap.HashCollisionNode;clojure.lang.PersistentHashMap.HashCollisionNode;ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameMethod;true;clojure.lang.PersistentHashMap.HashCollisionNode#find(int, int, Object);clojure.lang.PersistentHashMap.HashCollisionNode#find(int, int, Object);ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameType;true;clojure.lang.PersistentHashMap.NodeSeq;clojure.lang.PersistentHashMap.NodeSeq;ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameMethod;true;clojure.lang.PersistentHashMap.NodeSeq#first();clojure.lang.PersistentHashMap.NodeSeq#first();ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameType;true;clojure.lang.PersistentStructMap;clojure.lang.PersistentStructMap;ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameMethod;true;clojure.lang.PersistentStructMap#entryAt(Object);clojure.lang.PersistentStructMap#entryAt(Object);ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameType;true;clojure.lang.PersistentStructMap.Seq;clojure.lang.PersistentStructMap.Seq;ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameMethod;true;clojure.lang.PersistentStructMap.Seq#first();clojure.lang.PersistentStructMap.Seq#first();ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameMethod;true;clojure.lang.RT#find(Object, Object);clojure.lang.RT#find(Object, Object);ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameType;true;clojure.lang.RecordIterator;clojure.lang.RecordIterator;ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameMethod;true;clojure.lang.RecordIterator#next();clojure.lang.RecordIterator#next();ae7acfeecda1e70cdba96bfa189b451ec999de2e;Sun Dec 13 10:02:50 2015 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;7f5f53b881b15aaf81bac40d218a3eb535e90193;Mon May 23 13:51:38 2016 -0400
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);7f5f53b881b15aaf81bac40d218a3eb535e90193;Mon May 23 13:51:38 2016 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;8213c934c0b5178aed731b433242b52ddc798cc0;Mon May 23 20:07:19 2016 -0400
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();8213c934c0b5178aed731b433242b52ddc798cc0;Mon May 23 20:07:19 2016 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;bf25f9956435966c90d12af91bc7320edf79d393;Wed May 25 13:24:37 2016 -0400
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);bf25f9956435966c90d12af91bc7320edf79d393;Wed May 25 13:24:37 2016 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;71e5969e72a4cfcc52f06a8b393839e4c662b01c;Fri Jun 3 08:51:15 2016 -0400
SameType;true;clojure.lang.EdnReader;clojure.lang.EdnReader;6d48ae372a540903173be2974b66b8911371e05d;Thu Apr 28 13:24:09 2016 -0500
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;6d48ae372a540903173be2974b66b8911371e05d;Thu Apr 28 13:24:09 2016 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;e8c72929f9648f99e7914e939602c7bdd7928022;Thu Jun 23 16:00:45 2016 -0500
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);e8c72929f9648f99e7914e939602c7bdd7928022;Thu Jun 23 16:00:45 2016 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;e8c72929f9648f99e7914e939602c7bdd7928022;Thu Jun 23 16:00:45 2016 -0500
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();e8c72929f9648f99e7914e939602c7bdd7928022;Thu Jun 23 16:00:45 2016 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;12e0e417285f81be67d2de6f3141c18b8eccc22d;Sat Jul 2 12:00:21 2016 -0400
SameType;true;clojure.lang.RT;clojure.lang.RT;174347ae766b5a2089f8a9b5780d00c5fea62b16;Tue Jul 5 10:32:00 2016 -0500
SameType;true;clojure.lang.Var;clojure.lang.Var;9e6020c30ea229e80227877bd51254ecafc9e4a4;Mon Jan 18 17:28:38 2016 -0600
SameMethod;true;clojure.lang.Var#applyTo(ISeq);clojure.lang.Var#applyTo(ISeq);9e6020c30ea229e80227877bd51254ecafc9e4a4;Mon Jan 18 17:28:38 2016 -0600
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;1f4318021e61e8dfa68960cf44018ed4d4f79a44;Wed Jun 3 16:37:58 2015 +0200
SameType;true;clojure.lang.Compiler.LocalBinding;clojure.lang.Compiler.LocalBinding;1f4318021e61e8dfa68960cf44018ed4d4f79a44;Wed Jun 3 16:37:58 2015 +0200
SameType;true;clojure.lang.Compiler.LocalBindingExpr;clojure.lang.Compiler.LocalBindingExpr;1f4318021e61e8dfa68960cf44018ed4d4f79a44;Wed Jun 3 16:37:58 2015 +0200
SameMethod;true;clojure.lang.Compiler.LocalBindingExpr#LocalBindingExpr(LocalBinding, Symbol);clojure.lang.Compiler.LocalBindingExpr#LocalBindingExpr(LocalBinding, Symbol);1f4318021e61e8dfa68960cf44018ed4d4f79a44;Wed Jun 3 16:37:58 2015 +0200
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;1f4318021e61e8dfa68960cf44018ed4d4f79a44;Wed Jun 3 16:37:58 2015 +0200
SameMethod;true;clojure.lang.Compiler.LetExpr#doEmit(C, ObjExpr, GeneratorAdapter, boolean);clojure.lang.Compiler.LetExpr#doEmit(C, ObjExpr, GeneratorAdapter, boolean);1f4318021e61e8dfa68960cf44018ed4d4f79a44;Wed Jun 3 16:37:58 2015 +0200
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;a1c3dafec01ab02fb10d91f98b9ffd3241e860c0;Tue Sep 6 14:08:40 2016 -0500
SameType;true;clojure.lang.Compiler.ObjExpr;clojure.lang.Compiler.ObjExpr;a1c3dafec01ab02fb10d91f98b9ffd3241e860c0;Tue Sep 6 14:08:40 2016 -0500
SameMethod;true;clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);clojure.lang.Compiler.ObjExpr#compile(String, String[], boolean);a1c3dafec01ab02fb10d91f98b9ffd3241e860c0;Tue Sep 6 14:08:40 2016 -0500
SameType;true;clojure.lang.Compiler.NewInstanceExpr;clojure.lang.Compiler.NewInstanceExpr;a1c3dafec01ab02fb10d91f98b9ffd3241e860c0;Tue Sep 6 14:08:40 2016 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object, IPersistentMap);clojure.lang.Compiler.NewInstanceExpr#build(IPersistentVector, IPersistentVector, Symbol, String, Symbol, Symbol, ISeq, Object, IPersistentMap);a1c3dafec01ab02fb10d91f98b9ffd3241e860c0;Tue Sep 6 14:08:40 2016 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#compileStub(String, NewInstanceExpr, String[], Object);clojure.lang.Compiler.NewInstanceExpr#compileStub(String, NewInstanceExpr, String[], Object);a1c3dafec01ab02fb10d91f98b9ffd3241e860c0;Tue Sep 6 14:08:40 2016 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceExpr#emitStatics(ClassVisitor);clojure.lang.Compiler.NewInstanceExpr#emitStatics(ClassVisitor);a1c3dafec01ab02fb10d91f98b9ffd3241e860c0;Tue Sep 6 14:08:40 2016 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;2ff700ede3866f97d7b1f53342e201df94384aee;Sat Nov 7 02:58:40 2015 +0100
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;2ff700ede3866f97d7b1f53342e201df94384aee;Sat Nov 7 02:58:40 2015 +0100
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emitProto(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emitProto(C, ObjExpr, GeneratorAdapter);2ff700ede3866f97d7b1f53342e201df94384aee;Sat Nov 7 02:58:40 2015 +0100
SameType;true;clojure.lang.PersistentTreeMap;clojure.lang.PersistentTreeMap;b80e1fe4b14654d943e2f8b060b0bc56e18b4757;Fri Oct 7 21:23:39 2016 +0100
SameType;true;clojure.lang.PersistentTreeSet;clojure.lang.PersistentTreeSet;b80e1fe4b14654d943e2f8b060b0bc56e18b4757;Fri Oct 7 21:23:39 2016 +0100
SameType;true;clojure.lang.Var;clojure.lang.Var;a26dfc1390c53ca10dba750b8d5e6b93e846c067;Thu Apr 20 10:52:32 2017 -0400
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;42a7fd42cfae973d2af16d4bed40c7594574b58b;Wed Apr 26 19:56:24 2017 -0500
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);42a7fd42cfae973d2af16d4bed40c7594574b58b;Wed Apr 26 19:56:24 2017 -0500
SameType;true;clojure.lang.RT;clojure.lang.RT;42a7fd42cfae973d2af16d4bed40c7594574b58b;Wed Apr 26 19:56:24 2017 -0500
SameMethod;true;clojure.lang.RT#doInit();clojure.lang.RT#doInit();42a7fd42cfae973d2af16d4bed40c7594574b58b;Wed Apr 26 19:56:24 2017 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameType;true;clojure.lang.Compiler.HostExpr;clojure.lang.Compiler.HostExpr;72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameType;true;clojure.lang.Compiler.HostExpr.Parser;clojure.lang.Compiler.HostExpr.Parser;72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameMethod;true;clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);clojure.lang.Compiler.HostExpr.Parser#parse(C, Object);72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameType;true;clojure.lang.Compiler.InstanceMethodExpr;clojure.lang.Compiler.InstanceMethodExpr;72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameMethod;true;clojure.lang.Compiler.InstanceMethodExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InstanceMethodExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameType;true;clojure.lang.Compiler.StaticMethodExpr;clojure.lang.Compiler.StaticMethodExpr;72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameMethod;true;clojure.lang.Compiler.StaticMethodExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.StaticMethodExpr#emit(C, ObjExpr, GeneratorAdapter);72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameType;true;clojure.lang.Compiler.TryExpr;clojure.lang.Compiler.TryExpr;72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameType;true;clojure.lang.Compiler.TryExpr.Parser;clojure.lang.Compiler.TryExpr.Parser;72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameMethod;true;clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);clojure.lang.Compiler.TryExpr.Parser#parse(C, Object);72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameType;true;clojure.lang.Compiler.NewExpr;clojure.lang.Compiler.NewExpr;72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameMethod;true;clojure.lang.Compiler.NewExpr#emit(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.NewExpr#emit(C, ObjExpr, GeneratorAdapter);72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameType;true;clojure.lang.Compiler.StaticInvokeExpr;clojure.lang.Compiler.StaticInvokeExpr;72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameMethod;true;clojure.lang.Compiler.StaticInvokeExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.StaticInvokeExpr#emitUnboxed(C, ObjExpr, GeneratorAdapter);72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameType;true;clojure.lang.Compiler.InvokeExpr;clojure.lang.Compiler.InvokeExpr;72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#emitArgsAndCall(int, C, ObjExpr, GeneratorAdapter);clojure.lang.Compiler.InvokeExpr#emitArgsAndCall(int, C, ObjExpr, GeneratorAdapter);72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameMethod;true;clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);clojure.lang.Compiler.InvokeExpr#parse(C, ISeq);72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameType;true;clojure.lang.Compiler.FnMethod;clojure.lang.Compiler.FnMethod;72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameMethod;true;clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, Object);clojure.lang.Compiler.FnMethod#parse(ObjExpr, ISeq, Object);72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameType;true;clojure.lang.Compiler.ObjMethod;clojure.lang.Compiler.ObjMethod;72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameType;true;clojure.lang.Compiler.LetExpr;clojure.lang.Compiler.LetExpr;72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameType;true;clojure.lang.Compiler.LetExpr.Parser;clojure.lang.Compiler.LetExpr.Parser;72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameMethod;true;clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);clojure.lang.Compiler.LetExpr.Parser#parse(C, Object);72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameType;true;clojure.lang.Compiler.NewInstanceMethod;clojure.lang.Compiler.NewInstanceMethod;72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameMethod;true;clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);clojure.lang.Compiler.NewInstanceMethod#parse(ObjExpr, ISeq, Symbol, Map);72594111ef5390bdb18f239f8cf72a8237fd94e4;Thu Sep 8 17:13:03 2016 -0500
SameType;true;clojure.lang.APersistentMap;clojure.lang.APersistentMap;ebfdbca535b81808b3ddc369d4a4e98b8f1524c7;Fri Jan 6 21:15:27 2017 -0800
SameMethod;true;clojure.lang.APersistentMap#hashCode();clojure.lang.APersistentMap#hashCode();ebfdbca535b81808b3ddc369d4a4e98b8f1524c7;Fri Jan 6 21:15:27 2017 -0800
SameMethod;true;clojure.lang.APersistentMap#hasheq();clojure.lang.APersistentMap#hasheq();ebfdbca535b81808b3ddc369d4a4e98b8f1524c7;Fri Jan 6 21:15:27 2017 -0800
SameType;true;clojure.lang.APersistentSet;clojure.lang.APersistentSet;ebfdbca535b81808b3ddc369d4a4e98b8f1524c7;Fri Jan 6 21:15:27 2017 -0800
SameMethod;true;clojure.lang.APersistentSet#hashCode();clojure.lang.APersistentSet#hashCode();ebfdbca535b81808b3ddc369d4a4e98b8f1524c7;Fri Jan 6 21:15:27 2017 -0800
SameMethod;true;clojure.lang.APersistentSet#hasheq();clojure.lang.APersistentSet#hasheq();ebfdbca535b81808b3ddc369d4a4e98b8f1524c7;Fri Jan 6 21:15:27 2017 -0800
SameType;true;clojure.lang.APersistentVector;clojure.lang.APersistentVector;ebfdbca535b81808b3ddc369d4a4e98b8f1524c7;Fri Jan 6 21:15:27 2017 -0800
SameMethod;true;clojure.lang.APersistentVector#hashCode();clojure.lang.APersistentVector#hashCode();ebfdbca535b81808b3ddc369d4a4e98b8f1524c7;Fri Jan 6 21:15:27 2017 -0800
SameMethod;true;clojure.lang.APersistentVector#hasheq();clojure.lang.APersistentVector#hasheq();ebfdbca535b81808b3ddc369d4a4e98b8f1524c7;Fri Jan 6 21:15:27 2017 -0800
SameType;true;clojure.lang.PersistentQueue;clojure.lang.PersistentQueue;ebfdbca535b81808b3ddc369d4a4e98b8f1524c7;Fri Jan 6 21:15:27 2017 -0800
SameMethod;true;clojure.lang.PersistentQueue#hashCode();clojure.lang.PersistentQueue#hashCode();ebfdbca535b81808b3ddc369d4a4e98b8f1524c7;Fri Jan 6 21:15:27 2017 -0800
SameMethod;true;clojure.lang.PersistentQueue#hasheq();clojure.lang.PersistentQueue#hasheq();ebfdbca535b81808b3ddc369d4a4e98b8f1524c7;Fri Jan 6 21:15:27 2017 -0800
ExtractMethod;true;clojure.lang.Numbers#hasheq(Number);clojure.lang.Numbers#hasheqFrom(Number, Class);90ad4d6aa7ec0677916525633837dded55576af7;Fri Mar 10 08:47:36 2017 -0600
SameType;true;clojure.lang.Numbers;clojure.lang.Numbers;90ad4d6aa7ec0677916525633837dded55576af7;Fri Mar 10 08:47:36 2017 -0600
SameMethod;true;clojure.lang.Numbers#hasheq(Number);clojure.lang.Numbers#hasheq(Number);90ad4d6aa7ec0677916525633837dded55576af7;Fri Mar 10 08:47:36 2017 -0600
SameType;true;clojure.lang.EdnReader;clojure.lang.EdnReader;964232c7bf442787740fa0200b289b3495b1ec09;Mon Apr 3 10:15:15 2017 -0500
SameType;true;clojure.lang.EdnReader.NamespaceMapReader;clojure.lang.EdnReader.NamespaceMapReader;964232c7bf442787740fa0200b289b3495b1ec09;Mon Apr 3 10:15:15 2017 -0500
SameMethod;true;clojure.lang.EdnReader.NamespaceMapReader#invoke(Object, Object, Object);clojure.lang.EdnReader.NamespaceMapReader#invoke(Object, Object, Object);964232c7bf442787740fa0200b289b3495b1ec09;Mon Apr 3 10:15:15 2017 -0500
SameType;true;clojure.lang.LispReader;clojure.lang.LispReader;964232c7bf442787740fa0200b289b3495b1ec09;Mon Apr 3 10:15:15 2017 -0500
SameType;true;clojure.lang.LispReader.NamespaceMapReader;clojure.lang.LispReader.NamespaceMapReader;964232c7bf442787740fa0200b289b3495b1ec09;Mon Apr 3 10:15:15 2017 -0500
SameMethod;true;clojure.lang.LispReader.NamespaceMapReader#invoke(Object, Object, Object, Object);clojure.lang.LispReader.NamespaceMapReader#invoke(Object, Object, Object, Object);964232c7bf442787740fa0200b289b3495b1ec09;Mon Apr 3 10:15:15 2017 -0500
SameType;true;clojure.lang.Compiler;clojure.lang.Compiler;f2987665d00a579bf4efb169cf86ed141e0c1106;Fri May 26 11:39:24 2017 -0400
SameMethod;true;clojure.lang.Compiler#macroexpand1(Object);clojure.lang.Compiler#macroexpand1(Object);f2987665d00a579bf4efb169cf86ed141e0c1106;Fri May 26 11:39:24 2017 -0400
